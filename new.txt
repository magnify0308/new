#define _XOPEN_SOURCE
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/signal.h>
#include <sys/utsname.h>
#include <sys/socket.h>
#include <unistd.h>
#include <assert.h>
#include <fcntl.h>
#include <sys/types.h>
#include <arpa/inet.h>
#include <time.h>
#include <pwd.h>
#include <sys/errno.h>
#include <shadow.h>
#include <sys/stat.h>
#include <sys/time.h>

#include "Extern.h"
#include "DomUsr.h"
#include "File.h"
#include "Error.h"
#include "Proc.h"
#include "newProc.h"
#include "Trace.h"
#include "mysql.h"
#include "errmsg.h"
#include "master.h"
#include "md5.h"
#include "tm_define.h"

int check_cidlist(char *tmprid1,char *domain,char *prefix,char *outer_num,char *serverip, char *old_num,char *old_org_num, char *check_rid);
extern MYSQL *mysql, *mysql_1,*cdrmysql , *authmysql;
extern MYSQL_RES *result, *result_1, *cdrresult,*rollbackresult ;
extern MYSQL_ROW row ,row1,cdrrow;
#define _MYSQL
#define INDEX 1000
extern RELAY_PREFIX relay_prefix[100];
extern int     u_cube_flag;

extern int masterFd,pd;
char	quotaBuf[100];
char    read_buf[1024];
char    server_value[32];


typedef struct  {
        char    *src_domain;
        char    *dst_domain;
} RE_WRITE;

RE_WRITE    rwinfo[] = {
        {"gas.rinnai.co.kr","rinnai.co.kr"},
        {NULL,NULL}
};

typedef struct  {
        char    imid[50];
        char    phoneid[50];
        int    totcount;
        int    recvtotcount;
        int    tottime;
        int    totbill;
} STAT;


typedef struct {
    char event[64];
    char channel[64];
    char callerid[64];
    char calleridname[64];
    char exten[32];
    char context[20];
    char actionid[20];
    char serverip[20];
    char id1[32];
    char id2[32];
    int state;
} EVENT_STRUCT;


typedef struct {
    unsigned short code;
    unsigned short len;
} LEN_STRUCT;


typedef struct {
	char	server[20];
	char	vip[20];
	char	active[20];
	char	standby[20];
	char	table[20];
	char	cdr_server[20];
} CDR_STRUCT_;

CDR_STRUCT_ CDR_SERVER_[INDEX];


typedef struct {
	int	seq;
	char	vip1[20];
	char	vip2[20];
} VIP_;
VIP_ VIP_LIST_[INDEX];


typedef struct {
	char	*server;
	char	*vip;
	char	*active;
	char	*standby;
	char	*table;
	char	*cdr_server;
} CDR_STRUCT;

typedef struct {
	int	seq;
	char	*vip1;
	char	*vip2;
} VIP;


extern SERVER_SHM  *s_shmP;
extern SERVER_SHM_1  *s_shmP_1;
extern SERVER_SHM_2  *s_shmP_2, *s_shmP_22;
extern SERVER_SHM_3  *s_shmP_3;


extern SERVER_SHM_4  *s_shmP_4, *s_shmP_5,*s_shmP_6,*s_shmP_7;
/****
*/

static	int	tst = 1;
char    _tmpbuf[LEN_BODY];
char    commandBuf[2048];
extern PACKET recvPacket[101];

#define	MONITOR_SYSTE	"211.40.221.201"
#define	DEFAULT_MESSENGER_IP	"112.222.225.123"
#define UC_PORT   		12009
#define UINO                   9903
#define UD07                   9904
#define UUNN                   9905
#define UUNO                   9906
#define UUTH                   9907
#define UPBO                   9908
#define URBO                   9909
#define UI_S                   9911
#define UI_C                   9912
#define URRQ                   9913
#define F_SIP_RECV_INFO_NOTI   9902

#define UERR     	      9801
#define URES     	      9802

//#define OAM_RLYSERVERS1 "112.222.225.146"
//#define OAM_RLYSERVERS2 "203.233.30.11"
//#define OAM_RLYSERVERS3 "203.233.30.14"
unsigned short  nFlag ;
unsigned short  nloSize;

typedef struct  {
        char     *ip;
        char    *name;
        char    *info;
} INFO;


typedef struct  NO {
        char    *no;
} NO;

NO no[] = {
        { "01080807259"},
        { "01080807261"},
        { NULL}
};
NO hack_no[] = {
{"07040125360"},
{"07086804208"},
{"07040125360"},
{"07086804208"},
{"07086668675"},
{"07086804208"},
{"07086669207"},
{"07086804208"},
{"07050019434"},
{"07046528698"},
{"07050019434"},
{"07046528698"},
{"07050019434"},
{"07046999085"},
{"07046408600"},
{"07046528698"},
{"07046999085"},
{"07048007795"},
{"07043359489"},
{"07040996229"},
{"07043538138"},
{"07040996229"},
{"07043559341"},
{"premium_c_114955.lgdacom.net"},
{"premium_c_12887.lgdacom.net"},
{"premium_c_15150.lgdacom.net"},
{"premium_c_168934.lgdacom.net"},
{"premium_c_17728.lgdacom.net"},
{"premium_c_194073.lgdacom.net"},
{"premium_c_310072.lgdacom.net"},
{"premium_c_319689.lgdacom.net"},
{"premium_c_34746.lgdacom.net"},
{"premium_c_51147.lgdacom.net"},
{"premium_c_57100.lgdacom.net"},
{"premium_c_85792.lgdacom.net"},
{"premium_c_96279.lgdacom.net"},
{"premium_c_96279.lgdacom.net"},
//{"premium_c_30633.lgdacom.net"},
{"premium_c_17728.lgdacom.net"},
{"premium_c_310713.lgdacom.net"},
{"premium_c_34746.lgdacom.net"},
{"premium_c_51147.lgdacom.net"},
{"premium_c_85792.lgdacom.net"},
{"premium_c_57100.lgdacom.net"},
{"premium_c_114955.lgdacom.net"},
{"premium_c_168934.lgdacom.net"},
{"premium_c_178581.lgdacom.net"},
{"premium_c_310072.lgdacom.net"},
{"premium_c_194073.lgdacom.net"},
{"premium_c_269815.lgdacom.net"},
{"premium_c_326822.lgdacom.net"},
{"premium_c_319689.lgdacom.net"},
{"premium_c_15150.lgdacom.net"},
{"premium_c_12887.lgdacom.net"},
{"premium_c_30263.lgdacom.net"},
{"premium_c_10045.lgdacom.net"},
{"premium_c_96279.lgdacom.net"},
{"premium_c_227768.lgdacom.net"},
{"premium_c_63236.lgdacom.net"},
{"premium_c_16614.lgdacom.net"},
{"premium_c_298020.lgdacom.net"},

{NULL}
};

NO irlink[] = {
        { "01089837905"}, //지동하
        { "01094664732"}, //길기훈
        { NULL}
};

INFO    gwinfo[] = {
/***
		{"192.168.3.10","mailsmtp4","slave"},
*/
		{NULL,NULL,NULL}
};

INFO    systeminfo[] = {
/***
        {"192.168.3.34","superwood4","mailwood4"},
*/

        {NULL,NULL,NULL}
};

INFO    relay_server_info[] = {
                {"112.223.57.107","relay1","active"},
                {"112.223.57.108","relay1","standby"},
                {"58.151.244.136","relay2","active"},
                {"58.151.244.137","relay2","standby"},
                {"58.151.244.184","relay3","active"},
                {"58.151.244.185","relay3","standby"},
                {NULL,NULL,NULL}
};

// BASE64 
static char __base64_table[] ={ 
   'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
   'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 
   'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 
   'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 
   '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/', '\0' 
}; 
 
static char __base64_pad = '='; 

/***
EXEC SQL INCLUDE SQLCA;
EXEC SQL BEGIN DECLARE SECTION;
*/
	char dbdomain[64];
	char    cpetype[21];
	char    servicetype[21];
	

    char tmpfqdn[128];
    char number[32];
    char numbertype[21];
    char number_cat[21];
    int  intnumber_type;
    char number_type[21];
    char dbnumber_type[21];
    char dbinner_num[81];
    char inner_num[21];
    char inner_code[21];
    char phoneid[21];
    char defaultip[21];
    char dbphoneid[21];
	char outer_num[15];
	char old_outer_num[15];
	char req_status[15];
	char dbuserid[41];
	char dbpasswd[41];
	char dbname[51];
	char dbemail[101];
	char email[101];
	char upperemail[101];
	char dbgender[2];
	char dbsin[15];
	char dbbirthday[9];
	char dbhomephone[17];
	char dbofficephone[17];
	char dbcellphone[17];
	char dbmain_zip[4];
	char dbsub_zip[4];
	char dbmainaddr[101];
	char dbsubaddr[101];
	char dbquota[16];
	char dbmailcnt[16];
	char dbbirthflag[2];
	char dbreg_date[9];
	char dbdelete_yn[2];
	int  dbwwwcount;
	char dblastlogin[25];
	char dbstop_date[9];
	char dbpwchange_flag[2];
	char dbemail[101];
	char dbdept[31];
	char dbhost[41];
	char domaindbhost[31];
	char gAction[31];

	char dbhome[100];
	char dbpassword[41];
	char user[LEN_USR];
    	char orguser[LEN_USR];
    	char upperuser[LEN_USR];
	char domain[LEN_DOM];
	char tmpname1[64];
	char setcid[20];
	char lineno[20];
	char line_no[20];
	char areacode[10];
	char area_code[10];
	char auto_area[10];
	char display[20];
	char tmpname[128];
	char tmptel[30];
	char tmpStr[128];
	char tmpStr1[128];
	char upperdomain[LEN_DOM];
	char rdomain[LEN_DOM];
	char currstate[3];
	char dbcurrstate[3];
	char regdate[9];
	char    tmprid[21];
	char    tmprid1[21];
	char    carryno1[21];
	char    cust_name[64];
	char    old_sip070number[15];
	char    old_sipdomain[64];
	char    rellineno[21];
	char    letter_flag[5];
	char	record_flag[10],crm_flag[10];
	char    order_record[64];
	char	before_num[32];

	char    ipcc_record[5];
	char    record[11];
	char    ipcc_application[5];
	char    ipcc_ivr[15];
	char    moh_bill[5];
	char    console_bill[5];
	char    autorec_bill[5];
	char    blf_on[5];

    	char orguser[128];
    	char upperuser[128];
    	char tmpdomain[64];
    	char channelname[64];
    	char peerchannelname[64];
    	char bridgedchannelname[64];
    	char monitored[5];
    	char tmpemail[64];

	char    sip_passwd[20];
	char    dbqid[9];
	char    allotquota[11];
	int    intallotquota;
	int    int_sip_passwd;
	int    intdbquota;
	int	domain_chg;
	int	svc_chg;
	int	relayFlag = 0;
	char  prefix[200],inner_digit[11],serverip[30];
	char  bizproxyip[30];
	char  VA_LIST[128];
char bizskype[5];

/* 20190129 TTS ADD */
char tts_tick[10];
char tts_infinity[5];

/* 20190329 MMS ADD */
char mms_flag[2];

/* 20190329 OPEN API ADD */
char api_flag[2];
/***
EXEC SQL END DECLARE SECTION;
*/
int selcnt = 0;

typedef	struct	Filter {
  char  *from;
  char  *reg_from;
  char  *subject;
  char  *reg_subject;
  char  *box;
  char  *time;
  char  *caseI;
} Filter;

/******** TEST ***********/
#define	LASTLINE	lastLine = __LINE__;
extern	int	lastLine;
extern  int systemreadFlag;
/******** TEST ***********/


int unhexify(unsigned char *obuf, const char *ibuf)
{
    unsigned char c, c2;
    int len = strlen(ibuf) / 2;
    assert(!(strlen(ibuf) %1)); // must be even number of bytes

    while (*ibuf != 0)
    {
        c = *ibuf++;
        if( c >= '0' && c <= '9' )
            c -= '0';
        else if( c >= 'a' && c <= 'f' )
            c -= 'a' - 10;
        else if( c >= 'A' && c <= 'F' )
            c -= 'A' - 10;
        else
            assert( 0 );

        c2 = *ibuf++;
        if( c2 >= '0' && c2 <= '9' )
            c2 -= '0';
        else if( c2 >= 'a' && c2 <= 'f' )
            c2 -= 'a' - 10;
        else if( c2 >= 'A' && c2 <= 'F' )
            c2 -= 'A' - 10;
        else
            assert( 0 );

        *obuf++ = ( c << 4 ) | c2;
    }

    return len;
}


void hexify(unsigned char *obuf, const unsigned char *ibuf, int len)
{
    unsigned char l, h;

    while (len != 0)
    {
        h = (*ibuf) / 16;
        l = (*ibuf) % 16;

        if( h < 10 )
            *obuf++ = '0' + h;
        else
            *obuf++ = 'a' + h - 10;

        if( l < 10 )
            *obuf++ = '0' + l;
        else
            *obuf++ = 'a' + l - 10;

        ++ibuf;
        len--;
    }
}




int calc_index(const char *str)
{
 int j=0;

        //SIMSIMSIMSIM
        if(!str || (strlen(str) != 3 && strlen(str) != 7))
                return 0;

        j=*(str+0)*100;
        j+= *(str+1)*111;
        j+= *(str+2)*1227;

        if(j < 0)
                j =0;

	j %= 20;
        return (j?j:1);
}


char *src_encrypt(char *src, char *dst, char *key)
{
       int i,j;
       int int_key = 0;
       if(!key || strlen(key) != 7)
                return  src;


	if(*src == '')
                return  src;

        int_key =  calc_index(key);

        for(i=0;i<strlen(src); i++) {
                dst[i] = src[i] + int_key;
        }

        memset(src,0,strlen(src));
	*src = '';
        hexify(src+1,dst,strlen(dst));
	src[strlen(src)] = '';
        return src;
}


char *src_decrypt(char *src, char *dst, char *key)
{
       int i,j;
       int int_key = 0;
       if(!key || strlen(key) != 7 || *src !='')
                return src;

        memset(dst,0,strlen(dst));
	src[strlen(src)-1] = '\0';
	
        unhexify(dst,src+1);

        int_key =  calc_index(key);

        memset(src,0,strlen(src));
        for(i=0;i < strlen(dst); i++) {
                src[i] = dst[i] - int_key;
        }
        return src;
}


/********************************************************************************************/
/*
        memset(dst,0,sizeof(dst));
        memset(src,0,sizeof(src));

        strcpy(src,"우리나라123 ★");
        strcpy(key,"A011234");

        src_encrypt(src,dst,key);

        printf("\ndst:(%s)",dst);
        printf("\nsrc:(%s)\n\n\n---------------",src);


        src_decrypt(src,dst,key);
        printf("\ndst:(%s)",dst);
        printf("\nsrc:(%s)",src);

dst:(잿묻눈륀234!♩)
src:(c0edb9afb4abb7f432333421a2db)


---------------
dst:(잿묻눈륀234!♩)
src:(우리나라123 ★)

[root@PC-A1 asterisk-1.2.9.1]#
*/
/********************************************************************************************/


/*************************************************************************
*************************************************************************/
void
ps_delSpace(char *srcP)
{
    int i;
    char *ptr;

    if( srcP == (char *)NULL || strlen(srcP) == 0 )
    {
        srcP[0]='\0';
        return;
    }
    i=strlen(srcP)-1;
    ptr=srcP+i;
    while(ptr[0] == ' ' || ptr[0] == '\t')
            ptr--;
    *(++ptr)='\0';
}

/**************************************************************************/
/**************************************************************************/
int
relayCheck(char *srcP)
{
    int i=0;
    char relay[15];

	memset(relay,0,sizeof(relay));
	

	if(!srcP)
		return 0;

	if(strlen(srcP) > 7)
		sprintf(relay,"%7.7s",srcP);
	else
		sprintf(relay,"%s",srcP);
	
	while(i < 100 && strlen(relay_prefix[i].prefix) > 5) {
		printf("[7mRelay Prefix :(%d) (%s)[0m\n",i,relay_prefix[i].prefix);
		if(!strcmp(relay_prefix[i].prefix,relay))
			return 1;
		i++;
	}

	return 0;
}


/**************************************************************************/
/**************************************************************************/
int 
getServerName(char *ip) {
  struct  utsname   ht;
  char  _tmpbuf[256];
  char  smsServer[32];
  int  smsPort=3821;
  int relay_index=0;
  char  *token = NULL,*kind = NULL;

  int i=0;
        FILE    *fp=NULL;
        char    line[256];
        int sd = -1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;
        if (!ip || ((fp = fopen("/etc/asterisk/server.conf", "r")) == NULL)) {
                return 0;
        }
        uname(&ht);

        memset(line,0,sizeof(line));
        memset(server_value,0,sizeof(server_value));
        while((fgets(line,sizeof(line),fp)) != NULL && strlen(line) >  0) {

                if(*line == '#' || *line == ';')
                        continue;
                if(line[strlen(line)-1] == '\n' || line[strlen(line)-1] == '\r')
                        line[strlen(line)-1] = '\0';
		if(strlen(line) < 5)
			continue;
		if(!strstr(line,ip))
			continue;
		strcpy(server_value,strtok(line,"|\0"));
	}
	fclose(fp);
	return 0;
}



int multiSqlinit(int flag)
{
        char con_user[32], con_pass[32];
        int ret;
        struct  utsname   ht;
        uname(&ht);

        /* host 부분이 NULL이면 localhost입니다. */
        mysql_1 = mysql_init(NULL);
        /* asterisk이라는 db를 선택 */
        //mysql = mysql_real_connect(mysql, "127.0.0.1", "root", "SX@tofhqrp", "asterisk",3306, "/tmp/mysql.sock",0);

	if(!strcmp(ht.nodename,"OAMapp1A")) {
		if(flag == 1) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.108", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 2) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.109", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 3) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.110", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
	}
	else if(!strcmp(ht.nodename,"OAMapp2a")) {
		if(flag == 2) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.108", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 1) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.109", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 3) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.110", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
	}
	else if(!strcmp(ht.nodename,"OAMapp3a")) {
		if(flag == 2) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.108", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 3) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.109", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
		else if(flag == 1) {
			mysql_1 = mysql_real_connect(mysql_1, "172.21.83.110", "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock",0);
		}
	}

        if(!mysql_1) {
                printf("\n mysql_1 NULL");
		return -1;
        }

        return 1;
}


/**************************************************************************/
/**************************************************************************/
int readRelay() {
  struct  utsname   ht;
  char  _tmpbuf[256];
  char  smsServer[32];
  int  smsPort=3821;
  int relay_index=0;
  char  *token = NULL,*kind = NULL;

  int i=0;
        FILE    *fp=NULL;
        char    line[256];
        int sd = -1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;
        if ((fp = fopen("/etc/asterisk/relay_prefix.conf", "r")) == NULL) {
                return 0;
        }
        uname(&ht);

	for(relay_index=0;relay_index < 100;relay_index++)
		memset(relay_prefix[relay_index].prefix,0,sizeof(relay_prefix[relay_index].prefix));

	relay_index = 0;

        memset(line,0,sizeof(line));
        memset(smsServer,0,sizeof(smsServer));
        while((fgets(line,sizeof(line),fp)) != NULL && strlen(line) >  0) {

                if(*line == '#' || *line == ';')
                        continue;
                if(line[strlen(line)-1] == '\n')
                        line[strlen(line)-1] = '\0';
		if(strlen(line) < 5)
			continue;

		strcpy(relay_prefix[relay_index].prefix,line);
		relay_index++;
	}
	fclose(fp);
	return 0;
}

/*******************************************************************************************************/
/*******************************************************************************************************/
/*
typedef struct {
        char    server[20];
        char    vip[20];
        char    active[20];
        char    standby[20];
        char    table[20];
        char    cdr_server[20];
} CDR_STRUCT_;
*/

int readConfig() {
  char    sqlcmd[512],sqlcmd1[255];
	char	serverip[20];
	char	cdrserver[20];
	char	realip[20];
	char	servername[64];
	char	nickname[64];
	char	sub[10],befserverip[20];
	int	i,j, ret, row_num, row_num1,index=0;

		//sprintf(sqlcmd, "select serverip,servername,nickname,cdrserver from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);


		for(i=0; i < INDEX; i++) {
			memset(CDR_SERVER_[i].server,0,sizeof(CDR_SERVER_[i].server));
			strcpy(CDR_SERVER_[i].server,"");
			memset(CDR_SERVER_[i].vip,0,sizeof(CDR_SERVER_[i].vip));
			strcpy(CDR_SERVER_[i].vip,"");
			memset(CDR_SERVER_[i].active,0,sizeof(CDR_SERVER_[i].active));
			strcpy(CDR_SERVER_[i].active,"");
			memset(CDR_SERVER_[i].standby,0,sizeof(CDR_SERVER_[i].standby));
			strcpy(CDR_SERVER_[i].standby,"");
			memset(CDR_SERVER_[i].table,0,sizeof(CDR_SERVER_[i].table));
			strcpy(CDR_SERVER_[i].table,"cdr");
			memset(CDR_SERVER_[i].cdr_server,0,sizeof(CDR_SERVER_[i].cdr_server));
			strcpy(CDR_SERVER_[i].cdr_server,"");

			VIP_LIST_[i].seq = 0;
			memset(VIP_LIST_[i].vip1,0,sizeof(VIP_LIST_[i].vip1));
			strcpy(VIP_LIST_[i].vip1,"");
			memset(VIP_LIST_[i].vip2,0,sizeof(VIP_LIST_[i].vip2));
			strcpy(VIP_LIST_[i].vip2,"");
		}

		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select serverip,servername,nickname,cdrserver from server_info where etc = 'main'");
				printf("\nsqlcmd:(%s)\n",sqlcmd);
				printf("\nsqlcmd:(%s)\n",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) )  {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					printf("\n(((%s)))",resPacket);
					return -1;
				}
								
				row_num = mysql_num_rows(result);

				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					printf("\n.............row_num:(%d)\n",row_num);
					return -1;
				}
					printf("\n..OK row_num:(%d)\n",row_num);
//        char    server[20];
//        char    vip[20];
//        char    active[20];
//        char    standby[20];
//        char    table[20];
//        char    cdr_server[20];


				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row(result);
					/*** serverip,servername,nickname,cdrserver ***/
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						strcpy(CDR_SERVER_[i].vip,serverip);
						strcpy(servername, row[2]?row[2]:"unknown");
						ps_delSpace(servername);
						strcpy(CDR_SERVER_[i].server,servername);
						strcpy(cdrserver, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(cdrserver);
						strcpy(CDR_SERVER_[i].cdr_server,cdrserver);
					}
					if(*serverip && strlen(serverip) > 5) {
		sprintf(sqlcmd1, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
						ret = mysql_query(mysql_1, sqlcmd1);

						result_1 = mysql_store_result( mysql_1 );
						if(result_1) {
							row_num1 = mysql_num_rows(result_1);
							if(row_num1 == 0) {
								mysql_free_result(result_1);
								result_1 = NULL;
								continue;
							}
							else {
								for(j=0;j < row_num1;j++) {
									row1 = mysql_fetch_row( result_1 );
									if(row1) 
									{
										strcpy(realip,row1[0]?row1[0]:"127.0.0.1");
										ps_delSpace(realip);
										strcpy(sub, row1[1]?row1[1]:"sub1");
										ps_delSpace(sub);
										if(!strcmp(sub,"sub1")) {
											strcpy(CDR_SERVER_[i].active,realip);
										}
										else 
											strcpy(CDR_SERVER_[i].standby,realip);
									}
								}
							}
							mysql_free_result(result_1);
							result_1 = NULL;
						}

					}
				}
		mysql_free_result(result);
		result = NULL;


					memset(serverip,0,sizeof(serverip));
					memset(befserverip,0,sizeof(befserverip));

					{
		//sprintf(sqlcmd1, "select domain,serverip,servername from server_info where servername = 'sub2' order by serverip");
		sprintf(sqlcmd1, "select domain,serverip,servername from server_info where servername = 'vip' order by serverip");
						ret = mysql_query(mysql_1, sqlcmd1);

						result_1 = mysql_store_result( mysql_1 );
						if(result_1) {
							row_num1 = mysql_num_rows(result_1);
							if(row_num1 == 0) {
								mysql_free_result(result_1);
								result_1 = NULL;
							}
							else {
//printf("---------------------------- row_num1:%d\n",row_num1);
								for(j=0;j < row_num1;j++) {
									row1 = mysql_fetch_row( result_1 );
									if(row1) 
									{
										if(row1[0])
											ps_delSpace(row1[0]);
//printf("---------------------------- row1:1:%s\n",row1[1]);
										strcpy(serverip,row1[1]?row1[1]:"127.0.0.1");
										ps_delSpace(serverip);

										if(strlen(serverip) > 5) {
											strcpy(VIP_LIST_[index].vip1,serverip);
											VIP_LIST_[index].seq = index+1;
											index++;
											if(index > 999) 
												index = 999;
										}
/*******************************************************************************
										if(strcmp(serverip,befserverip)) {
											index = 0;
											while(strlen(VIP_LIST_[index].vip1) > 5) index++;
											if(index > 999) 
												index = 999;

											strcpy(VIP_LIST_[index].vip1,row1[0]);
											strcpy(befserverip,serverip);

										}
										else {
											//while(strcmp(VIP_LIST_[index].vip1,serverip) && strlen(VIP_LIST_[index].vip1) > 5) index++;
											//if(index > 199) index = 199;
											strcpy(VIP_LIST_[index].vip2,row1[0]);
											strcpy(befserverip,"");


										}
*/
									}
								}
							}
							if(result_1){
							mysql_free_result(result_1);
							result_1 = NULL;
							}
						}
					}

					VIP_LIST_[index].seq=0;







		for(i=0; i < INDEX; i++) {
			if(strlen(CDR_SERVER_[i].server) > 2) {
				printf("server(%s)..",CDR_SERVER_[i].server);
				printf("vip(%s)..",CDR_SERVER_[i].vip);
				printf("active(%s)..",CDR_SERVER_[i].active);
				printf("standby(%s)..",CDR_SERVER_[i].standby);
				printf("table(%s)..",CDR_SERVER_[i].table);
				printf("cdr_server(%s)\n",CDR_SERVER_[i].cdr_server);
			}
		}

/**
		for(i=0; i < INDEX; i++) {
			if(strlen(VIP_LIST_[i].vip1) > 2) 
				printf("(%d) vip1:(%s).vip2:(%s)\n",VIP_LIST_[i].seq,VIP_LIST_[i].vip1,VIP_LIST_[i].vip2);
		}
*/


		if(mysql_1)
			mysql_close(mysql_1);
		mysql_1 = NULL;

		if(mysql)
			mysql_close(mysql);
		mysql = NULL;

		return 0;

}

void
case_lower(char *str)
{
        int i;

        for(i = 0; i < strlen(str); i++) {
                str[i] = tolower(str[i]);
        }
}



int smsSend(command,ip,param)
char *command;
char *ip;
char *param;
{

  struct  utsname   ht;
  char  _tmpbuf[256];
  char  smsServer[32];
  int  smsPort=3821;
  char  *token = NULL,*kind = NULL;
int optsock=0,len,i=0;
struct sockaddr_in optaddr = { 0, };
char    tmpdata[128];

        optsock = socket(AF_INET, SOCK_DGRAM, 0);
        optaddr.sin_family = AF_INET;
        optaddr.sin_addr.s_addr = inet_addr("127.0.0.1");
        
        optaddr.sin_port = htons(3341);
    	uname(&ht);
        
        if(optsock > -1) {
                //SMS Send....
                snprintf(tmpdata,sizeof(tmpdata)-1, "|%s|(%s) %s","engine",ht.nodename,command?command:"~~~");
printf("\n[7mSMS tmpdata:(%s)[0m",tmpdata);
                len = sendto(optsock,tmpdata, strlen(tmpdata), 0,(struct sockaddr *)&optaddr,\
                (socklen_t) sizeof(optaddr));
                close(optsock);
        }
        
        return 0;
}



int smsSendToGW(message,tel,from)
char *message;
char *tel;
char *from;
{
  struct  utsname   ht;
  int i;

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        i = 0;
    	uname(&ht);

        sd =-1;
        tryCnt = 0;
        memset(_tmpbuf,0,sizeof(_tmpbuf));
        sprintf(_tmpbuf, "dacomhosting|%s|%s|%s|\n",tel,from,message);
        while(sd < 0 && tryCnt++ < 3) {
                sd = tcpConnect("164.124.107.28", 3821);
                if(sd < 0)
                        sleep(1);
                printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
        }

        if(sd > 0) {
                if((ret = _tcpWrite(sd, _tmpbuf,strlen(_tmpbuf))) == 0) {
                        printf("\nWrite data : (%s)",_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        close(sd);

                }
                close(sd);
        }
        return 0;
}



int smsSendToIRLink(command,ip,code)
char *command;
char *ip;
char *code;
{
  struct  utsname   ht;
  int i;

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        i = 0;
    	uname(&ht);

        while(irlink[i].no != NULL) {
        sd =-1;
        tryCnt = 0;
        memset(_tmpbuf,0,sizeof(_tmpbuf));
        sprintf(_tmpbuf, "dacomhosting|%s|%s|%s(%s)|\n",irlink[i].no,code,command,ht.nodename);
        while(sd < 0 && tryCnt++ < 3) {
                sd = tcpConnect(ip, 3821);
                if(sd < 0)
                        sleep(1);
                printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
        }

        if(sd > 0) {
                if((ret = _tcpWrite(sd, _tmpbuf,strlen(_tmpbuf))) == 0) {
                        printf("\nWrite data : (%s)",_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        close(sd);

                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);
                errLog(ip,command);

        }
        i++;
        }
        return 0;
}




void
case_upper(char *str)
{
        int i;

        for(i = 0; i < strlen(str); i++) {
                str[i] = toupper(str[i]);
        }
}

int
isdigitstr(char *str)
{
    int c,i;


    for(i = 0; i < strlen(str); i++) {
	c=str[i];
        if(isdigit(c));
        else
            return(0);
    }
    return(1);
}


void case_lowers(s)
char *s;
{
  unsigned char x;
  while (x = *s) {
    x -= 'A';
    if (x <= 'Z' - 'A') *s = x + 'a';
    ++s;
  }
}

/************************************************/
/************************************************/
int
ishangul(hlog)
unsigned char   *hlog;
{
    unsigned char    *s;
    int ret = 0;

    s = hlog;

    while( *s != '\0' )  {

	printf("\n>>>%c",*s);
        if(isalnum (*s)) {
            ++s;
            continue;
        }

        if( (( *s >= 0xB0 ) && (*s <= 0xD8)) &&
            (( *++s >= 0xA1 ) && ( *s <= 0xFE)) )  {
            ++s;
            return 1;
        }
        ++s;
    }
    return(ret);
}



unsigned char *__base64_encode(const unsigned char *str, int length, int *ret_length) { 
   const unsigned char *current = str; 
   int i = 0; 
   unsigned char *result = (unsigned char *)malloc(((length + 3 - length % 3) * 4 / 3 + 1) * sizeof(char)); 
 
   while (length > 2) { /* keep going until we have less than 24 bits */ 
      result[i++] = __base64_table[current[0] >> 2]; 
      result[i++] = __base64_table[((current[0] & 0x03) << 4) + (current[1] >> 4)]; 
      result[i++] = __base64_table[((current[1] & 0x0f) << 2) + (current[2] >> 6)]; 
      result[i++] = __base64_table[current[2] & 0x3f]; 
 
      current += 3; 
      length -= 3; /* we just handle 3 octets of data */ 
   } 
 
   /* now deal with the tail end of things */ 
   if (length != 0) { 
      result[i++] = __base64_table[current[0] >> 2]; 
      if (length > 1) { 
         result[i++] = __base64_table[((current[0] & 0x03) << 4) + (current[1] >> 4)]; 
         result[i++] = __base64_table[(current[1] & 0x0f) << 2]; 
         result[i++] = __base64_pad; 
      } 
      else { 
         result[i++] = __base64_table[(current[0] & 0x03) << 4]; 
         result[i++] = __base64_pad; 
         result[i++] = __base64_pad; 
      } 
   } 
   if(ret_length) { 
      *ret_length = i; 
   } 
   result[i] = '\0'; 
   return result; 
} 
 
/* as above, but backwards. :) */ 
unsigned char *__base64_decode(const unsigned char *str, int length, int *ret_length) { 
   const unsigned char *current = str; 
   int ch, i = 0, j = 0, k; 
   /* this sucks for threaded environments */ 
   static short reverse_table[256]; 
   static int table_built; 
   unsigned char *result; 
 
   if (++table_built == 1) { 
      char *chp; 
      for(ch = 0; ch < 256; ch++) { 
         chp = strchr(__base64_table, ch); 
         if(chp) { 
            reverse_table[ch] = chp - __base64_table; 
         } else { 
            reverse_table[ch] = -1; 
         } 
      } 
   } 
 
   result = (unsigned char *)malloc(length + 1); 
   if (result == NULL) { 
      return NULL; 
   } 
 
   /* run through the whole string, converting as we go */ 
   while ((ch = *current++) != '\0') { 
      if (ch == __base64_pad) break; 
 
      /* When Base64 gets POSTed, all pluses are interpreted as spaces. 
         This line changes them back.  It's not exactly the Base64 spec, 
         but it is completely compatible with it (the spec says that 
         spaces are invalid).  This will also save many people considerable 
         headache.  - Turadg Aleahmad <turadg@wise.berkeley.edu> 
      */ 
 
      if (ch == ' ') ch = '+'; 
 
      ch = reverse_table[ch]; 
      if (ch < 0) continue; 
 
      switch(i % 4) { 
      case 0: 
         result[j] = ch << 2; 
         break; 
      case 1: 
         result[j++] |= ch >> 4; 
         result[j] = (ch & 0x0f) << 4; 
         break; 
      case 2: 
         result[j++] |= ch >>2; 
         result[j] = (ch & 0x03) << 6; 
         break; 
      case 3: 
         result[j++] |= ch; 
         break; 
      } 
      i++; 
   } 
 
   k = j; 
   /* mop things up if we ended on a boundary */ 
   if (ch == __base64_pad) { 
      switch(i % 4) { 
      case 0: 
      case 1: 
         free(result); 
         return NULL; 
      case 2: 
         k++; 
      case 3: 
         result[k++] = 0; 
      } 
   } 
   if(ret_length) { 
      *ret_length = j; 
   } 
   result[k] = '\0'; 
   return result; 
} 



static int
my_read(int fd, char *ptr)
{
    static int  read_cnt = 0;
    static char *read_ptr;

    if (read_cnt <= 0) {
again:
        if ( (read_cnt = read(fd, read_buf, sizeof(read_buf))) < 0) {
            if (errno == EINTR)
                goto again;
            return(-1);
        } else if (read_cnt == 0)
            return(0);
        read_ptr = read_buf;
    }

    read_cnt--;
    *ptr = *read_ptr++;
    return(1);
}



int
readline(fd, vptr,maxlen)
int fd;
void *vptr;
int maxlen;
{
    int     n, rc;
    char    befc,c, *ptr;

    ptr = vptr;
    if(fd > 0 ) {
        for (n = 1; n < maxlen; n++) {
            befc = c;
            if ( (rc = my_read(fd, &c)) == 1) {
                *ptr++ = c;
/***
                if (c == '\r' || c == 0x03 )
                    if(befc != '\\')
                        break;
*/
                if (c == '\n')
                        break;
            } else if (rc == 0) {
                if (n == 1)
                    return(0);  /* EOF */
                else
                    break;      /* EOF */
            } else
                return(0);      /* error Occured*/
        }

        *ptr = 0 ;  /* null terminate */
        return(n);
    }
    else
        return (0);
}


/***************************************************************************************************/
/***************************************************************************************************/
int commandSendUc(command,cmd,ip, response)
char *command;
char *cmd;
char *ip;
int response;
{

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;
	char	ucPacket[256],message[128];
	LEN_STRUCT len_struct;

        printf( "[7mIP:(%s),   %s, UC_PORT : (%d)[0m\n",ip,command,UC_PORT);
        printf( "[7mIP:(%s),   %s, UC_PORT : (%d)[0m\n",ip,command,UC_PORT);




return 0;

	if(!strcmp(ip,"112.222.225.177"))
		return 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 3) {
                sd = tcpConnect(ip, UC_PORT);
                //if(sd < 0)
                //sleep(1);
                printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
        }
		if(!strcmp(cmd,"INO"))
			nFlag = UINO;
		else if(!strcmp(cmd,"D07"))
			nFlag = UD07;
		else if(!strcmp(cmd,"UNN"))
			nFlag = UUNN;
		else if(!strcmp(cmd,"UNO"))
			nFlag = UUNO;
		else if(!strcmp(cmd,"UTH"))
			nFlag = UUTH;
		else if(!strcmp(cmd,"PBO"))
			nFlag = UPBO;
		else if(!strcmp(cmd,"RBO"))
			nFlag = URBO;
		else if(!strcmp(cmd,"I_S"))
			nFlag = UI_S;
		else if(!strcmp(cmd,"I_C"))
			nFlag = UI_C;
		else if(!strcmp(cmd,"RRQ"))
			nFlag = URRQ;
		if(!strcmp(cmd,"NOT"))
			nFlag = F_SIP_RECV_INFO_NOTI;

	printf("\nnFlag:(%d)",nFlag);

	argv[0] = "UC_";
	strcpy(resPacket,command);
	logCmd();

	if(response) {
		if(sd > -1) {
			memcpy(resPacket,&nFlag,sizeof(unsigned short));
			nloSize = sizeof(unsigned short)*2 + strlen(command);
			memcpy(resPacket + sizeof(unsigned short),&nloSize,sizeof(unsigned short));
			memcpy(resPacket + sizeof(unsigned short)*2,command,strlen(command));
			memcpy(&len_struct,resPacket,sizeof(unsigned short)*2);
		printf("\n[5mn[7mlen.code = (%d), len.len=(%d)[0m[0m",len_struct.code,len_struct.len);
			ret = tcpWriteUc(sd, resPacket, sizeof(unsigned short)*2+strlen(command));
			printf("\nWrite(%d) : [5m%s[0m",ret,resPacket+sizeof(unsigned short)*2);
			if(response) {
				memset(resPacket,0,sizeof(resPacket));
				printf("\nRead start....................");
				ret = tcpReadFromUc(sd);
				printf("\nRead : [5m%d-(%s)[0m", ret,resPacket+5);
			}
			close(sd);
			ucLog(ip,command);
			if(strstr(resPacket,"DB ERROR")) {
				strcpy(message,"UC Messenger DB ERROR!");
				ret = smsSend(message,"164.124.107.28","notify");

			}
			if(ret != URES) {
				return -1;
			}
			return 0;
		}
		else  {
			close(sd);
			printf("\n[5mConnect Fail %s:%d[0m",ip,UC_PORT);
			ucLog(ip,"<<<<connect Fail");
			sprintf(resPacket+5,"%s Connect fail",ip);
			return -1;
		}
	}
	else {
		memset(ucPacket,0,sizeof(ucPacket));
		if(sd > -1) {
			memcpy(ucPacket,&nFlag,sizeof(unsigned short));
			nloSize = sizeof(unsigned short)*2 + strlen(command);
			memcpy(ucPacket + sizeof(unsigned short),&nloSize,sizeof(unsigned short));
			memcpy(ucPacket + sizeof(unsigned short)*2,command,strlen(command));
			memcpy(&len_struct,ucPacket,sizeof(unsigned short)*2);
		printf("\n[5mn[7mlen.code = (%d), len.len=(%d)[0m[0m",len_struct.code,len_struct.len);
			ret = tcpWriteUc(sd, ucPacket, sizeof(unsigned short)*2+strlen(command));
			printf("\nWrite(%d) : [5m%s[0m",ret,ucPacket+sizeof(unsigned short)*2);
			close(sd);
			if(ret != URES) {
				return -1;
			}
			return 0;
		}
		else  {
			close(sd);
			printf("\n[5mConnect Fail %s:%d[0m",ip,UC_PORT);
			return -1;
		}
	}
}

/****************************************************************************************/
/****************************************************************************************/
int commandSendUDP(command,ip,port)
char *command;
char *ip;
int port;
{

        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd;
        struct sockaddr_in saddr;
printf("\n====================================================================");

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_port = htons(5001+time(0)%20);
        saddr.sin_addr.s_addr = inet_addr(ip);

        memset(resPacket,0,sizeof(resPacket));

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR) {
		if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR) {
			return -1;
		}
	}

        len = sendto(sd,command, strlen(command), 0,(struct sockaddr *)&saddr,\
        (socklen_t) sizeof(saddr));

        printf("\n[7mlen : (%d)[0m", len);
        //udpRead(masterFd, reqPacket);
        //udpRead(sd, resPacket);

        close(sd);

        return 1;
}



/***************************************************************************************************/
int commandSend(command,ip,server_flag)
char *command;
char *ip;
char *server_flag;
{
  struct  utsname   ht;
	char	message[256];
	int port;

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        uname(&ht);
printf("\nserver_flag:=====[[7m%s[0m], index:(%d)",server_flag?server_flag:"---", s_shmP_1->index);
        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else {
			sd = tcpConnect(ip, 3333);
			port = 3333;
		}

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > -1) {
                if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));

			if(!server_flag || (server_flag && *server_flag == '\0') || (server_flag && !strcmp(server_flag,"sub1"))) {
                        while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);
                        if(ret < 0 ) {
				close(sd);
                                printf("\n[7mread err occured!!!(%s)[0m",ip);
				{
					commandSendUDP(command,ip,5001);
					
					//sem_wait(&s_shmP_1->sem);
					s_shmP_1->packet[s_shmP_1->index].time = time(0);

					s_shmP_1->packet[s_shmP_1->index].port = port;
					snprintf(s_shmP_1->packet[s_shmP_1->index].ip,sizeof(s_shmP_1->packet[s_shmP_1->index].ip),"%s",ip);
					snprintf(s_shmP_1->packet[s_shmP_1->index].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index].cmd),"%s",command);
					snprintf(s_shmP_1->packet[s_shmP_1->index].result,sizeof(s_shmP_1->packet[s_shmP_1->index].result),"%s","READ err-timeout(5)");
					s_shmP_1->packet[s_shmP_1->index].count = 0;
					s_shmP_1->index++;
					if(s_shmP_1->index >= 10000)
						s_shmP_1->index = 0;
					//sem_post(&s_shmP_1->sem);
				}
				getServerName(ip);
				sprintf(message,"(%s) %s:%d READ-err",ht.nodename,server_value,port);
				ret = smsSend(message,"164.124.107.28","mysqlif");
				errLog(message,command);

                                return -1;
                        }
			}
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
			close(sd);
                }
		else {
			if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
				printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
				memset(_tmpbuf,0,sizeof(_tmpbuf));
				if(!server_flag || (server_flag && *server_flag == '\0') || (server_flag && !strcmp(server_flag,"sub1"))) {
				while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

				if(ret < 0 ) {
					close(sd);
					printf("\n[7mread err occured!!!(%s)[0m",ip);
					{
						commandSendUDP(command,ip,5001);
						//sem_wait(&s_shmP_1->sem);
						s_shmP_1->packet[s_shmP_1->index].time = time(0);

						s_shmP_1->packet[s_shmP_1->index].port = port;
						snprintf(s_shmP_1->packet[s_shmP_1->index].ip,sizeof(s_shmP_1->packet[s_shmP_1->index].ip),"%s",ip);
						snprintf(s_shmP_1->packet[s_shmP_1->index].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index].cmd),"%s",command);
						snprintf(s_shmP_1->packet[s_shmP_1->index].result,sizeof(s_shmP_1->packet[s_shmP_1->index].result),"%s","READ err-timeout(5)");
						s_shmP_1->packet[s_shmP_1->index].count = 0;
						s_shmP_1->index++;
						if(s_shmP_1->index >= 10000)
							s_shmP_1->index = 0;
						//sem_post(&s_shmP_1->sem);
					}
					getServerName(ip);
					sprintf(message,"(%s) %s:%d READ-err",ht.nodename,server_value,port);
					ret = smsSend(message,"164.124.107.28","mysqlif");
					errLog(message,command);

					return -1;
				}
				}
				printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
				close(sd);
			}
			else {
				commandSendUDP(command,ip,5001);
				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index].time = time(0);
				s_shmP_1->packet[s_shmP_1->index].port = port;
				snprintf(s_shmP_1->packet[s_shmP_1->index].ip,sizeof(s_shmP_1->packet[s_shmP_1->index].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index].result,sizeof(s_shmP_1->packet[s_shmP_1->index].result),"%s","WRITE err");
				s_shmP_1->packet[s_shmP_1->index].count = 0;
				s_shmP_1->index++;
				if(s_shmP_1->index >= 10000)
					s_shmP_1->index = 0;
				//sem_post(&s_shmP_1->sem);

				getServerName(ip);
				sprintf(message,"(%s) %s:%d WRITE-err",ht.nodename,server_value,port);
				ret = smsSend(message,"164.124.107.28","mysqlif");
				errLog(message,command);
			}
		}
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);

		getServerName(ip);
		if(!strcmp(ip,BACKUP_SERVER)) {
			sprintf(message,"(%s) connect error to %s(%s):%d",ht.nodename,server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			{
				commandSendUDP(command,ip,5001);

				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index].time = time(0);

				s_shmP_1->packet[s_shmP_1->index].port = port;
				snprintf(s_shmP_1->packet[s_shmP_1->index].ip,sizeof(s_shmP_1->packet[s_shmP_1->index].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index].result,sizeof(s_shmP_1->packet[s_shmP_1->index].result),"%s","CONNECT err");
				s_shmP_1->packet[s_shmP_1->index].count = 0;
				s_shmP_1->index++;
				if(s_shmP_1->index >= 10000)
					s_shmP_1->index = 0;
				//sem_post(&s_shmP_1->sem);
			}
			sprintf(message,"%s:%d CONNECT-err",ip,port);
			errLog(message,command);
			getServerName(ip);
			sprintf(message,"(%s) connect error to %s(%s):%d",ht.nodename,server_value,ip,3333);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4) && strcmp(server_flag,"sub2")) {
		commandSendUDP(command,ip,5001);

		//sem_wait(&s_shmP_1->sem);
		s_shmP_1->packet[s_shmP_1->index].time = time(0);

		s_shmP_1->packet[s_shmP_1->index].port = port;
		snprintf(s_shmP_1->packet[s_shmP_1->index].ip,sizeof(s_shmP_1->packet[s_shmP_1->index].ip),"%s",ip);
		snprintf(s_shmP_1->packet[s_shmP_1->index].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index].cmd),"%s",command);
		snprintf(s_shmP_1->packet[s_shmP_1->index].result,sizeof(s_shmP_1->packet[s_shmP_1->index].result),"%s",_tmpbuf);
		s_shmP_1->packet[s_shmP_1->index].count = 0;
		s_shmP_1->index++;
		if(s_shmP_1->index >= 10000)
			s_shmP_1->index = 0;
		//sem_post(&s_shmP_1->sem);

		snprintf(message,sizeof(message),"%s:%d %s",ip,port,_tmpbuf);
		errLog(message,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}


int commandSendOAM3332(command,ip)
char *command;
char *ip;
{
  struct  utsname   ht;
	char	message[256];

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0,port = 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else {
			sd = tcpConnect(ip, 3332);
			port = 3332;
		}

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > -1) {
                if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

                        if(ret < 0 ) {
				close(sd);
                                printf("\n[7mread err occured!!!(%s)[0m",ip);
				commandSendUDP(command,ip,5001);
				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
				s_shmP_1->packet[s_shmP_1->index_1].port = port;
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","READ err-timeout(5)");
				s_shmP_1->packet[s_shmP_1->index_1].count = 0;
				s_shmP_1->index_1++;
				if(s_shmP_1->index_1 >= 20000)
					s_shmP_1->index_1 = 10001;
				//sem_post(&s_shmP_1->sem);
                                return -1;
                        }
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
			close(sd);
                }
		else {
			if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
				printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
				memset(_tmpbuf,0,sizeof(_tmpbuf));
				while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

				if(ret < 0 ) {
					close(sd);
					printf("\n[7mread err occured!!!(%s)[0m",ip);
					{
						commandSendUDP(command,ip,5001);
						//sem_wait(&s_shmP_1->sem);
						s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
						s_shmP_1->packet[s_shmP_1->index_1].port = port;
						snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
						snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
						snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","READ err-timeout(5)");
						s_shmP_1->packet[s_shmP_1->index_1].count = 0;
						s_shmP_1->index_1++;
						if(s_shmP_1->index_1 >= 20000)
							s_shmP_1->index_1 = 10001;
						//sem_post(&s_shmP_1->sem);
					}
					sprintf(message,"%s:%p READ-err",ip,port);
					errLog(message,command);

					return -1;
				}
				printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
				close(sd);
			}
			else {
				commandSendUDP(command,ip,5001);
				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
				s_shmP_1->packet[s_shmP_1->index_1].port = port;
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","WRITE err");
				s_shmP_1->packet[s_shmP_1->index_1].count = 0;
				s_shmP_1->index_1++;
				if(s_shmP_1->index_1 >= 20000)
					s_shmP_1->index_1 = 10001;
				//sem_post(&s_shmP_1->sem);
				sprintf(message,"%s:%p WRITE-err",ip,port);
				errLog(message,command);
			}
		}
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);

		getServerName(ip);
		if(!strcmp(ip,BACKUP_SERVER)) {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			{
				commandSendUDP(command,ip,5001);

				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index_1].port = port;
				s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","CONNECT err");
				s_shmP_1->packet[s_shmP_1->index_1].count = 0;
				s_shmP_1->index_1++;
				if(s_shmP_1->index_1 >= 20000)
					s_shmP_1->index_1 = 10001;
				//sem_post(&s_shmP_1->sem);
			}
			sprintf(message,"%s:%p CONNECT-err",ip,port);
			errLog(message,command);
			getServerName(ip);
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}

		if(!strcmp(ip,BACKUP_SERVER)) {
			getServerName(ip);
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			getServerName(ip);
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4)) {
		//sem_wait(&s_shmP_1->sem);
		s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
		s_shmP_1->packet[s_shmP_1->index_1].port = port;
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s",_tmpbuf);
		s_shmP_1->packet[s_shmP_1->index_1].count = 0;
		s_shmP_1->index_1++;
		if(s_shmP_1->index_1 >= 20000)
			s_shmP_1->index_1 = 10001;
		//sem_post(&s_shmP_1->sem);

		snprintf(message,sizeof(message),"%s:%p %s",ip,port,_tmpbuf);
		errLog(message,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}


/***************************************************************************************************/
/***************************************************************************************************/
/********
int commandSend(command,ip)
char *command;
char *ip;
{
  struct  utsname   ht;
	char	message[256];

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else
			sd = tcpConnect(ip, 3333);

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > -1) {
                if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

                        if(ret < 0 ) {
				close(sd);
                                printf("\n[7mread err occured!!!(%s)[0m",ip);
                                return -1;
                        }
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
						close(sd);
                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);
                errLog(ip,command);

		if(!strcmp(ip,BACKUP_SERVER)) {
			getServerName(ip);
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			getServerName(ip);
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3333);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4)) {
		getServerName(ip);
                printf("\nreflect err occured!!!(%s-%s)",ip,srver_value);
                errLog(ip,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}
*/


/***************************************************************************************************/
/***************************************************************************************************/
/********8
int commandSendOAM3332(command,ip)
char *command;
char *ip;
{
  struct  utsname   ht;
	char	message[256];

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else
			sd = tcpConnect(ip, 3332);

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > 0) {
                if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

                        if(ret < 0 ) {
				close(sd);
                                printf("\n[7mread err occured!!!(%s)[0m",ip);
                                return -1;
                        }
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
						close(sd);
                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);
                errLog(ip,command);

		getServerName(ip);
		if(!strcmp(ip,BACKUP_SERVER)) {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3333);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4)) {
                printf("\nreflect err occured!!!(%s)",ip);
                errLog(ip,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}
*/


/***************************************************************************************************/
/***************************************************************************************************/
int commandSendPMS(command,ip)
char *command;
char *ip;
{
  struct  utsname   ht;
	char	message[256];
	int port;

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else {
			sd = tcpConnect(ip, 3355);
			port = 3355;
		}

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > -1) {
                if((ret = NewtcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        while((ret= NewtcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

                        if(ret < 0 ) {
				close(sd);
				//sem_wait(&s_shmP_1->sem);
				s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
				s_shmP_1->packet[s_shmP_1->index_1].port = port;
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
				snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","WRITE err");
				s_shmP_1->packet[s_shmP_1->index_1].count = 0;
				s_shmP_1->index_1 =  s_shmP_1->index_1++;
				if(s_shmP_1->index_1 >= 20000)
					s_shmP_1->index_1 = 10001;
				//sem_post(&s_shmP_1->sem);

                                printf("\n[7mread err occured!!!(%s)[0m",ip);
                                return -1;
                        }
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
						close(sd);
                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);
                errLog(ip,command);

		getServerName(ip);
		if(!strcmp(ip,BACKUP_SERVER)) {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			//sem_wait(&s_shmP_1->sem);
			s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
			s_shmP_1->packet[s_shmP_1->index_1].port = port;
			snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
			snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
			snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s","READ err-timeout(5)");
			s_shmP_1->packet[s_shmP_1->index_1].count = 0;
			s_shmP_1->index_1 =  s_shmP_1->index_1++;
			if(s_shmP_1->index_1 >= 20000)
				s_shmP_1->index_1 = 10001;
			//sem_post(&s_shmP_1->sem);

			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3333);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4)) {

		//sem_wait(&s_shmP_1->sem);
		s_shmP_1->packet[s_shmP_1->index_1].time = time(0);
		s_shmP_1->packet[s_shmP_1->index_1].port = port;
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].ip,sizeof(s_shmP_1->packet[s_shmP_1->index_1].ip),"%s",ip);
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].cmd,sizeof(s_shmP_1->packet[s_shmP_1->index_1].cmd),"%s",command);
		snprintf(s_shmP_1->packet[s_shmP_1->index_1].result,sizeof(s_shmP_1->packet[s_shmP_1->index_1].result),"%s",_tmpbuf);
		s_shmP_1->packet[s_shmP_1->index_1].count = 0;
		s_shmP_1->index_1 =  s_shmP_1->index_1++;
		if(s_shmP_1->index_1 >= 20000)
			s_shmP_1->index_1 = 10001;
		//sem_post(&s_shmP_1->sem);

                printf("\nreflect err occured!!!(%s)",ip);
                errLog(ip,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}

/***************************************************************************************************/
/***************************************************************************************************/
int commandSend3330(command,ip)
char *command;
char *ip;
{
  struct  utsname   ht;
	char	message[256];

        int sd=-1,tryCnt = 0,tryCnt1 = 0;
        int ret = 0;

        sprintf(_tmpbuf, "%s",command);
        while(sd < 0 && tryCnt++ < 2) {
		if(!strcmp(ip,BACKUP_SERVER)) {
			return 0;
			//sd = tcpConnect(ip, 3332);
		}
		else
			sd = tcpConnect(ip, 3330);

		if(sd < 0)
			sleep(1);
		printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
	}

        if(sd > -1) {
                if((ret = tcpWrite(sd, _tmpbuf)) == 0) {
                        printf("\n++++++++++++>(%s)Send data : [5m%s[0m",ip,_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
                        while((ret= tcpRead(sd, _tmpbuf)) < 0 && tryCnt1 ++ < 2);

                        if(ret < 0 ) {
				close(sd);
                                printf("\n[7mread err occured!!!(%s)[0m",ip);
                                return -1;
                        }
                        printf("\n<<<<<<Command Result(%s):[5m[%s][0m",ip,_tmpbuf);
						close(sd);
                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)",ip);
                errLog(ip,command);

		getServerName(ip);
		if(!strcmp(ip,BACKUP_SERVER)) {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3332);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return 0;
		}
		else {
			sprintf(message,"connect error to %s(%s):%d",server_value,ip,3333);
			ret = smsSend(message,"164.124.107.28","mysqlif");
			return -1;
		}
        }
        if(strncmp(_tmpbuf,"|RES",4)) {
                printf("\nreflect err occured!!!(%s)",ip);
                errLog(ip,command);
                return -1;
        }

        printf("\n[5m%s, %s[0m",_tmpbuf,ip);
        return 0;
}


/***************************************************************************************/
/**
        sprintf(destP,"server: %s\r\n",ip);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        strcpy(destP,"Action: Originate\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"ActionID: %d\r\n",getpid());
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);
*/


/***************************************************************************************/
int
Monitor(ip,command,filename,channel,peerchannel,method)
char	*ip;
char	*command;
char	*filename;
char	*channel;
char	*peerchannel;
char	*method;
{
	int	n, sockfd=-1;
	char	event[64],exten[32],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	long 	dur_time=0L;


	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(actionid,0,sizeof(actionid));
	memset(&data,0,sizeof(EVENT_STRUCT));

	//sockfd = tcpConnect(ip, 5038);
	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

	sprintf(destP,"Action: %s\r\n",command);
	//write(sockfd, destP, strlen(destP));
	//printf("%s",destP);

	sprintf(destP+strlen(destP),"ActionID: %d\r\n",getpid());
	//write(sockfd, destP, strlen(destP));
	//printf("%s",destP);

	sprintf(destP+strlen(destP),"Channel: %s\r\n",channel);
	//write(sockfd, destP, strlen(destP));
	//printf("%s",destP);

	sprintf(destP+strlen(destP),"PeerChannel: %s\r\n",peerchannel);
	//write(sockfd, destP, strlen(destP));
	//printf("%s",destP);

	if(method && !strcasecmp(method,"auto")) {
		sprintf(destP+strlen(destP),"Method: %s\r\n","Y");
		//write(sockfd, destP, strlen(destP));
		//printf("%s",destP);
	}

	if(filename && *filename) {
		sprintf(destP+strlen(destP),"File: %s\r\n",filename);
		//write(sockfd, destP, strlen(destP));
		//printf("%s",destP);

		sprintf(destP+strlen(destP),"Mix: 1\r\n\r\n");
		write(sockfd, destP, strlen(destP));
		printf("%s",destP);
	}
	else {
		sprintf(destP+strlen(destP),"\r\n");
		write(sockfd, destP, strlen(destP));
		printf("%s",destP);
	}

/***
	alarm(5);
	while((n=readline(sockfd, destP, 1024))) {

		alarm(0);
			
		if(n < 0) {
			strcpy(destP,"Action: Logoff\r\n\r\n");
			write(sockfd, destP, strlen(destP));
			close(sockfd);
			sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",ip,command);
			return -1;
		}
		printf(">>:[5m%s[0m",destP);
		if(strstr(destP,"END COMMAND"))
			break;
		alarm(5);
	}
*/

	return 0;
}

/***************************************************************************************/
/**
Apr 21 15:38:40: (server: 164.124.107.100)-(0)
Apr 21 15:38:40: (Action: originate)-(1)
Apr 21 15:38:40: (ActionID: 0013833)-(2)
Apr 21 15:38:40: (Channel: Local/0013833@conference/n)-(3)
Apr 21 15:38:40: (Priority: 1)-(4)
Apr 21 15:38:40: (Timeout: 30000)-(5)
Apr 21 15:38:40: (Variable: CONFNM=0013833153840)-(6)
Apr 21 15:38:40: (CallerId: 07075993581)-(7)
Apr 21 15:38:40: ()-(8)
*/
/***************************************************************************************/
/***************************************************************************************/
int
Conference(ip,command,peer,confnm,callerid)
char    *ip;
char    *command;
char    *peer;
char    *confnm;
char    *callerid;
{
        int     n,sockfd=-1;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[257];
        int     channelflag = 1,callflag=0;
        EVENT_STRUCT    data;
        long    dur_time=0L;


        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));
        memset(&data,0,sizeof(EVENT_STRUCT));


        //sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

        sprintf(destP,"Action: Originate\r\nChannel: Local/%s@conference\r\nWhere: MYSQLIF\r\nPriority: 1\r\nTimeout: 30000\r\nVariable: CONFNM=%s\r\nVariable: SRCCHAN=Local/%s@conference-%d\r\nVariable: CALLERID(num)=%s\r\nVariable: SENDER=%s\r\nAsync: yes\r\nCallerId: %s\r\nActionID: %d\r\n\r\n",peer,confnm,confnm,getpid(),callerid,callerid,callerid,getpid());
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

/****
        strcpy(destP,"Action: Originate\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);
        sprintf(destP,"Channel: Local/%s@conference\r\n",peer);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Priority: 1\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Timeout: 30000\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: CONFNM=%s\r\n",confnm);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: SRCCHAN=Local/%s@conference-%d\r\n",confnm,getpid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: CALLERID(num)=%s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: SENDER=%s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        strcpy(destP,"Async: yes\r\n\r\n");
        write(sockfd, destP, strlen(destP));

        sprintf(destP,"CallerId: %s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);
*/

        return sockfd;
}


/***************************************************************************************/
/***************************************************************************************/
int
ManagerQueueInfo(ip,command,queue,domain)
char	*ip;
char	*command;
char	*queue;
char	*domain;
{
	int	n,sockfd=-1;
	char	event[64],exten[32],channel[64],actionid[50];
	char	destP[8192];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	char	*tmpP=NULL;
	long 	dur_time=0L;


	memset(channelname,0,sizeof(channelname));
	memset(peerchannelname,0,sizeof(peerchannelname));
	memset(bridgedchannelname,0,sizeof(bridgedchannelname));
	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(monitored,0,sizeof(monitored));
	memset(&data,0,sizeof(EVENT_STRUCT));

	strcpy(monitored,"0");

		//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0) {
		usleep(10000);
		sockfd = connectToManager(ip);
	}

	if(sockfd < 0)
		return sockfd;

	if(queue && strlen(queue) > 2)
		sprintf(destP,"Action: %s\r\nDomain: %s\r\nQueue: %s\r\nActionID: %d\r\n\r\n",command,domain,queue,getpid());
	else
		sprintf(destP,"Action: %s\r\nDomain: %s\r\nActionID: %d\r\n\r\n",command,domain,getpid());

	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	sprintf(actionid,"ActionID: %d",getpid());

	alarm(120);
	while((n=readline(sockfd, destP, 1024))) {

		alarm(0);
/***
		if(time(0) - dur_time > 10)
			break;
*/
			
		if(n < 0) {
			strcpy(destP,"Action: Logoff\r\n\r\n");
			write(sockfd, destP, strlen(destP));
			close(sockfd);
			sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",ip,command);
			return -1;
		}
		printf(">>:%s",destP);
		if((tmpP=strstr(destP,"Event: QueueMonitor"))) {
			readline(sockfd, destP, 8192);
		printf("...1:%s",destP);
			//readline(sockfd, destP, 8192);
			if(!strncmp(destP,"Data: ",6)) {
				memset(_tmpbuf,0,sizeof(_tmpbuf));
				strcpy(_tmpbuf,destP+6);
		printf("_tmpBuff>>:(%s)",_tmpbuf);
			}
			readline(sockfd, destP, 4096);
		printf("...2:%s",destP);
			if(strstr(destP,actionid))
				break;
		}
		else if((tmpP=strstr(destP,"Response: Error"))) {
			readline(sockfd, destP, 4096);
			if(strstr(destP,actionid))
				break;
		}

		printf("_tmpBuff>>:(%s)",_tmpbuf);
		if(strstr(destP,"QueueMonitorComplete"))
			break;
		alarm(5);
	}
	alarm(0);
	while(_tmpbuf[strlen(_tmpbuf) -1] =='\r' || _tmpbuf[strlen(_tmpbuf) -1] =='\n')
		_tmpbuf[strlen(_tmpbuf) -1] ='\0';

	return sockfd;
}


/***************************************************************************************/
/***************************************************************************************/
int
ManagerMemberInfo(ip,command,queue,domain)
char	*ip;
char	*command;
char	*queue;
char	*domain;
{
	int	n, sockfd = -1;
	char	event[64],exten[32],channel[64],actionid[50];
	char	destP[4096];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	char	*tmpP=NULL;
	long 	dur_time=0L;

	memset(channelname,0,sizeof(channelname));
	memset(peerchannelname,0,sizeof(peerchannelname));
	memset(bridgedchannelname,0,sizeof(bridgedchannelname));
	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(monitored,0,sizeof(monitored));
	memset(&data,0,sizeof(EVENT_STRUCT));

	strcpy(monitored,"0");


	//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

	if(queue && strlen(queue) > 2)
		sprintf(destP,"Action: %s\r\nDomain: %s\r\nQueue: %s\r\nActionID: %d\r\n\r\n",command,domain,queue,getpid());
	else
		sprintf(destP,"Action: %s\r\nDomain: %s\r\nActionID: %d\r\n\r\n",command,domain,getpid());

	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	sprintf(actionid,"ActionID: %d",getpid());

	alarm(120);
	while((n=readline(sockfd, destP, 1024))) {

		alarm(0);
/***
		if(time(0) - dur_time > 10)
			break;
*/
			
		if(n < 0) {
			strcpy(destP,"Action: Logoff\r\n\r\n");
			write(sockfd, destP, strlen(destP));
			close(sockfd);
			sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",ip,command);
			return -1;
		}
		printf(">>:%s",destP);
		if((tmpP=strstr(destP,"Event: QueueMember"))) {
			readline(sockfd, destP, 4096);
		printf("...1:%s",destP);
			if(!strncmp(destP,"Data: ",6)) {
				strcpy(_tmpbuf,destP+6);
			}
			readline(sockfd, destP, 4096);
		printf("...2:%s",destP);
			if(strstr(destP,actionid))
				break;
		}
		else if((tmpP=strstr(destP,"Response: Error"))) {
			readline(sockfd, destP, 4096);
			if(strstr(destP,actionid))
				break;
		}
		if(strstr(destP,"MemberMonitorComplete"))
			break;
		alarm(3);
	}
	alarm(0);

	return sockfd;
}


/***************************************************************************************/
/***************************************************************************************/
int
ManagerInfo(ip,command)
char	*ip;
char	*command;
{
	int	n,sockfd=-1;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	char	*tmpP=NULL;
	long 	dur_time=0L;


	memset(channelname,0,sizeof(channelname));
	memset(peerchannelname,0,sizeof(peerchannelname));
	memset(bridgedchannelname,0,sizeof(bridgedchannelname));
	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(monitored,0,sizeof(monitored));
	memset(&data,0,sizeof(EVENT_STRUCT));

	strcpy(monitored,"0");


	//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

	sprintf(destP,"Action: command\r\ncommand: %s\r\nActionID: %d\r\n\r\n",command,getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	/*********************************************
	sprintf(destP,"server: %s\r\n",ip);
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	strcpy(destP,"Action: command\r\n");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"command: %s 2%s %s\r\n",command,arg1?arg1:"",arg2?arg2:"",arg3?arg3:"");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	**********************************************/
	alarm(60);
	while((n=readline(sockfd, destP, 1024))) {

		alarm(0);
/***
		if(time(0) - dur_time > 10)
			break;
*/
			
		if(n < 0) {
			strcpy(destP,"Action: Logoff\r\n\r\n");
			write(sockfd, destP, strlen(destP));
			close(sockfd);
			sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",ip,command);
			return -1;
		}
		printf(">>:%s",destP);
		if((tmpP=strstr(destP,"Name: ")) && *channelname == '\0') {
			strcpy(channelname,tmpP+strlen("Name: "));
			while(channelname[strlen(channelname)-1] == '\n' || channelname[strlen(channelname)-1] == '\r')
			channelname[strlen(channelname)-1] = '\0';
		}
		else if((tmpP=strstr(destP,"BRIDGEPEER=")) && *bridgedchannelname == '\0') {
			strcpy(bridgedchannelname,tmpP+strlen("BRIDGEPEER="));
			while(bridgedchannelname[strlen(bridgedchannelname)-1] == '\n' || bridgedchannelname[strlen(bridgedchannelname)-1] == '\r')
				bridgedchannelname[strlen(bridgedchannelname)-1] = '\0';
		}
		else if((tmpP=strstr(destP,"dstchannel=")) && *peerchannelname == '\0') {
			strcpy(peerchannelname,tmpP+strlen("dstchannel="));
			while(peerchannelname[strlen(peerchannelname)-1] == '\n' || peerchannelname[strlen(peerchannelname)-1] == '\r')
				peerchannelname[strlen(peerchannelname)-1] = '\0';
		}
		if(tmpP=strstr(destP,"MONITORED=true"))
			strcpy(monitored,"1");
		if(strstr(destP,"END COMMAND"))
			break;
		alarm(2);
	}
	alarm(0);

	printf("\nchannelname:(%s)",channelname);
	printf("\npeerchannelname:(%s)",peerchannelname);
	printf("\nbridgedchannelname:(%s)",bridgedchannelname);


	return sockfd;
}


/***************************************************************************************/
/***************************************************************************************/
int
ManagerAction(ip,action,command)
char	*ip;
char	*action;
char	*command;
{
	int	n,sockfd=-1;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	long 	dur_time=0L;


	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(&data,0,sizeof(EVENT_STRUCT));


	//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

	sprintf(destP,"Action: %s\r\n%s\r\nActionID: %d\r\n\r\n",action, command,getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	/*********************************************
	sprintf(destP,"server: %s\r\n",ip);
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	strcpy(destP,"Action: command\r\n");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"command: %s 2%s %s\r\n",command,arg1?arg1:"",arg2?arg2:"",arg3?arg3:"");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	**********************************************/

	return sockfd;
}


int connectToManager(ip)
{
	int	sockfd = -1;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[1024];
	

	sockfd = tcpConnect(ip, 5038);
	if(sockfd < 0) {
		usleep(10000);
		sockfd = tcpConnect(ip, 5038);
	}
	if(sockfd < 0) {
		usleep(10000);
		sockfd = tcpConnect(ip, 5038);
	}
	if(sockfd > -1) {
		readline(sockfd, destP, 1024);
		printf("\n[1;41m(%s)[0m",destP);

		sprintf(destP,"Action: Login\r\nUsername: manager\r\nsecret: ippbx@ix\r\n\r\n");
		//sprintf(destP,"Action: Login\r\nUsername: manager\r\nsecret: ippbx@ix\r\nEvents: no\r\n\r\n");
		write(sockfd, destP, strlen(destP));
		readline(sockfd, destP, 1024);
		printf("\n1.[7m(%s)[0m",destP);
		readline(sockfd, destP, 1024);
		printf("\n2.[7m(%s)[0m",destP);
		readline(sockfd, destP, 1024);
		printf("\n3.[7m(%s)[0m\n",destP);
		return sockfd;
	}
	return sockfd;
}




/***************************************************************************************/
/***************************************************************************************/
int
ManagerConnect(ip,port)
char    *ip;
int     port;
{       
        int     n;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[256]; 
        int     channelflag = 1,callflag=0,fd = -1;
        long    dur_time=0L;

        
        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));

        fd = tcpConnect(ip, port);
        if(fd < 0)
                fd = tcpConnect(ip, port);
        if(fd > -1) {
                readline(fd, destP, 1024);
		printf("\n[1;41m(%s)[0m",destP);
        }
/***
        readline(sockfd, destP, 1024);
        printf("\n[7m(%s)[0m",destP);
*/

        return fd;
}


/***************************************************************************************/
/***************************************************************************************/
int
ManagerLogin(sockfd)
int sockfd;
{
        int     n;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[256];
        int     channelflag = 1,callflag=0;
        EVENT_STRUCT    data;
        long    dur_time=0L;

        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));
        memset(&data,0,sizeof(EVENT_STRUCT));

        //sockfd = tcpConnect(ip, 5038);
/***
        readline(sockfd, destP, 1024);
        printf("\n[7m(%s)[0m",destP);
*/
        sprintf(destP,"Action: Login\r\nUsername: manager\r\nsecret: ippbx@ix\r\n\r\n");
	//sprintf(destP,"Action: Login\r\nUsername: manager\r\nsecret: ippbx@ix\r\nEvents: no\r\n\r\n");
        write(sockfd, destP, strlen(destP));
        readline(sockfd, destP, 1024);
        printf("\n1.[7m(%s)[0m",destP);
        readline(sockfd, destP, 1024);
        printf("\n2.[7m(%s)[0m",destP);
        readline(sockfd, destP, 1024);
        printf("\n3.[7m(%s)[0m",destP);

        return 0;
}

/***************************************************************************************/
/***************************************************************************************/
int
ManagerCommand(sockfd,command)
int sockfd;
char    *command;
{       
        int     n;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[256];
        int     channelflag = 1,callflag=0;
        EVENT_STRUCT    data;
        long    dur_time=0L;
        
        
        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));
        memset(&data,0,sizeof(EVENT_STRUCT));
        
        sprintf(destP,"Action: command\r\ncommand: %s\r\nActionID: %d\r\n\r\n",command,getpid());
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);
        
        return 0;
}       
        


int
IPCCManager(ip,command)
char    *ip;
char    *command;
{
	int	n;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0,sockfd=-1;
	EVENT_STRUCT	data;
	long 	dur_time=0L;

	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(&data,0,sizeof(EVENT_STRUCT));


	//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0) {
		usleep(10000);
		sockfd = connectToManager(ip);
		if(sockfd < 0) {
			return sockfd;
		}
		
	}

	sprintf(destP,"Action: %s\r\nActionID: %d\r\n\r\n",command,getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	/*********************************************
	sprintf(destP,"server: %s\r\n",ip);
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	strcpy(destP,"Action: command\r\n");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"command: %s 2%s %s\r\n",command,arg1?arg1:"",arg2?arg2:"",arg3?arg3:"");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	**********************************************/

	return sockfd;
}


/***************************************************************************************/
/***************************************************************************************/
int
Manager(ip,command)
char	*ip;
char	*command;
{
	int	n, sockfd = -1;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	long 	dur_time=0L;


	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(&data,0,sizeof(EVENT_STRUCT));


	//sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0)
		return sockfd;

	sprintf(destP,"Action: command\r\ncommand: %s\r\nActionID: %d\r\n\r\n",command,getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	/*********************************************
	sprintf(destP,"server: %s\r\n",ip);
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	strcpy(destP,"Action: command\r\n");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"command: %s 2%s %s\r\n",command,arg1?arg1:"",arg2?arg2:"",arg3?arg3:"");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
	**********************************************/

	return sockfd;
}


/*************************************************************************
*************************************************************************/
int
errorReturn(char *msg, char *file, int line) {
	sprintf(resPacket, "|ERR|%s(%s, %d)", msg, file, line);
	return -1;
}

/*************************************************************************
*************************************************************************/
int
successReturn(char *msg) {
	sprintf(resPacket, "|RES|%s", msg);
	return 0;
}

/*************************************************************************
**************************************************************************/
char* qRemoveSpace(char *str)
{
        int i, j;

        if(!str)return NULL;

        for(j = 0; str[j] == ' ' || str[j] == 9 || str[j] == '\r' || str[j] == '\n'; j++);
        for(i = 0; str[j] != '\0'; i++, j++) str[i] = str[j];
        for(i--; (i >= 0) && (str[i] == ' ' || str[i] == 9 || str[i] == '\r' || str[i] == '\n'); i--
);
        str[i+1] = '\0';

        return str;
}


/*************************************************************************
*************************************************************************/
int
md5(plain)
char    *plain;
{
        int     i;
        char    *crypt, salt[10];

        for (i = 0; i < 8; i++)
                salt[i] = rand() % 26 + 'a';
        salt[8] = 0;

        //crypt = (char *) md5_crypt_salt(plain, salt);

        return ((int) crypt);
}

int
tel_convert(tel)
char    *tel;
{
char	tmpBuff[32];
char    first[5];
char    mid[5];
char    last[5];
	strcpy(tmpBuff,tel);

				if(strlen(tel) < 12)
					return 0;

				if(!strncmp(tmpBuff,"000",3)) {
					strncpy(mid,tmpBuff+4,4);
					strncpy(last,tmpBuff+8,4);
					if(*mid == '0') {
						sprintf(tel,"%2.2s%3.3s%4.4s",tmpBuff+2,mid+1,last);
					}
					else  {
						sprintf(tel,"%2.2s%4.4s%4.4s",tmpBuff+2,mid,last);
					}

				}
				else if(!strncmp(tmpBuff,"007",3)) {
					strncpy(mid,tmpBuff+4,4);
					strncpy(last,tmpBuff+8,4);
					{
						sprintf(tel,"%3.3s%4.4s%4.4s",tmpBuff+1,mid,last);
						sprintf(tel,"%3.3s%4.4s%4.4s",tmpBuff+1,mid,last);
					}
				}
				else if(!strncmp(tmpBuff,"00",2)) {
					strncpy(mid,tmpBuff+4,4);
					strncpy(last,tmpBuff+8,4);
					if(*mid == '0') {
						sprintf(tel,"%3.3s%3.3s%4.4s",tmpBuff+1,mid+1,last);
					}
					else  {
						sprintf(tel,"%3.3s%4.4s%4.4s",tmpBuff+1,mid,last);
					}
				}
				printf("\n>>>>>tel(%s)",tel);
		return 0;
}


//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
procILT()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32],cur_t[32],command[256];
        time_t  tmm;
        struct  tm      *tp;
	FILE	*fp = NULL;

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}

    if(!s_shmP_4)
        get_s_shm_4(&s_shmP_4,0666);

	if(!s_shmP_4) {
                sprintf(resPacket,"|ERR|s_shmP_4 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");
        tmm=time(0);
	tp = (struct tm *) localtime(&tmm);

	sprintf(cur_t,"%04d%02d%02d%02d%02d",(tp -> tm_year+1900), tp -> tm_mon+1, tp -> tm_mday,tp->tm_hour,tp -> tm_min);
        
	if(name_index) {

		strcpy(s_shmP_4[atoi(argv[2]+name_index)+j].time,cur_t);

		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_response=argv[4]?(atoi(argv[4])> -1?atoi(argv[4]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_register=argv[5]?(atoi(argv[5])> -1?atoi(argv[5]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_options=argv[6]?(atoi(argv[6])> -1?atoi(argv[6]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_notify=argv[7]?(atoi(argv[7])> -1?atoi(argv[7]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_invite=argv[8]?(atoi(argv[8])> -1?atoi(argv[8]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_ack=argv[9]?(atoi(argv[9])> -1?atoi(argv[9]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_prack=argv[10]?(atoi(argv[10])> -1?atoi(argv[10]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_bye=argv[11]?(atoi(argv[11])> -1?atoi(argv[11]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_refer=argv[12]?(atoi(argv[12])> -1?atoi(argv[12]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_subscribe=argv[13]?(atoi(argv[13])> -1?atoi(argv[13]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_message=argv[14]?(atoi(argv[14])> -1?atoi(argv[14]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_update=argv[15]?(atoi(argv[15])> -1?atoi(argv[15]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_info=argv[16]?(atoi(argv[16])> -1?atoi(argv[16]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_cancel=argv[17]?(atoi(argv[17])> -1?atoi(argv[17]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_publish=argv[18]?(atoi(argv[18])> -1?atoi(argv[18]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_ping=argv[19]?(atoi(argv[19])> -1?atoi(argv[19]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.db_test=argv[20]?(atoi(argv[20])> -1?atoi(argv[20]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.db_test_=argv[21]?(atoi(argv[21])> -1?atoi(argv[21]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_block=argv[22]?(atoi(argv[22])> -1?atoi(argv[22]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_peer_i=argv[23]?(atoi(argv[23])> -1?atoi(argv[23]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_unblock=argv[24]?(atoi(argv[24])> -1?atoi(argv[24]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_1=argv[25]?(atoi(argv[25])> -1?atoi(argv[25]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_2=argv[26]?(atoi(argv[26])> -1?atoi(argv[26]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_3=argv[27]?(atoi(argv[27])> -1?atoi(argv[27]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_4=argv[28]?(atoi(argv[28])> -1?atoi(argv[28]):0):0;
		s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_5=argv[29]?(atoi(argv[29])> -1?atoi(argv[29]):0):0;
//Send To Call-Server
		if(PVS == 1 && MASTER == 1)  {
			char commandBuf[256],sqlcmd[512];

			sprintf(commandBuf,"|ILT|%s@%s|%s|%s|",user,domain,servername,cur_t);


			for(i = 4; i < 30; i++) {
				sprintf(commandBuf+strlen(commandBuf),"|%s",argv[i]?(atoi(argv[i]) > -1?argv[i]:"0"):"0");
			}
			strcat(commandBuf,"|");

			sprintf(resPacket,"|RES|%d%s",test,commandBuf);

			/****추가 ***/
			//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain in(select domain from server_info where nickname='%s') and etc <> 'main'",servername);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);

				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) )  {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						printf("\nsqlcmd:(%s)",sqlcmd);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;

		}
	}
	else {
                for(i=0; i < 500;i++) {
			s_shmP_4[i].limit.sip_response=argv[4]?(atoi(argv[4])> -1?atoi(argv[4]):0):0;
			s_shmP_4[i].limit.sip_register=argv[5]?(atoi(argv[5])> -1?atoi(argv[5]):0):0;
			s_shmP_4[i].limit.sip_options=argv[6]?(atoi(argv[6])> -1?atoi(argv[6]):0):0;
			s_shmP_4[i].limit.sip_notify=argv[7]?(atoi(argv[7])> -1?atoi(argv[7]):0):0;
			s_shmP_4[i].limit.sip_invite=argv[8]?(atoi(argv[8])> -1?atoi(argv[8]):0):0;
			s_shmP_4[i].limit.sip_ack=argv[9]?(atoi(argv[9])> -1?atoi(argv[9]):0):0;
			s_shmP_4[i].limit.sip_prack=argv[10]?(atoi(argv[10])> -1?atoi(argv[10]):0):0;
			s_shmP_4[i].limit.sip_bye=argv[11]?(atoi(argv[11])> -1?atoi(argv[11]):0):0;
			s_shmP_4[i].limit.sip_refer=argv[12]?(atoi(argv[12])> -1?atoi(argv[12]):0):0;
			s_shmP_4[i].limit.sip_subscribe=argv[13]?(atoi(argv[13])> -1?atoi(argv[13]):0):0;
			s_shmP_4[i].limit.sip_message=argv[14]?(atoi(argv[14])> -1?atoi(argv[14]):0):0;
			s_shmP_4[i].limit.sip_update=argv[15]?(atoi(argv[15])> -1?atoi(argv[15]):0):0;
			s_shmP_4[i].limit.sip_info=argv[16]?(atoi(argv[16])> -1?atoi(argv[16]):0):0;
			s_shmP_4[i].limit.sip_cancel=argv[17]?(atoi(argv[17])> -1?atoi(argv[17]):0):0;
			s_shmP_4[i].limit.sip_publish=argv[18]?(atoi(argv[18])> -1?atoi(argv[18]):0):0;
			s_shmP_4[i].limit.sip_ping=argv[19]?(atoi(argv[19])> -1?atoi(argv[19]):0):0;
			s_shmP_4[i].limit.db_test=argv[20]?(atoi(argv[20])> -1?atoi(argv[20]):0):0;
			s_shmP_4[i].limit.db_test_=argv[21]?(atoi(argv[21])> -1?atoi(argv[21]):0):0;
			s_shmP_4[i].limit.sip_block=argv[22]?(atoi(argv[22])> -1?atoi(argv[22]):0):0;
			s_shmP_4[i].limit.sip_peer_i=argv[23]?(atoi(argv[23])> -1?atoi(argv[23]):0):0;
			s_shmP_4[i].limit.sip_unblock=argv[24]?(atoi(argv[24])> -1?atoi(argv[24]):0):0;
			s_shmP_4[i].limit.sip_res_1=argv[25]?(atoi(argv[25])> -1?atoi(argv[25]):0):0;
			s_shmP_4[i].limit.sip_res_2=argv[26]?(atoi(argv[26])> -1?atoi(argv[26]):0):0;
			s_shmP_4[i].limit.sip_res_3=argv[27]?(atoi(argv[27])> -1?atoi(argv[27]):0):0;
			s_shmP_4[i].limit.sip_res_4=argv[28]?(atoi(argv[28])> -1?atoi(argv[28]):0):0;
			s_shmP_4[i].limit.sip_res_5=argv[29]?(atoi(argv[29])> -1?atoi(argv[29]):0):0;

		}

	}
	sprintf(command, "/etc/asterisk/packet_limit.conf");
	    if ((fp = fopen(command, "w")) == NULL) {
		sprintf(resPacket,"|RES|OK");
		return 0;       
	    }
	else {
                for(i=0; i < 500;i++) {
			if(strlen(s_shmP_4[i].host)  > 2) {
				fprintf(fp,"|%s|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|\n",s_shmP_4[i].host,s_shmP_4[i].time,
			
			s_shmP_4[i].limit.sip_response,
			s_shmP_4[i].limit.sip_register,
			s_shmP_4[i].limit.sip_options,
			s_shmP_4[i].limit.sip_notify,
			s_shmP_4[i].limit.sip_invite,
			s_shmP_4[i].limit.sip_ack,
			s_shmP_4[i].limit.sip_prack,
			s_shmP_4[i].limit.sip_bye,
			s_shmP_4[i].limit.sip_refer,
			s_shmP_4[i].limit.sip_subscribe,
			s_shmP_4[i].limit.sip_message,
			s_shmP_4[i].limit.sip_update,
			s_shmP_4[i].limit.sip_info,
			s_shmP_4[i].limit.sip_cancel,
			s_shmP_4[i].limit.sip_publish,
			s_shmP_4[i].limit.sip_ping,
			s_shmP_4[i].limit.db_test,
			s_shmP_4[i].limit.db_test_,
			s_shmP_4[i].limit.sip_block,
			s_shmP_4[i].limit.sip_peer_i,
			s_shmP_4[i].limit.sip_unblock,
			s_shmP_4[i].limit.sip_res_1,
			s_shmP_4[i].limit.sip_res_2,
			s_shmP_4[i].limit.sip_res_3,
			s_shmP_4[i].limit.sip_res_4,
			s_shmP_4[i].limit.sip_res_5);
		}
		}

		fclose(fp);
	}

	sprintf(resPacket,"|RES|OK");
	
	return 0;
}


//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
proc_KR()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32];

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}

    if(!s_shmP_4)
        get_s_shm_4(&s_shmP_4,0666);

	if(!s_shmP_4) {
                sprintf(resPacket,"|ERR|s_shmP_4 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");


	if(name_index) {
                for(i=0; i < 120;i++) {
		    sprintf(resPacket+strlen(resPacket),"|%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",
			s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].time,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_response,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_register,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_options,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_notify,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_invite,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_ack,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_prack,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_bye,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_refer,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_subscribe,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_message,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_update,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_info,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_cancel,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_publish,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_ping,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].db_test,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].db_test_,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_block,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_peer_i,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_unblock,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_res_1,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_res_2,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_res_3,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_res_4,
		    s_shmP_4[atoi(argv[2]+name_index)+j].packet[i].sip_res_5);
			if(!((i+1)%10)) {
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				sprintf(resPacket,"|RES");
			}
		}
	}
	return 0;
}



//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
procRLT()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32];

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
        snprintf(servername,sizeof(servername),"%s",argv[2]);

    if(!s_shmP_4)
        get_s_shm_4(&s_shmP_4,0666);

	if(!s_shmP_4) {
                sprintf(resPacket,"|ERR|s_shmP_4 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");


	if(!name_index) {
                for(i=0; i < 500;i++) {
		    if(strlen(s_shmP_4[i].host) > 2) {
			    sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",s_shmP_4[i].host,
				s_shmP_4[i].time,
			    s_shmP_4[i].limit.sip_response,
			    s_shmP_4[i].limit.sip_register,
			    s_shmP_4[i].limit.sip_options,
			    s_shmP_4[i].limit.sip_notify,
			    s_shmP_4[i].limit.sip_invite,
			    s_shmP_4[i].limit.sip_ack,
			    s_shmP_4[i].limit.sip_prack,
			    s_shmP_4[i].limit.sip_bye,
			    s_shmP_4[i].limit.sip_refer,
			    s_shmP_4[i].limit.sip_subscribe,
			    s_shmP_4[i].limit.sip_message,
			    s_shmP_4[i].limit.sip_update,
			    s_shmP_4[i].limit.sip_info,
			    s_shmP_4[i].limit.sip_cancel,
			    s_shmP_4[i].limit.sip_publish,
			    s_shmP_4[i].limit.sip_ping,
			    s_shmP_4[i].limit.db_test,
			    s_shmP_4[i].limit.db_test_,
			    s_shmP_4[i].limit.sip_block,
			    s_shmP_4[i].limit.sip_peer_i,
			    s_shmP_4[i].limit.sip_unblock,
			    s_shmP_4[i].limit.sip_res_1,
			    s_shmP_4[i].limit.sip_res_2,
			    s_shmP_4[i].limit.sip_res_3,
			    s_shmP_4[i].limit.sip_res_4,
			    s_shmP_4[i].limit.sip_res_5);
				if(!((i+1)%10)) {
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					sprintf(resPacket,"|RES");
				}
			}
		}
	}
	else {
		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",s_shmP_4[atoi(argv[2]+name_index)+j].host,
			s_shmP_4[atoi(argv[2]+name_index)+j].time,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_response,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_register,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_options,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_notify,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_invite,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_ack,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_prack,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_bye,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_refer,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_subscribe,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_message,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_update,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_info,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_cancel,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_publish,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_ping,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.db_test,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.db_test_,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_block,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_peer_i,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_unblock,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_1,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_2,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_3,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_4,
		    s_shmP_4[atoi(argv[2]+name_index)+j].limit.sip_res_5);

	}
	return 0;
}




/************************************************************************************************************/
/************************************************************************************************************/
int
proc_KS()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32];

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}

    if(!s_shmP_5)
        get_s_shm_5(&s_shmP_5,0666);

	if(!s_shmP_5) {
                sprintf(resPacket,"|ERR|s_shmP_5 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");

	if(name_index) {
                for(i=0; i < 120;i++) {
		    sprintf(resPacket+strlen(resPacket),"|%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",
			s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].time,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_response,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_register,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_options,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_notify,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_invite,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_ack,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_prack,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_bye,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_refer,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_subscribe,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_message,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_update,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_info,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_cancel,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_publish,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_ping,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].db_test,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].db_test_,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_block,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_peer_i,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_unblock,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_res_1,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_res_2,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_res_3,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_res_4,
		    s_shmP_5[atoi(argv[2]+name_index)+j].packet[i].sip_res_5);
			if(!((i+1)%10)) {
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				sprintf(resPacket,"|RES");
			}
		}
	}
	return 0;
}

/*********************************************************************************************************/
/*********************************************************************************************************/
int
proc_HR()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32],fromday[20],filename[256];
	FILE 	*logFp=NULL;

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

	memset(fromday,0,sizeof(fromday));
	memset(filename,0,sizeof(filename));

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}
    if(argv[3] && *argv[3] && atoi(argv[3]) > 0)
	strcpy(fromday,argv[3]);

	if(*fromday != '\0') {
		sprintf(filename,"/var/log/dbif/Cmd/%s/PHR",fromday);
		logFp = fopen(filename,"r");
		if(logFp) {
			sprintf(resPacket,"|RES");
			memset(filename,0,sizeof(filename));
			while((fgets(filename,sizeof(filename),logFp)) != NULL) {

				if(!strcmp(filename,"\n") || !strcmp(filename,"\r"))
					continue;
				else if(*filename == ';')
					continue;
				if(strstr(filename,servername)) {
					count++;
					p_Req(filename+36);

					    sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",
						argv[3]?(atoi(argv[2])> -1?argv[2]:"0"):"0",
						argv[3]?(atoi(argv[3])> -1?argv[3]:"0"):"0",
						argv[4]?(atoi(argv[4])> -1?argv[4]:"0"):"0",
						argv[5]?(atoi(argv[5])> -1?argv[5]:"0"):"0",
						argv[6]?(atoi(argv[6])> -1?argv[6]:"0"):"0",
						argv[7]?(atoi(argv[7])> -1?argv[7]:"0"):"0",
						argv[8]?(atoi(argv[8])> -1?argv[8]:"0"):"0",
						argv[9]?(atoi(argv[9])> -1?argv[9]:"0"):"0",
						argv[10]?(atoi(argv[10])> -1?argv[10]:"0"):"0",
						argv[11]?(atoi(argv[11])> -1?argv[11]:"0"):"0",
						argv[12]?(atoi(argv[12])> -1?argv[12]:"0"):"0",
						argv[13]?(atoi(argv[13])> -1?argv[13]:"0"):"0",
						argv[14]?(atoi(argv[14])> -1?argv[14]:"0"):"0",
						argv[15]?(atoi(argv[15])> -1?argv[15]:"0"):"0",
						argv[16]?(atoi(argv[16])> -1?argv[16]:"0"):"0",
						argv[17]?(atoi(argv[17])> -1?argv[17]:"0"):"0",
						argv[18]?(atoi(argv[18])> -1?argv[18]:"0"):"0",
						argv[19]?(atoi(argv[19])> -1?argv[19]:"0"):"0",
						argv[20]?(atoi(argv[20])> -1?argv[20]:"0"):"0",
						argv[21]?(atoi(argv[21])> -1?argv[21]:"0"):"0",
						argv[22]?(atoi(argv[22])> -1?argv[22]:"0"):"0",
						argv[23]?(atoi(argv[23])> -1?argv[23]:"0"):"0",
						argv[24]?(atoi(argv[24])> -1?argv[24]:"0"):"0",
						argv[25]?(atoi(argv[25])> -1?argv[25]:"0"):"0",
						argv[26]?(atoi(argv[26])> -1?argv[26]:"0"):"0",
						argv[27]?(atoi(argv[27])> -1?argv[27]:"0"):"0",
						argv[28]?(atoi(argv[28])> -1?argv[28]:"0"):"0");
						if(!((count+1)%2)) {
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							sprintf(resPacket,"|RES");
						}
				}
				memset(filename,0,sizeof(filename));
			 }
			fclose(logFp);
		}
	}
	else {
    if(!s_shmP_6)
        get_s_shm_6(&s_shmP_6,0666);

	if(!s_shmP_6) {
                sprintf(resPacket,"|ERR|s_shmP_6 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");

printf("\nname_index:(%d)",name_index);

	if(name_index > 0) {
                for(i=0; i < 120;i++) {
		    sprintf(resPacket+strlen(resPacket),"|%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",
			s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].time,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_response,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_register,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_options,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_notify,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_invite,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_ack,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_prack,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_bye,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_refer,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_subscribe,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_message,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_update,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_info,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_cancel,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_publish,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_ping,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].db_test,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].db_test_,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_block,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_peer_i,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_unblock,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_res_1,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_res_2,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_res_3,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_res_4,
		    s_shmP_6[atoi(argv[2]+name_index)+j].packet[i].sip_res_5);
			if(!((i+1)%10)) {
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				sprintf(resPacket,"|RES");
			}
		}
	}
	}
	return 0;
}



/*********************************************************************************************************/
/*********************************************************************************************************/
int
proc_HS()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32],fromday[20],filename[256];
	FILE 	*logFp=NULL;

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

	memset(fromday,0,sizeof(fromday));
	memset(filename,0,sizeof(filename));

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}
    if(argv[3] && *argv[3] && atoi(argv[3]) > 0)
	strcpy(fromday,argv[3]);

	if(*fromday != '\0') {
		sprintf(filename,"/var/log/dbif/Cmd/%s/PHS",fromday);
		logFp = fopen(filename,"r");
		if(logFp) {
			memset(filename,0,sizeof(filename));
			sprintf(resPacket,"|RES");
			while((fgets(filename,sizeof(filename),logFp)) != NULL) {

				if(!strcmp(filename,"\n") || !strcmp(filename,"\r") || !strcmp(filename,"#"))
					continue;
				else if(*filename == ';')
					continue;
				if(strstr(filename,servername)) {
					count++;
					p_Req(filename+36);

					    sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",
						argv[3]?(atoi(argv[2])> -1?argv[2]:"0"):"0",
						argv[3]?(atoi(argv[3])> -1?argv[3]:"0"):"0",
						argv[4]?(atoi(argv[4])> -1?argv[4]:"0"):"0",
						argv[5]?(atoi(argv[5])> -1?argv[5]:"0"):"0",
						argv[6]?(atoi(argv[6])> -1?argv[6]:"0"):"0",
						argv[7]?(atoi(argv[7])> -1?argv[7]:"0"):"0",
						argv[8]?(atoi(argv[8])> -1?argv[8]:"0"):"0",
						argv[9]?(atoi(argv[9])> -1?argv[9]:"0"):"0",
						argv[10]?(atoi(argv[10])> -1?argv[10]:"0"):"0",
						argv[11]?(atoi(argv[11])> -1?argv[11]:"0"):"0",
						argv[12]?(atoi(argv[12])> -1?argv[12]:"0"):"0",
						argv[13]?(atoi(argv[13])> -1?argv[13]:"0"):"0",
						argv[14]?(atoi(argv[14])> -1?argv[14]:"0"):"0",
						argv[15]?(atoi(argv[15])> -1?argv[15]:"0"):"0",
						argv[16]?(atoi(argv[16])> -1?argv[16]:"0"):"0",
						argv[17]?(atoi(argv[17])> -1?argv[17]:"0"):"0",
						argv[18]?(atoi(argv[18])> -1?argv[18]:"0"):"0",
						argv[19]?(atoi(argv[19])> -1?argv[19]:"0"):"0",
						argv[20]?(atoi(argv[20])> -1?argv[20]:"0"):"0",
						argv[21]?(atoi(argv[21])> -1?argv[21]:"0"):"0",
						argv[22]?(atoi(argv[22])> -1?argv[22]:"0"):"0",
						argv[23]?(atoi(argv[23])> -1?argv[23]:"0"):"0",
						argv[24]?(atoi(argv[24])> -1?argv[24]:"0"):"0",
						argv[25]?(atoi(argv[25])> -1?argv[25]:"0"):"0",
						argv[26]?(atoi(argv[26])> -1?argv[26]:"0"):"0",
						argv[27]?(atoi(argv[27])> -1?argv[27]:"0"):"0",
						argv[28]?(atoi(argv[28])> -1?argv[28]:"0"):"0");
						if(!((count+1)%2)) {
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							sprintf(resPacket,"|RES");
						}
				}
				memset(filename,0,sizeof(filename));
			 }
			fclose(logFp);
		}
	}
	else {
printf("\n1111111111111111111111111111111111111111111111111111");
    if(!s_shmP_7)
        get_s_shm_7(&s_shmP_6,0666);

	if(!s_shmP_7) {
                sprintf(resPacket,"|ERR|s_shmP_7 access error");
                return -1;
	}

        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(servername && strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(servername && !strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(servername && !strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(servername && !strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(servername && !strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }

        sprintf(resPacket,"|RES");

	if(name_index>0) {
                for(i=0; i < 120;i++) {
		    sprintf(resPacket+strlen(resPacket),"|%s^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d^%d",
			s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].time,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_response,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_register,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_options,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_notify,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_invite,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_ack,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_prack,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_bye,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_refer,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_subscribe,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_message,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_update,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_info,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_cancel,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_publish,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_ping,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].db_test,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].db_test_,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_block,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_peer_i,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_unblock,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_res_1,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_res_2,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_res_3,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_res_4,
		    s_shmP_7[atoi(argv[2]+name_index)+j].packet[i].sip_res_5);
			if(!((i+1)%10)) {
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				sprintf(resPacket,"|RES");
			}
		}
	}
	}
	return 0;
}


//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
procLTQ()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32];

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else
                strcpy(servername,"");
    if(!s_shmP_22)
        get_s_shm_22(&s_shmP_22,0666);

	if(!s_shmP_22) {
                sprintf(resPacket,"|ERR|s_shmP_22 access error");
                return -1;
	}
	while(i < 360) {
			sprintf(resPacket,"|RES");
			memset(tmp,0,sizeof(tmp));
			if(strlen(servername) < 2) {
				if(strlen(s_shmP_22[i].name) > 2) {
					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_22[i].name, s_shmP_22[i].callcnt,s_shmP_22[i].peercnt,s_shmP_22[i].disk_usage,s_shmP_22[i].mem_used,s_shmP_22[i].cpu_used,s_shmP_22[i].m_cpu_used,s_shmP_22[i].average,s_shmP_22[i].uptime,s_shmP_22[i].apicnt,s_shmP_22[i].sess_count,s_shmP_22[i].hint_count,s_shmP_22[i].watcher_count);
					if(!((i+1)%10))
					{
						if((i+1) < 360)
						{
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							printf("\n[5m%s[0m",resPacket);
							sprintf(resPacket,"|RES");
						}
						else {
							return 0;
						}
					}
				}
			}
			else {
				if(strlen(s_shmP_22[i].name) > 2 && !strcasecmp(s_shmP_22[i].name,servername)) {
					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_22[i].name, s_shmP_22[i].callcnt,s_shmP_22[i].peercnt,s_shmP_22[i].disk_usage,s_shmP_22[i].mem_used,s_shmP_22[i].cpu_used,s_shmP_22[i].m_cpu_used,s_shmP_22[i].average,s_shmP_22[i].uptime,s_shmP_22[i].apicnt,s_shmP_22[i].sess_count,s_shmP_22[i].hint_count,s_shmP_22[i].watcher_count);
					printf("\nresPacket:(%s)",resPacket);
					return 0;
				}
			}
		i++;
	}

	return 0;
}

//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
procITQ()
{

  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0,j=0,name_index=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32],cur_t[32],command[256];
        time_t  tmm;
        struct  tm      *tp;
	FILE	*fp = NULL;

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else {
                sprintf(resPacket,"|ERR|argv[2]  error");
                return -1;
	}

    if(!s_shmP_22)
        get_s_shm_4(&s_shmP_22,0666);

	if(!s_shmP_22) {
                sprintf(resPacket,"|ERR|s_shmP_22 access error");
                return -1;
	}


        if(servername && !strncmp(servername,"PC-A",4)) {
                j=0;
                name_index = 4;
        }
        else if(!strncmp(servername,"PC-S",4)) {
                j= 200;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-A",4))  {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"UC-S",4)) {
                j = 300;
                name_index = 4;
        }
        else if(!strncmp(servername,"REC-A",5)) {
                j = 311;
                name_index = 5;
        }
        else if(!strncmp(servername,"REC-S",5)) {
                j = 330;
                name_index = 5;
        }
/***
                strcpy(local_shmP[i].callcnt,"500");
                strcpy(local_shmP[i].peercnt,"15000");
                strcpy(local_shmP[i].disk_usage,"85");
                strcpy(local_shmP[i].mem_used,"70");
                strcpy(local_shmP[i].cpu_used,"30");
                strcpy(local_shmP[i].m_cpu_used,"100");
                strcpy(local_shmP[i].average,"30");
                strcpy(local_shmP[i].uptime,"200");
                strcpy(local_shmP[i].apicnt,"3000");
                strcpy(local_shmP[i].sess_count,"10");
                strcpy(local_shmP[i].hint_count,"1000");
                strcpy(local_shmP[i].watcher_count,"1000");
*/


        
	if(name_index) {
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].callcnt,argv[3]?argv[3]:"500");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].peercnt,argv[4]?argv[4]:"15000");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].disk_usage,argv[5]?argv[5]:"85");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].mem_used,argv[6]?argv[6]:"70");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].cpu_used,argv[7]?argv[7]:"30");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].m_cpu_used,argv[8]?argv[8]:"100");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].average,argv[9]?argv[9]:"30");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].uptime,argv[10]?argv[10]:"200");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].apicnt,argv[11]?argv[11]:"3000");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].sess_count,argv[12]?argv[12]:"10");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].hint_count,argv[13]?argv[13]:"1000");
		strcpy(s_shmP_22[atoi(argv[2]+name_index)+j].watcher_count,argv[14]?argv[14]:"1000");
	}
	else {
                for(i=0; i < 500;i++) {
			strcpy(s_shmP_22[i].callcnt,argv[3]?argv[3]:"500");
			strcpy(s_shmP_22[i].peercnt,argv[4]?argv[4]:"15000");
			strcpy(s_shmP_22[i].disk_usage,argv[5]?argv[5]:"85");
			strcpy(s_shmP_22[i].mem_used,argv[6]?argv[6]:"70");
			strcpy(s_shmP_22[i].cpu_used,argv[7]?argv[7]:"30");
			strcpy(s_shmP_22[i].m_cpu_used,argv[8]?argv[8]:"100");
			strcpy(s_shmP_22[i].average,argv[9]?argv[9]:"30");
			strcpy(s_shmP_22[i].uptime,argv[10]?argv[10]:"200");
			strcpy(s_shmP_22[i].apicnt,argv[11]?argv[11]:"5000");
			strcpy(s_shmP_22[i].sess_count,argv[12]?argv[12]:"10");
			strcpy(s_shmP_22[i].hint_count,argv[13]?argv[13]:"1000");
			strcpy(s_shmP_22[i].watcher_count,argv[14]?argv[14]:"1000");
		}
	}
	sprintf(command, "/etc/asterisk/ctq_limit.conf");
	    if ((fp = fopen(command, "w")) == NULL) {
		sprintf(resPacket,"|RES|OK");
		return 0;       
	    }
	else {
                for(i=0; i < 500;i++) {
			if(strlen(s_shmP_22[i].name)  > 2) {
				fprintf(fp,"|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|\n",
			s_shmP_22[i].name,
			s_shmP_22[i].callcnt,
			s_shmP_22[i].peercnt,
			s_shmP_22[i].disk_usage,
			s_shmP_22[i].mem_used,
			s_shmP_22[i].cpu_used,
			s_shmP_22[i].m_cpu_used,
			s_shmP_22[i].average,
			s_shmP_22[i].uptime,
			s_shmP_22[i].apicnt,
			s_shmP_22[i].sess_count,
			s_shmP_22[i].hint_count,
			s_shmP_22[i].watcher_count);
		}
		}

		fclose(fp);
	}

	sprintf(resPacket,"|RES|OK");
	
	return 0;
}


//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
procCTR()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32],fromday[20],filename[256];
	FILE *logFp;

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to


	memset(fromday,0,sizeof(fromday));

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else
                strcpy(servername,"");

    if(argv[3] && *argv[3] && atoi(argv[3]) > 0)
	strcpy(fromday,argv[3]);


    if(!s_shmP_2)
        get_s_shm_2(&s_shmP_2,0666);

	if(!s_shmP_2) {
                sprintf(resPacket,"|ERR|s_shmP_2 access error");
                return -1;
	}
	if(*fromday != '\0') {
		sprintf(filename,"/var/log/dbif/Cmd/%s/CTQ/BHCA",fromday);
		printf("\nfilename:(%s)",filename);
		printf("\nfilename:(%s)",filename);
		printf("\nfilename:(%s)",filename);
		printf("\nfilename:(%s)",filename);
		logFp = fopen(filename,"r");
		if(logFp) {
			memset(filename,0,sizeof(filename));
			sprintf(resPacket,"|RES");
			while((fgets(filename,sizeof(filename),logFp)) != NULL) {

				if(!strcmp(filename,"\n") || !strcmp(filename,"\r"))
					continue;
				else if(*filename == ';' || *filename == '#')
					continue;
				while(filename[strlen(filename)-1] == '\r' || filename[strlen(filename)-1] == '\n')
					filename[strlen(filename)-1] = '\0';
				if(strlen(servername) < 2) {
					count++;
					p_Req(filename);
					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",argv[0],argv[1],argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12]?argv[12]:"",argv[13]?argv[13]:"",argv[14]?argv[14]:"",argv[15]?argv[15]:"");

					if(!((i+1)%10))
					{
						if((i+1) < 360)
						{
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							printf("\n[5m%s[0m",resPacket);
							sprintf(resPacket,"|RES");
						}
						else {
							return 0;
						}
					}
				}
				else if(strstr(filename,servername)) {
					p_Req(filename);
					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",argv[0],argv[1],argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11]?argv[11]:"",argv[12]?argv[12]:"",argv[13]?argv[13]:"",argv[14]?argv[14]:"",argv[15]?argv[15]:"");
					break;
				}
			i++;	
			}
			fclose(logFp);
		}

	}
	else {
		while(i < 360) {
			sprintf(resPacket,"|RES");
			memset(tmp,0,sizeof(tmp));
			if(strlen(servername) < 2) {
				if(strlen(s_shmP_2[i].name) > 2) {
					tmpP = strtok(s_shmP_2[i].info,"!");
					tmpP1 = strtok(NULL,"!");
					tmm_fmt(YYMMDD_SLASH_HHMMSS_COLON, s_shmP_2[i].lasttime,tmp);
					if(tmpP1 && strlen(tmpP1) > 2 && isdigit(*tmpP1) && (time(0)-atoi(tmpP1))  > 3600*24)
						sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%.2f^%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_2[i].name, tmp,s_shmP_2[i].callcnt,s_shmP_2[i].peercnt,s_shmP_2[i].disk_usage,s_shmP_2[i].disk_info,atof(s_shmP_2[i].mem_used),s_shmP_2[i].cpu_used,s_shmP_2[i].m_cpu_used,s_shmP_2[i].average,s_shmP_2[i].uptime,s_shmP_2[i].apicnt,s_shmP_2[i].sess_count,s_shmP_2[i].hint_count,s_shmP_2[i].watcher_count,tmpP);
					else
						sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%.2f^%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_2[i].name, tmp,s_shmP_2[i].callcnt,s_shmP_2[i].peercnt,s_shmP_2[i].disk_usage,s_shmP_2[i].disk_info,atof(s_shmP_2[i].mem_used),s_shmP_2[i].cpu_used,s_shmP_2[i].m_cpu_used,s_shmP_2[i].average,s_shmP_2[i].uptime,s_shmP_2[i].apicnt,s_shmP_2[i].sess_count,s_shmP_2[i].hint_count,s_shmP_2[i].watcher_count,tmpP);


					if(!((i+1)%10))
					{
						if((i+1) < 360)
						{
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							printf("\n[5m%s[0m",resPacket);
							sprintf(resPacket,"|RES");
						}
						else {
							return 0;
						}
					}
				}
			}
			else {
				if(strlen(s_shmP_2[i].name) > 2 && !strcasecmp(s_shmP_2[i].name,servername)) {
					tmpP = strtok(s_shmP_2[i].info,"!");
					tmpP1 = strtok(NULL,"!");
					tmm_fmt(YYMMDD_SLASH_HHMMSS_COLON, s_shmP_2[i].lasttime,tmp);
					if(tmpP1 && strlen(tmpP1) > 2 && isdigit(*tmpP1) && (time(0)-atoi(tmpP1)) > 3600*24)
						sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%.2f|%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_2[i].name, tmp,s_shmP_2[i].callcnt,s_shmP_2[i].peercnt,s_shmP_2[i].disk_usage,s_shmP_2[i].disk_info,atof(s_shmP_2[i].mem_used),s_shmP_2[i].cpu_used,s_shmP_2[i].m_cpu_used,s_shmP_2[i].average,s_shmP_2[i].uptime,s_shmP_2[i].apicnt,s_shmP_2[i].sess_count,s_shmP_2[i].hint_count,s_shmP_2[i].watcher_count,tmpP);
					else
						sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%.2f^%s^%s^%s^%s^%s^%s^%s^%s^%s",s_shmP_2[i].name, tmp,s_shmP_2[i].callcnt,s_shmP_2[i].peercnt,s_shmP_2[i].disk_usage,s_shmP_2[i].disk_info,atof(s_shmP_2[i].mem_used),s_shmP_2[i].cpu_used,s_shmP_2[i].m_cpu_used,s_shmP_2[i].average,s_shmP_2[i].uptime,s_shmP_2[i].apicnt,s_shmP_2[i].sess_count,s_shmP_2[i].hint_count,s_shmP_2[i].watcher_count,tmpP);
					printf("\nresPacket:(%s)",resPacket);
					return 0;
				}
			}
		i++;
	}
	}

	return 0;
}


//NEWNEW
/*********************************************************************************************/
/*********************************************************************************************/
int
procBLK()
{
  int   qid,returncode,fields_num,cpid, fd=0, sockfd=-1, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char  *tmpP = NULL, *tmpP1 = NULL;
        char    tmp[64];
	char	servername[32];

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);
        else
                strcpy(servername,"");

    if(!s_shmP_3)
        get_s_shm_3(&s_shmP_3,0666);

	if(!s_shmP_3) {
                sprintf(resPacket,"|ERR|s_shmP_3 access error");
                return -1;
	}

	while(i < 360) {
			sprintf(resPacket,"|RES");
			memset(tmp,0,sizeof(tmp));
			if(strlen(servername) < 2) {
				if(strlen(s_shmP_3[i].name) > 2) {
					tmm_fmt(YYMMDD_SLASH_HHMMSS_COLON, s_shmP_3[i].lasttime,tmp);
					sprintf(resPacket+strlen(resPacket),"|%s|%s|%s|%s|%s|%s|%s|%s|",s_shmP_3[i].name, s_shmP_3[i].hostip,tmp,s_shmP_3[i].flag_5038,s_shmP_3[i].flag_5061,s_shmP_3[i].flag_callif,s_shmP_3[i].flag_mysql,s_shmP_3[i].flag_api);

					if(!((i+1)%20))
					{
						if((i+1) < 360)
						{
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							printf("\n[5m%s[0m",resPacket);
							sprintf(resPacket,"|RES");
						}
						else {
							return 0;
						}
					}
				}
			}
			else {
				if(strlen(s_shmP_3[i].name) > 2 && !strcasecmp(s_shmP_3[i].name,servername)) {
					tmm_fmt(YYMMDD_SLASH_HHMMSS_COLON, s_shmP_3[i].lasttime,tmp);
					sprintf(resPacket+strlen(resPacket),"|%s|%s|%s|%s|%s|%s|%s|",s_shmP_3[i].name, tmp,s_shmP_3[i].flag_5038,s_shmP_3[i].flag_5061,s_shmP_3[i].flag_callif,s_shmP_3[i].flag_mysql,s_shmP_3[i].flag_api);
					printf("\nresPacket:(%s)",resPacket);
					return 0;
				}
			}
		i++;
	}

	return 0;
}


/*************************************************************************
* command/sql run
*************************************************************************/
int
procCMD()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int  tmpNumber;
	char	servername[32],real_ip[20];


        memset(email,0,sizeof(email));
        memset(today,0,sizeof(today));
        memset(servername,0,sizeof(servername));
        memset(real_ip,0,sizeof(real_ip));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);
    if(argv[2] && *argv[2])
                snprintf(servername,sizeof(servername),"%s",argv[2]);

    if(argv[3] && *argv[3]) {
		snprintf(real_ip,sizeof(real_ip),"%s",argv[3]);
	}
	if(strlen(servername) < 2 || strlen(real_ip) < 2 || !argv[4]) {

                sprintf(resPacket,"|ERR|CMD is invalid..hostname:(%s),real_ip:(%s), command:(%s)",servername,real_ip,argv[4]?argv[4]:"----");
                return -1;
	}

    	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(commandBuf,"|CMD|%s@%s|%s|%s|%s|",user,domain,servername,real_ip,argv[4]?argv[4]:"no_command");
		if(ret = commandSend(commandBuf,real_ip,"")) {
			if(ret = commandSend(commandBuf,real_ip,"")) {
				sprintf(resPacket, "|ERR|command execute fail(%s,%s,%s)",servername,real_ip,argv[4]?argv[4]:"no_command");
				return 0;
			}
		}
	}
	sprintf(resPacket, "|RES|command execute succ(%s,%s,%s)",servername,real_ip,argv[4]?argv[4]:"no_command");
        return 0 ;
}



//NEWNEW
/*********************************************************************************************/
/*
10:24:31-10:24:31 [0000000128|ASM|admin@lguplus.co.kr|01074474764|[386820] °i±ÞCu¼¾Æ®¸?½º A￥ LB380110ºn¹Ð¹øE￡ º?°æ¿e  AIAo ¹øE￡´A [386820]AO´I´U.|
/*********************************************************************************************/
int
procASM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20],ip[20];
	char msg[256];

  char callback_url[256],port[10],number[20];
  char kind[10],from[15], to[15];
	char	tmp070[20],tmporg[20];
	int sd  = -1,len;
	int tryCnt = 0;
        struct sockaddr_in saddr;


        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(number,0,sizeof(number));
        memset(kind,0,sizeof(kind));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
        memset(ip,0,sizeof(ip));
        memset(msg,0,sizeof(msg));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
        else
                strcpy(number,"");

    if(argv[3] && *argv[3])
                strcpy(msg,argv[3]);
        else
                return(errorReturn("msg is not set",__FILE__,__LINE__));

/****
        sprintf(_tmpbuf, "dacomhosting|%s|0313615620|%s|\n",number,msg);


        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_port = htons(3341);
        saddr.sin_addr.s_addr = inet_addr("127.0.0.1");

        memset(resPacket,0,sizeof(resPacket));
        sprintf(_tmpbuf,"|ccc|%s|%s|",number,msg);

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR)
                return -1;

        len = sendto(sd,_tmpbuf, strlen(_tmpbuf), 0,(struct sockaddr *)&saddr,\
        (socklen_t) sizeof(saddr));


	return 0;
printf("\n[1;41m(%s)[0m",_tmpbuf);
*/

	sprintf(_tmpbuf, "dacomhosting|%s|0313615620|%s|\n",number,msg);

        while(sd < 0 && tryCnt++ < 3) {
                sd = tcpConnect("164.124.107.28", 3821);
                if(sd < 0)
                        sleep(1);
                printf("\nsd:(%d),tryCnt:(%d)",sd,tryCnt);
        }       
        
        if(sd > -1) {
                if((ret = _tcpWrite(sd, _tmpbuf,strlen(_tmpbuf))) == 0) {
                        printf("\nWrite data : (%s)",_tmpbuf);
                        memset(_tmpbuf,0,sizeof(_tmpbuf));
			tryCnt = 0;
                        while((ret= _tcpRead(sd, _tmpbuf,3)) < 0 && tryCnt ++ < 3);
                        if(ret < 0 ) {
                                close(sd);
                                printf("\nread err occured!!!(%s)",ip);
                        }
			else
				strcpy(resPacket,_tmpbuf);
                        printf("\nCommand Result : [5m%s, %s[0m",_tmpbuf,"164.124.107.28");
                        close(sd);
                }
                close(sd);
        }
        else {
                printf("\nconnect err occured!!!(%s)","164.124.107.28");
        }

	return 0;
}



/**************************************************************************************************/
/***********************************************
2015 06 18 CallbackURL 설정
***************************************************/
int
procICA()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20],ip[20];

  char callback_url[256],port[10],number[20];
  char kind[10],from[15], to[15];
	char	tmp070[20],tmporg[20];


        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(number,0,sizeof(number));
        memset(kind,0,sizeof(kind));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
        memset(ip,0,sizeof(ip));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
        else
                strcpy(number,"");

    if(argv[3] && *argv[3])
                strcpy(ip,argv[3]);
        else
                return(errorReturn("IP is not set",__FILE__,__LINE__));

    if(argv[4] && *argv[4])
                strcpy(callback_url,argv[4]);
        else
                return(errorReturn("Callback URL is not set",__FILE__,__LINE__));

    if(argv[5] && *argv[5])
                strcpy(port,argv[5]);
        else
                strcpy(port,"80");

    if(argv[6] && *argv[6])
                strcpy(kind,argv[6]);
        else
                strcpy(kind,"0"); // 1:tel, 2: msg

    if(argv[7] && *argv[7])
                strcpy(from,argv[7]);
	else
	    tmm_currDate(YYYYMMDDHHMMSS,from);

    if(argv[8] && *argv[8])
                strcpy(to,argv[8]);
	else
                strcpy(to,"299912122400");

    tmm_currDate(YYYYMMDDHHMMSS,today);

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
			
			sprintf(sqlcmd, "select 070number,org_num from number_manage where 070number = '%s' or org_num = '%s'",number,number);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}
			else {
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(tmp070, row[0]?row[0]:"");
						ps_delSpace(tmp070);
						strcpy(tmporg, row[1]?row[1]:"");
						ps_delSpace(tmporg);
					}
				}
				mysql_free_result(result);
				result = NULL;
				
				//if(strlen(tmporg) > 3)
				//	strcpy(number, tmporg);
				if(strlen(tmp070) > 3)
					snprintf(number,sizeof(number),"%s",tmp070);
			}
	}//PVS
	sprintf(sqlcmd, "update callback_url set regdate='%s',ip='%s',callback_url='%s',port='%s',startday='%s',endday='%s' where domain='%s' and number='%s' and kind='%s'",today,ip,callback_url,port,from,to,domain,number,kind);
	mysql_query(mysql, sqlcmd);
	test=mysql_affected_rows(mysql);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
	if( test < 1) {

		sprintf(sqlcmd, "insert into callback_url(regdate,domain,number,ip,callback_url,port,kind,startday,endday) values ('%s','%s','%s','%s','%s','%s','%s','%s','%s')",today,domain,number,ip,callback_url,port,kind,from,to);
		mysql_query(mysql, sqlcmd);
printf("\nccccccccccccccccc (%s)=%d\n",sqlcmd,test);
printf("\nccccccccccccccccc (%s)=%d\n",sqlcmd,test);
	}

/**************
	if(strlen(number) < 4)
		sprintf(sqlcmd, "update number_manage set callback_flag = 'Y' where domain = '%s'",domain);
	else
		sprintf(sqlcmd, "update number_manage set callback_flag = 'Y' where 070number = '%s' or org_num = '%s'",number,number);
**************/
	if(!strcmp(kind,"1")){
		sprintf(sqlcmd, "update number_manage set ringcallback_flag = 'Y' where 070number = '%s' or org_num = '%s'",number,number);
	}else{
		sprintf(sqlcmd, "update number_manage set smscallback_flag = 'Y' where 070number = '%s' or org_num = '%s'",number,number);
	}

	mysql_query(mysql, sqlcmd);

	sprintf(commandBuf,"|ICA|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,number,ip,callback_url,port,kind,from,to);


    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);
			}
		}

		sprintf(commandBuf,"|ICA|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,number,ip,callback_url,port,kind,from,to);
		sprintf(resPacket,"|RES|%d%s",test,commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);

			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) )  {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%d%s|",test,commandBuf);
}


/**************************************************************************************************/
/***********************************************
2015 06 18 CallbackURL 삭제
***************************************************/
int
procDCA()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20];

  char callback_url[256],port[10],number[20];
  char kind[10],from[15], to[15];
	char	tmp070[20],tmporg[20];

        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(number,0,sizeof(number));
        memset(kind,0,sizeof(kind));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
        else
                strcpy(number,"");

    if(argv[3] && *argv[3])
                strcpy(kind,argv[3]);
        else
                strcpy(kind,"0"); // 1:tel, 2: msg


    tmm_currDate(YYYYMMDDHHMMSS,today);

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

			sprintf(sqlcmd, "select 070number,org_num from number_manage where 070number = '%s' or org_num = '%s'",number,number);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);	
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}
			else {
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(tmp070, row[0]?row[0]:"");
						ps_delSpace(tmp070);
						strcpy(tmporg, row[1]?row[1]:"");
					ps_delSpace(tmporg);
					}
				}
				mysql_free_result(result);
				result = NULL;
			
				//if(strlen(tmporg) > 3)
			//		strcpy(number, tmporg);
				if(strlen(tmp070) > 3)
					snprintf(number,sizeof(number),"%s",tmp070);
			}
/*
	if(strlen(number) < 4) {
		sprintf(sqlcmd, "delete from callback_url where domain = '%s'",domain);
		mysql_query(mysql, sqlcmd);
		sprintf(sqlcmd, "update number_manage set callback_flag = 'N' where domain = '%s'",domain);
		mysql_query(mysql, sqlcmd);
	}
	else {
		sprintf(sqlcmd, "delete from callback_url where number = '%s'",number);
		mysql_query(mysql, sqlcmd);
		sprintf(sqlcmd, "update number_manage set callback_flag = 'N' where number = '%s' or org_num = '%s'",number,number);
		mysql_query(mysql, sqlcmd);
	}
*/
	} //PVS
	sprintf(sqlcmd, "delete from callback_url where domain = '%s' and number = '%s' and kind='%s'",domain,number,kind);
	 mysql_query(mysql, sqlcmd);
	test=mysql_affected_rows(mysql);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
printf("\nbbbbbbbbbbbbbbbbbbbbb (%s)=%d\n",sqlcmd,test);
	/*
	if( test > 0) {
		if(!strcmp(kind,"1")){
			sprintf(sqlcmd, "update number_manage set ringcallback_flag = 'N' where 070number = '%s' or org_num = '%s'",number,number);
		}else{
			sprintf(sqlcmd, "update number_manage set smscallback_flag = 'N' where 070number = '%s' or org_num = '%s'",number,number);
		}
	 	mysql_query(mysql, sqlcmd);
printf("\nBMH========== (%s)=%d\n",sqlcmd,test);
printf("\nBMH========== (%s)=%d\n",sqlcmd,test);
	}else{
			sprintf(resPacket, "|ERR|Data not found.:(%s)",number);
			logCmd();
			return(-1);


	}

***********/
		if(!strcmp(kind,"1")){
			sprintf(sqlcmd, "update number_manage set ringcallback_flag = 'N' where 070number = '%s' or org_num = '%s'",number,number);
		}else{
			sprintf(sqlcmd, "update number_manage set smscallback_flag = 'N' where 070number = '%s' or org_num = '%s'",number,number);
		}
	 	mysql_query(mysql, sqlcmd);

	sprintf(commandBuf,"|DCA|%s@%s|%s|%s|",user,domain,number,kind);

    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);
			}
		}

		sprintf(commandBuf,"|DCA|%s@%s|%s|%s|",user,domain,number,kind);
		sprintf(resPacket,"|RES|%d%s",test,commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) )  {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%d%s|",test,commandBuf);
}



/**************************************************************************************************/
/***********************************************
2015 06 18 CallbackURL 조회
***************************************************/
int
procRCA()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],regdate[20];
  char    phoneid[11],confnm[64],peer[64],callerid[20];

  char callback_url[256],port[10],number[20];
  char kind[10],from[15], to[15],ip[20];
        char    tmp070[20],tmporg[20];

        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(number,0,sizeof(number));
        memset(kind,0,sizeof(kind));

        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(ip,0,sizeof(ip));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);


    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
        else
                strcpy(number,"");

    if(argv[3] && *argv[3])
                strcpy(kind,argv[3]);
        else
                strcpy(kind,"0"); // 1:tel, 2: msg

	if(strlen(number) > 3) {
		sprintf(sqlcmd, "select 070number,org_num from number_manage where 070number = '%s' or org_num = '%s'",number,number);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
		}
		else {
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(tmp070, row[0]?row[0]:"");
					ps_delSpace(tmp070);
					strcpy(tmporg, row[1]?row[1]:"");
					ps_delSpace(tmporg);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
		
		//if(strlen(tmporg) > 3)
		//	strcpy(number, tmporg);
		if(strlen(tmp070) > 3)
			snprintf(number,sizeof(number),"%s",tmp070);
	}


        if(strlen(number) < 5)
                sprintf(sqlcmd, "select regdate,number,ip,callback_url,port,kind,startday,endday from callback_url where domain = '%s'",domain);
        else
                sprintf(sqlcmd, "select regdate,number,ip,callback_url,port,kind,startday,endday from callback_url where number = '%s' and kind='%s'",number,kind);
printf("\nBMH--------- (%s)\n",sqlcmd);
printf("\nBMH--------- (%s)\n",sqlcmd);
        {
                mysql_query(mysql, sqlcmd);

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                }
                else {
                        row_num = mysql_num_rows(result);
                        if( row_num == 0 ) {
                                mysql_free_result(result);
                                result = NULL;
				sprintf(resPacket, "|RES|NO_DATA");
                        }
                        else {
                                strcpy(resPacket,"|RES");
                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result );
                                        if( row) {
                                                if(row[0]) ps_delSpace(row[0]);
                                                if(row[1]) ps_delSpace(row[1]);
                                                if(row[2]) ps_delSpace(row[2]);
                                                if(row[3]) ps_delSpace(row[3]);
                                                if(row[4]) ps_delSpace(row[4]);
                                                if(row[5]) ps_delSpace(row[5]);
                                                if(row[6]) ps_delSpace(row[6]);
                                                if(row[7]) ps_delSpace(row[7]);
                                                sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s",row[0],row[1],row[2],row[3],row[4],row[5],row[6],row[7]);
                                                if(!((i+1)%20)) {
                                                        if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								printf("\n[5m%s[0m");
                                                                        sprintf(resPacket,"|RES");
                                                        }
                                                        else {
								mysql_free_result(result);
								result = NULL;
								return 0;
                                                        }
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL;
                        }
                }
        }
        return 0;
}

/*********************
*       udpSend  *
*********************/
int
sendResponse(id,ip)
char	*id;
char 	*ip;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd;
        struct sockaddr_in saddr;


printf("\n====================================================================");

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_port = htons(5072);
        saddr.sin_addr.s_addr = inet_addr(ip);

	memset(resPacket,0,sizeof(resPacket));
        sprintf(reqPacket,"1|%s",id);
	
        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR)
                return -1;

        len = sendto(sd,reqPacket, strlen(reqPacket), 0,(struct sockaddr *)&saddr,\
        (socklen_t) sizeof(saddr));

        printf("\n[7mlen : (%d)[0m", len);
        //udpRead(masterFd, reqPacket);
	udpRead(sd, resPacket);

	close(sd);

	return 1;
}


/**************************************************************************************************/
/**************************************************************************************************/
int
procMON()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20],defaultip[20];

  char callback_url[256],port[10],number[20];
  char kind[10],from[15], to[15];
	char	tmp070[20],tmporg[20];

        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(number,0,sizeof(number));
        memset(kind,0,sizeof(kind));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
        memset(defaultip,0,sizeof(defaultip));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
        else
                strcpy(number,"");


	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
			
		sprintf(sqlcmd, "select phoneid,defaultip from number_manage where 070number = '%s' or org_num = '%s'",number,number);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			sprintf(resPacket, "|ERR|Data not found.:(%s)",number);
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return -1;
		}
		else {
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(phoneid, row[0]?row[0]:"");
					ps_delSpace(phoneid);
					strcpy(defaultip, row[1]?row[1]:"");
					ps_delSpace(defaultip);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	sendResponse(phoneid,defaultip);

	if(*resPacket == '1')
		sprintf(resPacket,"|RES|1|%s|",number);
	else
		sprintf(resPacket,"|RES|0|%s|",number);

	return 0;
}



/**************************************************************************************************/
/**************************************************************************************************/
int procNewIBO(i_code) 
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;
char    new_sec_flag[5];
char    old_sec_flag[5];

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(record,0,sizeof(record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
        memset(new_sec_flag,0,sizeof(new_sec_flag));
        memset(old_sec_flag,0,sizeof(old_sec_flag));
	memset(ipcc_record,0,sizeof(ipcc_record));
	memset(ipcc_application,0,sizeof(ipcc_application));
	memset(ipcc_ivr,0,sizeof(ipcc_ivr));
	memset(moh_bill,0,sizeof(moh_bill));
	memset(console_bill,0,sizeof(console_bill));
	memset(autorec_bill,0,sizeof(autorec_bill));
	memset(blf_on,0,sizeof(blf_on));
	memset(serverip,0,sizeof(serverip));
	memset(tmpip,0,sizeof(tmpip));

//	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

//	if(*recvPacket[_timestamp].value)
//		strcpy(timestamp,recvPacket[_timestamp].value);
//	else
//		strcpy(timestamp,"");

//	if(*recvPacket[_action].value)
//		strcpy(action,recvPacket[_action].value);
//	else
//		strcpy(action,"등록");
//	strcpy(gAction,action);

//	if(*recvPacket[_status].value) {
//		strcpy(status,recvPacket[_status].value);
//		strcpy(req_status,status);
//	}
//	else
//		strcpy(status,"개통");

//	if(*recvPacket[_type].value)
//		strcpy(type,recvPacket[_type].value);
//	else
//		strcpy(type,"장비등록");

//	if(*recvPacket[_flag].value)
//		strcpy(flag,recvPacket[_type].value);
//	else
//		strcpy(flag,"");

//	if(*recvPacket[_effectdate].value)
//		strcpy(effectdate,recvPacket[_effectdate].value);
//	else
//		strcpy(effectdate,"");

////////////////////
//_new_dn,
//_old_dn,
//_new_mac_address,
//_old_mac_address,
//_new_carry_no,
//_old_carry_no,
//_new_fq_dn,
//_old_fq_dn,
//_new_port_flag,
//_old_port_flag,
//_subs_no,
//_line_no,
//_prod_cd,
//_service_type,
//_cpe_type,
//_protocol,
//_area_code,
//_auto_area,
////////////////////


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
//	if(*recvPacket[_new_set_dn].value)
//		strcpy(setdn,recvPacket[_new_set_dn].value);
//	else
//		strcpy(setdn,dn);

//	if(*recvPacket[_old_dn].value)
//		strcpy(old_dn,recvPacket[_old_dn].value);
//	else
//		strcpy(old_dn,"");

	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");
	strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");


	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");



	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

//	if(*recvPacket[_sippwd].value)
//		strcpy(sippwd,recvPacket[_sippwd].value);
//	else
//		strcpy(sippwd,"1111");

	//new_sec_flag not use 

	//old_sec_flag not use 

	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_old_sip_pwd].value)
		strcpy(oldsippwd,recvPacket[_old_sip_pwd].value);
	else
		strcpy(oldsippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);


//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mareacode:(%s)[0m[0m",auto_area);

        //new_sec_flag 
        if(*recvPacket[_new_sec_flag].value)
                strcpy(new_sec_flag,recvPacket[_new_sec_flag].value);
        else
                strcpy(new_sec_flag,"");
        
        //old_sec_flag 
        if(*recvPacket[_old_sec_flag].value)
                strcpy(old_sec_flag,recvPacket[_old_sec_flag].value);
        else    
                strcpy(old_sec_flag,"");


	// BC_LIST not use 

	// VA_LIST START 
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	strcpy(ipcc_record,"N");
	strcpy(ipcc_application,"N");
	strcpy(ipcc_ivr,"0");
	strcpy(moh_bill,"N");
	strcpy(console_bill,"N");
	strcpy(autorec_bill,"Y");
	strcpy(blf_on,"N");

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
//NEWNEW
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);

				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}

				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
				/* 키폰 유료화*/
				else if(!strncmp(tmpP,"8892",4)) {
					strcpy(blf_on,"Y");
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
printf("\n[5mipcc_record:(%s)[0m",ipcc_record);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	// VA_LIST END 

	// DOMAIN 
	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				sprintf(resPacket, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

//	printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);
printf("\n[5mdn:(%s)[0m",dn);

printf("\n[5mport_flag:(%s)[0m",port_flag);

	// Number Portability 
	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) 
	{
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT(dn)->자사(carry_no)
	if((i_code == _E_DN_C_NP2 || i_code == _E_SV_U_NP2 ) && *port_flag == '2' && strlen(carry_no) > 8) 
	{
printf("\n ================= _E_DN_C_NP2 || _E_SV_U_NP2..........\n");
printf("\n ================= 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') 
	{
printf("\n ================= strange.....타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

//|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
//:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
	//자사(dn)->KT,하나로(carryno) 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) 
	{
printf("\n================= 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


//			strcpy(setdn,old_carry_no);
//			strcpy(outer_num,old_carry_no);
//			strcpy(display,old_dn);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			printf("\nprocICH=========\n");
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s),(%d)",outer_num,carry_no,__LINE__);
				sprintf(resPacket,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) 
	{
printf("\n ================= 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			printf("\nprocICH=========\n");
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				sprintf(resPacket,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}

	//KT->자사(carryno)->하나로(dn) ==> 해지
	//if(*port_flag == '5' || *port_flag == '6') 
	if(*port_flag == '5') 
	{
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	//E_DN_C_NP6 (dn == carry_no) 부활 
	if(*port_flag == '6') 
	{
printf("\n ================= port_flag 6  부활 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";

	}


	printf("\ndisplay:(%s), cid:(%s)",display,setcid);


	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n=======================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n=======================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
//timestamp, action, status, type, flag, effectdate, subsno, pr
//odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
//n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
// cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
//flag
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);

// cid & inner_num 
    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);
	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
		strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	    tmm_currDate(YYYYMMDDHHMMSS,today);
	    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	// number_manage_exist 
		row_num= 0;
		sprintf(sqlcmd, "select phoneid,domain from number_manage \
		where  070number = '%s'",outer_num);

	printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		sprintf(resPacket,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			sprintf(resPacket,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	// number_list 
	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		sprintf(resPacket,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		sprintf(resPacket,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   
			
	// CASE STATUS 1 - A_7092_C_N NEW/UPDATE/DELETE
	row_num = mysql_num_rows(result);
	if(row_num == 0) {
		mysql_free_result(result);

		sprintf(sqlcmd, "select serverip,etc from number_list where domain = '%s' and status='1' limit 1",domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		else {
			result = mysql_store_result( mysql );
			if(result) {
				row_num = mysql_num_rows(result);
				if(row_num) {
					row = mysql_fetch_row(result);
					sprintf(sqlcmd, "insert into number_list(number,forbid_prefix,serverip,type,lastdate,etc,org_num,areacode,svc_kind, status) values('%s','060','%s','1',SYSDATE(),'%s','','','PC','4')",outer_num,row[0]?row[0]:"",row[1]?row[1]:"");
				}
			}
			mysql_free_result(result);
			result = NULL;

			mysql_query(mysql, sqlcmd);
		}
//		printf("\nsqlcmd:(%s)\n",sqlcmd);

		sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
		where  number = '%s'",outer_num);

		printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
			sprintf(resPacket,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
			logCmd();
			return -1;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
			sprintf(resPacket,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
			return(-1);
		}   
				
		// CASE STATUS 1 - A_7092_C_N NEW/UPDATE/DELETE
		row_num = mysql_num_rows(result);

	}

	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);


			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");


			if(row[3] && *row[3] == '1'  &&  number_manage_exist == 0) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
			}


printf("\n[5m[7m chg_flag(%s) domain(%s) status(%s)-reqDomain(%s)[0m[0m",row[1],row[2],row[3],domain);

				if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
				}
				else if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && !strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
printf("\n ================= status  1 and  domain 동일 (UPDATE)  START \n");
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,record from number_manage where 070number = '%s'",outer_num);
				printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					sprintf(resPacket,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					logCmd();
					goto BEGIN;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							sprintf(resPacket,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							goto BEGIN;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								goto BEGIN;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
//phoneid,cid,letter_flag,record_flag,crm_flag
//	strcpy(letter_flag,"N");
//	strcpy(record_flag,"A");
//	strcpy(crm_flag,"");
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(record, row[10]?row[11]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//DCS_PHONE_AUTH ?
						{
							if(!authmysql && u_cube_flag)
								authinit(AUTH_SERVER);

							sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
							if( ret = mysql_query(authmysql, sqlcmd) ) {
								goto BEGIN;
							}   
							else  {
								result = mysql_store_result(authmysql);
								if(!result ) {
									goto BEGIN;
								} 
								else {
									row_num = mysql_num_rows(result);
									if( row_num == 0 )
										goto BEGIN;
									mysql_free_result(result);
									result = NULL;
								}
							}
						}

						//UPDATE VA_LIST
						// BMLINK 20171030 MODIFY START
						//if(strcmp(tmprid1,oldcid) && strlen(tmprid1) > 5) {
						if(strcmp(tmprid1,oldcid)) {
						printf("\n ================= cid & letter_flag & record_flag & crm_flag & option5  UPDATE \n");
						printf("\n =================procNewIBO check_cidlist start \n");
							int checked_cidresult=0;
							if(PVS == 1){
								checked_cidresult = check_cidlist(tmprid1,domain,prefix,outer_num,serverip, NULL,oldorg_num, NULL );
								printf( "\nchecked_cidresult=======>(%d)", checked_cidresult );
							}

							if( strlen(tmprid1) > 5 /*&& checked_cidresult == 0*/ ){
								printf("\n ================= CID_LIST DELETE \n");
								sprintf(sqlcmd," DELETE FROM cid_list WHERE cid = '%s' AND domain = '%s' AND user = '%s'",tmprid1,domain,outer_num);
								printf("\nsqlcmd:(%s)",sqlcmd);
								if( mysql_query(mysql, sqlcmd) ) {
                                                                    if(mysql)
                                                                        mysql_close(mysql);
                                                                    
								    sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
								    sprintf(resPacket,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                    logCmd();
								}
								printf("\n ================= CID_LIST INSERT \n");
								sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
								'%s','%s','%3.3s','%s')",tmprid1,domain,oldphoneid+1,outer_num);
							//'%s','%s','%3.3s','system')",tmprid1,domain,oldphoneid+1);
								printf("\nsqlcmd:(%s)",sqlcmd);
								if( mysql_query(mysql, sqlcmd) ) {
                                                                    if(mysql)
                                                                        mysql_close(mysql);
                                                                    
								    sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
								    sprintf(resPacket,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                    logCmd();
								}
							}
							printf("\n =================check_cidlist end \n");
							// BMLINK 20171030 MODIFY END 
                                                        
                                                        // 20171123 안광택 부장님 요청 수정
							//sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,outer_num);
                                                        sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' where 070number='%s'",( ( setcid && strlen(setcid) > 5 ) ? setcid : tmprid1 ),letter_flag,record_flag,crm_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
								sprintf(resPacket,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
						}
						else {
						printf("\n ================= letter_flag & record_flag & crm_flag & option5  UPDATE \n");
							sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"number_manage Select error!(%s)",outer_num);
								sprintf(resPacket,"number_manage Select error!(%s)",outer_num);
							}

						}
						
						//UPDATE DCS_PHONE_AUTH
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',sn='%s',sipetc3='N' \
						where setdn = '%s'",macaddr,sn,outer_num);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if(!authmysql)
							authinit(AUTH_SERVER);

						if( mysql_query(authmysql, sqlcmd) ) {
							sprintf(errorCause,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
							sprintf(resPacket,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
							logCmd();
						}

						//UPDATE UC MESSENGER & LOCAL
						if(PVS == 1 && MASTER == 1) 
						{
							printf("\n ================= UPDATE UC MESSENGER & LOCAL START \n");
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							//NEW
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
							printf("\n ================= UPDATE UC MESSENGER & LOCAL NEW \n");
							//if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1")) {}
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							//if(strcmp(oldpasswd,"1111")) {}
							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}
	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							//UPDATE
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
							printf("\n ================= UPDATE UC MESSENGER & LOCAL UPDATE \n");
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							//RESTORE
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
							printf("\n ================= UPDATE UC MESSENGER & LOCAL RESTORE \n");
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							//DELETE
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
							printf("\n ================= UPDATE UC MESSENGER & LOCAL DELETE \n");
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(errorCause,"sync_info Insert error!(%s)",commandBuf);
									sprintf(resPacket,"sync_info Insert error!(%s)",commandBuf);
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(errorCause,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										sprintf(resPacket,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										return -1;
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(errorCause,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										sprintf(resPacket,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										printf("\nresPacket:((((%s))))",resPacket);
										return -1;
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
							printf("\n ================= UPDATE UC MESSENGER & LOCAL END \n");
							/**** OTM ****/
							printf("\n>>>>>>> OTM START <<<<<<<<\n");
							if(!authmysql)
								authinit(AUTH_SERVER);
							if(atoi(new_sec_flag) == 2 || atoi(new_sec_flag) == 3){
								//sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
								sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where SETDN = '%s' ",outer_num);
								printf(">>>>>> OTM UPDATE(%s)",sqlcmd);
								if( ret = mysql_query(authmysql, sqlcmd) ) {
									sprintf(errorCause,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
									sprintf(resPacket,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
									return -1;
								}
							}
							printf("\n>>>>>>> OTM END <<<<<<<<\n");
						}

					sprintf(resPacket,"|RES|%s",serverip);
					return 0;
				}
printf("\n ================= status  1 and  domain 동일 (UPDATE)  END \n");
			}
			break;
		}
		mysql_free_result(result);
		result = NULL;
BEGIN:
		printf("\n.........................................................\n");
		printf("\n................... BEGIN................................\n");
		printf("\n.........................................................\n");
	}
DOMAIN_UPDATE:
	//if((!strcmp(dn,old_dn) && !strcmp(carry_no,old_carry_no) && strcmp(macaddr,old_mac_address)) || *chg_flag == '1') {}
	//장비변경
	if(i_code == _L_E_U_N || *chg_flag == '1') 
	{
	//if(!strcmp(type,"장비변경") || *chg_flag == '1') {}
			if(row_num > 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',\
				updatetime ='%s',sn='%s',sipetc3='N'  where setdn = '%s'",macaddr,tmp,sn,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|211.32.148.91update DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s),(%s)(%d) (%s)",outer_num,macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					return(-1);
				}
				//가입자해지
				if(i_code == _E_DN_D_N || i_code == _E_DN_D_NP5) {
//UPDATE2111
					if(relayCheck(outer_num)) {
						sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
						,lastdate=NOW() where number = '%s'",outer_num);
						mysql_query(mysql, sqlcmd);
						printf("\nsqlcmd : (%s)",sqlcmd);

						sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
						mysql_query(mysql, sqlcmd);

						mysql_1 = NULL;
						multiSqlinit(2);
						if(mysql_1) {
							sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
							,lastdate=NOW() where number = '%s'",outer_num);
							mysql_query(mysql_1, sqlcmd);
							printf("\nsqlcmd : (%s)",sqlcmd);

							sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
							mysql_query(mysql_1, sqlcmd);

							sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
							mysql_query(mysql_1, sqlcmd);
							mysql_close(mysql_1);

							mysql_1 = NULL;
							multiSqlinit(3);
							if(mysql_1) {
								sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
								,lastdate=NOW() where number = '%s'",outer_num);
								mysql_query(mysql_1, sqlcmd);
								printf("\nsqlcmd : (%s)",sqlcmd);

								sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
								mysql_query(mysql_1, sqlcmd);

								sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
								mysql_query(mysql_1, sqlcmd);
								mysql_close(mysql_1);
							}
						}
						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
					}
					else {
						sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
						,lastdate=NOW() where number = '%s'",outer_num);
						mysql_query(mysql, sqlcmd);
						printf("\nsqlcmd : (%s)",sqlcmd);

						sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
					}
				}
				//가입자신규등록
				if(i_code == _E_DN_C_N) {
					row_num =0;
					sprintf(sqlcmd, "select 070number from number_manage where 070number='%s'",outer_num);
					printf("\nvalid sqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						//sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num, __LINE__);
						sprintf(resPacket,"number_manage Select error!(%s)(%d)",outer_num, __LINE__);
						logCmd();
						return(-1);
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						;
					}   
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
						result = NULL;
					}

					if(row_num > 0) {
						sprintf(sqlcmd,"update number_list set status=1,chg_flag ='0' \
						,lastdate=NOW(),checkflag='0' where number = '%s'",outer_num);
						mysql_query(mysql, sqlcmd);
						printf("\nsqlcmd : (%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
					}
                                }
			}
	}


//printf("\nmacaddr: (%s)",macaddr);


if(strcmp(cpetype,"무선AP"))
    //number list ???
    if(PVS == 1) {
				printf("\n.................... procNewIBO code(%d)",i_code);
				printf("\n ================= NUMBER_LIST 처리 START \n");
				sprintf(sqlcmd, "select number,status,domain,type,serverip,etc from number_list \
				where  number = '%s'",outer_num);

				printf("\n ================= number_list 조회 sqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
					sprintf(errorCause,"number_list is not exist!(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return -1;
				}

				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) {
						if(_code==_E_DN_C_N || _code==_E_DN_C_NP2 || _code==_E_DN_C_NP6 ) 
						{
							if(row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],"lgdacom.net")) {
								if(!strcasecmp(domain,"lgdacom.net"))
									strcpy(domain, row[2]?row[2]:"");
								ps_delSpace(domain);
							}
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
printf("\n=======>[5m회선번호 rellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mnumber_list serverip:((((%s)[0m",tmpip);
							strcpy(etc, row[5]?row[5]:"127.0.0.1");
							ps_delSpace(etc);

							if(*row[1] == '0' && strlen(rellineno) < 5) {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not reserved!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not reserved!(%d)",outer_num,__LINE__);
								return -1;
							}
						}
						else 
						{
							printf("\n ================= number_list 정상 상태 아님\n");
							if(i_code != _E_RS_C_N && i_code != _E_SV_U_N && i_code != _E_SS_C_N && i_code != _E_DN_D_N && i_code != _E_DN_D_NP5 && *row[1] != '1' && *row[1] != '3') {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not normal number!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not normal number! status(%s)(%d)",outer_num,row[1],__LINE__);
								return -1;
							}
							//if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))) 
							if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") )) 
								strcpy(domain, row[2]?row[2]:"unknown.unknown");

							ps_delSpace(domain);
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);

						}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else {
		    if(*recvPacket[_type].value)
				strcpy(number_type,recvPacket[_type].value);
		    else
				strcpy(number_type,"1");
	     	}
				printf("\n ================= NUMBER_LIST 처리 END \n");


if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
A_POINT:
				printf("\n ================= 도메인처리 START  : (%s)\n",domain);
				if(domain[0] == '\0') {
					if(*rellineno != '\0' && strlen(rellineno) > 3) {
						printf("\n ================= 도메인이 없는경우 회선번호+lgdacom.net 할당 \n");
						sprintf(domain,"%s.lgdacom.net",rellineno);
					}
					else {
						sprintf(domain,"temp%d.lgdacom.net",getpid());
						ret = smsSend("Warn:domain&&lineno is null","164.124.107.28","mysqlif");
					}
				}
				if(*domain)  
				{
					//if(!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
					if(!strcasecmp(domain,"lgdacom.net"))
						if(*rellineno != '\0' && strlen(rellineno) > 3) {
						printf("\n ================= 도메인이 lgdacom.net인경우  회선번호+lgdacom.net 할당 \n");
							sprintf(domain,"%s.lgdacom.net",rellineno);
						}
						else {
							sprintf(domain,"temp%d.lgdacom.net",getpid());
						}
					sprintf(sqlcmd, "select proxyip,prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
					printf("\nsqlcmd:(%s)-(%d)",sqlcmd,getpid());
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						printf("\nresPacket:(%s)",resPacket);
						sleep(1);
						return -1;
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						printf("\nresPacket:(%s)",resPacket);
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						return(-1);
					}   

					row_num = mysql_num_rows(result);

				}
				else {
					sprintf(resPacket, "|ERR|00000_Domain empty in number_list, Lineno is null",mysql_error(mysql),sqlcmd);
					sprintf(errorCause,"Lineno is null(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return(-1);

				}
//printf("\n3333333333333333333333333333 : (%s)",domain);

				//not domain 
				if( row_num == 0 ) {
								printf("\n =========22======== CUSTOM_INFO에 도메인이 없음 -> (%s)\n",domain);
								printf("\n =========22======== domain(%s) 도메인 신규 생성 START \n",domain);
								mysql_free_result(result);
								result = NULL;


						if(relayCheck(outer_num)) {
							sprintf(resPacket, "|ERR|00000_Domain does not in number_list, DOMAIN is null",mysql_error(mysql),sqlcmd);
							sprintf(errorCause,"DOMAIN is null in number_list!(%s)",outer_num);
							printf("\nresPacket:(%s)",resPacket);
							return(-1);
						}
						//PC80

						if(domain[0] == '\0') {
							if(*rellineno != '\0' && strlen(rellineno) > 3)
								sprintf(tmpdomain,"virtual@%s.lgdacom.net",rellineno);
							else {
								sprintf(tmpdomain,"virtual@temp%d.lgdacom.net",getpid());
							}
						}
						else 
							sprintf(tmpdomain,"%s@%s",user,domain);

                                                argv[1] = tmpdomain;
                                                parseMailAddr(100);


                                                //wifi|99|99|99|NNNNN|master|1111
                                                if(cnt == 0) {
                                                        argv[1] = email;
                                                        argv[2] = "wifi";
                                                        argv[3] = "0";
                                                        argv[4] = "0";
                                                        argv[5] = "0";
                                                        argv[6] = "YYYY";
                                                        argv[7] = "master";
                                                        argv[8] = "1111";
                                                        argv[9] = cust_name;
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0mNUMBER_LIST PROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0m생성도메인 DOMAIN: (%s)[0m[0m",domain);
//printf("\n domain(%s)",domain);
printf("\n ========2========= 도메인 생성 procIIP START \n");

                                                        if((ret = procIIP(tmpip)) == 0) {
                                                                cnt++;
								//sleep(1);
printf("\n ========2========= 도메인 생성 procIIP END \n");
								printf("\n ================= domain(%s) 도메인 신규 생성 END -> A_POINT 재 조회 \n",domain);
                                                                goto A_POINT;
                                                        }
							if(ret == -1)
								sprintf(errorCause,"DOMAIN CREATE ERROR(%s)(%d)",domain,__LINE__);
							else if(ret == -2)
								sprintf(errorCause,"DOMAIN CREATE ERROR-PREFIX FULL (%s)(%d)",domain,__LINE__);
                                                }
                                                return -1;
                                }

						
				row = mysql_fetch_row( result );
				//custom_info
				if(row) {
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 START \n");
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
//custom_info proxyip
printf("\n[7mCUSTOM_INFO SERVERIP:((%s))[0m",serverip);
//number_list serverip
printf("\n[7mNUMBER_LIST TMPIP:((%s))[0m",tmpip);

					ps_delSpace(serverip);
//					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && (i_code == _E_DN_C_N || i_code == _E_DN_C_NP2 || i_code == _E_DN_C_NP6)  && strlen(tmpip) > 5 && !strstr(outer_num,"0704367")) {
//						printf("\n ================= RELAY 번호 처리 재사용\n");
//
//						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
//						printf("\nsqlcmd:(%s)",sqlcmd);
//						mysql_query(mysql, sqlcmd);
//						strcpy(serverip,tmpip);
//					}
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && (i_code == _E_DN_C_N || i_code == _E_DN_C_NP2 || i_code == _E_DN_C_NP6)  && strlen(tmpip) > 5 && !relayCheck(outer_num)) {
						printf("\n ================= RELAY 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					if((!strcmp(tmpip,"127.0.0.1") || strlen(tmpip) < 5)  && (i_code == _E_DN_C_N || i_code == _E_DN_C_NP2 || i_code == _E_DN_C_NP6) && strlen(serverip) > 5) {
						printf("\n ================= RELAY 번호 처리 신규\n");
							sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd);
							strcpy(tmpip,serverip);
					}
//					if(!strcmp(tmpip,"127.0.0.1") && strstr(outer_num,"0704367")) {
//						mysql_free_result(result);
//						result = NULL;
//						return -1;
//					}

					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);

					strcpy(ipaddress, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(prefix);
					strcpy(inner_digit, row[3]?row[3]:"4");
					ps_delSpace(inner_digit);
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 END \n");
				}
				mysql_free_result(result);
			result = NULL;
	}

	//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
	//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
	if(relayCheck(outer_num)) {
		printf("\n ================= RELAY 번호 처리 \n");
		relayFlag = 1;
		sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		mysql_query(mysql, sqlcmd);
		//for relay num reuse
		strcpy(tmpip,serverip);
	}
	else
		relayFlag = 0;

	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
				printf("\n======222n==== procNewIBO ======= 도메인처리 END  : (%s)",domain);
//202207 Start
        if(old_fq_dn && *old_fq_dn != '\0'){
                strcpy(tmpfqdn,old_fq_dn);
		if(strchr(tmpfqdn,'@')) {
			char *tmpP;
			tmpP =(char *)strtok(tmpfqdn,"@\n;");
			if(tmpP) {
				printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
					strcpy(old_sipdomain,tmpP);
					printf("\ntmpP-olddomain:(%s)",tmpP);
				}
			}
		}
	}
	printf("\n [1;41m 202207 22222222222 old_sipdomain(%s -> %s) (%s)delete process(%d) old(%s) [0m\n",old_sipdomain,domain,old_sip070number,relayFlag, old_fq_dn);
	if(strstr(recvPacket[_code].value, "S_D_U_N") &&  *old_sipdomain !='\0' && strlen(old_sipdomain) > 5 && strcmp(domain,old_sipdomain) && old_fq_dn /****&& !strncmp(old_fq_dn+1,outer_num,strlen(outer_num))**/){
		printf("\n [1;41m==>>>> 202207 old_sipdomain(%s -> %s) delete process(%s) [0m\n",old_sipdomain,domain, old_fq_dn);
		int oldrelayFlag=0;
		int oldrow_num=0;
		if(old_sip070number && strlen(old_sip070number) == 11 && strcmp(outer_num,old_sip070number) && relayCheck(old_sip070number)) {
			oldrelayFlag=1;
			sprintf(sqlcmd, "select domain,phoneid,defaultip from number_manage where domain = '%s' and 070number = '%s'",old_sipdomain,old_sip070number);
                        if( ret = mysql_query(mysql, sqlcmd) ) {
			}else{
				result = mysql_store_result( mysql );
				if(result ) {
					oldrow_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
				if(oldrow_num == 0){
				char sendcmdbuf[500];
				snprintf(sendcmdbuf,sizeof(sendcmdbuf),"|DU7|%s@%s|%s|1||3||",old_sip070number,old_sipdomain,old_sip070number );
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_OLD_REMOTE (ORELAY:%d) DomainChange(send=%s)",oldrelayFlag,sendcmdbuf);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_OTHER_OAM (ORELAY:%d) DomainChange(send=%s)",oldrelayFlag,sendcmdbuf);
                                logCmd();
/**************************
				if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS2,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS3,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
				}
**************/
			printf("\n[1;43m =relayOAMSend sendbuf=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",sendcmdbuf,old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				}
			}
			if(oldrow_num > 0){
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_OLD_LOCAL_D08 (ORELAY:%d) DomainChange(DU7|%s@%s|%s||)",oldrelayFlag,old_sip070number,old_sipdomain,old_sip070number);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_SAME_OAM (ORELAY:%d) DomainChange(DU7|%s@%s|%s||)",oldrelayFlag,old_sip070number,old_sipdomain,old_sip070number);
                                logCmd();
			printf("\n[1;43m =OLD LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
/********
				char tmpdomain[100];
				snprintf(tmpdomain,sizeof(tmpdomain),"%s",domain);
				snprintf(domain,sizeof(domain),"%s",old_sipdomain);
				//argv[0] = "DU7";
				sprintf(argv[1] ,"%s@%s",old_sip070number,old_sipdomain);
				argv[2] = old_sip070number;
			argv[3] = "1";
			argv[4] = "00,060";
			argv[5] = "3";
			argv[6] = "";
			printf("\n[1;43m =LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 D08() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				if(!procDU7())  { }
				snprintf(domain,sizeof(domain),"%s",tmpdomain);
************/
			}
		}
		//모든 도메인변경시 D08수행토록  if(relayFlag == 1) //중계번호이면
		{
		sprintf(sqlcmd, "select domain,phoneid,defaultip from number_manage where domain = '%s' and 070number = '%s'",old_sipdomain,outer_num);
                        printf("\nsqlcmd:(%s)",sqlcmd);
                        if( ret = mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                                if(mysql)
                                        mysql_close(mysql);
                                sqlinit();
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        tcpWrite(masterFd, resPacket);
                                        logCmd();
                                        //exit(0);
                                }
                        }
                        row_num = 0;
			if(!ret){
				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
			printf("\n[1;42m 2222 //동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
			if(relayFlag == 1 && row_num == 0){
				char sendcmdbuf[500];
				snprintf(sendcmdbuf,sizeof(sendcmdbuf),"|DU7|%s@%s|%s|1||3||",outer_num,old_sipdomain,outer_num);
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_N_REMOTE (NRELAY:%d) DomainChange(send=%s)",relayFlag,sendcmdbuf);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_OTHER_OAM (NRELAY:%d) DomainChange(send=%s)",relayFlag,sendcmdbuf);
                                logCmd();
/************************************
				if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS2,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS3,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
				}
************************************/
			printf("\n[1;43m =relayOAMSend sendbuf=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",sendcmdbuf,old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
			}else if(row_num > 0){//olddomain의  동일번호가 존재 하면 삭제
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_N_LOCAL_D08 (NRELAY:%d) DomainChange(DU7|%s@%s|%s|1||3|)",relayFlag,outer_num,old_sipdomain,outer_num);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_SAME_OAM (NRELAY:%d) DomainChange(DU7|%s@%s|%s|1||3|)",relayFlag,outer_num,old_sipdomain,outer_num);
				logCmd();
			printf("\n[1;43m =N LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				/********
				char tmpdomain[100];
				snprintf(tmpdomain,sizeof(tmpdomain),"%s",domain);
				snprintf(domain,sizeof(domain),"%s",old_sipdomain);
				//argv[0] = "DU7";
				sprintf(argv[1] ,"%s@%s",outer_num,old_sipdomain);
				argv[2] = outer_num;
				argv[3] = "1";
				argv[4] = "00,060";
				argv[5] = "3";
				argv[6] = "";
			printf("\n[1;43m =N LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				if(!procDU7())  { }
				snprintf(domain,sizeof(domain),"%s",tmpdomain);
				********/
			}
			printf("\n =========relay end======== domain(%s) relayOAMproc END(%d) \n",domain,ret);
		}
	}
// END 202207 


		// number_manage 
		// 기본 prefix : 00(국제전화 호), 060 
		// tmp : 시간 의미 
		if(PVS == 1) {
		//INO
				printf("\n.................... procNewIBO code(%d)",i_code);
		if(i_code == _E_DN_C_N || 
		   i_code == _E_DN_C_NP2 ||
		   i_code == _E_SV_U_N ||
		   i_code == _E_SV_U_NP2 ||
		   i_code == _E_SV_U_NP6 ||
		   i_code == _E_DN_C_NP6 ) 
		{
				printf("\n>>>>>>> 신규 INSERT START <<<<<<<<\n");
				// domain, sipuri(setdn@domain) 
				if(*macaddr != '\0') {
				printf("\n ================= PHONE_INFO DELETE & INSERT START \n");
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);


					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|insert phone_info_2!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(errorCause,"Insert phone_info error_2!(%s)(%d)",outer_num,__LINE__);
							logCmd();
							//return(-1);
					}
				printf("\n ================= PHONE_INFO DELETE & INSERT END \n");
				}

				printf("\n >>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST START <<<<<<<<<<\n");
				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91delete DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					return -1;
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				//if(!strcmp(areacode,"0070"))
				if(strcmp(cpetype,"무선AP")) {
					char	xx[2];

					sprintf(sqlcmd, "select number from number_list where domain = '%s' and admin_flag = 'Y'",domain);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) )
					{
						;
					}
					result = mysql_store_result( mysql );
					if(!result )
					{
						;
					}
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
					}
					result = NULL;

					if(row_num > 0)
						strcpy(xx,"Z");
					else
						strcpy(xx,"N");

					//Relay_Server
					if(!strcmp(etc,"112.223.57.35") && strlen(serverip) < 10) {
						sprintf(resPacket, "|ERR|DB_ERR|proxy_ip error!!!!");
						sprintf(errorCause,"Relay_Server error!(%s)(%d)",serverip,__LINE__);
						logCmd();
						return -1;
					}

					
					if(*setcid == '\0') {
				printf("\n ================= domain & lastdate & subsno & areacode & admin_flag & cust_name & checkflag UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,rellineno,auto_area,xx,cust_name, outer_num);
					}
					else {
				printf("\n ================= org_num & domain & lastdate & subsno & areacode & admin_flag & cust_name & checkflag UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),org_num = '%s',subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,setcid,rellineno,auto_area,xx, cust_name, outer_num);
					}

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_list!1(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num,__LINE__);
						logCmd();
						return(-1);
					}
				}

		if(*display == '\0')
			strcpy(display,outer_num);

		if(*inner_digit == '3')
			inner_num[0] = '0';
		if(!authmysql)
			authinit(AUTH_SERVER);

		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT START11111111111\n");
		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}

		strcpy(resPacket,sqlcmd);
		logCmd();
		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91(insert DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Insert error!(%s),(%s)(%d)(%s)",outer_num,macaddr,__LINE__,mysql_error(authmysql));
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}
		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT END\n");

		printf("\nsqlcmd:(%s)",sqlcmd);

		printf("\n ================= NUMBER_LIST SET 1 \n");
		sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
		where number = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!2(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_list Update error!(%s),(%d)",outer_num,__LINE__);
				logCmd();
				//return(-1);
		}

		if(!strcmp(cpetype,"무선AP")) {
			sprintf(resPacket,"|RES|%s",ipaddress);
			return 0;
		}
				printf("\n >>>>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST END <<<<<<<<<<<<<\n");


		printf("\n >>>>>>>>>> procINO  START <<<<<<<<<<<\n");
		sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
		argv[1] = tmpStr;
		sprintf(user,"tmpid%s",inner_num);
		
		argv[2] = "1111";
		argv[3] = inner_num;
		argv[4] = outer_num;

		strcpy(tmpname1,"tmpname");
		tmpP =__base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
		if(tmpP) {
				strcpy(tmpname,tmpP);
				free(tmpP);
		}
		argv[5] = tmpname;
		argv[6] = number_type;
		argv[7] = display;
		argv[8] = setcid;
		argv[9] = lineno;
		argv[10] = tmprid1;
		argv[11] = letter_flag;

		printf("\nargv[1]:(%s)",argv[1]);
		printf("\nargv[2]:(%s)",argv[5]);
		printf("\ntmpip:(%s)",tmpip);

		ret = procINO(0,tmpip,__LINE__);
		printf("\n >>>>>>>> procINO  END <<<<<<<<<\n");
		if(ret == -1){ 
			sprintf(errorCause,"INO ERR outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return -1;
		}
//		if(ret  == 0) {
//			tmm_currDate(YYYYMMDDHHMMSS,today);
//			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
//			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",tmp,domain,outer_num);
//
//			printf("\nsqlcmd : ((((%s))))",sqlcmd);
//			if( mysql_query(mysql, sqlcmd) ) {
//					sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
//					logCmd();
//					//return(-1);
//			}
//		}
				printf("\n>>>>>>> 신규 INSERT END <<<<<<<<\n");
		/**** OTM ****/
				printf("\n>>>>>>> OTM START <<<<<<<<\n");
			if(!authmysql)
				authinit(AUTH_SERVER);
			if(atoi(new_sec_flag) == 2 || atoi(new_sec_flag) == 3){
				//sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
				sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where SETDN = '%s' ",outer_num);
				printf(">>>>>> OTM UPDATE(%s)",sqlcmd);
				if( ret = mysql_query(authmysql, sqlcmd) ) {
					sprintf(errorCause,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
					return -1;
				}
			}
				printf("\n>>>>>>> OTM END <<<<<<<<\n");
				printf("\n>>>>>>> 신규 INSERT END <<<<<<<<\n");

		    sprintf(resPacket,"|RES|%s",ipaddress);
		    return 0;       
		}
		//DU7
		else if(i_code == _E_DN_D_N || i_code == _E_DN_D_NP5) 
		{
			int 	admin_flag = 0;


			if(*inner_digit == '3')
				inner_num[0] = '0';

		if(!authmysql)
			authinit(AUTH_SERVER);

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '해지',SSWIP='127.0.0.1',setdn='000000000000',sippwd='',\
			updatetime ='%s',macaddress='%d_%d_%d' where macaddress = '%s'",tmp,time(0),getpid(),rand(),macaddr);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!3(%s, %s)",mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
				logCmd();
				//return(-1);
			}
//			sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000' \
//			where setdn = '%s'",tmp,outer_num);
//			printf("\nsqlcmd : ((((%s))))",sqlcmd);
//			if( mysql_query(authmysql, sqlcmd) ) {
//				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(authmysql),sqlcmd );
//				logCmd();
//				//return(-1);
//			}
printf("\n[7mDOMAIN:(%s)[0m",domain);
			row_num = 0;
			sprintf(sqlcmd, "select domain,admin_flag from number_list where number='%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				;
			}
			result = mysql_store_result( mysql );
			if(!result )
			{
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if(row_num > 0) {
					row = mysql_fetch_row( result );
					if(row) {
						//if(domain == '\0' || !strcmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
						if(domain == '\0' || !strcmp(domain,"lgdacom.net"))
							strcpy(domain, row[0]?row[0]:"unknown.unknown");
						ps_delSpace(domain);
						if(row[1] && *row[1] == 'Y')
							admin_flag = 1;
					}

				}
				mysql_free_result(result);
				result = NULL;
			}

			if(admin_flag == 1) {
				sprintf(sqlcmd,"UPDATE number_list set \
				admin_flag = 'N' where \
				domain = '%s'", domain);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",domain,__LINE__);
				}
				sprintf(sqlcmd,"DELETE from superadmin where admin_id = '%s'",outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(errorCause,"superadmin Delete error!(%s),(%d)",outer_num,__LINE__);
					sprintf(resPacket, "|ERR|Delete superadmin!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
			}
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);

			argv[2] = outer_num;
			argv[3] = number_type;
			argv[4] = "00,070";
			argv[5] = "3";
			argv[6] = "";

			if(!authmysql)
					authinit(AUTH_SERVER);

			if(!strcmp(cpetype,"무선AP")) {
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
				return 0;       
			}

			ret = procDU7();

//			if(ret == 0 ) {
//
//				tmm_currDate(YYYYMMDDHHMMSS,today);
//				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
//				sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'DD7'",tmp,domain,outer_num);
//
//				printf("\nsqlcmd : ((((%s))))",sqlcmd);
//				if( mysql_query(mysql, sqlcmd) ) {
//						sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
//						logCmd();
//						//return(-1);
//
//				}
//			}
			if(*resPacket == '\0')
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);

			return 0;       

		}
		else if(i_code == _E_SS_C_N 
			|| i_code == _H_CR_U_N 
			|| i_code == _E_SSR_C_N ) 
		{
			if(*inner_digit == '3')
				inner_num[0] = '0';

			//if(!strcmp(status,"발신중지"))
			if(i_code == _E_SS_C_N) 
				sprintf(sqlcmd,"update number_list set status = 6\
				,lastdate=NOW() where number = '%s'",outer_num);
			/****** 발착신 중지******/
			else if(i_code == _E_SSR_C_N) 
				sprintf(sqlcmd,"update number_list set status = 5\
				,lastdate=NOW() where number = '%s'",outer_num);
//			else if(!strcmp(status,"착신중지"))
//				sprintf(sqlcmd,"update number_list set status = 7\
//				where number = '%s'",outer_num);
//			else if(*status == '\0')
//				sprintf(sqlcmd,"update number_list set status = 1\
//				where number = '%s'",outer_num);
			else 
				sprintf(sqlcmd,"update number_list set status = 7\
				,lastdate=NOW() where number = '%s'",outer_num);

			

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return(-1);
			}

			sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
			return 0;       

        }
		else if(i_code ==_E_RS_C_N) { 
			/****** 발신해소******/
			sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
			where number = '%s'",outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_list!4(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num, __LINE__);
					logCmd();
					//return(-1);
			}

			sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
			return 0;       
         }
		//  번호변경 || 장비변경 - UBO
		 else if(i_code == _S_D_U_N || i_code == _L_E_U_N) 
		{
			if(*inner_digit == '3')
				inner_num[0] = '0';

				// domain, sipuri(setdn@domain) 
				if(*macaddr != '\0') {
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);

					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|insert phone_info_3!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();	
						sprintf(errorCause,"phone_info Insert error_3!(%s)(%d)",outer_num,__LINE__);
						//return(-1);
					}
				}

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where \
				setdn = '%s'",outer_num);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)-(%d)",macaddr,__LINE__);
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

//				if(!strcmp(status,"해지") && !strcmp(type,"장비등록") && strlen(carry_no) > 5) {}
				if(i_code == _E_DN_D_NP3 && strlen(carry_no) > 5) {
					sprintf(sqlcmd,"UPDATE number_list set status = 9, lastdate = '%s' where \
						number = '%s'",tmp,outer_num);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);

					if(!strncmp(carry_no,"00",2))
						strcpy(before_num,carry_no+1);
					else
						strcpy(before_num,carry_no+1);

					printf("\nbefore_num:[7m%s[0m",before_num);


					//번호 이동 처리(자사 -> 타사)
//					if(strlen(before_num) > 4) {
//						sprintf(tmpStr,"tmpid@%s",domain);
//
//						argv[1] = tmpStr;
//						argv[2] = outer_num;
//						argv[3] = before_num;
//						argv[4] = NULL;
//						ret = procICH();
//
//						sprintf(resPacket,"|RES|127.0.0.1|");
//						return 0;
//					}
				}

				//if(!strcmp(areacode,"0070"))
				if(*setcid == '\0')
					sprintf(sqlcmd,"UPDATE number_list set \
					status = 1, lastdate = '%s',subsno='%s',areacode='%s',lastdate=NOW(),checkflag='0'  where \
					number = '%s'", tmp,rellineno,auto_area,outer_num);
				else 
					sprintf(sqlcmd,"UPDATE number_list set \
					status = 1, lastdate = '%s',org_num = '%s',subsno='%s',areacode='%s' ,lastdate=NOW(),\
					checkflag='0' where number = '%s'", tmp,setcid,rellineno,auto_area,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_list!5(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num, __LINE__);
					logCmd();
					//return(-1);
				}
//|UBO|007086664640@premium_c_15550.lgdacom.net|2010-06-17 11:05:27:471|변경|해지|장비등록|0|2010-06-1
//7 11:05:27|1608831|202|201|2185115|Premium|유선IP폰|0011.a96f.c252,14|0.0.0.0|007086664640@premium_c_15550.lgdacom.net|SIP|0070|007086664640|007086664640|21|22|23|24|25|007088584640|007086664640||||1111|1|||||0|A1NF232002143|주식회사파이스디엔지|0070
//86664640@premium_c_15550.lgdacom.net|
		if(!authmysql)
			authinit(AUTH_SERVER);

		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s','%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s','%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s','%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s','%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
		}

		strcpy(resPacket,sqlcmd);
		logCmd();

		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|insert DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Insert error!(%s),(%s)(%d)",outer_num,macaddr,__LINE__);
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			//return(-1);
		}
		printf("\nsqlcmd:(%s)",sqlcmd);


		if(*tmprid1 != '\0') {
			sprintf(sqlcmd, "select phoneid,domain from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
			
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",outer_num);
					sprintf(errorCause,"number_manage Select error(not found)!(%s)(%d)",outer_num,__LINE__);
					return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(domain, row[1]?row[1]:"unknown.unknown");
				ps_delSpace(domain);
			}
			mysql_free_result(result);
			result = NULL;

//			if(strcmp(dacom_no,carry_no) && strlen(dacom_no) > 5 && strlen(carry_no) > 5) {
//				if(*carry_no == '0')
//					strcpy(carryno1,carry_no+1);
//				else
//					strcpy(carryno1,carry_no);
//			}
//			else {
//				memset(carryno1,'\0',sizeof(carryno1));
//
//			}
			if(strlen(carry_no) > 5) {
					sprintf(tmpStr,"admin@%s",domain);
					argv[1] = tmpStr;
					sprintf(tmpStr1,"%4.4s",phoneid+4);
					
					argv[2] = tmpStr1;
					argv[3] = tmprid1;
					argv[4] = carryno1;
					procIID();
			}
		}


		ret = 0;
		if(ret  == 0) {
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",tmp,domain,outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"update numrequest_pool!(%s)(%d)",outer_num,__LINE__);
					logCmd();
					//return(-1);
			}
		}


		if(*resPacket == '\0')
		    sprintf(resPacket,"|RES|UBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
		    return 0;       
		 }

		}
		else  {
			sprintf(resPacket, "|ERR|PACKET Request Error!(Not Center(%s)(%d)",outer_num,__LINE__);
			sprintf(errorCause,"PACKET Request Error!(Not Center(%s)(%d)",outer_num,__LINE__);
			return -1;
		}


//|IFX|zermin1@naonsoft.com|01194916811
    sprintf(resPacket,"|RES|IBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}

/*****************************************************************************************************/
/*****************************************************************************************************/
int procNewDBO(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"삭제");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"해지");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비삭제");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,

****************/

	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");

	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
//NEWNEW
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);

				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}
				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	/****** VA_LIST END ******/



	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "DBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "DBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= strange port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
//printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "DBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= 자사->타사 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
****/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "DBO";

			/*****
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			*/
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= 자사->타사 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "DBO";
/***********
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
*/
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= 타사->자사 번호 삭제 dn:(%s),carry_no[outer_num]:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			//SKB->SKB->LG(해지:변경후)에는 old_carry_no없음
			//strcpy(outer_num,old_carry_no);
			//SKB->LG->삼성(Port-Out:변경전번호이동)
			if(strlen(old_carry_no) > 8)
				strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n=======================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n=======================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql ); 
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ){
				number_manage_exist = 0;
			}
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   

	row_num = mysql_num_rows(result);

	//자사번호 타사에서 해지시
	if( row_num == 0 ) {
		printf("\n >>>>>>>>>> E_DN_NP5 타사에서 해지 START <<<<<<<<<< \n");
		mysql_free_result(result);
		result = NULL;
			row_num= 0;
			//dn : 자사번호
			strcpy(outer_num,dn);
			
			sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
			where  number = '%s'",outer_num);

			printf("\nsqlcmd:(%s)",sqlcmd);

			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				return(-1);
			}   

			row_num = mysql_num_rows(result);

			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
				sprintf(errorCause,"number_list is not exist!(%s)(%d)",outer_num,__LINE__);
				printf("\nresPacket:(%s)",resPacket);
				return -1;
			}
		printf("\n >>>>>>>>>> E_DN_NP5 타사에서 해지 END <<<<<<<<<< \n");
	}
			
	row_num = mysql_num_rows(result);
	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);

			{

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag from number_manage where 070number = '%s'",outer_num);
				printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
//NEWNEW
					strcpy(resPacket,errorCause);
					logCmd();
					goto BEGIN_DELETE;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							goto BEGIN_DELETE;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								goto BEGIN_DELETE;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
/**
phoneid,cid,letter_flag,record_flag,crm_flag
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
*/
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//Not DCS_PHONE_AUTH
						{
							if(!authmysql)
								authinit(AUTH_SERVER);

							sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
							if( ret = mysql_query(authmysql, sqlcmd) ) {
								goto BEGIN_DELETE;
							}   
							else  {
								result = mysql_store_result(authmysql);
								if(!result ) {
									goto BEGIN_DELETE;
								} 
								else {
									row_num = mysql_num_rows(result);
									if( row_num == 0 )
										goto BEGIN_DELETE;
									mysql_free_result(result);
									result = NULL;
								}
							}
						}

						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

							// CRM 해지
							if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S')) {
							printf("\n ================= CRM 해지 처리 \n");
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
						}
			}
			break;
		}
		}
		mysql_free_result(result);
		result = NULL;
BEGIN_DELETE:
		//printf("\n.........................................................");
		printf("\n.........................................................\n");
		printf("\n................... BEGIN................................\n");
		printf("\n.........................................................\n");
	}
DOMAIN_DELETE:


//printf("\nmacaddr: (%s)",macaddr);

if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
				printf("\n ================= NUMBER_LIST 처리 START \n");
				sprintf(sqlcmd, "select number,status,domain,type,serverip,etc from number_list \
				where  number = '%s'",outer_num);

				printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
					sprintf(errorCause,"number_list is not exist!(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return -1;
				}

				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) {
						if(_code==_E_DN_C_N || _code==_E_DN_C_NP2 || _code==_E_DN_C_NP6) {
							if(row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],"lgdacom.net")) {
								if(!strcasecmp(domain,"lgdacom.net"))
									strcpy(domain, row[2]?row[2]:"");
								ps_delSpace(domain);
							}
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/*** ?????????****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
/*?????????????????????*/
printf("\n=======>[5m회선번호 rellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mnumber_list serverip:((((%s)[0m",tmpip);
//printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
							strcpy(etc, row[5]?row[5]:"127.0.0.1");
							ps_delSpace(etc);

							if(*row[1] == '0' && strlen(rellineno) < 5) {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not reserved!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not reserved!(%d)",outer_num,__LINE__);
								return -1;
							}
						}
						else { //_E_DN_D_N || _E_DN_D_NP5
							if(i_code != _E_RS_C_N && i_code != _E_SV_U_N && i_code != _E_SS_C_N && i_code != _E_DN_D_N && i_code != _E_DN_D_NP5 && *row[1] != '1' && *row[1] != '3') {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not normal number!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not normal number! status(%s)(%d)",outer_num,row[1],__LINE__);
								return -1;
							}
							//if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))) 
							if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") )) 
								strcpy(domain, row[2]?row[2]:"unknown.unknown");

							ps_delSpace(domain);
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/**** ???????? ****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
printf("\n=======>[5m number_list domain:((((%s)[0m",domain);
printf("\n=======>[5m number_list number_type:((((%s)[0m",number_type);
printf("\n=======>[5m number_list tmpip:((((%s)[0m",tmpip);

						}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else {
		    if(*recvPacket[_type].value)
				strcpy(number_type,recvPacket[_type].value);
		    else
				strcpy(number_type,"1");
	     }


if(strcmp(cpetype,"무선AP"))


/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
if(PVS == 1) {
		if(i_code == _E_DN_D_N ||
		   i_code == _E_DN_D_NP5
		) {
			int 	admin_flag = 0;


			if(*inner_digit == '3')
				inner_num[0] = '0';

				printf("\n>>>>>>> 삭제 DELETE START <<<<<<<<\n");
			if(!authmysql)
				authinit(AUTH_SERVER);

				printf("\n ================= UPDATE DCS_PHONE_AUTH 해지 \n");
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '해지',SSWIP='127.0.0.1',setdn='000000000000',sippwd='',\
			updatetime ='%s',macaddress='%d_%d_%d' where macaddress = '%s'",tmp,time(0),getpid(),rand(),macaddr);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!6(%s, %s)",mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
				logCmd();
				//return(-1);
			}
/****
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000' \
			where setdn = '%s'",tmp,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(authmysql),sqlcmd );
				logCmd();
				//return(-1);
			}
*/
//printf("\n[7mDOMAIN:(%s)[0m",domain);
			row_num = 0;
			sprintf(sqlcmd, "select domain,admin_flag from number_list where number='%s'",outer_num);
			printf("\n number_list 조회 sqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				;
			}
			result = mysql_store_result( mysql );
			if(!result )
			{
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if(row_num > 0) {
					row = mysql_fetch_row( result );
					if(row) {
						//if(domain == '\0' || !strcmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
						if(domain == '\0' || !strcmp(domain,"lgdacom.net"))
							strcpy(domain, row[0]?row[0]:"unknown.unknown");
						ps_delSpace(domain);
						if(row[1] && *row[1] == 'Y')
							admin_flag = 1;
					}

				}
				mysql_free_result(result);
				result = NULL;
			}

			if(admin_flag == 1) {
				printf("\n ================= ADMIN FLAG 1 처리 \n");
				sprintf(sqlcmd,"UPDATE number_list set \
				admin_flag = 'N' where \
				domain = '%s'", domain);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",domain,__LINE__);
				}
				sprintf(sqlcmd,"DELETE from superadmin where admin_id = '%s'",outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(errorCause,"superadmin Delete error!(%s),(%d)",outer_num,__LINE__);
					sprintf(resPacket, "|ERR|Delete superadmin!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
			}
//printf("\n[7mDOMAIN:(%s)[0m",domain);
//printf("\n[7mDOMAIN:(%s)[0m",domain);

			argv[2] = outer_num;
			argv[3] = number_type;
			argv[4] = "00,070";
			argv[5] = "3";
			argv[6] = "";
			

			if(!authmysql)
					authinit(AUTH_SERVER);

			if(!strcmp(cpetype,"무선AP")) {
			printf("\n =================  DELETE DCS_PHONE_AUTH \n");
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
				return 0;       
			}
			printf("\n >>>>>>>>> prodD07 처리 START <<<<<<<<<\n");
			ret = procDU7();
			printf("\n >>>>>>>>> prodD07 처리 END <<<<<<<<<\n");
			// BMLINK 20171030 MODIFY 
			printf( "\n procNewDBO ==========================oldorg_num(%s)==>check_cidlist strt!!",oldorg_num );
			int checked_cidresult = check_cidlist(NULL,domain,prefix,outer_num,serverip, NULL, "", "" );
                        
                        if(oldorg_num && strlen(oldorg_num) > 5 ){
			printf( "\n procNewDBO =========2222222=================oldorg_num(%s)==>check_cidlist strt!!",oldorg_num );
			    checked_cidresult = check_cidlist(NULL,domain,prefix,outer_num,serverip, NULL,"", "");
                        }
			printf( "\n procNewDBO ============================>check_cidlist end!!" );
			// BMLINK 20171030 MODIFY 
			
			if(strlen(before_num)>4){
			printf("\n >>>>>>>>> 8302 처리 START <<<<<<<<<\n");
				argv[2] = outer_num;
				argv[3] = before_num;
				argv[4] = NULL;
				argv[5] = before_num;
				printf("\nprocICH========= src(%s),dst(%s)\n",outer_num,before_num);
				ret = procICH();
				if(ret == -1){ 


//BMH
//jsfamily PROJECT07 20140715 타 OAM 전송
					ret = relayOAMproc("ICH",5);
///////////////////////////////////
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
					if(ret < 0){ 

						sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
						return -1;
					}	
				}
			printf("\n >>>>>>>>> 8302 처리 END <<<<<<<<<\n");
				sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
				return 0;
			}

/****
			if(ret == 0 ) {

				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'DD7'",tmp,domain,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);

				}
			}
*/
				printf("\n>>>>>>> 삭제 DELETE END <<<<<<<<\n");
			if(*resPacket == '\0')
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);

			return 0;       

		}
	   //발신중지
//		else if(i_code == _E_SS_C_N) {
//			if(*inner_digit == '3')
//				inner_num[0] = '0';
//
//			if(!strcmp(status,"발신중지"))
//				sprintf(sqlcmd,"update number_list set status = 6\
//				where number = '%s'",outer_num);
//			else if(!strcmp(status,"착신중지"))
//				sprintf(sqlcmd,"update number_list set status = 7\
//				where number = '%s'",outer_num);
//			else
//				sprintf(sqlcmd,"update number_list set status = 5\
//				where number = '%s'",outer_num);
//
//			printf("\nsqlcmd : ((((%s))))",sqlcmd);
//			if( mysql_query(mysql, sqlcmd) ) {
//				sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
//				sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num,__LINE__);
//				logCmd();
//				return(-1);
//			}
//
//			sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
//			return 0;       
//
//        	}
//	   //발신해소
//		else if(i_code ==_E_RS_C_N) { 
//			sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
//			where number = '%s'",outer_num);
//
//			printf("\nsqlcmd : ((((%s))))",sqlcmd);
//			if( mysql_query(mysql, sqlcmd) ) {
//					sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
//					sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num, __LINE__);
//					logCmd();
//					//return(-1);
//			}
//
//			sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
//			return 0;       
//         	}
	}
/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;
char    new_sec_flag[5];
char    old_sec_flag[5];

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
        memset(new_sec_flag,0,sizeof(new_sec_flag));
        memset(old_sec_flag,0,sizeof(old_sec_flag));
	memset(ipcc_record,0,sizeof(ipcc_record));
	memset(ipcc_application,0,sizeof(ipcc_application));
	memset(ipcc_ivr,0,sizeof(ipcc_ivr));
	memset(moh_bill,0,sizeof(moh_bill));
	memset(console_bill,0,sizeof(console_bill));
	memset(autorec_bill,0,sizeof(autorec_bill));
	memset(blf_on,0,sizeof(blf_on));
	memset(serverip,0,sizeof(serverip));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


        //new_sec_flag 
        if(*recvPacket[_new_sec_flag].value)
                strcpy(new_sec_flag,recvPacket[_new_sec_flag].value);
        else
                strcpy(new_sec_flag,"");
        
        //old_sec_flag 
        if(*recvPacket[_old_sec_flag].value)
                strcpy(old_sec_flag,recvPacket[_old_sec_flag].value);
        else    
                strcpy(old_sec_flag,"");



	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	strcpy(ipcc_record,"N");
	strcpy(ipcc_application,"N");
	strcpy(ipcc_ivr,"0");
	strcpy(moh_bill,"N");
	strcpy(console_bill,"N");
	strcpy(autorec_bill,"Y");
	strcpy(blf_on,"N");
	strcpy(bizskype,"N");

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
//NEWNEW
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);

				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}
				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
				/* 키폰 유료화*/
				else if(!strncmp(tmpP,"8892",4)) {
					strcpy(blf_on,"Y");
				}
				else if(!strncmp(tmpP,"A001",4)) {
					strcpy(bizskype,"Y");
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	/****** VA_LIST END ******/


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-olduser:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}
	//printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);
	tel_convert(old_dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}
	//일반 또는 변경을 통한 번호이동 신규를 통한 번호변경
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			if(*port_flag == '2'){
				printf("\n>>>>> 변경을 통한 번호이동 신규 <<<<<<<<<<\n");
				printf(">>>>> old_dn(%s) 		            <<<<<<<<<<\n",old_dn);
				printf(">>>>> old_sip070number(%s)                <<<<<<<<<<\n",old_sip070number);
			}
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT(dn)->자사(carryno)
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= port_flag 2 strange.....타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
printf("\n ================= old port_flag 2 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}
	else if(*old_port_flag == '2') {
printf("\n ================= old port_flag 2 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사(dn)->KT(carryno),하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {

		if(*port_flag == '3')
			printf("\n ================= 자사->타사 휴지 3 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
		else if(*port_flag == '4')
			printf("\n ================= 자사->타사 휴지 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			//strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
                        printf("\n[1;41m****** portOUT 번호에 대한 CID_LIST 삭제를 위한 처리**********(%s)(%s)domain:%s / old%s tmpStr:%s[0m\n",outer_num,before_num,domain,old_sipdomain,tmpStr);
                        //strcpy(old_sipdomain,"");
			int checked_cidresult = check_cidlist(NULL,domain,prefix,outer_num,serverip,outer_num,"", "");
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= 자사->타사 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n222222일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			//strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사(carryno)->하나로(dn) ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= port_flag 5 or 6 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
printf("\n ================= old_port_flag 5 or 6 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "DBO";
	}

	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");
	/****** new_sip_pwd start ******/
	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);
	/****** new_sip_pwd end ******/

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");

	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);
	printf("\n============================\n");


	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


	//장비 변경 Check
//	if(!strcmp(dn,old_dn) && !strcmp(carry_no,old_carry_no) && strcmp(macaddr,old_mac_address)) {
//		changeFlag = 1;
//				sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',sn='%s'\
//				where setdn = '%s'",macaddr,sn,outer_num);
//				printf("\nsqlcmd : ((((%s))))",sqlcmd);
//				if(!authmysql)
//					authinit(AUTH_SERVER);
//
//				if( mysql_query(authmysql, sqlcmd) ) {
//						sprintf(errorCause,"DCS_PHONE_AUTH update error!(%s)(%d)",outer_num,__LINE__);
//					//logCmd();
//				}
//				sprintf(resPacket,"장비변경OK(%s),(%s)",outer_num,macaddr);
//				return 0;
//	}
//	else 
		changeFlag = 2;

			

	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select query error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select store error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);


			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");


			if(row[3] && *row[3] == '1'  &&  number_manage_exist == 0) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
			}


printf("\n[5m[7m chg_flag(%s) domain(%s) status(%s)-reqdomain(%s)[0m[0m",row[1],row[2],row[3],domain);

				if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
				}
				else if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && !strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
printf("\n ================= status  1 and  domain 동일 (UPDATE)  START \n");
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag from number_manage where 070number = '%s'",old_sip070number);
				printf("\nnumber_manage 조회 sqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					logCmd();
					goto BEGIN;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							goto BEGIN;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								goto BEGIN;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
/**
phoneid,cid,letter_flag,record_flag,crm_flag
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
*/
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//Not DCS_PHONE_AUTH
						{
							if(!authmysql)
								authinit(AUTH_SERVER);

							sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
							if( ret = mysql_query(authmysql, sqlcmd) ) {
								goto BEGIN;
							}   
							else  {
								result = mysql_store_result(authmysql);
								if(!result ) {
									goto BEGIN;
								} 
								else {
									row_num = mysql_num_rows(result);
									if( row_num == 0 )
										goto BEGIN;
									mysql_free_result(result);
									result = NULL;
								}
							}
						}
					}
printf("\n ================= status  1 and  domain 동일 (UPDATE)  END \n");
			}
			//////////////
			break;
		}
		mysql_free_result(result);
		result = NULL;
BEGIN:
		printf("\n.........................................................\n");
		printf("\n................... BEGIN................................\n");
		printf("\n.........................................................\n");
	}
DOMAIN_UPDATE:
//	if(!strcmp(type,"장비변경") || *chg_flag == '1') {
//			if(row_num > 0) {
//				tmm_currDate(YYYYMMDDHHMMSS,today);
//				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
//				sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',\
//				updatetime ='%s',sn='%s' where setdn = '%s'",macaddr,tmp,sn,outer_num);
//
//				printf("\nsqlcmd : ((((%s))))",sqlcmd);
//				if(!authmysql)
//					authinit(AUTH_SERVER);
//
//				if( mysql_query(authmysql, sqlcmd) ) {
//					sprintf(resPacket, "|ERR|211.32.148.91update DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
//					sprintf(errorCause,"DCS_PHONE_AUTH Update error!(%s),(%s)(%d)",outer_num,macaddr,__LINE__);
//					logCmd();
//					return(-1);
//				}
//				//해지
//				if(i_code == _E_DN_D_N) {
//						sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
//						where number = '%s'",outer_num);
//						printf("\nsqlcmd : (%s)",sqlcmd);
//						mysql_query(mysql, sqlcmd);
//
//						sprintf(resPacket,"|RES|%s",ipaddress);
//						return 0;
//				}
//				if(i_code == _E_DN_C_N) {
//					row_num =0;
//					sprintf(sqlcmd, "select 070number from number_manage where 070number='%s'",outer_num);
//					printf("\nvalid sqlcmd:(%s)",sqlcmd);
//					if( ret = mysql_query(mysql, sqlcmd) ) {
//						logCmd();
//						//sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
//						sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num, __LINE__);
//						return(-1);
//					}   
//
//					result = mysql_store_result( mysql );
//					if(!result ) {
//						;
//					}   
//					else {
//						row_num = mysql_num_rows(result);
//						mysql_free_result(result);
//						result = NULL;
//					}
//
//					if(row_num > 0) {
//						sprintf(sqlcmd,"update number_list set status=1,chg_flag ='0' \
//						,lastdate=NOW(),checkflag='0' where number = '%s'",outer_num);
//						mysql_query(mysql, sqlcmd);
//						printf("\nsqlcmd : (%s)",sqlcmd);
//						mysql_query(mysql, sqlcmd);
//						sprintf(resPacket,"|RES|%s",ipaddress);
//						return 0;
//					}
//                                }
//			}
//	}


//printf("\nmacaddr: (%s)",macaddr);

if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
				printf("\n ================= NUMBER_LIST 처리 START \n");
				sprintf(sqlcmd, "select number,status,domain,type,serverip,etc from number_list \
				where  number = '%s'",outer_num);

				printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);
				//printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
					sprintf(errorCause,"number_list is not exist!(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return -1;
				}
/*

					case _E_SV_U_N
					case _E_SV_U_NP2:
					case _E_SV_U_NP3:
					case _E_SV_U_NP4:
					case _E_SV_U_NP5:
					case _E_SV_U_NP6:
*/
				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) {
							if(row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],"lgdacom.net")) {
								if(!strcasecmp(domain,"lgdacom.net"))
									strcpy(domain, row[2]?row[2]:"");
								ps_delSpace(domain);
							}
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/*** ?????????****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
/*?????????????????????*/
printf("\n=======>[5m회선번호 rellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mnumber_list serverip:((((%s)[0m",tmpip);
//printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
							strcpy(etc, row[5]?row[5]:"127.0.0.1");
							ps_delSpace(etc);

							if(*row[1] == '0' && strlen(rellineno) < 5) {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not reserved!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not reserved!(%d)",outer_num,__LINE__);
								return -1;
							}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else {
		    if(*recvPacket[_type].value)
				strcpy(number_type,recvPacket[_type].value);
		    else
				strcpy(number_type,"1");
	     }
				printf("\n ================= NUMBER_LIST 처리 END \n");


if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
A_POINT:
//printf("\n111111111111111111111111111 : (%s)",domain);
				printf("\n =========00======== 도메인처리 START  : (%s)\n",domain);
				if(domain[0] == '\0') {
					if(*rellineno != '\0' && strlen(rellineno) > 3) {
						printf("\n ================= 도메인이 없는경우 회선번호+lgdacom.net 할당 \n");
						sprintf(domain,"%s.lgdacom.net",rellineno);
					}
					else {
						sprintf(domain,"temp%d.lgdacom.net",getpid());
						ret = smsSend("Warn:domain&&lineno is null","164.124.107.28","mysqlif");
					}
				}
				if(*domain)  {
					//if(!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
					if(!strcasecmp(domain,"lgdacom.net"))
						if(*rellineno != '\0' && strlen(rellineno) > 3) {
						printf("\n ================= 도메인이 lgdacom.net인경우  회선번호+lgdacom.net 할당 \n");
							sprintf(domain,"%s.lgdacom.net",rellineno);
						}
						else {
							sprintf(domain,"temp%d.lgdacom.net",getpid());
						}
					sprintf(sqlcmd, "select proxyip,prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
					printf("\nsqlcmd:(%s)-(%d)",sqlcmd,getpid());
					if( ret = mysql_query(mysql, sqlcmd) ) {
//printf("\n2222222222222222222222222222.......... : (%s)",domain);
						sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						printf("\nresPacket:(%s)",resPacket);
						sleep(1);
						return -1;
					}   
//printf("\n3333333333333333333333333333 : (%s)",domain);

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						printf("\nresPacket:(%s)",resPacket);
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						return(-1);
					}   

					row_num = mysql_num_rows(result);

				}
				else {
					sprintf(resPacket, "|ERR|00000_Domain empty in number_list, Lineno is null",mysql_error(mysql),sqlcmd);
					sprintf(errorCause,"Lineno is null(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return(-1);

				}
//printf("\n3333333333333333333333333333 : (%s)",domain);

						if( row_num == 0 ) {
								printf("\n =========00======== CUSTOM_INFO에 도메인이 없음 -> (%s)\n",domain);
								printf("\n ==========00======= domain(%s) 도메인 신규 생성 START \n",domain);
								mysql_free_result(result);
								result = NULL;


						//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
						//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
						if(relayCheck(outer_num)) {
							sprintf(resPacket, "|ERR|00000_Domain does not in number_list, DOMAIN is null",mysql_error(mysql),sqlcmd);
							sprintf(errorCause,"DOMAIN is null in number_list!(%s)",outer_num);
							printf("\nresPacket:(%s)",resPacket);
							return(-1);
						}
						//PC80

						if(domain[0] == '\0') {
							if(*rellineno != '\0' && strlen(rellineno) > 3)
								sprintf(tmpdomain,"virtual@%s.lgdacom.net",rellineno);
							else {
								sprintf(tmpdomain,"virtual@temp%d.lgdacom.net",getpid());
							}
						}
						else 
							sprintf(tmpdomain,"%s@%s",user,domain);

                                                argv[1] = tmpdomain;
                                                parseMailAddr(100);


                                                /***
                                                wifi|99|99|99|NNNNN|master|1111
                                                ***/
                                                if(cnt == 0) {
                                                        argv[1] = email;
                                                        argv[2] = "wifi";
                                                        argv[3] = "0";
                                                        argv[4] = "0";
                                                        argv[5] = "0";
                                                        argv[6] = "YYYY";
                                                        argv[7] = "master";
                                                        argv[8] = "1111";
                                                        argv[9] = cust_name;
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0mNUMBER_LIST PROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0m생성도메인 DOMAIN: (%s)[0m[0m",domain);
//printf("\n domain(%s)",domain);
printf("\n  =========3======== 도메인 생성 procIIP START ");
                                                        if((ret = procIIP(tmpip)) == 0) {
                                                                cnt++;
							//sleep(1);
printf("\n  =========3======== 도메인 생성 procIIP END ");
                                                                goto A_POINT;
                                                        }
							if(ret == -1)
								sprintf(errorCause,"DOMAIN CREATE ERROR(%s)(%d)",domain,__LINE__);
							else if(ret == -2)
								sprintf(errorCause,"DOMAIN CREATE ERROR-PREFIX FULL (%s)(%d)",domain,__LINE__);
                                                }
                                                return -1;
                                }

						
				row = mysql_fetch_row( result );
				if(row) {
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 START \n");
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
//custom_info proxyip
printf("\n[7mCUSTOM_INFO SERVERIP:((%s))[0m",serverip);
//number_list serverip
printf("\n[7mNUMBER_LIST TMPIP:((%s))[0m",tmpip);
//printf("\n[7mserverip:((%s))[0m",serverip);

					ps_delSpace(serverip);
//					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !strstr(outer_num,"0704367")) {
//						printf("\n ================= relay 번호 처리 재사용\n");
//
//						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
//						printf("\nsqlcmd:(%s)",sqlcmd);
//						mysql_query(mysql, sqlcmd);
//						strcpy(serverip,tmpip);
//					}
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !relayCheck(outer_num)) {
						printf("\n ================= relay 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					if((!strcmp(tmpip,"127.0.0.1") || strlen(tmpip) < 5) && strlen(serverip) > 5) {
						printf("\n ================= RELAY 번호 처리 신규\n");
							sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd);
							strcpy(tmpip,serverip);
					}
/****
					if(!strcmp(tmpip,"127.0.0.1") && strstr(outer_num,"0704367")) {
						mysql_free_result(result);
						result = NULL;
						return -1;
					}
*/

					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);

					strcpy(ipaddress, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(prefix);
					strcpy(inner_digit, row[3]?row[3]:"4");
					ps_delSpace(inner_digit);
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 END \n");
				}
				mysql_free_result(result);
			result = NULL;
	}

	//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
	//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
	if(relayCheck(outer_num)) {
		printf("\n ================= RELAY 번호 처리 \n");
		relayFlag = 1;
		sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		mysql_query(mysql, sqlcmd);
		//for relay reuse
		strcpy(tmpip,serverip);
	}
	else
		relayFlag = 0;

	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
				printf("\n ================= 도메인처리 END  : (%s)",domain);
	//printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);


/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
		if(i_code == _S_DN_U_N ||
		   i_code == _E_SV_U_NP3 ||
		   i_code == _E_SV_U_NP4 ||
	           i_code == _S_DN_U_NP5) {

				printf("\n>>>>>>> 신규 INSERT START <<<<<<<<\n");
				/*** domain, sipuri(setdn@domain) ****/
				if(*macaddr != '\0') {
				printf("\n ================= PHONE_INFO DELETE & INSERT START \n");
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);


					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|insert phone_info_4!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(errorCause,"Insert phone_info error_4!(%s)(%d)",outer_num,__LINE__);
							logCmd();
							//return(-1);
					}
				printf("\n ================= PHONE_INFO DELETE & INSERT END \n");
				}
//BMHDEBUGTEST
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	

				printf("\n >>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST START %s <<<<<<<<<<\n",recvPacket[_request_id].value);
				if(!authmysql){
					authinit(AUTH_SERVER);
				}
				printf("\n--AUTHSERVER--(%d)--------sqlcmd : ((((%s)))) cpetype(%s) %s\n",getpid(),sqlcmd,cpetype,recvPacket[_request_id].value);


//BMHDEBUG 동일한 macaddress 정리할때 DB lock걸리면서 timeout으로 child process 가 없어짐 20130512
// 해결 못함 ?????????????????????????????????
				if( ret= mysql_query(authmysql, sqlcmd) ) {
					printf("\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^6end--------sqlcmd : ((((%s)))) cpetype(%s) %s\n\n",sqlcmd,cpetype,recvPacket[_request_id].value);
					sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91|delete DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
					logCmd();
					return -1;
				}
				printf("\n----ending nsqlcmd(%d) : ((((%s)))) cpetype(%s) %s\n",getpid(),sqlcmd,cpetype,recvPacket[_request_id].value);
//BMHDEBUG-END 20130512
				//if(!strcmp(areacode,"0070"))
				if(strcmp(cpetype,"무선AP")) {
					char	xx[2];

					sprintf(sqlcmd, "select number from number_list where domain = '%s' and admin_flag = 'Y'",domain);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) )
					{
						;
					}
					result = mysql_store_result( mysql );
					if(!result )
					{
						;
					}
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
					}
					result = NULL;

					if(row_num > 0)
						strcpy(xx,"Z");
					else
						strcpy(xx,"N");

					//Relay_Server
					if(!strcmp(etc,"112.223.57.35") && strlen(serverip) < 10) {
						sprintf(resPacket, "|ERR|DB_ERR|proxy_ip error!!!!");
						sprintf(errorCause,"Relay_Server error!(%s)(%d)",serverip,__LINE__);
						logCmd();
						return -1;
					}

					if(*setcid == '\0') {
				printf("\n DOMAIN & LASTDATE & SUBSNO & AREACODE & ADMIN_FLAG & CUST_NAME & CHECKFLAG UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,rellineno,auto_area,xx,cust_name, outer_num);
					}
					else {
				printf("\n ORG_NUM & DOMAIN & LASTDATE & SUBSNO & AREACODE & ADMIN_FLAG & CUST_NAME & CHECKFLAG UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),org_num = '%s',subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,setcid,rellineno,auto_area,xx, cust_name, outer_num);
					}

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_list!7(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num,__LINE__);
						logCmd();
						//return(-1);
					}
				}

		if(*display == '\0')
			strcpy(display,outer_num);

		if(*inner_digit == '3')
			inner_num[0] = '0';
/***************/
		if(!authmysql)
			authinit(AUTH_SERVER);

		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT START %s\n",recvPacket[_request_id].value);
		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)(%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}

		strcpy(resPacket,sqlcmd);
		logCmd();
		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91(insert DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Insert error!(%s),(%s)(%d)",outer_num,macaddr,__LINE__);
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}
		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT END %s\n",recvPacket[_request_id].value);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\n ================= NUMBER_LIST SET 1 \n");
		sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
		where number = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s)))) %s\n",sqlcmd,recvPacket[_request_id].value);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!8(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_list Update error!(%s),(%d)",outer_num,__LINE__);
				logCmd();
				//return(-1);
		}

		if(!strcmp(cpetype,"무선AP")) {
			sprintf(resPacket,"|RES|%s",ipaddress);
			return 0;
		}
				printf("\n >>>>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST END <<<<<<<<<<<<<\n");


		printf("\n >>>>>>>>> procINO  START %s<<<<<<<<<\n",recvPacket[_request_id].value);
		sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
		argv[1] = tmpStr;
		sprintf(user,"tmpid%s",inner_num);
		
		argv[2] = "1111";
		argv[3] = inner_num;
		argv[4] = outer_num;

		strcpy(tmpname1,"tmpname");
		tmpP =__base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
		if(tmpP) {
				strcpy(tmpname,tmpP);
				free(tmpP);
		}
		argv[5] = tmpname;
		argv[6] = number_type;
		argv[7] = display;
		argv[8] = setcid;
		argv[9] = lineno;
		argv[10] = tmprid1;
		argv[11] = letter_flag;

		printf("\nargv[1]:(%s)",argv[1]);
		printf("\nargv[2]:(%s)",argv[5]);
		printf("\ntmpip:(%s)",tmpip);

		
		printf("\nprocINO()==================>%s\n",recvPacket[_request_id].value);
		ret = procINO(0,tmpip,__LINE__);
		if(ret == -1){ 
			sprintf(errorCause,"INO ERR outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return -1;
		}
		printf("\n >>>>>>>> procINO  END %s <<<<<<<<<\n",recvPacket[_request_id].value);

//		sprintf(resPacket,"|RES|%s",ipaddress);
//		return 0;       

		/**** OTM ****/
		printf("\n >>>>>>>> OTM START <<<<<<<<<\n");
			if(!authmysql)
				authinit(AUTH_SERVER);
			if(atoi(new_sec_flag) == 2 || atoi(new_sec_flag) == 3){
				//sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
				sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where SETDN = '%s' ",outer_num);
				printf(">>>> OTM UPDATE(%s)",sqlcmd);
				if( ret = mysql_query(authmysql, sqlcmd) ) {
					sprintf(errorCause,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
					return -1;
				}
			}
		printf("\n >>>>>>>> OTM END <<<<<<<<<\n");
		}
		if(strcmp(outer_num,old_sip070number) && strlen(old_sip070number) > 5 && !strncmp(old_sip070number,"070",3))
		{
		printf("\n >>>>>>>> OUTER_NUM(%s) & OLD_SIP070NUMBER(%s) 틀린경우 처리 START <<<<<<<<<\n",outer_num,old_sip070number);
			int 	admin_flag = 0;


			if(*inner_digit == '3')
				inner_num[0] = '0';

		printf("\n ================= UPDATE DCS_PHONE_AUTH 해지 \n");
		if(!authmysql)
			authinit(AUTH_SERVER);

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '해지',SSWIP='127.0.0.1',setdn='000000000000',sippwd='',\
			updatetime ='%s',macaddress='%d_%d_%d' where setdn = '%s'",tmp,time(0),getpid(),rand(),old_sip070number);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!9(%s, %s)",mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d)",macaddr,__LINE__);
				logCmd();
				//return(-1);
			}
/****
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000' \
			where setdn = '%s'",tmp,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(authmysql),sqlcmd );
				logCmd();
				//return(-1);
			}
*/
//printf("\n[7mDOMAIN:(%s)[0m",domain);
			row_num = 0;
			sprintf(sqlcmd, "select domain,admin_flag from number_list where number='%s'",old_sip070number);
			printf("\nnumber_list 조회 sqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				;
			}
			result = mysql_store_result( mysql );
			if(!result )
			{
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if(row_num > 0) {
					row = mysql_fetch_row( result );
					if(row) {
			printf("\n ================= 도메인이 LGDACOM.NET 인경우 DB 값으로 DOMAIN 처리 & ADMIN_FLAG 조회 \n");
						//if(domain == '\0' || !strcmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
						if(domain == '\0' || !strcmp(domain,"lgdacom.net"))
							strcpy(domain, row[0]?row[0]:"unknown.unknown");
						ps_delSpace(domain);
						if(row[1] && *row[1] == 'Y')
							admin_flag = 1;
					}

				}
				mysql_free_result(result);
				result = NULL;
			}

			if(admin_flag == 1) {
			printf("\n ================= ADMIN_FLAG  1 처리 \n");
				sprintf(sqlcmd,"UPDATE number_list set \
				admin_flag = 'N' where \
				domain = '%s'", domain);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",domain,__LINE__);
				}
				sprintf(sqlcmd,"DELETE from superadmin where admin_id = '%s'",old_sip070number);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(errorCause,"superadmin Delete error!(%s),(%d)",outer_num,__LINE__);
					sprintf(resPacket, "|ERR|Delete superadmin!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
			}
//printf("\n[7mDOMAIN:(%s)[0m",domain);
//printf("\n[7mDOMAIN:(%s)[0m",domain);

			if(strlen(before_num)>4){
			printf("\n >>>>>>>>> 8302 처리 START 2222<<<<<<<<<\n");
				argv[2] = old_sip070number;
				argv[3] = before_num;
				argv[4] = NULL;
				argv[5] = before_num;
				printf("\nprocICH=========\n");
				ret = procICH();
				if(ret == -1){ 
					sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
//jsfamily PROJECT07 20140715 타 OAM 전송
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
					ret = relayOAMproc("ICH",5);
///////////////////////////////////
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
					if(ret < 0){ 

						sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
						return -1;
					}	
				}
                                //20171110
                                printf("[1;41m == argv[1]=(%s),domain=(%s),prefix=(%s),outer_num=(%s),carry_no=(%s),oldorg_num=(%s).old_sip070number=(%s),before_num=(%s)[0m\n",argv[1],domain,prefix,outer_num,carry_no,oldorg_num,old_sip070number,before_num);
			        int checked_cidresult = check_cidlist(NULL,domain,prefix,old_sip070number,serverip,old_sip070number,"", "");
				sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			printf("\n >>>>>>>>> 8302 처리 END <<<<<<<<<\n");
				return 0;
			}
			else{
			printf("\n >>>>>>>>> prodD07 처리 START <<<<<<<<<\n");
				argv[2] = old_sip070number;
				argv[3] = number_type;
				argv[4] = "00,070";
				argv[5] = "3";
				argv[6] = "";

				if(!authmysql)
						authinit(AUTH_SERVER);

				if(!strcmp(cpetype,"무선AP")) {
					sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	
					if( mysql_query(authmysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
						sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
						logCmd();
					}
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
					return 0;       
				}

				//printf("\nprocDU7()==========================>\n");
				ret = procDU7();
				if(ret < 0){
//jsfamily PROJECT07 20140715 타 OAM 전송
///////////////////////////////////
printf("\n >>>>>>>>> 2014번호이동 처리리 수정 필요  <<<<<<<<<\n");
					ret = relayOAMproc("DU7",6);

				}
			printf("\n >>>>>>>>111> prodD07 처리 END <<<<<<<<<\n");

			// BMLINK 20171030 MODIFY 			
			printf( "\n procNewUBO ============oldorg_num(%s)================>check_cidlist strt!!",oldorg_num );
			//int checked_cidresult = check_cidlist(NULL,domain,prefix,outer_num,serverip,NULL,oldorg_num, NULL);
			//20171123수정
                        int checked_cidresult = check_cidlist(NULL,domain,prefix,outer_num,serverip,NULL,NULL, NULL);
			printf( "\n procNewUBO ============================>check_cidlist end!!" );
			// BMLINK 20171030 MODIFY 
				if(*resPacket == '\0')
					sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,old_sip070number,macaddr);

				return 0;       
			}


		printf("\n >>>>>>>> OUTER_NUM(%s) & OLD_SIP070NUMBER(%s) 틀린경우 처리 END <<<<<<<<<\n",outer_num,old_sip070number);
		}

	}

/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|UBO userid:(%s)-(%s)-(%s)-(%s),old_sip070number:(%s)",user,domain,outer_num,macaddr,old_sip070number);
    return 0;       
}





/*******************************************************************************************************************/
/*******************************************************************************************************************/
int procNewUBO_Device(i_code) 
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;
char    new_sec_flag[5];
char    old_sec_flag[5];

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
        memset(new_sec_flag,0,sizeof(new_sec_flag));
        memset(old_sec_flag,0,sizeof(old_sec_flag));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"등록");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,

****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");

        //new_sec_flag 
        if(*recvPacket[_new_sec_flag].value)
                strcpy(new_sec_flag,recvPacket[_new_sec_flag].value);
        else
                strcpy(new_sec_flag,"");
        
        //old_sec_flag 
        if(*recvPacket[_old_sec_flag].value)
                strcpy(old_sec_flag,recvPacket[_old_sec_flag].value);
        else    
                strcpy(old_sec_flag,"");



	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);
				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}
				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	/****** VA_LIST END ******/
	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);
//printf("\n[5mdn:(%s)[0m",dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= port flag 2 타사->자사 strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= 자사-> 타사 휴지 port flag 3 or 4 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= port flag 3 or 4 자사->타사 휴지 처리 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= port flag 5 or 6 타사->자사 번호 삭제 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");

	printf("\n=========================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n=========================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
				//uc 처리
				if(!strcmp(domain,"lgdacom.net")){
					printf("\n ================= 도메인이 LGDACOM.NET 인경우 DB 값으로 DOMAIN 설정\n");	
					printf("\n>>>> domain(%s),olddomain(%s)",domain,olddomain);
					strcpy(domain,olddomain);
				}
				//번호변경후 phoneid 가 바뀜.넘어온 값->DB값
				printf("\n ================= 내선번호가 변경된 경우 대비 DB 에서 INNER_NUM 설정 \n");	
				strcpy(inner_num,row[0]+4);
				printf("\n>>>> inner_num(%s)",inner_num);
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\n ================= NUMBER_LIST 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);


			if(row[5] && !strncmp(row[5],"RC",2)){
				printf("\n ================= 레코딩프로 비밀번호 1111 셋팅 svc_kind(%s) \n",row[5]);
				strcpy(sip_passwd,"1111");
			}


			mysql_free_result(result);
			result = NULL;
			break;
		}
	}

	{
			if(row_num > 0) {
				printf("\n ================= UPDATE DCS_PHONE_AUTH NEW MAC \n");
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',\
				updatetime ='%s',sn='%s',sippwd ='%s',sipetc3='N' where setdn = '%s'",macaddr,tmp,sn,sip_passwd,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|211.32.148.91update DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s),(%s)(%d)",outer_num,macaddr,__LINE__);
					logCmd();
					return(-1);
				}
			}
	}
//|SRG|superadmin@premium_c_53965.lgdacom.net|0839|30|superadmin|
		
		printf("\n ================= 비밀번호 변경 DCS_PHONE_AUTH & SIP_BUDDIES START \n");
		sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
		argv[1] = tmpStr;
		argv[2] = inner_num;
		argv[3] = outer_num;
		argv[4] = sip_passwd;


		printf("\nargv[1]:(%s)",argv[1]);
		printf("\nargv[2]:(%s)",argv[5]);
		printf("\nargv[3]:(%s)",argv[3]);
		printf("\nargv[4]:(%s)",argv[4]);

		//printf("\nprocUSP======>\n");
		ret = procUSP();
		printf("\n ================= 비밀번호 변경 DCS_PHONE_AUTH & SIP_BUDDIES END \n");

		/**** OTM ****/
		if(!authmysql)
			authinit(AUTH_SERVER);
		if(atoi(new_sec_flag) == 2 || atoi(new_sec_flag) == 3){
			//sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
			sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where SETDN = '%s' ",outer_num);
			printf(">>>> OTM UPDATE(%s)",sqlcmd);
			if( ret = mysql_query(authmysql, sqlcmd) ) {
				sprintf(errorCause,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
				return -1;
			}
		}

/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|IBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}


/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_Domain(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
int cnt=0;
	unsigned char	*tmpP=NULL;
char    new_sec_flag[5];
char    old_sec_flag[5];

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
        memset(new_sec_flag,0,sizeof(new_sec_flag));
        memset(old_sec_flag,0,sizeof(old_sec_flag));
        memset(blf_on,0,sizeof(blf_on));
	memset(serverip,0,sizeof(serverip));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


        //new_sec_flag 
        if(*recvPacket[_new_sec_flag].value)
                strcpy(new_sec_flag,recvPacket[_new_sec_flag].value);
        else
                strcpy(new_sec_flag,"");
        
        //old_sec_flag 
        if(*recvPacket[_old_sec_flag].value)
                strcpy(old_sec_flag,recvPacket[_old_sec_flag].value);
        else    
                strcpy(old_sec_flag,"");


	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
	strcpy(blf_on,"N");

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);
				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}

				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
				/* 키폰 유료화*/
				else if(!strncmp(tmpP,"8892",4)) {
					strcpy(blf_on,"Y");
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	/****** VA_LIST END ******/


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nold_sip070number:(%s)",old_sip070number);
	printf("\nold_sipdomain:(%s)",old_sipdomain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port flag 2 타사->자사 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= port flag 2 타사->자사 strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 2 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}
	else if(*old_port_flag == '2') {
printf("\n ================= old_port_flag 2 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= port flag 3 or 4 자사-> 타사 휴지 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= port flag 3 or 4 자사-> 타사 휴지 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= port flag 5 타사-> 자사 번호 삭제 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
printf("\n ================= old_port_flag 5 or 6 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}

	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");
	/****** new_sip_pwd start ******/
	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);
	/****** new_sip_pwd end ******/

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mautoarea:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mautoarea:(%s)[0m[0m",auto_area);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");

	printf("\n ============================ \n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);
	printf("\n ============================ \n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



/****ahnz
	strcpy(old_sipdomain,domain);
	strcpy(domain,set_config);
*/


	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
printf("\nnumber_manage domain(%s)",row[1]);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\n number_list 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);


			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");


			if(row[3] && *row[3] == '1'  &&  number_manage_exist == 0) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
			}


printf("\n[5m[7m chg_flag(%s) domain(%s) status(%s)-reqdomain(%s)[0m[0m",row[1],row[2],row[3],domain);

				//new domain
				//if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {}
				if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7) && !strcasecmp(row[2],old_sipdomain)) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
printf("\n ================= olddomain = dbdomain 경우 GO UPDATE  \n");
					goto DOMAIN_UPDATE;
				}
				else if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && !strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
				mysql_free_result(result);
				result = NULL;
printf(" ================= 도메인이 같은경우 \n");

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag from number_manage where 070number = '%s'",old_sip070number);
				printf("\n number_manage sqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					logCmd();
					goto BEGIN;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							goto BEGIN;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								goto BEGIN;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
/**
phoneid,cid,letter_flag,record_flag,crm_flag
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
*/
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//Not DCS_PHONE_AUTH
						{
							if(!authmysql)
								authinit(AUTH_SERVER);

							sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
							if( ret = mysql_query(authmysql, sqlcmd) ) {
								goto BEGIN;
							}   
							else  {
								result = mysql_store_result(authmysql);
								if(!result ) {
									goto BEGIN;
								} 
								else {
									row_num = mysql_num_rows(result);
									if( row_num == 0 )
										goto BEGIN;
									mysql_free_result(result);
									result = NULL;
								}
							}
						}
					}
			}
			//////////////
			break;
		}
		mysql_free_result(result);
		result = NULL;
BEGIN:
		printf("\n.........................................................\n");
		printf("\n......................BEGIN..............................\n");
		printf("\n.........................................................\n");
	}
DOMAIN_UPDATE:

printf("\nmacaddr: (%s)",macaddr);

if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
				printf("\n ================= number_list 조회 \n");
				sprintf(sqlcmd, "select number,status,domain,type,serverip,etc from number_list \
				where  number = '%s'",outer_num);

				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
					sprintf(errorCause,"number_list is not exist!(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return -1;
				}
/*

					case _E_SV_U_N
					case _E_SV_U_NP2:
					case _E_SV_U_NP3:
					case _E_SV_U_NP4:
					case _E_SV_U_NP5:
					case _E_SV_U_NP6:
*/
				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row(result);
					if(row) {
printf("\n=======>[5m outer_num domain row2:[%s][0m",row[2]);
							if(row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],"lgdacom.net")) {
								if(!strcasecmp(domain,"lgdacom.net"))
									strcpy(domain, row[2]?row[2]:"");
								ps_delSpace(domain);
printf("\n=======>[5m reqdomain:[%s][0m",domain);
							}
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/*** ?????????****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
/*?????????????????????*/
printf("\n=======>[5mrellineno:((((%s)[0m\n",rellineno);
							strcpy(etc, row[5]?row[5]:"127.0.0.1");
							ps_delSpace(etc);

							if(*row[1] == '0' && strlen(rellineno) < 5) {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not reserved!!! status:(%s)",outer_num,row[1]);
								sprintf(errorCause,"(%s) is not reserved!(%d)",outer_num,__LINE__);
								return -1;
							}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else {
		    if(*recvPacket[_type].value)
				strcpy(number_type,recvPacket[_type].value);
		    else
				strcpy(number_type,"1");
	     }


if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
A_POINT:
//printf("\n111111111111111111111111111 : (%s)",domain);
				printf("\n ========1========= 도메인 처리 \n");
				if(domain[0] == '\0') {
					if(*rellineno != '\0' && strlen(rellineno) > 3) {
						sprintf(domain,"%s.lgdacom.net",rellineno);
					}
					else {
						sprintf(domain,"temp%d.lgdacom.net",getpid());
						ret = smsSend("Warn:domain&&lineno is null","164.124.107.28","mysqlif");
					}
				}
				if(*domain)  {
					//if(!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
					if(!strcasecmp(domain,"lgdacom.net"))
						if(*rellineno != '\0' && strlen(rellineno) > 3) {
				printf("\n ================= lgdacom.net 도메인 , 회선번호+lgdacom.net, uc,rc 도메인변경불가 \n");
							sprintf(domain,"%s.lgdacom.net",rellineno);
						}
						else {
							sprintf(domain,"temp%d.lgdacom.net",getpid());
						}
					sprintf(sqlcmd, "select proxyip,prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
					printf("\nsqlcmd:(%s)-(%d)\n",sqlcmd,getpid());
					if( ret = mysql_query(mysql, sqlcmd) ) {
//printf("\n2222222222222222222222222222.......... : (%s)",domain);
						sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						printf("\nresPacket:(%s)",resPacket);
						sleep(1);
						return -1;
					}   
//printf("\n3333333333333333333333333333 : (%s)",domain);

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						printf("\nresPacket:(%s)",resPacket);
						sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
						return(-1);
					}   

					row_num = mysql_num_rows(result);

				}
				else {
					sprintf(resPacket, "|ERR|00000_Domain empty in number_list, Lineno is null",mysql_error(mysql),sqlcmd);
					sprintf(errorCause,"Lineno is null(%s)(%d)",outer_num,__LINE__);
					printf("\nresPacket:(%s)",resPacket);
					return(-1);

				}
//printf("\n3333333333333333333333333333 : (%s)",domain);

						if( row_num == 0 ) {
								printf("\n =========11======== CUSTOM_INFO에 도메인이 없음 -> (%s)\n",domain);
								printf("\n =========11======== domain(%s) 도메인 신규 생성 START \n",domain);
								mysql_free_result(result);
								result = NULL;


						//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
						//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
						if(relayCheck(outer_num)) {
							sprintf(resPacket, "|ERR|00000_Domain does not in number_list, DOMAIN is null",mysql_error(mysql),sqlcmd);
							sprintf(errorCause,"DOMAIN is null in number_list!(%s)",outer_num);
							printf("\nresPacket:(%s)",resPacket);
							return(-1);
						}
						//PC80

						if(domain[0] == '\0') {
							if(*rellineno != '\0' && strlen(rellineno) > 3)
								sprintf(tmpdomain,"virtual@%s.lgdacom.net",rellineno);
							else {
								sprintf(tmpdomain,"virtual@temp%d.lgdacom.net",getpid());
							}
						}
						else 
							sprintf(tmpdomain,"%s@%s",user,domain);

                                                argv[1] = tmpdomain;
                                                parseMailAddr(100);


                                                /***
                                                wifi|99|99|99|NNNNN|master|1111
                                                ***/
                                                if(cnt == 0) {
                                                        argv[1] = email;
                                                        argv[2] = "wifi";
                                                        argv[3] = "0";
                                                        argv[4] = "0";
                                                        argv[5] = "0";
                                                        argv[6] = "YYYY";
                                                        argv[7] = "master";
                                                        argv[8] = "1111";
                                                        argv[9] = cust_name;
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
//printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0mNUMBER_LIST PROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0m생성도메인 DOMAIN: (%s)[0m[0m",domain);
//printf("\n domain(%s)",domain);
printf("\n =========0======== 도메인 생성 procIIP START ");
                                                        if((ret = procIIP(tmpip)) == 0) {
                                                                cnt++;
usleep(5000);
printf("\n =========1======== 도메인 생성 procIIP END ");
								printf("\n ================= domain(%s) 도메인 신규 생성 END -> A_POINT 재 조회 \n",domain);
                                                                goto A_POINT;
                                                        }
							if(ret == -1)
								sprintf(errorCause,"DOMAIN CREATE ERROR(%s)(%d)",domain,__LINE__);
							else if(ret == -2)
								sprintf(errorCause,"DOMAIN CREATE ERROR-PREFIX FULL (%s)(%d)",domain,__LINE__);
                                                }
                                                return -1;
                                }

						
				row = mysql_fetch_row( result );
				if(row) {
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 START \n");
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
//custom_info proxyip
printf("\n[7mCUSTOM_INFO SERVERIP:((%s))[0m",serverip);
//number_list serverip
printf("\n[7mNUMBER_LIST TMPIP:((%s))[0m",tmpip);
//printf("\n[7mserverip:((%s))[0m",serverip);

					ps_delSpace(serverip);
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !strstr(outer_num,"0704367")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !relayCheck(outer_num)) {
						printf("\n ================= RELAY 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !strstr(outer_num,"0704659")) {
/*************************************
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && strncmp(outer_num,"0704659",7)) {
						printf("\n ================= RELAY 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !strstr(outer_num,"0704808")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && strncmp(outer_num,"0704808",7)) {
						printf("\n ================= RELAY 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && !strstr(outer_num,"0704880")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && strlen(tmpip) > 5 && strncmp(outer_num,"0704880",7)) {
						printf("\n ================= RELAY 번호 처리 재사용\n");

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
*/
					if((!strcmp(tmpip,"127.0.0.1") || strlen(tmpip) < 5) && strlen(serverip) > 5) {
						printf("\n ================= RELAY 번호 처리 신규\n");
							sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd);
							strcpy(tmpip,serverip);
					}
/****
					if(!strcmp(tmpip,"127.0.0.1") && strstr(outer_num,"0704367")) {
						mysql_free_result(result);
						result = NULL;
						return -1;
					}
*/

					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);

					strcpy(ipaddress, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(prefix);
					strcpy(inner_digit, row[3]?row[3]:"4");
					ps_delSpace(inner_digit);
					printf("\n ================= CUSTOM_INFO & NUMBER_LIST 아이피 비교 END \n");
				}
				mysql_free_result(result);
			result = NULL;
	}

	//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
	if(relayCheck(outer_num)) {
	printf("\n ================= RELAY 번호 처리 \n");
		relayFlag = 1;
		sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW() where number = '%s'",serverip, outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		mysql_query(mysql, sqlcmd);
		//for relay reuse
		strcpy(tmpip,serverip);
	}
	else
		relayFlag = 0;

	//printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	//printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	//printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);

	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),custom_info serverip:(((%s))),number_list tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
				printf("\n======1111 procNewUBO_Domain=========== 도메인처리 END  : (%s)",domain);
//202207 Start
	printf("\n [1;41m 202207 old_sipdomain(%s -> %s) (%s)delete process(%d) old(%s) [0m\n",old_sipdomain,domain,old_sip070number,relayFlag, old_fq_dn);
	if(strstr(recvPacket[_code].value, "S_D_U_N") &&  *old_sipdomain !='\0' && strlen(old_sipdomain) > 5 && strcmp(domain,old_sipdomain) && old_fq_dn /****&& !strncmp(old_fq_dn+1,outer_num,strlen(outer_num))**/){
		printf("\n [1;41m==>>>> 202207 old_sipdomain(%s -> %s) delete process(%s) [0m\n",old_sipdomain,domain, old_fq_dn);
		int oldrelayFlag=0;
		int oldrow_num=0;
		if(old_sip070number && strlen(old_sip070number) == 11 && strcmp(outer_num,old_sip070number) && relayCheck(old_sip070number)) {
			oldrelayFlag=1;
			sprintf(sqlcmd, "select domain,phoneid,defaultip from number_manage where domain = '%s' and 070number = '%s'",old_sipdomain,old_sip070number);
                        if( ret = mysql_query(mysql, sqlcmd) ) {
			}else{
				result = mysql_store_result( mysql );
				if(result ) {
					oldrow_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
				if(oldrow_num == 0){
				char sendcmdbuf[500];
				snprintf(sendcmdbuf,sizeof(sendcmdbuf),"|DU7|%s@%s|%s|1||3||",old_sip070number,old_sipdomain,old_sip070number );
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_OLD_REMOTE (ORELAY:%d) DomainChange(send=%s)",oldrelayFlag,sendcmdbuf);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_OTHER_OAM (ORELAY:%d) DomainChange(send=%s)",oldrelayFlag,sendcmdbuf);
                                logCmd();
/**************************
				if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS2,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS3,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
				}
*********************/
			printf("\n[1;43m =relayOAMSend sendbuf=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",sendcmdbuf,old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				}
			}
			if(oldrow_num > 0){
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_OLD_LOCAL_D08 (ORELAY:%d) DomainChange(DU7|%s@%s|%s|1||3||)",oldrelayFlag,old_sip070number,old_sipdomain,old_sip070number);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_SAME_OAM (ORELAY:%d) DomainChange(DU7|%s@%s|%s|1||3||)",oldrelayFlag,old_sip070number,old_sipdomain,old_sip070number);
				logCmd();
				printf("\n[1;43m =Old LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
/*******************************
				char tmpdomain[100];
				snprintf(tmpdomain,sizeof(tmpdomain),"%s",domain);
				snprintf(domain,sizeof(domain),"%s",old_sipdomain);
				//argv[0] = "DU7";
				sprintf(argv[1] ,"%s@%s",old_sip070number,old_sipdomain);
				argv[2] = old_sip070number;
				argv[3] = "1";
				argv[4] = "00,060";
				argv[5] = "3";
				argv[6] = "";
			printf("\n[1;43m =Old LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 D08() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				if(!procDU7())  { }
				snprintf(domain,sizeof(domain),"%s",tmpdomain);
*******************************/
			}
		}
		//모든 도메인변경시 D08수행토록  if(relayFlag == 1) //중계번호이면
		{
		sprintf(sqlcmd, "select domain,phoneid,defaultip from number_manage where domain = '%s' and 070number = '%s'",old_sipdomain,outer_num);
                        printf("\nsqlcmd:(%s)",sqlcmd);
                        if( ret = mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                                if(mysql)
                                        mysql_close(mysql);
                                sqlinit();
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        tcpWrite(masterFd, resPacket);
                                        logCmd();
                                }
                        }
                        row_num = 0;
			if(!ret){
				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
			printf("\n[1;42m 2222 //동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
			if(relayFlag == 1 && row_num == 0){
				char sendcmdbuf[500];
				snprintf(sendcmdbuf,sizeof(sendcmdbuf),"|DU7|%s@%s|%s|1||3||",outer_num,old_sipdomain,outer_num);
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_N_REMOTE (NRELAY:%d) DomainChange(send=%s)",relayFlag,sendcmdbuf);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_OTHER_OAM (NRELAY:%d) DomainChange(send=%s)",relayFlag,sendcmdbuf);
                                logCmd();
/*****************************
				if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS2,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
				}else
				if(!strcmp(OAM_RLYSERVERS3,MYOAM_SERVER)){
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1);
					ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
				}
******************************/
			printf("\n[1;43m =relayOAMSend sendbuf=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",sendcmdbuf,old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
			}else if(row_num > 0){//olddomain의  동일번호가 존재 하면 삭제
				//sprintf(resPacket, "|ALERT|RELAY_ALTER_N_LOCAL_D08 (NRELAY:%d) DomainChange(DU7|%s@%s|%s||)",relayFlag,outer_num,old_sipdomain,outer_num);
				sprintf(resPacket, "|ALERT|CHECK_RELAY_OLD_NUM_INFO_SAME_OAM (NRELAY:%d) DomainChange(DU7|%s@%s|%s||)",relayFlag,outer_num,old_sipdomain,outer_num);
				logCmd();
			printf("\n[1;43m =LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 DU7() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
/********************************
				char tmpdomain[100];
				snprintf(tmpdomain,sizeof(tmpdomain),"%s",domain);
				snprintf(domain,sizeof(domain),"%s",old_sipdomain);
				//argv[0] = "DU7";
				sprintf(argv[1] ,"%s@%s",outer_num,old_sipdomain);
				argv[2] = outer_num;
				argv[3] = "1";
				argv[4] = "00,060";
				argv[5] = "3";
				argv[6] = "";
			printf("\n[1;43m =LOCAL argv[1]=(%s)-동일번호에 Domain만(%s => %s) 변경되는 중계번호일때 D08() 수행 검토(%s) isRelay (%d), row_num(%d)[0m\n",argv[1],old_sipdomain,domain,old_fq_dn+1,relayFlag,row_num);
				if(!procDU7())  { }
				snprintf(domain,sizeof(domain),"%s",tmpdomain);
*******************/
			}
			printf("\n =========relay end======== domain(%s) relayOAMproc END(%d) \n",domain,ret);
		}
	}
// END 202207 

/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
		//if(i_code == _E_DN_C_N) {}
		//도메인변경
		if(i_code == _S_D_U_N) {
				printf("\n>>>>>>> 신규 INSERT START <<<<<<<<\n");
				/*** domain, sipuri(setdn@domain) ****/
				if(*macaddr != '\0') {
				printf("\n ================= PHONE_INFO DELETE & INSERT START \n");
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);


					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|insert phone_info_5!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(errorCause,"Insert phone_info error_5!(%s)(%d)",outer_num,__LINE__);
							logCmd();
							//return(-1);
					}
				printf("\n ================= PHONE_INFO DELETE & INSERT END \n");
				}

				printf("\n >>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST START <<<<<<<<<<\n");
				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91delete DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
					logCmd();
					return -1;
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				//if(!strcmp(areacode,"0070"))
				if(strcmp(cpetype,"무선AP")) {
					char	xx[2];

					sprintf(sqlcmd, "select number from number_list where domain = '%s' and admin_flag = 'Y'",domain);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) )
					{
						;
					}
					result = mysql_store_result( mysql );
					if(!result )
					{
						;
					}
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
					}
					result = NULL;

					if(row_num > 0)
						strcpy(xx,"Z");
					else
						strcpy(xx,"N");

					//Relay_Server
					if(!strcmp(etc,"112.223.57.35") && strlen(serverip) < 10) {
						sprintf(resPacket, "|ERR|DB_ERR|proxy_ip error!!!!");
						sprintf(errorCause,"Relay_Server error!(%s)(%d)",serverip,__LINE__);
						logCmd();
						return -1;
					}

					if(*setcid == '\0') {
				printf("\n ================= domain & lastdate & subsno & areacode & admin_flag & cust_name & checkflag UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,rellineno,auto_area,xx,cust_name, outer_num);
					}
					else {
				printf("\n ================= org_num & domain & lastdate & subsno & areacode & admin_flag & cust_name & checkflag UPDATE \n");
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),org_num = '%s',subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,setcid,rellineno,auto_area,xx, cust_name, outer_num);
					}

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_list!10(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(errorCause,"number_list Update error!(%s)(%d)",outer_num,__LINE__);
						logCmd();
						return(-1);
					}
				}

		if(*display == '\0')
			strcpy(display,outer_num);

		if(*inner_digit == '3')
			inner_num[0] = '0';
/***************/
		if(!authmysql)
			authinit(AUTH_SERVER);

		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT START22222222222\n");
		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else if(!strncmp(blf_on,"Y",1))
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype,blf_flag) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s','8892')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}

		strcpy(resPacket,sqlcmd);
		logCmd();
		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91(insert DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Insert error!(%s),(%s)(%d)",outer_num,macaddr,__LINE__);
			logCmd();
			return(-1);
		}

		printf("\n ================= DCS_PHONE_AUTH DELETE & INSERT END\n");
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\n ================= NUMBER_LIST SET 1 \n");
		sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
		where number = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!11(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_list Update error!(%s),(%d)",outer_num,__LINE__);
				logCmd();
				return(-1);
		}

		if(!strcmp(cpetype,"무선AP")) {
			sprintf(resPacket,"|RES|%s",ipaddress);
			return 0;
		}
				printf("\n >>>>>>>>>> DCS_PHONE_AUTH & NUMBER_LIST END <<<<<<<<<<<<<\n");


		printf("\n >>>>>>>>>> procINO  START <<<<<<<<<<<\n");
		sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
		argv[1] = tmpStr;
		sprintf(user,"tmpid%s",inner_num);
		
		argv[2] = "1111";
		argv[3] = inner_num;
		argv[4] = outer_num;

		strcpy(tmpname1,"tmpname");
		tmpP =__base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
		if(tmpP) {
				strcpy(tmpname,tmpP);
				free(tmpP);
		}
		argv[5] = tmpname;
		argv[6] = number_type;
		argv[7] = display;
		argv[8] = setcid;
		argv[9] = lineno;
		argv[10] = tmprid1;
		argv[11] = letter_flag;

		printf("\nargv[1]:(%s)",argv[1]);
		printf("\nargv[2]:(%s)",argv[5]);
		printf("\ntmpip:(%s)",tmpip);

		printf("\nprocINO()=======================>\n");
		ret = procINO(0,tmpip,1);
		if(ret == -1){ 
			sprintf(errorCause,"INO ERR outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return -1;
		}
		printf("\n >>>>>>>> procINO  END <<<<<<<<<\n");

		/**** OTM ****/
		printf("\n >>>>>>>> OTM START <<<<<<<<<\n");
		if(!authmysql)
			authinit(AUTH_SERVER);
		if(atoi(new_sec_flag) == 2 || atoi(new_sec_flag) == 3){
			//sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
			sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH set SIPETC3 = 'N' where SETDN = '%s' ",outer_num);
			printf(">>>> OTM UPDATE (%s)",sqlcmd);
			if( ret = mysql_query(authmysql, sqlcmd) ) {
				sprintf(errorCause,"DCS_PHONE_AUTH UPDATE error!(%s),%d",outer_num,__LINE__);
				return -1;
			}
		}
		printf("\n >>>>>>>> OTM  END <<<<<<<<<\n");

                printf("\n[1;41m procNewUBO_Domain  =================도메인변경에 대한 ORG번호 처리 (%s) [0m\n",setcid);
                int checked_cidresult1=check_cidlist( "" ,old_sipdomain,prefix,outer_num,serverip, old_sip070number,"", "");
                printf("\n[1;41m procNewUBO_Domain  =====도메인변경에 대한 ORG번호 처리 ret=(%d) [0m\n",checked_cidresult1);
                
		sprintf(resPacket,"|RES|%s",ipaddress);
		return 0;       
		}
		//번호변경
		if(strcmp(outer_num,old_sip070number) && strlen(old_sip070number) > 5 && !strncmp(old_sip070number,"070",3))
		{
		printf("\n >>>>>>>> OUTER_NUM(%s) & OLD_SIP070NUMBER(%s) 틀린경우 처리 START <<<<<<<<<\n",outer_num,old_sip070number);
			int 	admin_flag = 0;


			if(*inner_digit == '3')
				inner_num[0] = '0';

		printf("\n ================= UPDATE DCS_PHONE_AUTH 해지 \n");
		if(!authmysql)
			authinit(AUTH_SERVER);

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '해지',SSWIP='127.0.0.1',setdn='000000000000',sippwd='',\
			updatetime ='%s',macaddress='%d_%d_%d' where setdn = '%s'",tmp,time(0),getpid(),rand(),old_sip070number);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!12(%s, %s)",mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d)",macaddr,__LINE__);
				logCmd();
				return(-1);
			}
/****
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000' \
			where setdn = '%s'",tmp,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(authmysql),sqlcmd );
				logCmd();
				//return(-1);
			}
*/
//printf("\n[7mDOMAIN:(%s)[0m",domain);
			row_num = 0;
			sprintf(sqlcmd, "select domain,admin_flag from number_list where number='%s'",old_sip070number);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				;
			}
			result = mysql_store_result( mysql );
			if(!result )
			{
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if(row_num > 0) {
					row = mysql_fetch_row( result );
					if(row) {
			printf("\n ================= 도메인이 LGDACOM.NET 인경우 DB 값으로 DOMAIN 처리 & ADMIN_FLAG 조회 \n");
						//if(domain == '\0' || !strcmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
						if(domain == '\0' || !strcmp(domain,"lgdacom.net"))
							strcpy(domain, row[0]?row[0]:"unknown.unknown");
						ps_delSpace(domain);
						if(row[1] && *row[1] == 'Y')
							admin_flag = 1;
					}

				}
				mysql_free_result(result);
				result = NULL;
			}

			if(admin_flag == 1) {
			printf("\n ================= ADMIN_FLAG  1 처리 \n");
				sprintf(sqlcmd,"UPDATE number_list set \
				admin_flag = 'N' where \
				domain = '%s'", domain);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(errorCause,"number_list Update error!(%s)(%d)",domain,__LINE__);
				}
				sprintf(sqlcmd,"DELETE from superadmin where admin_id = '%s'",old_sip070number);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(errorCause,"superadmin Delete error!(%s),(%d)",outer_num,__LINE__);
					sprintf(resPacket, "|ERR|Delete superadmin!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
			}
//printf("\n[7mDOMAIN:(%s)[0m",domain);
//printf("\n[7mDOMAIN:(%s)[0m",domain);

			argv[2] = old_sip070number;
			argv[3] = number_type;
			argv[4] = "00,070";
			argv[5] = "3";
			argv[6] = "";

			printf("\n ================= delete DCS_PHONE_AUTH \n");
			if(!authmysql)
					authinit(AUTH_SERVER);

			if(!strcmp(cpetype,"무선AP")) {
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Delete error!(%s)(%d)",macaddr,__LINE__);
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
				return 0;       
			}

			printf("\n ================= procDU7  시작 \n");
			ret = procDU7();
			printf("\n ================= procDU7  끝 \n");

			if(*resPacket == '\0')
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,old_sip070number,macaddr);

			return 0;       

		}

	}

/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|UBO_domain userid:(%s)-(%s)-(%s)-(%s),old_sipdomain:(%s)",user,domain,outer_num,macaddr,old_sipdomain);
    return 0;       
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_Cust_Name(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist,number_list_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];
  char	sqlcmd1[1024];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	//printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= port_flag 2 타사->자사 strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 2 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}
	else if(*old_port_flag == '2') {
printf("\n ================= old_port_flag 2  \n");
			strcpy(old_sip070number,old_carry_no);
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= 자사->타사 port flag 3 or 4 휴지  dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= 자사->타사 port flag 3 or 4 휴지  dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= 타사->자사 번호삭제 port flag 5 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
printf("\n ================= old_port_flag 5 or 6 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}

	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);
	printf("\n============================\n");
	//printf("\n============================>dn:(%s)",dn);

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


//		row_num= 0;
//		sprintf(sqlcmd, "select phoneid,domain from number_manage \
//		where  070number = '%s'",outer_num);
//
//		printf("\n number_mange 조회 sqlcmd:(%s)",sqlcmd);
//
//		if( ret = mysql_query(mysql, sqlcmd) ) {
//			sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
//			return -1;
//		}   
//		else  {
//			result = mysql_store_result( mysql );
//			if(!result ) {
//				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
//				return -1;
//			} 
//			else {
//				row_num = mysql_num_rows(result);
//				if( row_num == 0 )
//					number_manage_exist = 0;
//				else  {
//					row = mysql_fetch_row(result);
//					strcpy(olddomain, row[1]?row[1]:"~~~");
//					ps_delSpace(olddomain);
//					number_manage_exist = 1;
//				}
//				mysql_free_result(result);
//				result = NULL;
//			}
//		}

//		row_num= 0;
//		sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
//		where  number = '%s'",outer_num);
//
//		printf("\n number_manange 조회 sqlcmd:(%s)",sqlcmd);
//
//		if( ret = mysql_query(mysql, sqlcmd) ) {
//			sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
//			logCmd();
//			return -1;
//		}else{
//			result = mysql_store_result( mysql );
//			if(!result ) {
//				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
//				return -1;
//			} 
//			else {
//				row_num = mysql_num_rows(result);
//				if( row_num == 0 )
//					number_list_exist = 0;
//				else  {
//					number_list_exist = 1;
//				}
//				mysql_free_result(result);
//				result = NULL;
//			}
//		}   

//		mysql_free_result(result);
//		result = NULL;

	if(customInfo(domain) < 0)
		return -1;

	printf("\n ================= UPDATE NUMBER_LIST CUST_NAME \n");
	sprintf(sqlcmd, "update number_list set cust_name='%s' where number = '%s'",cust_name,outer_num);
	printf("\nsqlcmd:(%s)",sqlcmd);
	ret = mysql_query(mysql, sqlcmd);

	printf("\n ================= UPDATE CUSTOM_INFO CUST_NAME \n");
	sprintf(sqlcmd, "update custom_info set cust_name = '%s' where domain = '%s'",cust_name,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	ret = mysql_query(mysql, sqlcmd);


	sprintf(commandBuf,"|UCN|%s@%s|%s|%s|",user,domain,cust_name,outer_num);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UCN|%s@%s|%s|%s|",user,domain,cust_name,outer_num);
		printf("|UCN|%s@%s|%s|%s|\n",user,domain,cust_name,outer_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				_tcpWrite(masterFd, resPacket, strlen(resPacket));
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			_tcpWrite(masterFd, resPacket, strlen(resPacket));
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
		sprintf(resPacket,"|RES|UBO_Cust_Name userid:(%s)-(%s)-(%s)-(%s),cust_name:(%s)",user,domain,outer_num,macaddr,cust_name);

	return 0;       
}


/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_Area_Code(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist,number_list_exist  = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");




	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사  번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= port_flag 2 타사->자사  strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 2 & old_carry_no > 8 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}
	else if(*old_port_flag == '2') {
printf("\n ================= old_port_flag 2  \n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= 자사->타사 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= 자사->타사 휴지 3 or 4 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= old_port_flag 3 or 4 & old_carry_no > 8\n");
			strcpy(old_sip070number,old_dn);
			argv[0] = "IBO";
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= port_flag 5 타사->자사 번호 삭제 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
printf("\n ================= old_port_flag 5 or 6 \n");
			strcpy(old_sip070number,old_carry_no);
			argv[0] = "IBO";
	}

	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mautoarea:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mautoarea:(%s)[0m[0m",auto_area);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);
	printf("\n============================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(recvPacket[_area_code].value,set_config);

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\n number_list 조회 sqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_list_exist = 0;
			else  {
				number_list_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	//mysql_free_result(result);
	//result = NULL;

	if(number_list_exist){	
		sprintf(sqlcmd, "update number_list set areacode  = '%s' where number = '%s'",auto_area,outer_num);
		printf("\n ================= UPDATE AREACODE <- AUTOAREA sqlcmd:(%s)",sqlcmd);
		ret = mysql_query(mysql, sqlcmd);
	}
        sprintf(resPacket,"|RES|UBO_Area_Code userid:(%s)-(%s)-(%s)-(%s),area_code:(%s)",user,domain,outer_num,macaddr,auto_area);

	return 0;       
}


/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_Rid(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
char	oldphoneid[10];
char	oldcid[20];
char	myrecord[20];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(myrecord,0,sizeof(myrecord));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,recvPacket[_prod_cd].value);
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
	}
	else if(*port_flag == '2') {
printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_carry_no);
	}
	else if(*old_port_flag == '2') {
			strcpy(old_sip070number,old_dn);
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
			strcpy(old_sip070number,old_carry_no);
	}

	printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(tmprid,set_config);

	tel_convert(tmprid);

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
		}   

		{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
		}
		mysql_free_result(result);
		result = NULL;


				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag, domain,record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
					goto UBO_RID;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
							goto UBO_RID;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
								goto UBO_RID;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(olddomain, row[11]?row[11]:"unknown.unknown");
									ps_delSpace(olddomain);
									strcpy(myrecord, row[12]?row[12]:"");
									ps_delSpace(myrecord);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						// BMLINK 20171030 MODIFY	
						//if(strcmp(tmprid,oldcid) && strlen(tmprid) > 5) {
						if(strcmp(tmprid,oldcid)) {
							printf("\n procNewUBO_Rid =================check_cidlist start \n");
							int checked_cidresult=0;
							if(PVS == 1){
								checked_cidresult = check_cidlist(tmprid1,domain,prefix,outer_num,serverip, NULL,oldorg_num, "");
								printf( "\nchecked_cidresult=======>(%d)", checked_cidresult );
							}
							if( strlen(tmprid) > 5 /*&& checked_cidresult == 0*/ ){
								printf("\n ================= CID_LIST DELETE \n");
								sprintf(sqlcmd," DELETE FROM cid_list WHERE cid = '%s' AND domain = '%s' AND user = '%s'",tmprid1,domain,outer_num);
								printf("\nsqlcmd:(%s)",sqlcmd);
								if( mysql_query(mysql, sqlcmd) ) {
                                                                    if(mysql)
                                                                        mysql_close(mysql);
                                                                    
								    sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                    logCmd();
								}
								printf("\n ================= CID_LIST INSERT \n");
								sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
								'%s','%s','%3.3s','%s')",tmprid1,domain,oldphoneid+1,outer_num);
								printf("\nsqlcmd:(%s)",sqlcmd);
								if( mysql_query(mysql, sqlcmd) ) {
                                                                        if(mysql)
                                                                            mysql_close(mysql);
									sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
									sprintf(errorCause,"cid_list Insert error!(%s)(%d)",outer_num,__LINE__);
                                                                        logCmd();
								}
							}
							printf("\n =================check_cidlist end \n");

							sprintf(sqlcmd,"update number_manage set cid='%s' where 070number='%s'",tmprid,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(errorCause,"inumber_manage Update error!(%s)(%d)",outer_num,__LINE__);
							}

						}
						// BMLINK 20171030 MODIFY
						else if(*tmprid == '\0') {
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(errorCause,"inumber_manage Update error!(%s)(%d)",outer_num,__LINE__);
							}
						}

						if(PVS == 1 && MASTER == 1) {
							// BIZSKYPE sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,oldphoneid,tmprid,oldletter_flag,oldrecord_flag,oldcrm_flag,oldmanner_flag,outer_num,serverip);
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s||||||||%s|%s|",user,domain,oldphoneid,tmprid,oldletter_flag,oldrecord_flag,oldcrm_flag,oldmanner_flag,outer_num,serverip,bizskype,myrecord);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							// BIZSKYPE sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,oldphoneid,tmprid,oldletter_flag,oldrecord_flag,oldcrm_flag,oldmanner_flag,outer_num,serverip,myrecord);
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s||||||||%s|%s|",user,domain,oldphoneid,tmprid,oldletter_flag,oldrecord_flag,oldcrm_flag,oldmanner_flag,outer_num,serverip,bizskype,myrecord);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) ) {
											_tcpWrite(masterFd, resPacket, strlen(resPacket));
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										_tcpWrite(masterFd, resPacket, strlen(resPacket));
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					sprintf(resPacket,"|RES|UBO_Rid userid:(%s)-(%s)-(%s)-(%s),tmprid:(%s)",user,domain,outer_num,macaddr,crm_flag);
					return 0;
		}
	}

	sprintf(resPacket,"|RES|UBO_Rid userid:(%s)-(%s)-(%s)-(%s),rid:(%s)",user,domain,outer_num,macaddr,tmprid);
	return 0;       
UBO_RID:
	return -1;
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_CRM_A(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20],record[11];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
char	oldphoneid[10];
char	oldcid[20];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(record,0,sizeof(record));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(oldcid,0,sizeof(oldcid));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,recvPacket[_prod_cd].value);
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
	}
	else if(*port_flag == '2') {
printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_carry_no);
	}
	else if(*old_port_flag == '2') {
			strcpy(old_sip070number,old_dn);
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
			strcpy(old_sip070number,old_carry_no);
	}

	printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(crm_flag,set_config);
	if(!strcmp(crm_flag,"7096"))
		strcpy(crm_flag,"A");



	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
		}   

		{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
		}
		mysql_free_result(result);
		result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,domain,record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
					goto UBO_CRM_A;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
							goto UBO_CRM_A;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
								goto UBO_CRM_A;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(olddomain, row[11]?row[11]:"unknown.unknown");
									ps_delSpace(olddomain);
									strcpy(record, row[12]?row[12]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}


						sprintf(sqlcmd,"update number_manage set crm_flag='%s' where 070number='%s'",crm_flag,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
							;
						}


						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}

	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							//BIZSKYPE sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip);
							           sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s||||||||%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,bizskype,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							//BIZSKYPE sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip);
							           sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s||||||||%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,bizskype,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) ) {
											_tcpWrite(masterFd, resPacket, strlen(resPacket));
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										_tcpWrite(masterFd, resPacket, strlen(resPacket));
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					sprintf(resPacket,"|RES|UBO_CRM_A userid:(%s)-(%s)-(%s)-(%s),crm_flag:(%s)",user,domain,outer_num,macaddr,crm_flag);
					return 0;
		}
	}
	return 0;       

UBO_CRM_A:
	return -1;
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_CRM_B(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21],record[11];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
char	oldphoneid[10];
char	oldcid[20];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(oldcid,0,sizeof(oldcid));
	memset(record,0,sizeof(record));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,recvPacket[_prod_cd].value);
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
	}
	else if(*port_flag == '2') {
printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_carry_no);
	}
	else if(*old_port_flag == '2') {
			strcpy(old_sip070number,old_dn);
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
			strcpy(old_sip070number,old_carry_no);
	}

	printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(crm_flag,set_config);
	if(!strcmp(crm_flag,"7097"))
		strcpy(crm_flag,"B");



	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
		}   

		{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
		}
		mysql_free_result(result);
		result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,domain, record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
					goto UBO_CRM_B;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
							goto UBO_CRM_B;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
								goto UBO_CRM_B;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(olddomain, row[11]?row[11]:"unknown.unknown");
									ps_delSpace(olddomain);
									strcpy(record, row[12]?row[12]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						sprintf(sqlcmd,"update number_manage set crm_flag='%s' where 070number='%s'",crm_flag,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
							;
						}


						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}

	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) )  {
											_tcpWrite(masterFd, resPacket, strlen(resPacket));
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										_tcpWrite(masterFd, resPacket, strlen(resPacket));
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					sprintf(resPacket,"|RES|UBO_CRM_A userid:(%s)-(%s)-(%s)-(%s),crm_flag:(%s)",user,domain,outer_num,macaddr,crm_flag);
					return 0;
		}
	}
	return 0;       

UBO_CRM_B:
	return -1;
}




/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_RECORD_B(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20],record[11];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
char	oldphoneid[10];
char	oldcid[20];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(record,0,sizeof(record));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(oldcid,0,sizeof(oldcid));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,recvPacket[_prod_cd].value);
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
	}
	else if(*port_flag == '2') {
printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_carry_no);
	}
	else if(*old_port_flag == '2') {
			strcpy(old_sip070number,old_dn);
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
			strcpy(old_sip070number,old_carry_no);
	}

	printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(crm_flag,set_config);
	if(!strcmp(crm_flag,"7096"))
		strcpy(crm_flag,"A");



	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
		}   

		{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
		}
		mysql_free_result(result);
		result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,domain,record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
					goto UBO_RECORD_B;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
							goto UBO_RECORD_B;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
								goto UBO_RECORD_B;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(olddomain, row[11]?row[11]:"unknown.unknown");
									ps_delSpace(olddomain);
									strcpy(record, row[12]?row[12]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}


						sprintf(sqlcmd,"update number_manage set crm_flag='%s' where 070number='%s'",crm_flag,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
							;
						}


						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}

	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) )  {
											_tcpWrite(masterFd, resPacket, strlen(resPacket));
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										_tcpWrite(masterFd, resPacket, strlen(resPacket));
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					sprintf(resPacket,"|RES|UBO_CRM_A userid:(%s)-(%s)-(%s)-(%s),crm_flag:(%s)",user,domain,outer_num,macaddr,crm_flag);
					return 0;
		}
	}
	return 0;       

UBO_RECORD_B:
	return -1;
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewUBO_RECORD_C(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0,changeFlag=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11],record[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
char	set_config[64];
char	oldphoneid[10];
char	oldcid[20];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(olddomain,0,sizeof(olddomain));
	memset(outer_num,0,sizeof(outer_num));
	memset(old_outer_num,0,sizeof(old_outer_num));
	memset(set_config,0,sizeof(set_config));
	memset(oldphoneid,0,sizeof(oldphoneid));
	memset(oldcid,0,sizeof(oldcid));
	memset(record,0,sizeof(record));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");

	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"변경");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"도메인변경");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");

	if(*recvPacket[_set_config].value)
		strcpy(set_config,recvPacket[_set_config].value);
	else
		strcpy(set_config,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,recvPacket[_prod_cd].value);
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");


	if(*recvPacket[_auto_area].value)
		strcpy(auto_area,recvPacket[_auto_area].value);
	else
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	printf("\ndomain:(%s)",domain);

	if(old_fq_dn && *old_fq_dn)
			strcpy(tmpfqdn,old_fq_dn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP) {
		printf("\ntmpP-user:(%s)",tmpP);
				tmpP = (char *)strtok(NULL,"@\n;");
				if(tmpP) {
						strcpy(old_sipdomain,tmpP);
				printf("\ntmpP-olddomain:(%s)",tmpP);
				}
		}
	}

	printf("\nolddomain:(%s)",old_sip070number);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");
	if(strlen(old_carry_no) < 9)
		strcpy(old_carry_no,"");

	tel_convert(old_carry_no);
	tel_convert(carry_no);
	tel_convert(dn);


printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
	}
	if(*old_port_flag == '\0' || strlen(old_carry_no) < 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
	}
	else if(*port_flag == '2') {
printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
	}

	if(*old_port_flag == '2' && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_carry_no);
	}
	else if(*old_port_flag == '2') {
			strcpy(old_sip070number,old_dn);
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}
	if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}
	else if((*old_port_flag == '3' || *old_port_flag == '4')  && strlen(old_carry_no) > 8) {
			strcpy(old_sip070number,old_dn);
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	if(*old_port_flag == '5' || *old_port_flag == '6') {
			strcpy(old_sip070number,old_carry_no);
	}

	printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);

	printf("\np5mold_dn:(%s)[0m",old_dn);
	printf("\np5mold_outernum:(%s)[0m",old_sip070number);

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);



	strcpy(crm_flag,set_config);
	if(!strcmp(crm_flag,"7097"))
		strcpy(crm_flag,"B");



	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
				return -1;
		}   

		{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
		}
		mysql_free_result(result);
		result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,domain,record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
					goto UBO_RECORD_C;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
							goto UBO_RECORD_C;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
								goto UBO_RECORD_C;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(olddomain, row[11]?row[11]:"unknown.unknown");
									ps_delSpace(olddomain);
									strcpy(record, row[12]?row[12]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						sprintf(sqlcmd,"update number_manage set crm_flag='%s' where 070number='%s'",crm_flag,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
							;
						}


						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}

	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) ) {
											_tcpWrite(masterFd, resPacket, strlen(resPacket));
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										_tcpWrite(masterFd, resPacket, strlen(resPacket));
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					sprintf(resPacket,"|RES|UBO_CRM_A userid:(%s)-(%s)-(%s)-(%s),crm_flag:(%s)",user,domain,outer_num,macaddr,crm_flag);
					return 0;
		}
	}
	return 0;       

UBO_RECORD_C:
	return -1;
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNewPBO(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20],messenger_ip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32],sqlcmd1[256];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"중지");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"발신중비");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/

	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n 타사 -> 자사 port flag 2 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n 타사->자사 port flag 2 strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n 자사 -> 타사 휴지 port flag 3 or 4 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
****/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			/*****
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			*/
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n 자사 -> 타사 port flag 3 or 4 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";
/***********
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
*/
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n 타사 -> 자사 번호 삭제 port flag 5 or 6 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "IBO";
			actionFlag = 4;
	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");

	printf("\n========================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n=========================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;


		if(PVS == 1 && MASTER == 1)  {

			sprintf(sqlcmd, "select crm_flag,messenger_ip,phoneid,defaultip,inner_digit from number_manage where 070number = '%s'",outer_num);
			printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			}   
			else  {
							
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
					sprintf(errorCause,"number_manage is not!(%s)(%d)",outer_num,__LINE__);
				}
				else {
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(crm_flag, row[0]?row[0]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
						ps_delSpace(messenger_ip);

						strcpy(phoneid, row[2]?row[2]:"---");
						ps_delSpace(phoneid);
						strcpy(serverip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(serverip);
						strcpy(inner_digit, row[4]?row[4]:"4");
						ps_delSpace(inner_digit);
					}
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(prefix,"%3.3s",phoneid+1);
				*phoneid = '1';
			}
	}
	else  {
	    if(argv[2] && *argv[2])
			strcpy(outer_num,argv[2]);
	    if(argv[3] && *argv[3])
			strcpy(status,argv[3]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


//printf("\nmacaddr: (%s)",macaddr);
/*******************************
        sprintf(sqlcmd, "select status from number_list where number='%s'",outer_num);
        printf("\nsqlcmd:(%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }

        result = mysql_store_result( mysql );
        if(result ) {
                row_num = mysql_num_rows(result);
                if( row_num == 0 );
                else {
                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(tmp, row[0]?row[0]:"1");
                                ps_delSpace(tmp);
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
***********************************/

	//if(!strcmp(status,"발신중지"))
	if(i_code == _E_SS_C_N || i_code == _E_SS_C_NP2 || i_code == _E_SS_C_NP3 || i_code == _E_SS_C_NP4 || i_code == _E_SS_C_NP5 || i_code == _E_SS_C_NP6) {
		printf("\n발신중지\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 6\
		where number = '%s' and status != '4' ",outer_num);
		strcpy(status,"발신중지");
	}

	//else if(!strcmp(status,"착신중지"))
	else if(i_code == _E_SSR_C_N || i_code == _E_SSR_C_NP2 || i_code == _E_SSR_C_NP3 || i_code == _E_SSR_C_NP4 || i_code == _E_SSR_C_NP5 || i_code == _E_SSR_C_NP6) {
		printf("\n착신중지\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 7\
		where number = '%s' and status != '4'",outer_num);
		strcpy(status,"착신중지");
	}
	else {
		printf("\n발착신중지\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 5\
		where number = '%s' and status != '4' ",outer_num);
		strcpy(status,"발착신중지");
	}

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
		sprintf(errorCause,"number_manage Update error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}


	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,status,phoneid,crm_flag);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = 'S',flag='BOSS' where phoneid='%s' and defaultip = '%s'",phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					if(ret = commandSendUc(commandBuf,"PBO",messenger_ip, 1) < 0) {
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'PBO','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);

						printf("\nsqlcmd:(%s)",sqlcmd1);
						mysql_query(mysql, sqlcmd1);
					}
				}
				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'PBO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);

				/****추가 ***/
		//nn		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					_tcpWrite(masterFd, resPacket, strlen(resPacket));
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'PBO')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
	return 0;       
}



/*************************************************************************************************/
/*************************************************************************************************/
int procNumberExist(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"등록");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,

****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
/****무의미
	if(strlen(VA_LIST) >= 4) {
	}
*/

	/****** VA_LIST END ******/


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);
//printf("\n[5mdn:(%s)[0m",dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);
//printf("\n[5mi_code:(%d)[0m",i_code);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT(dn)->자사(carryno)
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= strange port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
//printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}

	//KT->자사->하나로  ==> 해지
//	if(*port_flag == '5' || *port_flag == '6') {
//printf("\n ================= 타사->자사 번호해지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//
//			strcpy(setdn,carry_no);
//			strcpy(outer_num,carry_no);
//			strcpy(display,dn);
//			sprintf(setcid,dn);
//
//
//			tel_convert(carry_no);
//			tel_convert(old_carry_no);
//			strcpy(outer_num,old_carry_no);
//
//			argv[0] = "DBO";
//			actionFlag = 4;
//	}

	if(*port_flag == '5') 
	{
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	//E_DN_C_NP6 (dn == carry_no) 부활 
	if(*port_flag == '6') 
	{
printf("\n ================= port_flag 6  부활 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";

	}

	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n============================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);

    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

//printf("11111111111111111111111\n");
    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				printf("\n........... number_manage 없음!!\n");
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
				mysql_free_result(result);
				return -1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	return 1;
}

int procPhoneAuthExist(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"등록");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,

****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
/****무의미
	if(strlen(VA_LIST) >= 4) {
	}
*/

	/****** VA_LIST END ******/


	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);
//printf("\n[5mdn:(%s)[0m",dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);
//printf("\n[5mi_code:(%d)[0m",i_code);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT(dn)->자사(carryno)
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= strange port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
//printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n ================= 타사->자사 번호해지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n============================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);

    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

//printf("11111111111111111111111\n");
    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;
	if(!authmysql)
		authinit(AUTH_SERVER);
	//sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where MACADDRESS = '%s' and SETDN = '%s' ",macaddr,outer_num);
	sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where SETDN = '%s' ",outer_num);
	if( ret = mysql_query(authmysql, sqlcmd) ) {
		sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Select error!(%s),%d",outer_num,__LINE__);
		logCmd();
		return -1;
	}   
	else  {
		result = mysql_store_result(authmysql);
		if(!result ) {
			sprintf(errorCause,"DCS_PHONE_AUTH result error!(%s),%d",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ){
				printf("\n...........DCS_PHONE_AUTH 없음!!\n");
				sprintf(errorCause,"DCS_PHONE_AUTH NOT EXIST!(%s)(%d)",outer_num,__LINE__);
				mysql_free_result(result);
				return -1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	return 1;
}


/*************************************************************************************************/
/*************************************************************************************************/
int procNewSVC(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64],record[10];
int cnt=0;
	unsigned char	*tmpP=NULL;
char cmd[120];
int count=0;
// 20190128 HOTLINE ADD
char commandBufIIR[1024];
memset(commandBufIIR,0,sizeof(commandBufIIR));

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));
	memset(ipcc_record,0,sizeof(ipcc_record));
	memset(ipcc_application,0,sizeof(ipcc_application));
	memset(ipcc_ivr,0,sizeof(ipcc_ivr));
	memset(moh_bill,0,sizeof(moh_bill));
	memset(console_bill,0,sizeof(console_bill));
	memset(autorec_bill,0,sizeof(autorec_bill));
	memset(blf_on,0,sizeof(blf_on));
	memset(serverip,0,sizeof(serverip));
	memset(record,0,sizeof(record));
	memset(bizskype,0,sizeof(bizskype));
	memset(bizproxyip,0,sizeof(bizproxyip));

        /* 20181108 TTS ADD */
        memset(tts_tick,0,sizeof(tts_tick));
        memset(tts_infinity,0,sizeof(tts_infinity));

		/* 20190329 MMS ADD */
		memset(mms_flag,0,sizeof(mms_flag));
		/* 20190329 OPEN API ADD */
		memset(api_flag,0,sizeof(api_flag));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"등록");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"개통");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,

****************/


	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");


	/****** VA_LIST START ******/
	if(*recvPacket[_VA_LIST].value)
		strcpy(VA_LIST,recvPacket[_VA_LIST].value);
	else
		strcpy(VA_LIST,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	strcpy(ipcc_record,"N");
	strcpy(ipcc_application,"N");
	strcpy(ipcc_ivr,"0");
	strcpy(moh_bill,"N");
	strcpy(console_bill,"N");
	strcpy(autorec_bill,"Y");
	strcpy(blf_on,"N");
	strcpy(bizskype,"N");

	/* 20190129 TTS ADD */
	strcpy(tts_tick,"tts_tick");	// ** 이전값을 유지하기 위해서 필드명 update시 tts_tick=tts_tick "'"없이 설정
	strcpy(tts_infinity,"N");

	/* 20190329 MMS ADD */
	strcpy( mms_flag, "N" );

	/* 20190329 OPEN API ADD */
	strcpy( api_flag, "N" );

	if(strlen(VA_LIST) >= 4) {

//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
//printf("\n[5mVA_LIST:(%s)[0m",VA_LIST);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(VA_LIST,":;\0");
		if(tmpP) {
			do {
printf("\n[7mVA_LIST:(%s)[0m",tmpP);
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4) ||  !strncmp(tmpP,"888",3)) {
					strcpy(order_rid,tmpP);
				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}
				else if(!strncmp(tmpP,"9015",4)) {
					strcpy(ipcc_application,"Y");
				}
				else if(!strncmp(tmpP,"9016",4)) {
					strcpy(ipcc_record,"Y");
				}
				else if(!strncmp(tmpP,"8298",4) || !strncmp(tmpP,"829",3)) {
					strcpy(moh_bill,"Y");
				}
				else if(!strncmp(tmpP,"9017",4) ||  !strncmp(tmpP,"901",3)) {
					strcpy(ipcc_ivr,tmpP);
				}
				else if(!strncmp(tmpP,"8991",4) ||  !strncmp(tmpP,"899",3)) {
                                        strcpy(console_bill,"Y");
                                }
				else if(!strncmp(tmpP,"9020",4) ||  !strncmp(tmpP,"902",3)) {
                                        strcpy(autorec_bill,"Y");
                                }
				else if(!strncmp(tmpP,"8892",4) ||  !strncmp(tmpP,"889",3)) {
                                        strcpy(blf_on,"Y");
                                }
				else if(!strncmp(tmpP,"A001",4) ||  !strncmp(tmpP,"A00",3)) {
                                        strcpy(bizskype,"Y");
                                }

				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4) ||  !strncmp(tmpP,"830",3)) {
					strcpy(before_num,tmpP);
				}
				/* 20190129 TTS 일회성 */
				else if(!strncmp(tmpP,"B001",4) ||  !strncmp(tmpP,"B00",3)) {
                                        strcpy(tts_tick,"'Y'");
                                }
				/* 20190129 TTS 무제한 */
				else if(!strncmp(tmpP,"B101",4) ||  !strncmp(tmpP,"B10",3)) {
					strcpy(tts_infinity,"Y");
                		}
				/* 20190329 MMS */
				else if( !strncmp( tmpP, "B201", 4 ) ) {
					if(*mms_flag != 'B' && *mms_flag != 'C')
						strcpy(mms_flag,"A");
                		}
				/* 20190329 MMS */
				else if( !strncmp( tmpP,"B202", 4 ) ) {
					if(*mms_flag != 'C')
						strcpy(mms_flag,"B");
                		}
				/* 20190329 MMS */
				else if( !strncmp( tmpP, "B203", 4 ) ) {
					strcpy(mms_flag,"C");
                		}
				/* 20190329 OPEN API */
				else if( !strncmp( tmpP, "B301", 4 ) ) {
					if(*api_flag != 'B')
						strcpy(api_flag,"A");
                		}
				/* 20190329 OPEN API */
				else if( !strncmp( tmpP,"B302", 4 ) ) {
					strcpy(api_flag,"B");
                		}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
//printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
printf("\n[5mipcc_application:(%s)[0m",ipcc_application);
printf("\n[5mipcc_record:(%s)[0m",ipcc_record);
printf("\n[5mmoh_bill:(%s)[0m",moh_bill);
printf("\n[5mconsole_bill:(%s)[0m",console_bill);
printf("\n[5mautorec_bill:(%s)[0m",autorec_bill);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
//printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

        if(strlen(ipcc_ivr) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));

                strcpy(tmpnum,ipcc_ivr+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(ipcc_ivr,tmpP);
		else
			strcpy(ipcc_ivr,"0");

        }
	else
		strcpy(ipcc_ivr,"0");

	/****** VA_LIST END ******/

	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);
//printf("\n[5mdn:(%s)[0m",dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);
//printf("\n[5mi_code:(%d)[0m",i_code);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT(dn)->자사(carryno)
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n ================= port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n ================= strange port_flag 2 타사->자사 dn:(%s),carry_no:(%s)",dn,carry_no);
//printf("\nstrange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
*/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			//strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),carry_no:(%s)(%d)",outer_num,carry_no,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n ================= port_flag 3 or 4 자사->타사 휴지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//printf("\n일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			//strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			argv[5] = before_num;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),old_carry_no:(%s)(%d)",outer_num,old_carry_no,__LINE__);
				return -1;
			}

			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;

	}

	//KT->자사->하나로  ==> 해지
//	if(*port_flag == '5' || *port_flag == '6') {
//printf("\n ================= 타사->자사 번호해지 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
//
//			strcpy(setdn,carry_no);
//			strcpy(outer_num,carry_no);
//			strcpy(display,dn);
//			sprintf(setcid,dn);
//
//
//			tel_convert(carry_no);
//			tel_convert(old_carry_no);
//			strcpy(outer_num,old_carry_no);
//
//			argv[0] = "DBO";
//			actionFlag = 4;
//	}
	if(*port_flag == '5') 
	{
printf("\n ================= 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "DBO";
			actionFlag = 4;
	}

	//E_DN_C_NP6 (dn == carry_no) 부활 
	if(*port_flag == '6') 
	{
printf("\n ================= port_flag 6  부활 dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";

	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_new_sip_pwd].value)
		strcpy(sippwd,recvPacket[_new_sip_pwd].value);
	else
		strcpy(sippwd,"1111");

//printf("\n[7m[5msippwd:(%s)[0m[0m",recvPacket[_new_sip_pwd].value);
//printf("\n[7m[5msippwd:(%s)[0m[0m",sippwd);

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);
//printf("\n[7m[5mauto_area:(%s)[0m[0m",auto_area);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n============================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n============================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);

    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

//printf("11111111111111111111111\n");
    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_manage Select error!(%s),%d",outer_num,__LINE__);
		return -1;
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			return -1;
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
				//uc olddomain 으로 조회
				if(!strcmp(domain,"lgdacom.net")){
					printf("\n ================= DOMAIN 이 LGDACOM.NET 인경우 NUMBER_MANAGE DOMAIN 으로 설정 \n");
					printf("\n>>>> BEFORE domain(%s),olddomain(%s)",domain,olddomain);
					strcpy(domain,olddomain);
					printf("\n>>>> AFTER domain(%s),olddomain(%s)",domain,olddomain);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\n number_list 조회 sqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		sprintf(resPacket,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(errorCause,"number_list Select error!(%s)(%d)",outer_num,__LINE__);
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	{
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);

			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);


			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");


				{
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,record from number_manage where 070number = '%s'",outer_num);
				printf("\n nubmer_manage 조회 sqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					sprintf(resPacket,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
					logCmd();
					return -1;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
							return -1;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
/**
phoneid,cid,letter_flag,record_flag,crm_flag
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
*/
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(bizproxyip, row[5]?row[5]:"");
									ps_delSpace(bizproxyip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(record, row[11]?row[11]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//if(strcmp(tmprid1,oldcid) && strlen(tmprid1) > 5) {}
						//if(strcmp(tmprid1,oldcid) ) 
                                                //if(i_code == _A_8888_C_N || strcmp(tmprid1,oldcid))
                                                if(strstr(recvPacket[_code].value,"A_8888_") || strcmp(tmprid1,oldcid))
                                                {
							printf("\n[1;41m =================(%s) ->(%s) CID 변경  code(%s) %s [0m\n",oldcid,tmprid1,recvPacket[_code].value,(i_code == _A_8888_C_N)?"True":"False" );
							printf("\n>>> tmprid1(%s)",tmprid1);
							printf("\n>>> oldcid(%s)",oldcid);

                                                //        if(strcmp(tmprid1,oldcid))
                                                        {
							// BMLINK 20171030 MODIFY
                                                            printf("\n procNewSVC ==========================check_cidlist start...");
                                                            int checked_cidresult=0;
                                                            if(PVS == 1
                                                                //&& strlen(oldorg_num) < 3 && !strstr(recvPacket[_code].value,"_8888_C_") // ported-in 은 org_num으로 무조건 cid_list에 추가 되며 이후 장비 변경/서비스변경시에는 아무 정보도 안들어옴
                                                             ) {
                                                                    checked_cidresult = check_cidlist(tmprid1,domain,prefix,outer_num,serverip, NULL,oldorg_num, "");

                                                                //if(strlen(tmprid1) > 5 && checked_cidresult == 0 && strcmp(tmprid1,oldcid) /* add 20171018 chg cid */) 
                                                                if(strlen(tmprid1) > 5 /*&& checked_cidresult == 0*/ /* add 20171018 chg cid */) 
                                                                {
                                                                    printf("\n ================= CID_LIST DELETE \n");
                                                                    sprintf(sqlcmd," DELETE FROM cid_list WHERE cid = '%s' AND domain = '%s' AND user = '%s'",tmprid1,domain,outer_num);
                                                                    printf("\nsqlcmd:(%s)",sqlcmd);
                                                                    if( mysql_query(mysql, sqlcmd) ) {
                                                                        if(mysql)
                                                                            mysql_close(mysql);
                                                                        
                                                                        sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                        sprintf(resPacket,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                        logCmd();
                                                                    }
                                                                        printf("\n ================= CID_LIST INSERT \n");
                                                                        sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
                                                                        '%s','%s','%3.3s','%s')",tmprid1,domain,oldphoneid+1,outer_num);
                                                                //	'%s','%s','%3.3s','system')",tmprid1,domain,oldphoneid+1);
                                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                                        if( mysql_query(mysql, sqlcmd) ) {
                                                                                sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                        }
                                                                }
                                                            }
                                                            printf("\n procNewSVC ==========================check_cidlist end...");
                                                        }//endif
							// BMLINK 20171030 MODIFY END
							printf("\n ================= CID & LETTER_FLAG & RECORD_FLAG & CRM_FLAG & OPTION5 UPDATE \n"); 
// ORG 20171102 RID없이 부가서비스 변경시호처리 RID초기화 않함(호처리 UBU) 
//                                                        sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);
//if(i_code == _A_8888_C_N && ( strlen(tmprid1) == 0 || strlen(tmprid1)>5) )
//아래와 같이 변경 _A_8888_C_N 플래그가 존재 하는 경우
//if(i_code == _A_8888_C_N)
if(strstr(recvPacket[_code].value,"A_8888_"))
{
								//20190129 TTS sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);
								// 부가 서비스 8888 코드가 있고 RID가 변경일 경우
								// 20190320 MMS sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,outer_num);
								// ** tts_tick = %s "'" 없이 이전값을 유지하기 위해서 필드명 update시 tts_tick=tts_tick "'"없이 설정
								//20190329 OPEN API sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s',mms_flag='%s' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,mms_flag,outer_num);
								sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s',mms_flag='%s', api_flag='%s' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,mms_flag,api_flag,outer_num);

                                                                //if(oldphoneid && strlen(oldphoneid) == 8)
                                                                if(strlen(tmprid1) < 5 && oldphoneid && strlen(oldphoneid) == 8)
                                                                {
                                                                    printf("\n[1;41m phone(%s), old(%s)[0m\n",phoneid,oldphoneid);
                                                                    argv[2] = oldphoneid+4;
                                                                    procDID();
                                                                }
}else{
								// 부가 서비스 8888이 없고 RID 변경일 경우
								// 20190129 TTS sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);
								// 20190320 MMS sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,outer_num);
								// ** tts_tick = %s "'" 없이 이전값을 유지하기 위해서 필드명 update시 tts_tick=tts_tick "'"없이 설정
								// 20190320 OPEN API sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s', mms_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,mms_flag,outer_num);
								sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' ,ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s', console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s', mms_flag='%s', api_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,mms_flag,api_flag,outer_num);
}
//END 20171102
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
//NEWNEW
							if(*moh_bill == 'Y') {
								sprintf(sqlcmd,"update custom_info set moh_bill = '%s' where domain='%s'",domain);
								mysql_query(mysql, sqlcmd);
							}
						}
						else {
//20171103 ADD
							printf("\n[1;41m ====else =============(%s) ->(%s) CID 변경  code(%s) %s [0m\n",oldcid,tmprid1,recvPacket[_code].value,(i_code == _A_8888_C_N)?"True":"False" );
                                                     //if( i_code != _A_8888_C_N && strlen(tmprid1) < 5 ) 
                                                     if(  strlen(tmprid1) < 5 
                                                            && strlen(oldorg_num) < 5
                                                          //   && !strstr(recvPacket[_code].value,"E_SV_U_NP2")
                                                          //   && !strstr(recvPacket[_code].value,"_8888_C_")
                                                     ){ 
//A_8888 없고 rid도 없고 number_mange 에 cid가 빈값인데 cid_list에user 해당정보가  혹시 남아 있는 경우에 삭제 처리
                                                         /* 20171106 수정 SYSTEM 보존 */
                                                        //sprintf(sqlcmd, "delete from cid_list where  domain='%s'",domain);
                                                        sprintf(sqlcmd, "delete from cid_list where  domain='%s'  and  user='%s'",domain,outer_num);
						printf("\n[1;42m ===A_8888 없고 rid도 없고 number_mange 에 cid가 빈값인데 cid_list에user 해당정보가  혹시 남아 있는 경우에 삭제 처리(%s)===[0m \n",sqlcmd);
                                                        if( ret = mysql_query(mysql, sqlcmd)){
                                                            sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                                                            if(mysql)
                                                                mysql_close(mysql);
                                                            sqlinit();
                                                            if( ret = mysql_query(mysql, sqlcmd) )  {
                                                                 sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                 sprintf(resPacket,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                logCmd();
                                                            }
                                                        }
                                                     }
//20171103 END

						printf("\n ================= LETTER_FLAG & RECORD_FLAG & CRM_FLAG & OPTION5 UPDATE \n");
								// RID 변경이 없을 경우
								// 20190129 TTS sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s' , console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s'  where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);
								// 20190320 MMS sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s' , console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,outer_num);
								// 20190320 OPEN API sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s' , console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s', mms_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity, mms_flag, outer_num);
								sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',ipcc_application='%s',ipcc_record = '%s',moh_bill = '%s', ipcc_ivr = '%s' , console_bill = '%s' , autorec_bill = '%s' ,blf_on = '%s', tts_tick = %s, tts_infinity='%s', mms_flag='%s', api_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,tts_tick,tts_infinity,mms_flag,api_flag,outer_num);

								// ** tts_tick = %s "'" 없이 이전값을 유지하기 위해서 필드명 update시 tts_tick=tts_tick "'"없이 설정

							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"number_manage Select error!(%s)",outer_num);
							}

						} //end else


						if(*moh_bill == 'Y') {
							sprintf(sqlcmd,"update custom_info set moh_bill = '%s' where domain='%s'",domain);
							mysql_query(mysql, sqlcmd);
						}
						//IPCC IVR
						if(!strncmp(outer_num,"070",3) && atoi(ipcc_ivr) > 0) {
							sprintf(sqlcmd, "update sip_buddies set incominglimit = '%s' ,bizskype = '%s' where callerid='<%s>'",ipcc_ivr,bizskype,outer_num);
							printf("\n.... CALL_LIMIT sqlcmd : (%s)",sqlcmd);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								printf("\n1. |ERR|mysql_update error!(%s, %s)",mysql_error(mysql),sqlcmd );
							}
//							if(count = mysql_affected_rows(mysql)) {
//								printf("\nCall Limit Set Success : (%s) -> (%s) call\n",outer_num,ipcc_ivr);
//								sprintf(cmd,"/usr/sbin/asterisk -rx 'sip prune realtime peer %s'",outer_num);
//								system(cmd);
//							}
//							else
//								printf("\n(%s) is not found in sip_buddies...\n",outer_num);
						}else{
							sprintf(sqlcmd, "update sip_buddies set bizskype='%s' where callerid='<%s>'",bizskype,outer_num);
							printf("\n.... CALL_LIMIT sqlcmd : (%s)",sqlcmd);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								printf("\n1. |ERR|mysql_update error!(%s, %s)",mysql_error(mysql),sqlcmd );
							}

						}
						

/***********************************************
						if(strcmp(tmprid1,oldcid) && strlen(tmprid1) > 5 && i_code == _A_8888_C_N) {
							sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
							'%s','%s','%3.3s','system')",tmprid1,domain,oldphoneid+1);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
							sprintf(sqlcmd,"update number_manage set cid='%s',option5='Y' where 070number='%s'",tmprid1,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
						}
						else if(i_code == _A_7076_C_N) {
							sprintf(sqlcmd,"update number_manage set letter_flag='%s' where 070number='%s'",letter_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}

						}
						else if(i_code == _A_7092_C_N || i_code == _A_7093_C_N) {
							sprintf(sqlcmd,"update number_manage set record_flag='%s' where 070number='%s'",record_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
						}
						else if(i_code == _A_7096_C_N || i_code == _A_7097_C_N) {
							sprintf(sqlcmd,"update number_manage set crm_flag='%s' where 070number='%s'",crm_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(errorCause,"inser cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
							}
						}
************************************************/
						//UPDATE DCS_PHONE_AUTH BLF
						if(!strncmp(blf_on,"Y",1)){
							sprintf(sqlcmd,"update DCS_PHONE_AUTH set cc='uc0001',SIPSERVICE='uc0001',blf_flag='8892'\
							where setdn = '%s'",outer_num);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							if(!authmysql)
								authinit(AUTH_SERVER);

							if( mysql_query(authmysql, sqlcmd) ) {
								sprintf(errorCause,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
								sprintf(resPacket,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
								logCmd();
								return -1;
							}
						}else if(!strncmp(blf_on,"N",1)){
							sprintf(sqlcmd,"update DCS_PHONE_AUTH set cc='uc0001',SIPSERVICE='uc0001',blf_flag=''\
							where setdn = '%s'",outer_num);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							if(!authmysql)
								authinit(AUTH_SERVER);

							if( mysql_query(authmysql, sqlcmd) ) {
								sprintf(errorCause,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
								sprintf(resPacket,"ERROR:DCS_PHONE_AUTH update error!(%s)(%d)(%s)",outer_num,__LINE__,mysql_error((authmysql)));
								logCmd();
								return -1;
							}
						}

						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							printf("\ncrm_flag(%s),oldmessenger_ip(%s),oldcrm_flag(%s)\n",crm_flag,oldmessenger_ip,oldcrm_flag);
							//신규
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
							printf("\n ================= CRM 신규 처리 \n");
							//if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1")) {}
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							//if(strcmp(oldpasswd,"1111")) {}
							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}
	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							//변경
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
							printf("\n ================= CRM 변경 처리 \n");
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							//해소
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
							printf("\n ================= CRM 해소 처리 \n");
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							//해지
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
							printf("\n ================= CRM 해지 처리 \n");
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							printf("\n ================= UBU 처리 \n");
							//sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on);
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,bizskype,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(errorCause,"sync_info Insert error!(%s)",commandBuf);
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							//sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on);
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,bizskype,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) 
									{
										sprintf(errorCause,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										return -1;
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(errorCause,"server_info Select error!(%s)(%d)",serverip,__LINE__);
										printf("\nresPacket:((((%s))))",resPacket);
										return -1;
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d), oldphoneid(%s)",row_num,oldphoneid);
									printf("\nrow_num: (%d), oldphoneid(%4.4s)",row_num,oldphoneid+4);
//20190129 ADD HOTLINE
									if(oldphoneid && strlen(oldphoneid) > 2 && tmprid1 && strlen(tmprid1) > 5){
										//sprintf(commandBufIIR,"|IIR|%s@%s|%4.4s|%s|N|0%s|",oldtmpid,domain,oldphoneid+4,record,oldphoneid+1);
										sprintf(commandBufIIR,"|IIR|%s@%s|%4.4s|%s|N|%s|",user,domain,oldphoneid+4,record,oldphoneid);
									}

//20190129 ADD HOTLINE end

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
//20190129 수정 HOTLINE
											//if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) 
											if((ret = commandSend(commandBuf,serverip,"sub1") < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
											if(oldphoneid && strlen(oldphoneid) > 2 && tmprid1 && strlen(tmprid1)> 5){
											    commandSend(commandBufIIR,serverip,"sub2");
											}
//20181229 ADD HOTLINE end
										}
									}
									mysql_free_result(result);
									result = NULL;
						}

					sprintf(resPacket,"|RES|%s",serverip);
					return 0;
				}
			}
			break;
		}
		mysql_free_result(result);
		result = NULL;
		//printf("\n.........................................................");
	}

    sprintf(resPacket,"|RES|SVC userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}



int procNewSABO(i_code)
int i_code;	
{
}

/****************************************************************************************************/
/****************************************************************************************************/
int procNewRBO(i_code)
int i_code;	
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  int	actionFlag = 0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20],messenger_ip[20];
  char    sqlcmd[1024],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32],sqlcmd1[256];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    subs_no[21];
char    prodcd[21];
char    prod_cd[21];
char    relprodcd[21];
//char    servicetype[21];
char    service_type[21];
char    sitecode[21];
char    cpe_type[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    new_fq_dn[64];
char    old_fq_dn[64];
char    protocol[11];
char    etc[20];
char    new_dn[21];
char    dn[21];
char    old_dn[21];
char    new_mac_address[21];
char    old_mac_address[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    old_carry_no[21];
char    new_carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    old_port_flag[21];
char    new_port_flag[21];
char    first[5];
char    mid[5];
char    last[5];
char    sn[64];
char    old_sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;

	memset(order_rid,0,sizeof(order_rid));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(old_sn,0,sizeof(old_sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(dn,0,sizeof(dn));
	memset(carry_no,0,sizeof(carry_no));
	memset(old_carry_no,0,sizeof(old_carry_no));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(tmpemail,recvPacket[_new_fq_dn].value);
	argv[1] = tmpemail;
	parseMailAddr(1);

	if(*recvPacket[_timestamp].value)
		strcpy(timestamp,recvPacket[_timestamp].value);
	else
		strcpy(timestamp,"");


	if(*recvPacket[_action].value)
		strcpy(action,recvPacket[_action].value);
	else
		strcpy(action,"중지");
	strcpy(gAction,action);

	if(*recvPacket[_status].value) {
		strcpy(status,recvPacket[_status].value);
		strcpy(req_status,status);
	}
	else
		strcpy(status,"발신중비");

	if(*recvPacket[_type].value)
		strcpy(type,recvPacket[_type].value);
	else
		strcpy(type,"장비등록");

	if(*recvPacket[_flag].value)
		strcpy(flag,recvPacket[_type].value);
	else
		strcpy(flag,"");


	if(*recvPacket[_effectdate].value)
		strcpy(effectdate,recvPacket[_effectdate].value);
	else
		strcpy(effectdate,"");
/***************
_new_dn,
_old_dn,
_new_mac_address,
_old_mac_address,
_new_carry_no,
_old_carry_no,
_new_fq_dn,
_old_fq_dn,
_new_port_flag,
_old_port_flag,
_subs_no,
_line_no,
_prod_cd,
_service_type,
_cpe_type,
_protocol,
_area_code,
_auto_area,
****************/

	if(*recvPacket[_new_dn].value)
		strcpy(dn,recvPacket[_new_dn].value);
	else
		strcpy(dn,"");

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");
/****
	if(*recvPacket[_new_set_dn].value)
		strcpy(setdn,recvPacket[_new_set_dn].value);
	else
		strcpy(setdn,dn);
*/

	if(*recvPacket[_old_dn].value)
		strcpy(old_dn,recvPacket[_old_dn].value);
	else
		strcpy(old_dn,"");


	if(*recvPacket[_new_mac_address].value)
		strcpy(macaddr,recvPacket[_new_mac_address].value);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(*recvPacket[_old_mac_address].value)
		strcpy(old_mac_address,recvPacket[_old_mac_address].value);
	else
		strcpy(old_mac_address,"");

	if(*recvPacket[_new_carry_no].value)
		strcpy(carry_no,recvPacket[_new_carry_no].value);
	else {
		strcpy(carry_no,"");
	}

	if(*recvPacket[_old_carry_no].value)
		strcpy(old_carry_no,recvPacket[_old_carry_no].value);
	else {
		strcpy(old_carry_no,"");
	}

	if(*recvPacket[_new_fq_dn].value)
		strcpy(fqdn,recvPacket[_new_fq_dn].value);
	else
		strcpy(fqdn,"unknown@unknown.unknown");

	if(*recvPacket[_old_fq_dn].value)
		strcpy(old_fq_dn,recvPacket[_old_fq_dn].value);
	else
		strcpy(old_fq_dn,"unknown@unknown.unknown");

	if(*recvPacket[_new_port_flag].value)
		strcpy(port_flag,recvPacket[_new_port_flag].value);
	else
		strcpy(port_flag,"");

	if(*recvPacket[_old_port_flag].value)
		strcpy(old_port_flag,recvPacket[_old_port_flag].value);
	else
		strcpy(old_port_flag,"");

	if(*recvPacket[_subs_no].value)
		strcpy(subsno,recvPacket[_subs_no].value);
	else
		strcpy(subsno,"");

	if(*recvPacket[_new_equip_sn].value)
		strcpy(sn,recvPacket[_new_equip_sn].value);
	else
		strcpy(sn,"");

	if(*recvPacket[_old_equip_sn].value)
		strcpy(old_sn,recvPacket[_old_equip_sn].value);
	else
		strcpy(old_sn,"");

	case_lower(sn);

	if(*recvPacket[_line_no].value)
		strcpy(lineno,recvPacket[_line_no].value);
	else
		strcpy(lineno,"");
	strcpy(rellineno,lineno);

//	if(*recvPacket[_prod_cd].value)
//		strcpy(prodcd,recvPacket[_prod_cd].value);
//	else
//		strcpy(prodcd,"");

	if(*recvPacket[_prod_cd].value)
		strcpy(prodcd,"202");
	else
		strcpy(prodcd,"202");

	if(*recvPacket[_service_type].value)
		strcpy(servicetype,recvPacket[_service_type].value);
	else
		strcpy(servicetype,"");

	if(*recvPacket[_cpe_type].value)
		strcpy(cpetype,recvPacket[_cpe_type].value);
	else
		strcpy(cpetype,"");

	if(*recvPacket[_protocol].value)
		strcpy(protocol,recvPacket[_protocol].value);
	else
		strcpy(protocol,"SIP");

	if(*recvPacket[_area_code].value) {
		if(!strncmp(recvPacket[_area_code].value,"000",3))
				strcpy(areacode,recvPacket[_area_code].value+2);
		else if(!strncmp(recvPacket[_area_code].value,"00",2))
				strcpy(areacode,recvPacket[_area_code].value+1);
		else
				strcpy(areacode,recvPacket[_area_code].value);
	}
	else
		strcpy(areacode,"070");

	if(!strcmp(areacode,"070") || !strcmp(areacode,"0070"))
		strcpy(areacode,"");

	if(*recvPacket[_auto_area].value) {
		if(!strncmp(recvPacket[_auto_area].value,"000",3))
				strcpy(auto_area,recvPacket[_auto_area].value+2);
		else if(!strncmp(recvPacket[_auto_area].value,"00",2))
				strcpy(auto_area,recvPacket[_auto_area].value+1);
		else
				strcpy(auto_area,recvPacket[_auto_area].value);
	}
	else
		strcpy(auto_area,"070");

	if(!strcmp(auto_area,"070") || !strcmp(auto_area,"0070"))
		strcpy(auto_area,"");



	if(fqdn && *fqdn)
			strcpy(tmpfqdn,fqdn);

	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(errorCause, "(%s)data format error!!!",fqdn);
				return -1;
		}
printf("\ntmpP-user:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
		if(tmpP) {
				strcpy(domain,tmpP);
printf("\ntmpP-domain:(%s)",tmpP);
		}

		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

	//printf("\ndomain:(%s)",domain);


	strcpy(display,"");
	strcpy(setcid,"");


	if(strlen(carry_no) < 9)
		strcpy(carry_no,"");

	tel_convert(carry_no);
	tel_convert(dn);


//printf("\n[5mport_flag:(%s)[0m",port_flag);

	//일반 번호
	if(*port_flag == '\0' || strlen(carry_no) < 8) {
printf("\n일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			actionFlag = 0;
			argv[0] = "IBO";
	}

	//KT->자사
	if(*port_flag == '2' && strlen(carry_no) > 8) {
printf("\n 타사 -> 자사 port flag 2 일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);
			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);
			actionFlag = 2;
			argv[0] = "IBO";
	}
	else if(*port_flag == '2') {
printf("\n 타사->자사 port flag 2 strange.....일반 번호dn:(%s),carry_no:(%s)",dn,carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			argv[0] = "IBO";
	}

/****
|007086334313@premium_c_16291.lgdacom.net|2011-08-01 09:02:12:654|변경|해지|장비등록|0|2011-08-01 09:02
:12|1805085|202|201|2233092|Premium|무선폰|0003.2a2b.4e20|0.0.0.0|007086334313@premium_c_16291.lgdacom.net 16|SIP|0070|007086334313|007086334313||128||||007077069079 26|007086334313||||2KRU9Z5L|1|||||0|D2A4000348|(주)파워닉스|007086334313@premium_c_16291.lgdacom.net|
***/
	//자사->KT,하나로 등록, 변경
	if((*port_flag == '3' || *port_flag == '4')  && strlen(carry_no) > 8) {
printf("\n 자사-> 타사 port flag 3 or 4 휴지 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);
			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);


/****
			strcpy(setdn,old_carry_no);
			strcpy(outer_num,old_carry_no);
			strcpy(display,old_dn);
****/

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";

			/*****
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			*/
			return 0;
	}
	else if((*port_flag == '3' || *port_flag == '4')  && strlen(old_carry_no) > 8) {
printf("\n 자사->타사 port flag 3 or 4 휴지 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			tel_convert(dn);
			tel_convert(carry_no);
			tel_convert(old_dn);
			tel_convert(old_carry_no);

			strcpy(setdn,dn);
			strcpy(outer_num,dn);
			strcpy(display,dn);
			strcpy(before_num,old_carry_no);
			strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

			actionFlag = 3;
			argv[0] = "IBO";
/***********
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = old_carry_no;
			argv[4] = NULL;
			ret = procICH();
			sprintf(resPacket,"|RES|127.0.0.1|outernum:(%s),carry_no:(%s)",outer_num,carry_no);
			return 0;
*/
	}

	//KT->자사->하나로  ==> 해지
	if(*port_flag == '5' || *port_flag == '6') {
printf("\n 타사->자사 port flag 5 or 6 번호 삭제 일반 번호dn:(%s),carry_no:(%s), old_dn:(%s),old_carry_no:(%s)",dn,carry_no,old_dn,old_carry_no);

			strcpy(setdn,carry_no);
			strcpy(outer_num,carry_no);
			strcpy(display,dn);
			sprintf(setcid,dn);


			tel_convert(carry_no);
			tel_convert(old_carry_no);
			strcpy(outer_num,old_carry_no);

			argv[0] = "IBO";
			actionFlag = 4;
	}


	//printf("\ndisplay:(%s), cid:(%s)",display,setcid);

	if(*recvPacket[_sippwd].value)
		strcpy(sippwd,recvPacket[_sippwd].value);
	else
		strcpy(sippwd,"1111");

	if(*recvPacket[_cust_name].value)
		strcpy(cust_name,recvPacket[_cust_name].value);
	else
		strcpy(cust_name,"");

//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
//printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");


	printf("\n=========================\n");
	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	printf("\n=========================\n");

	//printf("\n============================>dn:(%s)",dn);
	//printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"


	if(!strcmp(sippwd,"1111"))
		strcpy(sip_passwd,"1111");

//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
//printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	row_num= 0;


		if(PVS == 1 && MASTER == 1)  {

			sprintf(sqlcmd, "select crm_flag,messenger_ip,phoneid,defaultip,inner_digit from number_manage where 070number = '%s'",outer_num);
			printf("\n number_manage 조회 sqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
				logCmd();
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(errorCause,"number_manage Select error!(%s)(%d)",outer_num,__LINE__);
			}   
			else  {
							
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
					sprintf(errorCause,"number_manage is not!(%s)(%d)",outer_num,__LINE__);
				}
				else {
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(crm_flag, row[0]?row[0]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
						ps_delSpace(messenger_ip);

						strcpy(phoneid, row[2]?row[2]:"---");
						ps_delSpace(phoneid);
						strcpy(serverip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(serverip);
						strcpy(inner_digit, row[4]?row[4]:"4");
						ps_delSpace(inner_digit);
					}
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(prefix,"%3.3s",phoneid+1);
				*phoneid = '1';
			}
	}
	else  {
	    if(argv[2] && *argv[2])
			strcpy(outer_num,argv[2]);
	    if(argv[3] && *argv[3])
			strcpy(status,argv[3]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


//printf("\nmacaddr: (%s)",macaddr);
/*******************************
        sprintf(sqlcmd, "select status from number_list where number='%s'",outer_num);
        printf("\nsqlcmd:(%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }

        result = mysql_store_result( mysql );
        if(result ) {
                row_num = mysql_num_rows(result);
                if( row_num == 0 );
                else {
                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(tmp, row[0]?row[0]:"1");
                                ps_delSpace(tmp);
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
***********************************/

	//if(!strcmp(status,"발신해소"))
	if(i_code == _E_RS_C_N || i_code == _E_RS_C_NP2 || i_code == _E_RS_C_NP3 || i_code == _E_RS_C_NP4 || i_code == _E_RS_C_NP5 || i_code == _E_RS_C_NP6) {
		printf("\n발신해소\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 1\
		where number = '%s' and status != '4' ",outer_num);
		strcpy(status,"발신해소");
	}

	//else if(!strcmp(status,"착신해소"))
	else if(i_code == _E_RSR_C_N || i_code == _E_RSR_C_NP2 || i_code == _E_RSR_C_NP3 || i_code == _E_RSR_C_NP4 || i_code == _E_RSR_C_NP5 || i_code == _E_RSR_C_NP6) {
		printf("\n착신해소\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 1\
		where number = '%s' and status != '4' ",outer_num);
		strcpy(status,"착신해소");
	}
	else {
		printf("\n발착신해소\n");
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 1\
		where number = '%s' and status != '4' ",outer_num);
		strcpy(status,"발착신해소");
	}

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
		sprintf(errorCause,"number_manage Update error!(%s)(%d)",outer_num,__LINE__);
		logCmd();
		return -1;
	}


	if(PVS == 1 && MASTER == 1) 
	{
				//FOR STATUS 5
				strcpy(status,"발착신해소");
				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,status,phoneid,crm_flag);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					if(ret = commandSendUc(commandBuf,"RBO",messenger_ip, 1) < 0) {
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'PBO','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);

						printf("\nsqlcmd:(%s)",sqlcmd1);
						mysql_query(mysql, sqlcmd1);
					}
				}
				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'RBO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					_tcpWrite(masterFd, resPacket, strlen(resPacket));
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'RBO')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
	return 0;       
}

int procNewRABO(i_code)
int i_code;	
{
}

int procNewIBP(i_code)
int i_code;	
{
}

int procNewDBP(i_code)
int i_code;	
{
}

int procNewSABP(i_code)
int i_code;	
{
}

int procNewRBP(i_code)
int i_code;	
{
}

int procNewRABP(i_code)
int i_code;	
{
}


/*************************************************************************
*************************************************************************/
int
procLocally(cmdP)
Cmd	*cmdP;
{
int ret = 0;


	if(cmdP->code != RUN && cmdP->code != IIA && cmdP->code != DIA && cmdP->code != RIA && cmdP->code != RM1)
		parseMailAddr(cmdP->code);

	switch (cmdP->code) {

        case SYN : ret = procSYN(); break;
        case INO : ret = procINO(1,NULL,__LINE__); break;
        case ASM : ret = procASM(); break;
        case CTR : ret = procCTR(); break;
        case LTQ : ret = procLTQ(); break;
        case ITQ : ret = procITQ(); break;
        case _KR : ret = proc_KR(); break;
        case ILT : ret = procILT(); break;
        case RLT : ret = procRLT(); break;
        case _KS : ret = proc_KS(); break;
        case _HS : ret = proc_HS(); break;
        case _HR : ret = proc_HR(); break;

        case BLK : ret = procBLK(); break;
        case PMS : ret = procPMS(); break;
        case STO : ret = procSTO(); break;
        case UBU : ret = procUBU(); break;
        case IBO : ret = procIBO(); break;
        case ICA : ret = procICA(); break;
        case DCA : ret = procDCA(); break;
        case RCA : ret = procRCA(); break;
        case MON : ret = procMON(); break;
        case IIB : ret = procIIB(); break;
        case CRT : ret = procCRT(); break;
        case DBO : ret = procIBO(); break;
        case SBO : ret = procIBO(); break;
        case PBO : ret = procPBO(); break;
        case RBO : ret = procRBO(); break;
        case UBO : ret = procIBO(); break;
        case IFW : ret = procIFW(); break;
        case IF1 : ret = procIF1(); break;
        case RCV : ret = procRCV(); break;
        case RC1 : ret = procRC1(); break;
        case RC2 : ret = procRC2(); break;
        case RC9 : ret = procRC9(); break;
        case RC3 : ret = procRC3(); break;
        case RC5 : ret = procRC5(); break;
        case RC6 : ret = procRC6(); break;
        case DC5 : ret = procDC5(); break;
        case RNV : ret = procRNV(); break;
        case HNT : ret = procHNT(); break;
        case ANT : ret = procANT(); break;
        case AN1 : ret = procAN1(); break;
        case ARS : ret = procARS(); break;
        case RUN : ret = procRUN(); break;
        case RIN : ret = procRIN(); break;
        case NUM : ret = procNUM(); break;
        case ROT : ret = procROT(); break;
        case IRG : ret = procIRG(); break;
        case URG : ret = procURG(); break;
        case SRG : ret = procSRG(); break;
        case SR1 : ret = procSR1(); break;
        case SRT : ret = procSRT(); break;
        case UNG : ret = procUNG(); break;
        case UNN : ret = procUNN(); break;
        case CC1 : ret = procCC1(); break;
        case PRY : ret = procPRY(); break;
        case CNO : ret = procCNO(); break;
        case BND : ret = procBND(); break;
        case PCK : ret = procPCK(); break;
        case UDP : ret = procUDP(); break;
        case UUG : ret = procUUG(); break;
        case DDG : ret = procDDG(); break;
        case RID : ret = procRID(); break;
        case IID : ret = procIID(); break;
        case ICH : ret = procICH(); break;
        case DID : ret = procDID(); break;
        case IIR : ret = procIIR(); break;
        case DUR : ret = procDUR(); break;
        case RWH : ret = procRWH(); break;
        case RW1 : ret = procRW1(); break;
        case IWH : ret = procIWH(); break;
        case DWH : ret = procDWH(); break;
        case RBL : ret = procRBL(); break;
        case RB1 : ret = procRB1(); break;
        case RBD : ret = procRBD(); break;
        case IBL : ret = procIBL(); break;
        case DBL : ret = procDBL(); break;
        case SND : ret = procSND(); break;
        case SNU : ret = procSNU(); break;
        case REC : ret = procREC(); break;
        case RE_ : ret = procRE_(); break;
        case CHN : ret = procCHN(); break;
        case HNG : ret = procHNG(); break;
        case DEC : ret = procDEC(); break;
        case DE_ : ret = procDE_(); break;
        case RMS : ret = procRMS(); break;
        case VMS : ret = procVMS(); break;
        case DMS : ret = procDMS(); break;
        case ISM : ret = procISM(); break;
        case I_S : ret = procI_S(); break;
        case IFS : ret = procIFS(); break;
        case R_S : ret = procR_S(); break;
        case RSM : ret = procRSM(); break;
        case DSM : ret = procDSM(); break;
        case RRD : ret = procRRD(); break;
        case DRD : ret = procDRD(); break;
        case PWD : ret = procPWD(); break;
        case IFD : ret = procIFD(); break;
        case DFD : ret = procDFD(); break;
        case RDD : ret = procRDD(); break;
        case RRR : ret = procRRR(); break;

        case DRG : ret = procD07(1); break;
        case D08 : ret = procD08(1); break;
        case UFD : ret = procUFD(); break;
        case RFD : ret = procRFD(); break;
        case RFW : ret = procRFW(); break;
        case RF_ : ret = procRF_(); break;
        case RF1 : ret = procRF1(); break;
        case RF3 : ret = procRF3(); break;
        case RF2 : ret = procRF2(); break;
        case RF4 : ret = procRF4(); break;
        case DFW : ret = procDFW(); break;
        case IVM : ret = procIVM(); break;
        case IPK : ret = procIPK(); break;
        case UMM : ret = procUMM(); break;
        case USP : ret = procUSP(); break;
        case REV : ret = procREV(); break;
        case RE1 : ret = procRE1(); break;
        case RE2 : ret = procRE2(); break;
        case ICR : ret = procICR(); break;
        case IIC : ret = procIIC(); break;
        case UCR : ret = procUCR(); break;
        case ICD : ret = procICD(); break;
        case IC1 : ret = procIC1(); break;
        case DCD : ret = procDCD(); break;
        case DC1 : ret = procDC1(); break;
        case CHK : ret = procCHK(); break;
        case RCR : ret = procRCR(); break;
        case INF : ret = procINF(); break;

        case ICG : ret = procICG(); break;
        case UCG : ret = procUCG(); break;
	case CNF : ret = procCNF(); break;
	case SMS : ret = procSMS(); break;
        case DCG : ret = procDCG(); break;
        case RCG : ret = procRCG(); break;
        case ICM : ret = procICM(); break;
        case DCM : ret = procDCM(); break;
        case RCM : ret = procRCM(); break;

        case ITR : ret = procITR(); break;
        case DTR : ret = procDTR(); break;
        case RTR : ret = procRTR(); break;
        case IIS : ret = procIIS(); break;
        case DIS : ret = procDIS(); break;
        case RIS : ret = procRIS(); break;

        case IOF : ret = procIOF(); break;
        case DOF : ret = procDOF(); break;
        case ROF : ret = procROF(); break;

        case IHT : ret = procIHT(); break;
        case IH1 : ret = procIH1(); break;
        case UUT : ret = procUUT(); break;
        case UHT : ret = procUHT(); break;
        case UH1 : ret = procUH1(); break;
        case UTI : ret = procUTI(); break;
        case UT1 : ret = procUT1(); break;
        case IAC : ret = procIAC(); break;
        case DAC : ret = procDAC(); break;
        case IAS : ret = procIAS(); break;
        case DAS : ret = procDAS(); break;
        case RAS : ret = procRAS(); break;
        case UAS : ret = procUAS(); break;
        case IAR : ret = procIAR(); break;
        case UAR : ret = procUAR(); break;
        case DAR : ret = procDAR(); break;
        case DHT : ret = procDHT(); break;
        case UIN : ret = procUIN(); break;
        case DIN : ret = procDIN(); break;
        case RHT : ret = procRHT(); break;
        case RH1 : ret = procRH1(); break;
        case RH2 : ret = procRH2(); break;
        case OFF : ret = procOFF(); break;
        case BRK : ret = procBRK(); break;
        case IHM : ret = procIHM(); break;
        case DHM : ret = procDHM(); break;
        case RHM : ret = procRHM(); break;
        case IAM : ret = procIAM(); break;
        case DAM : ret = procDAM(); break;
        case RAM : ret = procRAM(); break;

        case I_M : ret = procI_M(); break;
        case D_M : ret = procD_M(); break;
        case R_M : ret = procR_M(); break;
        case IA_ : ret = procIA_(); break;
        case DA_ : ret = procDA_(); break;
        case RA_ : ret = procRA_(); break;


        case IA1 : ret = procIA1(); break;
        case DA1 : ret = procDA1(); break;
        case RA1 : ret = procRA1(); break;
        case IAI : ret = procIAI(); break;
        case DAI : ret = procDAI(); break;
        case RAI : ret = procRAI(); break;

        case DLC : ret = procDLC(); break;
        case DDC : ret = procDDC(); break;

        case DCR : ret = procDCR(); break;
        case IFX : ret = procIFX(); break;
        case IFC : ret = procIFC(); break;
        case RVM : ret = procRVM(); break;
        case DVM : ret = procDVM(); break;
        case UNO : ret = procUNO(); break;
        case DNO : ret = procDNO(); break;
        case RNO : ret = procRNO(); break;
        case UNL : ret = procUNL(); break;
        case RCT : ret = procRCT(); break;
        case RNN : ret = procRNN(); break;
        case RRN : ret = procRRN(); break;
        case RNP : ret = procRNP(); break;
        case CDS : ret = procCDS(); break;
        case CD1 : ret = procCD1(); break;
        case CDM : ret = procCDM(); break;
        case CDR : ret = procCDR(); break;
        case CDU : ret = procCDU(); break;
        case IIA : ret = procIIA(); break;
        case II1 : ret = procII1(); break;
        case RI1 : ret = procRI1(); break;
        case RM1 : ret = procRM1(); break;
        case DIA : ret = procDIA(); break;
        case DI1 : ret = procDI1(); break;
        case RIA : ret = procRIA(); break;
        case RRQ : ret = procRRQ(); break;

        case DIP : ret = procDIP(); break;
        case RIP : ret = procRIP(); break;
        case RP1 : ret = procRP1(); break;
        case SP1 : ret = procSP1(); break;
        case IIP : ret = procIIP("211.32.148.81"); break;
        case II7 : ret = procII7(); break;
        case UU7 : ret = procUU7(); break;
        case RR7 : ret = procRR7(); break;
        case DDD : ret = procDDD(); break;
        case IDD : ret = procIDD(); break;
        case DD7 : ret = procDD7(); break;
        case DU7 : ret = procDU7(); break;
        case IRQ : ret = procIRQ(); break;
        case URQ : ret = procURQ(); break;
        case CCC : ret = procCCC(); break;
        case AAA : ret = procAAA(); break;

        case R07 : ret = procR07(); break;
        case RFX : ret = procRFX(); break;
        case R00 : ret = procR00(); break;
        case R01 : ret = procR01(); break;
        case U07 : ret = procU07(); break;
        case D07 : ret = procD07(1); break;

		case ATH : ret = procATH(); break;
		case PR1 : ret = procPR1(); break;
		case PRV : ret = procPRV(); break;
		case R02 : ret = procR02(); break;
		case R03 : ret = procR03(); break;
		case R04 : ret = procR04(); break;
		case SSW : ret = procSSW(); break;
		case RTH : ret = procRTH(); break;
		case UTH : ret = procUTH(); break;
		case UTV : ret = procUTV(); break;
		case RTV : ret = procRTV(); break;

/**************************************************************/
                case QHT : ret = procQHT(); break;
                case R08 : ret = procR08(); break;
                case AHT : ret = procAHT(); break;
                case RAH : ret = procRAH(); break;
                case DAH : ret = procDAH(); break;
                case UAT : ret = procUAT(); break;
                case U_A : ret = procU_A(); break;
                case RAQ : ret = procRAQ(); break;
                case RAA : ret = procRAA(); break;
                case UAQ : ret = procUAQ(); break;
                case DAQ : ret = procDAQ(); break;
                case IQM : ret = procIQM(); break;
                case RQM : ret = procRQM(); break;
                case RQ1 : ret = procRQ1(); break;
                case DQM : ret = procDQM(); break;
                case UQM : ret = procUQM(); break;
                case IFF : ret = procIFF(); break;
                case RFF : ret = procRFF(); break;
                case DFF : ret = procDFF(); break;
                case RCB : ret = procRCB(); break;
                case CAL : ret = procCAL(); break;
                case RSQ : ret = procRSQ(); break;
                case RS1 : ret = procRS1(); break;
                case DCB : ret = procDCB(); break;
                case MAX : ret = procMAX(); break;
                case RMA : ret = procRMA(); break;
                case RP2 : ret = procRP2(); break;
                case RN2 : ret = procRN2(); break;
/************/
        case ITS : ret = procITS(); break;
        case DTS : ret = procDTS(); break;
        case RTS : ret = procRTS(); break;
        case UTS : ret = procUTS(); break;

        case AN2 : ret = procAN2(); break;
        case IH3 : ret = procIH3(); break;
        case RH3 : ret = procRH3(); break;
        case IA3 : ret = procIA3(); break;
        case DA3 : ret = procDA3(); break;
        case RA3 : ret = procRA3(); break;
        case RRC : ret = procRRC(); break;
        case OF3 : ret = procOF3(); break;
        case AN3 : ret = procAN3(); break;

        case IC2 : ret = procIC2(); break;
        case IH2 : ret = procIH2(); break;
        case IIM : ret = procIIM(); break;
        case RE3 : ret = procRE3(); break;
        case RP3 : ret = procRP3(); break;
        case UH2 : ret = procUH2(); break;

/***********************************************************/
        case IOQ : ret = procIOQ(); break;
        case ROQ : ret = procROQ(); break;
        case DOQ : ret = procDOQ(); break;
        case IVR : ret = procIVR(); break;
        case UPM : ret = procUPM(); break;
	case CF2 : ret = procCF2(); break;
/**2********************************************************/
        case INL : ret = procINL(); break;
        case UCN : ret = procUCN(); break;
	case SOA : ret = procSOA(); break;
        case MAC : ret = procMAC(); break;
/**3********************************************************/
        case HDS : ret = procHDS(); break;
        case HDR : ret = procHDR(); break;
        case HSS : ret = procHSS(); break;
        case HRS : ret = procHRS(); break;
        case ANS : ret = procANS(); break;
        case HDA : ret = procHDA(); break;
	case OF1 : ret = procOF1(); break;
	case OF5 : ret = procOF5(); break;
	case GET : ret = procGET(); break;
	case AS_ : ret = procAS_(); break;
	}
	return (ret);
}


/*************************************************************************
*************************************************************************/
int
procRUN()
{
	char cmd[512];
	char today[15],tmp[21];
	struct  utsname          ht;
	int returncode,fields_num;

	if(argv[1]) {
		strcpy(cmd,argv[1]);
		system(cmd);
	}
	return 0;
}


/*************************************************************************
*************************************************************************/
int
procSTO()
{
	char sqlcmd[512];
	char today[15],tmp[21];
	struct  utsname          ht;
	int returncode,fields_num;


	tmm_currDate(YYYYMMDDHHMMSS,today);
	printf("\nresPacket:(%s)",resPacket);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	printf("\nresPacket:(%s)",resPacket);
	sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'STO')",tmp, reqPacket+4,"112.222.225.146");
	mysql_query(mysql, sqlcmd);
	printf("\nresPacket:(%s)",resPacket);


	sprintf(resPacket,"|RES|STO");
	printf("\nresPacket:(%s)",resPacket);
	return 0;
}


/*
SC_TRAN ( TR_SENDDATE, TR_SENDSTAT, TR_PHONE, TR_CALLBACK, TR_MSG, TR_MSGTYPE )
VALUES (20040513113000, '0', '0112223333', '023334444', 'test message' , '0')
*/
/*************************************************************************
* sms send
*************************************************************************/
int
procSMS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20];
  char  sender[20],receiver[20],message[160];


        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(sender,0,sizeof(sender));
        memset(receiver,0,sizeof(receiver));
        memset(today,0,sizeof(today));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(sender,argv[2]);
        else
                strcpy(sender,"00000000");
    if(argv[3] && *argv[3])
                strcpy(receiver,argv[3]);
        else
                strcpy(receiver,"00000000");
    if(argv[4] && *argv[4])
                strcpy(message,argv[4]);
        else
                strcpy(message,"no sms-message\n[LG-DACOM]");

	if(strstr(message,"board")) {
		strcpy(message,"게시판\n사용법문의 답변등록 하세요!!");
		ret = smsSend(message,"164.124.107.28","notify");
		sprintf(resPacket,"|RES|%s|%s|",sender,receiver);
		return 0;
	}

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd, "insert into SC_TRAN ( TR_SENDDATE, TR_SENDSTAT, TR_PHONE, TR_CALLBACK, TR_MSG, TR_MSGTYPE ) VALUES (%s, '0', '%s', '%s', '%s' , '0')",today,receiver,sender,message);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|SMS send  Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		printf("\nresPacket:(%s)",resPacket);
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	sprintf(resPacket,"|RES|%s|%s|",sender,receiver);
	return 0;
}

/*****************************************************************************************/
/*****************************************************************************************/
int
customInfo(char *pardomain)
{
	char	sqlcmd[512];
	int	ret,row_num;
	struct  utsname   ht;


	memset(serverip,0,sizeof(serverip));
	memset(prefix,0,sizeof(prefix));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(sqlcmd,0,sizeof(sqlcmd));

	uname(&ht);
	sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain= '%s'",pardomain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
		return(-1);
	}
	if( row_num > 1 ) {
		sprintf(sqlcmd,"(%s)(%s) duplex",ht.nodename,domain);
		ret = smsSend(sqlcmd,"164.124.107.28","mysqlif");
	}
	row = mysql_fetch_row( result );
	if(row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
		strcpy(prefix, row[1]?row[1]:"000");
		ps_delSpace(prefix);
		strcpy(inner_digit, row[2]?row[2]:"4");
		ps_delSpace(inner_digit);
	}
	mysql_free_result(result);
	result = NULL;

	return 0;
}




/*************************************************************************
* Conference
*************************************************************************/
int
procCNF()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20];
  char  code[65],destP[512];

        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code));
        memset(inner_digit,0,sizeof(inner_digit));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(phoneid,argv[2]);
        else
                strcpy(phoneid,"00000000");
    if(argv[3] && *argv[3])
                strcpy(peer,argv[3]);
        else
                strcpy(peer,"00000000");
    if(argv[4] && *argv[4])
                strcpy(confnm,argv[4]);
    else
                strcpy(confnm,"00000000");
    if(argv[5] && *argv[5])
                strcpy(callerid,argv[5]);
    else
	    strcpy(callerid,"00000000");

	if(customInfo(domain) < 0)
		return -1;

		printf("\npeer:(%s)",peer);
		sockfd=Conference(serverip,"orginate",peer,confnm,callerid);
		if(sockfd > -1) {
			strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
			write(sockfd, sqlcmd, strlen(sqlcmd));
			close(sockfd); 
		}
//	else return(errorReturn("NOT Connect",__FILE__,__LINE__));

	sprintf(resPacket,"|RES|%s|%s|",peer,confnm);
        return 0;
}



/*************************************************************************
* Ring flag
*************************************************************************/
int
procUNG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30], kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],ring_flag[10],num070[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(ring_flag,0,sizeof(ring_flag)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_num,0,sizeof(inner_num)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2] && strlen(argv[2]) < 5)
		strcpy(inner_num,argv[2]);
	else if(argv[2] && *argv[2] && strlen(argv[2]) > 4)
		strcpy(num070,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
        strcpy(ring_flag,argv[3]);
	else 
		strcpy(ring_flag,"0");

	if(atoi(ring_flag) < 0 || atoi(ring_flag) > 5)
		strcpy(ring_flag,"0");

	domain_string(domain);
	if(PVS == 1) {
		if(*num070 == '\0') {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		}
		else {
			sprintf(sqlcmd, "select phoneid,defaultip,domain from number_manage where 070number = '%s'",num070);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(domain, row[2]?row[2]:"unknown.unknown");
				ps_delSpace(domain);
				strncpy(prefix, phoneid+1,3);
				strcpy(inner_num,phoneid+4);
				ps_delSpace(prefix);
			}
			mysql_free_result(result);
			result = NULL;
			phoneid[0] = '1';
		}
	}
	else {
		if(argv[4] && *argv[4])
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5])
			strcpy(serverip,argv[5]);
	}

	if(strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update number_manage set ring_flag = '%s' where substr(phoneid,2,7) = '%7.7s' and domain = '%s'",ring_flag,phoneid+1,domain);
	else if(!strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update number_manage set ring_flag = '%s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s'",ring_flag,phoneid+1,domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!!(%s, %s)",mysql_error(mysql),sqlcmd );
	}   

	sprintf(commandBuf,"|UNG|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,ring_flag,phoneid, serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UNG|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,ring_flag,phoneid, serverip);
		sprintf(resPacket,"|RES|UNG|%s|%s|",phoneid,ring_flag);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|UNG|%s|%s|%s|",phoneid,ring_flag,serverip);
    return 0;       
}



/*************************************************************************
* Ring timeout
*************************************************************************/
int
procSRT()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30], kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10],num070[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_num,0,sizeof(inner_num)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2] && strlen(argv[2]) < 5)
		strcpy(inner_num,argv[2]);
	else if(argv[2] && *argv[2] && strlen(argv[2]) > 4)
		strcpy(num070,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
        strcpy(regi_time,argv[3]);
	else 
		strcpy(regi_time,"100");

	if(atoi(regi_time) < 5 || atoi(regi_time) > 60)
		strcpy(regi_time,"30");

	domain_string(domain);
	if(PVS == 1) {
		if(*num070 == '\0') {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		}
		else {
			sprintf(sqlcmd, "select phoneid,defaultip,domain from number_manage where 070number = '%s'",num070);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(domain, row[2]?row[2]:"unknown.unknown");
				ps_delSpace(domain);
				strncpy(prefix, phoneid+1,3);
				strcpy(inner_num,phoneid+4);
				ps_delSpace(prefix);
			}
			mysql_free_result(result);
			result = NULL;
			phoneid[0] = '1';
		}
	}
	else {
		if(argv[4] && *argv[4])
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5])
			strcpy(serverip,argv[5]);
	}

	if(strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update number_manage set timeout = '%s' where substr(phoneid,2,7) = '%7.7s' and domain = '%s'",regi_time,phoneid+1,domain);
	else if(!strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update number_manage set timeout = '%s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s'",regi_time,phoneid+1,domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!!(%s, %s)",mysql_error(mysql),sqlcmd );
	}   

	sprintf(commandBuf,"|SRT|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|SRT|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip);
		sprintf(resPacket,"|RES|SRT|%s|%s|",phoneid,regi_time);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|SRT|%s|%s|%s|",phoneid,regi_time,serverip);
    return 0;       
}



/*************************************************************************
* Re-Regi Time Set
*************************************************************************/
int
procSR1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
	char	destP[256];
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10],num070[20],phoneid[10],vip[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(vip,0,sizeof(vip)); 
	memset(num070,0,sizeof(num070)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


        if(argv[2] && *argv[2] && strlen(argv[2]) > 5)
                strcpy(phoneid,argv[2]);
	else
                strcpy(phoneid,"00000000");

	if(argv[3] && *argv[3])
		strcpy(vip,argv[3]);
        else
                strcpy(vip,"127.0.0.1");

	if(argv[4] && *argv[4])
		strcpy(regi_time,argv[4]);
        else
                strcpy(regi_time,"60");


	if(atoi(regi_time) < 15 || atoi(regi_time) > 500)
		strcpy(regi_time,"15");

	domain_string(domain);
	if(PVS == 1) {
			sprintf(sqlcmd, "select phoneid,defaultip,domain,070number from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1,vip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(domain, row[2]?row[2]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(num070, row[3]?row[3]:"07000000000");
				ps_delSpace(num070);
				strncpy(prefix, phoneid+1,3);
				strcpy(inner_num,phoneid+4);
				ps_delSpace(prefix);
			}
			mysql_free_result(result);
			result = NULL;
			phoneid[0] = '1';
/***
			sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,command);
				if(sockfd > -1) {
					strcpy(command,"Action: Logoff\r\n\r\n");
					write(sockfd, command, strlen(command));
					close(sockfd);
				}
			}
*/
	}
	else {
		if(argv[4] && *argv[4])
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5])
			strcpy(serverip,argv[5]);
		if(argv[6] && *argv[6])
			strcpy(num070,argv[6]);

		sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}

/***
		sprintf(command,"asterisk -rx 'sip prune realtime peer 2%7.7s'",phoneid+1);
		system(command);
*/
	}

	if(strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update sip_buddies set insecure = '%s' where name = '1%7.7s' and defaultip = '%s'",regi_time,phoneid+1,serverip);
	else if(!strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update sip_buddies set insecure = '%s' where substr(name,2,3) = '%3.3s' and defaultip = '%s'",regi_time,phoneid+1,serverip);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}   

	sprintf(commandBuf,"|SRG|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip,num070);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|SRG|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip,num070);
		sprintf(resPacket,"|RES|SRG|%s|%s|",phoneid,regi_time);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main' and servername <> 'sub2'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|SRG|%s|%s|%s|Ok.....",phoneid,regi_time,num070);
    return 0;       
}


/*************************************************************************
* Re-Regi Time Set
*************************************************************************/
int
procSRG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
	char	destP[256];
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10],num070[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(num070,0,sizeof(num070)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


        if(argv[2] && *argv[2] && strlen(argv[2]) < 5)
                strcpy(inner_num,argv[2]);
        else if(argv[2] && *argv[2] && strlen(argv[2]) > 4)
                strcpy(num070,argv[2]);

        if(strlen(inner_num) == 3)
                sprintf(inner_num,"0%s",inner_num);
        else if(strlen(inner_num) != 4)
                strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(regi_time,argv[3]);
        else
                strcpy(regi_time,"60");


	if(atoi(regi_time) < 15 || atoi(regi_time) > 500)
		strcpy(regi_time,"15");

	domain_string(domain);
//|SRG|superadmin@premium_c_53965.lgdacom.net|0839|30|superadmin|
	if(PVS == 1) {

		if(*num070 == '\0') {
			if(customInfo(domain) < 0)
				return -1;
			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		}
		else {
			sprintf(sqlcmd, "select phoneid,defaultip,domain from number_manage where 070number = '%s'",num070);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(domain, row[2]?row[2]:"unknown.unknown");
				ps_delSpace(domain);
				strncpy(prefix, phoneid+1,3);
				strcpy(inner_num,phoneid+4);
				ps_delSpace(prefix);
			}
			mysql_free_result(result);
			result = NULL;
			phoneid[0] = '1';
		}
/****
		if(MASTER == 1) {
			sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,command);
				if(sockfd > -1) {
					strcpy(command,"Action: Logoff\r\n\r\n");
					write(sockfd, command, strlen(command));
					close(sockfd);
				}
			}
		}
*/
	}
	else {
		if(argv[4] && *argv[4])
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5])
			strcpy(serverip,argv[5]);

		sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}

/***
		sprintf(command,"asterisk -rx 'sip prune realtime peer 2%7.7s'",phoneid+1);
		system(command);
*/
	}

	if(strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update sip_buddies set insecure = '%s' where name = '1%7.7s' and defaultip = '%s'",regi_time,phoneid+1,serverip);
	else if(!strcmp(inner_num,"0000"))
		sprintf(sqlcmd, "update sip_buddies set insecure = '%s' where substr(name,2,3) = '%3.3s' and defaultip = '%s'",regi_time,phoneid+1,serverip);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}   

	sprintf(commandBuf,"|SRG|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|SRG|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,regi_time,phoneid, serverip);
		sprintf(resPacket,"|RES|SRG|%s|%s|",phoneid,regi_time);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main' and servername <> 'sub2'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket, strlen(resPacket));
			logCmd();
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|No Data!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SRG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|SRG|%s|%s|Ok.....",phoneid,regi_time);
    return 0;       
}



/*************************************************************************
*  						     *
mysql> select * from ars_file_list;
+-----+----------------------------+-------------+---------------------+---------------------+----------+--------+
| num | domain                     | number      | edit_date           | create_date         | fromtime | totime |
+-----+----------------------------+-------------+---------------------+---------------------+----------+--------+
|  11 | gw.e-polymers.com          | 07082140000 | 2009-05-12 16:42:23 | 2009-05-12 16:42:23 | 0        | 0      |
|  12 | gw.eleparts.co.kr          | 07075969111 | 2009-05-12 16:43:05 | 2009-05-12 16:43:05 | 0        | 0      |

*************************************************************************/
int
procBRK()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	tmpDay1[9], tmpDay2[9];
	int	intfromtime=0,inttotime=0;
	int	intfrommin=0,inttomin=0;
struct  tm      *tp;
long	t;


       t=time(0);
       tp = (struct tm *) localtime(&t);


	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;
		//sprintf(phoneid,"1%s%s",prefix,inner_num);
	}

        sprintf(sqlcmd, "select fromtime,totime,frommin,tomin from ars_file_list where domain='%s' and number='%s'",domain,outer_num);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
				result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
			strcpy(fromtime, row[0]?row[0]:"0");
			ps_delSpace(fromtime);
			strcpy(totime, row[1]?row[1]:"0");
			ps_delSpace(totime);
			strcpy(frommin, row[2]?row[2]:"0");
			ps_delSpace(frommin);
			strcpy(tomin, row[1]?row[1]:"0");
			ps_delSpace(tomin);
		}
		break;
	}
	mysql_free_result(result);
	result = NULL;

	intfromtime= atoi(fromtime);
	inttotime= atoi(totime);
	intfrommin= atoi(frommin);
	inttomin= atoi(tomin);
	if(intfromtime ==0 && inttotime==0) {
		sprintf(resPacket,"|RES|0|%s|",outer_num);
	}
	else {
			if(intfromtime ==0 && inttotime==0)
                                inttotime=24;

			if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
				inttotime += 24;
				if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intfromtime && tp->tm_hour <= inttotime) {
				if(tp->tm_hour == intfromtime) {
					if(tp->tm_min >= intfrommin)
						sprintf(resPacket,"|RES|1|%s|",outer_num);
					else
						sprintf(resPacket,"|RES|0|%s|",outer_num);
				}
				else if(tp->tm_hour == inttotime) {
					if(tp->tm_min < inttomin)
						sprintf(resPacket,"|RES|1|%s|",outer_num);
					else
						sprintf(resPacket,"|RES|0|%s|",outer_num);

				}
				else 
					sprintf(resPacket,"|RES|1|%s|",outer_num);

			}
			else
				sprintf(resPacket,"|RES|0|%s|",outer_num);
	}
	return 0;       
}




/*************************************************************************
mysql> select * from ars_file_list;
+-----+----------------------------+-------------+---------------------+---------------------+----------+--------+
| num | domain                     | number      | edit_date           | create_date         | fromtime | totime |
+-----+----------------------------+-------------+---------------------+---------------------+----------+--------+
|  11 | gw.e-polymers.com          | 07082140000 | 2009-05-12 16:42:23 | 2009-05-12 16:42:23 | 0        | 0      |
|  12 | gw.eleparts.co.kr          | 07075969111 | 2009-05-12 16:43:05 | 2009-05-12 16:43:05 | 0        | 0      |
10:44:23 |OFF|admin@premium_c_5323.lgdacom.net|07086331392|<<<<<|RES|0|07086331392|0||:(211.32.148.77)
10:44:26 |OFF|admin@gw.mcc.co.kr|07082140009|<<<<<|RES|0|07082140009|0||:(211.32.148.71)
10:44:27 |OFF|admin@premium_c_5304.lgdacom.net|07086331701|<<<<<|ERR|90000|(proc.c, 1935):(211.32.148.77)
*************************************************************************/
int
procOFF()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,off=0;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2], today[15];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	conn_method[10],forward_num[20];
  char	tmpDay1[9], tmpDay2[9];
	char	option7[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	break_include[10];

	int	intfromtime=0,inttotime=0;
	int	intfrommin=0,inttomin=0;
	int	intsafromtime=0,intsatotime=0;
	int	intsafrommin=0,intsatomin=0;
	int	intsunfrommin=0,intsuntomin=0;
	int	intsunfromtime=0,intsuntotime=0;
	int	intbreakfrommin=0,intbreaktomin=0;
	int	intbreakfromtime=0,intbreaktotime=0;
	int	mm,dd;
struct  tm      *tp;
long	t;


       t=time(0);
       tp = (struct tm *) localtime(&t);

	mm  = tp->tm_mon+1; dd  = tp->tm_mday;

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(today,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(option7,0,sizeof(option7)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(option7,argv[3]);

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%s%s",prefix,"0000");
	}

tmm_currDate(YYYYMMDDHHMMSS,today);
sprintf(tmp,"%4.4s%2.2s%2.2s",today,today+4,today+6);


    sprintf(sqlcmd, "select domain from off_day where domain='%s' and off_day = '%s'",domain,tmp);
    if( ret = mysql_query(mysql, sqlcmd) ) {
            sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
    }
	result = mysql_store_result( mysql );
	if(!result ) {
		return -1;
	}
	else {
			row_num = mysql_num_rows(result);
			mysql_free_result(result);
			result = NULL;

			if(row_num > 0) {
				off = 1;
			}
	}

	if(*option7 == 'Y')
		sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include from hunting_group where domain='%s' and number='%s' and extension <> '-'",domain,outer_num);
	else 
		sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include from hunting_group where domain='%s' and number='%s' and extension = '-'",domain,outer_num);


        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   
	printf("\nsqlcmd:(%s)",sqlcmd);

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
				result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        

	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(fromtime, row[0]?row[0]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[1]?row[1]:"0");
				ps_delSpace(totime);
				strcpy(frommin, row[2]?row[2]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[3]?row[3]:"0");
				ps_delSpace(tomin);
				strcpy(conn_method, row[4]?row[4]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[5]?row[5]:"0");
				ps_delSpace(conn_method);

				strcpy(safromtime, row[6]?row[6]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[7]?row[7]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[8]?row[8]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[9]?row[9]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[10]?row[10]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[11]?row[11]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[12]?row[12]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[13]?row[13]:"0");
				ps_delSpace(suntomin);

				strcpy(breakfromtime, row[14]?row[14]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[15]?row[15]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[16]?row[16]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[17]?row[17]:"0");
				ps_delSpace(breaktomin);
				strcpy(break_include, row[18]?row[18]:"3");
				ps_delSpace(break_include);
		}
		break;
	}
	mysql_free_result(result);
	result = NULL;

	intfromtime= atoi(fromtime);
	inttotime= atoi(totime);
	intfrommin= atoi(frommin);
	inttomin= atoi(tomin);

	intsafromtime= atoi(safromtime);
	intsatotime= atoi(satotime);
	intsafrommin= atoi(safrommin);
	intsatomin= atoi(satomin);

	intsunfromtime= atoi(sunfromtime);
	intsuntotime= atoi(suntotime);
	intsunfrommin= atoi(sunfrommin);
	intsuntomin= atoi(suntomin);

	intbreakfromtime= atoi(breakfromtime);
	intbreaktotime= atoi(breaktotime);
	intbreakfrommin= atoi(breakfrommin);
	intbreaktomin= atoi(breaktomin);

	printf("\nintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)",intfromtime,inttotime,intfrommin,inttomin);
	if(strlen(forward_num) > 8) {
		row_num = 0;
		if(!strncmp(forward_num,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(forward_num,"");
	}


	/*** off,break ***/
	printf("\nintbreaktime:(%d),intbreaktime:(%d),intbreakmin:(%d),intbreakmin:(%d)",intbreakfromtime,intbreaktotime,intbreakfrommin,intbreaktomin);

	if(strlen(forward_num) == 3)
		sprintf(forward_num,"0%s",forward_num);

	if(tp->tm_wday == 0 && intsunfromtime == 0  && intsuntotime== 0) {
		if(off == 1) {
			sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		else {
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}

			if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0||",outer_num);

			}
			else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
			else
					sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		}
	}
	else if(tp->tm_wday == 6 && intsafromtime == 0  && intsatotime== 0) {
		if(off == 1) {
			sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		else {

			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);

			}
			else 
				sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		}
	}
	else if(tp->tm_wday != 0 && tp->tm_wday !=6 && intfromtime == 0 && inttotime== 0) {
		if(off == 1) {
				sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
				return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		else {
			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);


			}
			else 
				sprintf(resPacket,"|RES|0|%s|0||",outer_num);
		}
	}
	else {
			if(off == 1) {
					sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
					return 0;
			}
			if(tp->tm_wday == 0) {
SUN:
				//if(intsuntotime < intsunfromtime) {
				if((intsuntotime < intsunfromtime) || (intsuntotime == intsunfromtime && intsunfrommin > intsuntomin)) {
					intsuntotime += 24;
					//if(tp->tm_hour < intsuntotime && tp->tm_hour < intsunfromtime)
					if((tp->tm_hour < intsuntotime && tp->tm_hour < intsunfromtime) || (intsuntotime
 == intsunfromtime+24 && atoi(sunfrommin) > atoi(suntomin)))
						tp->tm_hour += 24;
				}
				if(tp->tm_hour >= intsunfromtime && tp->tm_hour <= intsuntotime) {
					if(tp->tm_hour == intsunfromtime) {
						if(tp->tm_min >= intsunfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsuntotime) {
						if(tp->tm_min < intsuntomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					}
				}

			}
			else if(tp->tm_wday == 6) {
SAT:
				//if(intsatotime < intsafromtime) {
				if((intsatotime < intsafromtime) || (intsatotime == intsafromtime && intsafrommin > intsatomin)) {
					intsatotime += 24;
					//if(tp->tm_hour < intsatotime && tp->tm_hour < intsafromtime)
					if((tp->tm_hour < intsatotime && tp->tm_hour < intsafromtime) || (intsatotime == intsafromtime+24 && atoi(safrommin) > atoi(satomin)))
						tp->tm_hour += 24;
				}

				if(tp->tm_hour >= intsafromtime && tp->tm_hour <= intsatotime) {
					if(tp->tm_hour == intsafromtime) {
						if(tp->tm_min >= intsafrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsatotime) {
						if(tp->tm_min < intsatomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					}
				}

			}
			else {
OTHER:
				if((inttotime < intfromtime) || (inttotime == intfromtime && intfrommin > inttomin)) {
					inttotime += 24;
					if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
						tp->tm_hour += 24;
				}
	printf("\n[5mintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)[0m",intfromtime,inttotime,intfrommin,inttomin);
				if(tp->tm_hour >= intfromtime && tp->tm_hour <= inttotime) {
					if(tp->tm_hour == intfromtime) {
						if(tp->tm_min >= intfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == inttotime) {
						if(tp->tm_min < inttomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|",outer_num,conn_method,forward_num);
						else {
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							else {
								tp = (struct tm *) localtime(&t);
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0||",outer_num);



								}
								else 
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
						}

					}
					else  {
						sprintf(resPacket,"|RES|1|%s|%s|%s|8888",outer_num,conn_method,forward_num);
					}
				}
				else {
					 tp = (struct tm *) localtime(&t);
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					else {
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0||",outer_num);



						}
						else 
							sprintf(resPacket,"|RES|0|%s|0||",outer_num);
					}
				}

			}
	}
    return 0;       
}


/*************************************************************************************************/
/*************************************************************************************************/
int
procUAT()
{
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10],sec_extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20];
  char	break_include[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[40],policy[20];
	char	queue_name[64], process_method[11];
	char	callback_flag[5];

	memset(directnumber,0,sizeof(directnumber));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
	memset(name,0,sizeof(name)); 

	memset(queue_name,0,sizeof(queue_name)); 
	memset(process_method,0,sizeof(process_method)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(callback_flag,0,sizeof(callback_flag)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"1");
/*
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(sec_extension,argv[5]);
	else 
		strcpy(sec_extension,"");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");


    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");

    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");

    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");

    if(argv[25] && *argv[25])
                strcpy(holfromtime,argv[25]);
        else
                strcpy(holfromtime,"0");

    if(argv[26] && *argv[26])
                strcpy(holfrommin,argv[26]);
        else
                strcpy(holfrommin,"0");


    if(argv[27] && *argv[27])
                strcpy(holtotime,argv[27]);
        else
                strcpy(holtotime,"0");

    if(argv[28] && *argv[28])
                strcpy(holtomin,argv[28]);
        else
                strcpy(holtomin,"0");
    if(argv[29] && *argv[29])
                strcpy(ment_file,argv[29]);
        else
                strcpy(ment_file,"");
    if(argv[30] && *argv[30])
                strcpy(ment_flag,argv[30]);
        else
                strcpy(ment_flag,"");


    if(*method == '9' && argv[31])
		strcpy(directnumber,argv[31]);

    if(argv[32] && *argv[32])
                strcpy(break_include,argv[32]);
        else
                strcpy(break_include,"0");

    if(argv[33] && *argv[33])
                strcpy(wait_music,argv[33]);
        else
                strcpy(wait_music,"default");
/****
	if(*method == '2')
		strcpy(policy,"linear");
	if(*method == '3')
		strcpy(policy,"ringall");
	if(*method == '4')
		strcpy(policy,"random");
	if(*method == '5')
		strcpy(policy,"roundrobin");
	else
		strcpy(policy,"leastrecent");
*/
    if(argv[34] && *argv[34])
                strcpy(queue_name,argv[34]);
        else
                strcpy(queue_name,"");

    if(argv[35] && *argv[35])
                strcpy(process_method,argv[35]);
        else
		return(errorReturn("EInput Data(process_method)",__FILE__,__LINE__));

/* callback_flag는 MAX로 한다. 
    if(argv[36] && *argv[36])
                strcpy(callback_flag,argv[36]);
        else
                strcpy(callback_flag,"1");
*/

//   extension A : direct queue input
//   if(strlen(method) > 1 || !isdigitstr(method)) {
//	sprintf(resPacket,"|ERR|Update Error!method(0~4) input:(%s)",method);
//	return -1;
//   }

    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[36] && *argv[36]) 
				strcpy(prefix,argv[36]);
			if(argv[37] && *argv[37]) 
				strcpy(serverip,argv[37]);
	}

	if(*sec_extension == '\0')
		sprintf(sqlcmd,"UPDATE ars_group set name = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',holfromtime='%s',holfrommin='%s',holtotime='%s',holtomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s',ment_file='%s',ment_flag='%s',wait_music='%s',queue_name='%s',process_method = '%s' \
			where domain='%s' and number = '%s' and extension = '%s' and method = '' ",name,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,ment_file,ment_flag,wait_music,queue_name,process_method,domain,number,extension);
	else
		sprintf(sqlcmd,"UPDATE ars_group set name = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',holfromtime='%s',holfrommin='%s',holtotime='%s',holtomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s',ment_file='%s',ment_flag='%s',wait_music='%s',queue_name='%s',process_method = '%s' \
			where domain='%s' and number = '%s' and extension = '%s' and method='%s'",name,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,ment_file,ment_flag,wait_music,queue_name,process_method,domain,number,extension,sec_extension);
		//if(*fromtime != '0' || *safromtime != '0' || *sunfromtime != '0') {}
			//ret = mysql_query(mysql, sqlcmd);

		//{}
	//{}
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}   

	/*******************
	sprintf(sqlcmd, "select name from ars_group where number= '%s' and extension = '%s'",number,extension);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,
mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
		return(-1);
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(name, row[0]?row[0]:"");
		ps_delSpace(name);
	}
	mysql_free_result(result);
	result = NULL;

	sprintf(sqlcmd,"UPDATE queue_table set strategy = '%s',musiconhold='%s' where domain='%s' and defaultip='%s' and name ='%s'",policy,wait_music,domain,serverip,name);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   
*/

	sprintf(commandBuf,"|UAT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],sec_extension,argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],break_include,wait_music,queue_name,process_method,prefix,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UAT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],sec_extension,argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],break_include,wait_music,queue_name,process_method,prefix,serverip);

sprintf(resPacket,"|RES|UAT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,sec_extension);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
sprintf(resPacket,"|RES|UAT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,sec_extension);
return 0;       
}
/*************************************************************************
* ars group
*************************************************************************/
int
procAHT()
{
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10],sec_extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[20];
  char  defaultip[20];
  char  directnumber[20];
  char  prefix[10],inner_digit[10],callback_flag[5];
	char	policy[20];
	char	queue_name[64], process_method[11];

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(frommin,0,sizeof(frommin));
	memset(totime,0,sizeof(totime));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(directnumber,0,sizeof(directnumber));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
	memset(ment_file,0,sizeof(ment_file)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(defaultip,0,sizeof(defaultip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(queue_name,0,sizeof(queue_name)); 
	memset(process_method,0,sizeof(process_method)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(sec_extension,argv[5]);
	else 
		strcpy(sec_extension,"");


    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

    if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");


    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");
	if(*totime == '\0')
		strcpy(totime,"0");
		
    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");
    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");


    if(argv[25] && *argv[25])
                strcpy(holfromtime,argv[25]);
        else
                strcpy(holfromtime,"0");

    if(argv[26] && *argv[26])
                strcpy(holfrommin,argv[26]);
        else
                strcpy(holfrommin,"0");


    if(argv[27] && *argv[27])
                strcpy(holtotime,argv[27]);
        else
                strcpy(holtotime,"0");

    if(argv[28] && *argv[28])
                strcpy(holtomin,argv[28]);
        else
                strcpy(holtomin,"0");
    if(argv[29] && *argv[29])
                strcpy(ment_file,argv[29]);
        else
                strcpy(ment_file,"");
    if(argv[30] && *argv[30])
                strcpy(ment_flag,argv[30]);
        else
                strcpy(ment_flag,"");

    if(*method == '9' && argv[31])
                strcpy(directnumber,argv[31]);

    if(argv[32] && *argv[32])
                strcpy(break_include,argv[32]);
        else
                strcpy(break_include,"0");

/***
    if(argv[31] && *argv[31])
                strcpy(break_include,argv[31]);
        else
                strcpy(break_include,"0");
*/

    if(argv[33] && *argv[33])
                strcpy(wait_music,argv[33]);
        else
                strcpy(wait_music,"default");


    if(argv[34] && *argv[34])
                strcpy(queue_name,argv[34]);
        else
                strcpy(queue_name,"");

    if(argv[35] && *argv[35])
                strcpy(process_method,argv[35]);
        else
		return(errorReturn("EInput Data(process_method)",__FILE__,__LINE__));

    if(argv[36] && *argv[36])
                strcpy(callback_flag,argv[36]);
        else
                strcpy(callback_flag,"0");


/*******
	if(*method == '2')
		strcpy(policy,"linear");
	if(*method == '3')
		strcpy(policy,"ringall");
	if(*method == '4')
		strcpy(policy,"random");
	if(*method == '5')
		strcpy(policy,"roundrobin");
	else
		strcpy(policy,"leastrecent");

	if(strlen(method) > 1 || !isdigitstr(method)) {
		sprintf(resPacket,"|ERR|오류:method(0~4) input::(%s)",method);
		return -1;
	}
*/

	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[37] && *argv[37]) 
			strcpy(prefix,argv[37]);
		if(argv[38] && *argv[38]) 
			strcpy(serverip,argv[38]);

	}

	if(strlen(forward_num) > 4) {
		sprintf(sqlcmd, "select type,aRsflag from number_list where number = '%s'",forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			if( ret = mysql_query(mysql, sqlcmd) ) {
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
				
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(type, row[0]?row[0]:"1");
					ps_delSpace(type);

					strcpy(arsflag, row[1]?row[1]:"N");
					ps_delSpace(type);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*type == '0') {
			sprintf(resPacket,"|ERR|착신전환 번호오류:대표번호로 착전(%s)",forward_num);
			return -1;
		}
	}


/***********
	sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain= '%s'",domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,
mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
		return(-1);
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
		strcpy(prefix, row[1]?row[1]:"000");
		ps_delSpace(prefix);
		strcpy(inner_digit, row[2]?row[2]:"4");
		ps_delSpace(inner_digit);
	}
	mysql_free_result(result);
	result = NULL;
*/


	if(*sec_extension == '\0')
		sprintf(sqlcmd,"delete from ars_group where number = '%s' and extension ='%s'",number,extension);
	else
		sprintf(sqlcmd,"delete from ars_group where number = '%s' and extension ='%s' and method='%s'",number,extension, sec_extension);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into ars_group( \
		domain,prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,ment_file,ment_flag,wait_music,regdate,queue_name,process_method,directnumber,callback_flag) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s',NOW(),'%s','%s','%s','%s')",domain,prefix,number,extension,name,sec_extension, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,ment_file,ment_flag, wait_music,queue_name,process_method,directnumber,callback_flag);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

/********
	sprintf(sqlcmd,"delete from queue_table where domain = '%s' and defaultip ='%s' and name = '%s'",domain,defaultip,name);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into queue_table(domain,defaultip,name, musiconhold,announce ,context,strategy ,timeout ,retry ,maxlen ,announce_frequency,announce_holdtime, monitor_format ,monitor_join,queue_youarenext, queue_thankyou,regdate,eventmemberstatus,eventwhencalled,joinempty) values ('%s','%s','%s','%s','','callback_context','%s',90,1,100,0,'no','','no','silence','',NOW(),1,1,'yes')",domain,serverip,name,wait_music,policy);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
*/

	sprintf(commandBuf,"|AHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],argv[32],argv[33],queue_name,process_method,callback_flag,prefix,serverip);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'AHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|AHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],argv[32],argv[33],queue_name,process_method,callback_flag,prefix,serverip);

		sprintf(resPacket,"|RES|AHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'AHT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|AHT userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method,queue_name,process_method);
    return 0;       
}

/*************************************************************************
* ars group
*************************************************************************/
int
procRAH()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10],sec_extension[10];
  char	code[10],flag[2];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];

  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20],break_include[10];
	char    inner_method[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[40];
	char	queue_name[64], process_method[11];
	char	callback_flag[5];

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(directnumber,0,sizeof(directnumber));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
	memset(breakfromtime,0,sizeof(breakfromtime)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktotime,0,sizeof(breaktotime)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(break_include,0,sizeof(break_include));
	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));
	memset(ment_file,0,sizeof(ment_file)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(queue_name,0,sizeof(queue_name)); 
	memset(process_method,0,sizeof(process_method)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(callback_flag,0,sizeof(callback_flag)); 

    if(argv[2] && *argv[2])
		strcpy(flag,argv[2]);
	else 
		strcpy(flag,"A");
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


		if(*flag == 'R')
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag from ars_group where domain = '%s' and extension = '-'",domain);
		else 
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag from ars_group where domain = '%s' and extension <> '-'",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(number, row[1]?row[1]:"001");
				ps_delSpace(number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(name, row[3]?row[3]:"___");
				ps_delSpace(name);
				strcpy(sec_extension, row[4]?row[4]:"");
				ps_delSpace(sec_extension);
				strcpy(fromtime, row[5]?row[5]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[6]?row[6]:"0");
				ps_delSpace(totime);
				strcpy(conn_method, row[7]?row[7]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[8]?row[8]:"");
				ps_delSpace(forward_num);
				strcpy(frommin, row[9]?row[9]:"0");
				ps_delSpace(tomin);
				strcpy(tomin, row[10]?row[10]:"0");
				ps_delSpace(tomin);
				strcpy(safromtime, row[11]?row[11]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[12]?row[12]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[13]?row[13]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[14]?row[14]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[15]?row[15]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[16]?row[16]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[17]?row[17]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[18]?row[18]:"0");
				ps_delSpace(suntomin);

				strcpy(holfromtime, row[19]?row[19]:"0");
				ps_delSpace(holfromtime);
				strcpy(holfrommin, row[20]?row[20]:"0");
				ps_delSpace(holfrommin);
				strcpy(holtotime, row[21]?row[21]:"0");
				ps_delSpace(holtotime);
				strcpy(holtomin, row[22]?row[22]:"0");
				ps_delSpace(holtomin);


				strcpy(breakfromtime, row[23]?row[23]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[24]?row[24]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[25]?row[25]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[26]?row[26]:"0");
				ps_delSpace(breaktomin);
				strcpy(directnumber, row[27]?row[27]:"");
				ps_delSpace(directnumber);

				strcpy(break_include, row[28]?row[28]:"0");
				ps_delSpace(break_include);
				strcpy(inner_method, row[29]?row[29]:"0");
				ps_delSpace(inner_method);

				strcpy(ment_file, row[30]?row[30]:"0");
				ps_delSpace(ment_file);
				strcpy(ment_flag, row[31]?row[31]:"0");
				ps_delSpace(ment_flag);

				strcpy(wait_music, row[32]?row[32]:"default");
				ps_delSpace(wait_music);

				strcpy(queue_name, row[33]?row[33]:"default");
				ps_delSpace(queue_name);

				strcpy(process_method, row[34]?row[34]:"3");
				ps_delSpace(process_method);
				strcpy(callback_flag, row[35]?row[35]:"1");
				ps_delSpace(callback_flag);
			}

//			if(*process_method == '3' && strlen(queue_name) > 2) {
//				if(!mysql_1)
//					sqlinit_1(LOCAL_SERVER);
//
//				sprintf(sqlcmd1, "select name from queue_table where domain ='%s' and name= '%s'",domain,queue_name);
//
//				printf("\nsqlcmd1:(%s)",sqlcmd1);
//				ret = mysql_query(mysql_1, sqlcmd1);
//
//				result_1 = mysql_store_result( mysql_1 );
//				if(result_1) {
//					row_num1 = mysql_num_rows(result_1);
//					if( row_num1 == 0 ) {
//						mysql_free_result(result_1);
//						result_1 = NULL;
//						continue;
//					}	
//					else {
//						    row1 = mysql_fetch_row( result_1);
//						    if( row1) {
//							;
//						    }
//					}
//					mysql_free_result(result_1);
//					result_1 = NULL;
//				}
//			}

	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);
	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);
	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);

			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,sec_extension, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag);

                                        if(!((i+1)%10))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}


/*************************************************************************
* ars group
*************************************************************************/
int
procDAH()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];
  char	name[65],number[20],method[5],extension[10],flag[5],sec_extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
        snprintf(number,sizeof(number),"%s",argv[2]);
    else
	strcpy(number,"0");

    if(argv[3] && *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"-");

    if(argv[4] && *argv[4])
	strcpy(sec_extension,argv[4]);
    else
	strcpy(sec_extension,"");

    if(strlen(number) < 9)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

        if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(strlen(number) > 10) {
		if(*sec_extension == '\0')
			sprintf(sqlcmd, "select name from ars_group where number= '%s' and extension = '%s'",number,extension);
		else
			sprintf(sqlcmd, "select name from ars_group where number= '%s' and extension = '%s' and method='%s'",number,extension,sec_extension);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
			return(-1);
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(name, row[0]?row[0]:"");
			ps_delSpace(name);
		}
		mysql_free_result(result);
		result = NULL;


		if(*sec_extension == '\0')
		sprintf(sqlcmd,"DELETE from  ars_group \
			where domain='%s' and number = '%s' and extension = '%s'",domain,number,extension);
		else
		sprintf(sqlcmd,"DELETE from  ars_group \
				where domain='%s' and number = '%s' and extension = '%s' and method='%s'",domain,number,extension,sec_extension);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"UPDATE max_call set callback_flag = '0' where domain='%s' and number='%s'",domain,number);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|UPDATE Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		/*********
		sprintf(sqlcmd,"DELETE from  queue_table \
			where domain='%s' and defaultip = '%s' and name = '%s'",domain,serverip,name);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"DELETE from  queue_member_table \
			where domain='%s' and queue_name = '%s'",domain,name);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		*/

		/***
		if(*flag == 'R') {
			//sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s' and arsflag = 'Q'",number);
			sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",number);

			printf("\nsqlcmd : (%s)",sqlcmd);
			if( mysql_query(mysql, sqlcmd)) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}
			sprintf(sqlcmd,"update number_manage set numbertype = '1',option7 = 'X',inner_method = '0'  where 070number='%s'",number);

			if( mysql_query(mysql, sqlcmd)) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}

		}
		*/
	}

	sprintf(commandBuf,"|DAH|%s@%s|%s|%s|%s|",user,domain,argv[2],extension,sec_extension);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DAH|%s@%s|%s|%s|%s|",user,domain,argv[2],extension,sec_extension);
		sprintf(resPacket,"|RES|DAH userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,extension,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAH')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DAH userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,extension,number);
	return 0;       
}



/*************************************************************************
* 포워딩 정보 조회 						     *
*************************************************************************/
int
procRF_()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],inner_forward[128];
	char	frommin[5],tomin[5];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

//if(PVS == 1) {
			sprintf(sqlcmd, "select phoneid,option1 from number_manage where substr(phoneid,2,7) = '%7.7s' and defaultip='%s'",phoneid+1,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					logCmd();
					return(-1);
				}

				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
				}
				mysql_free_result(result);
				result = NULL;

				if(*row[1] != 'F') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and domain = '%s'",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);

					sprintf(resPacket, "|ERR|90000|Data Not Found!(%s, %s)",mysql_error(mysql),sqlcmd );
					return -1;
				}

	//		}
	}

        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain = '%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(tmp, row[1]?row[1]:"00000000000");
				ps_delSpace(tmp);
				strcpy(fromday, row[2]?row[2]:"0");
				ps_delSpace(fromday);
				strcpy(totoday, row[3]?row[3]:"0");
				ps_delSpace(totoday);
				strcpy(fromtime, row[4]?row[4]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[5]?row[5]:"0");
				ps_delSpace(totime);
				strcpy(kind, row[6]?row[6]:"-");
				ps_delSpace(kind);
				strcpy(inner_forward, row[7]?row[7]:"");
				ps_delSpace(inner_forward);
				strcpy(frommin, row[8]?row[8]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[9]?row[9]:"0");
				ps_delSpace(tomin);

				tmm_Date(YYYYMMDD, atol(fromday), tmpDay1);
				tmm_Date(YYYYMMDD, atol(totoday), tmpDay2);
				sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",row[0],tmp,tmpDay1,tmpDay2,fromtime,totime,kind,inner_forward,frommin,tomin);
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

	if(*kind == '-' && strlen(inner_forward) < 3)
		strcpy(kind,"");

    return 0;       
}



/*************************************************************************
* 포워딩 정보 조회 						     *
*************************************************************************/
int
procRFW()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],inner_forward[128];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(inner_forward,0,sizeof(inner_forward)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

//if(PVS == 1) {
			sprintf(sqlcmd, "select phoneid,option1 from number_manage where substr(phoneid,2,7) = '%7.7s' and defaultip='%s'",phoneid+1,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					logCmd();
					return(-1);
				}

				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
				}
				mysql_free_result(result);
				result = NULL;

				if(*row[1] != 'F') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and domain = '%s'",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);

					sprintf(resPacket, "|ERR|90000|Data Not Found!(%s, %s)",mysql_error(mysql),sqlcmd );
					return -1;
				}

	//		}
	}

        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain = '%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(tmp, row[1]?row[1]:"00000000000");
				ps_delSpace(tmp);
				strcpy(fromday, row[2]?row[2]:"0");
				ps_delSpace(fromday);
				strcpy(totoday, row[3]?row[3]:"0");
				ps_delSpace(totoday);
				strcpy(fromtime, row[4]?row[4]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[5]?row[5]:"0");
				ps_delSpace(totime);
				strcpy(kind, row[6]?row[6]:"-");
				ps_delSpace(kind);
				strcpy(inner_forward, row[7]?row[7]:"");
				ps_delSpace(inner_forward);

				tmm_Date(YYYYMMDD, atol(fromday), tmpDay1);
				tmm_Date(YYYYMMDD, atol(totoday), tmpDay2);
				sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s",row[0],tmp,tmpDay1,tmpDay2,fromtime,totime,kind,inner_forward);
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

	if(*kind == '-' && strlen(inner_forward) < 3)
		strcpy(kind,"");

    return 0;       
}


/*************************************************************************
* 포워딩 정보 조회 						     *
  RF1->RF3
*************************************************************************/
int
procRF3()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,forward_check=0;
  int   test=0,ret,row_num,i,seq,intfromtime=0,inttotime=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],fphoneid[30],option1[5],ssw_ip[30];
	char	tel[20],option6[10],callerid[20],num070[20];
	char	bill_type[10],record[10],manner_flag[10];
	char	sms_flag[10];
	char	frommin[5],tomin[5];
struct  tm      *tp;
long	t;


	memset(email,0,sizeof(email));
	memset(callerid,0,sizeof(callerid));
	memset(option6,0,sizeof(option6));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(fphoneid,0,sizeof(fphoneid)); 
	memset(option1,0,sizeof(option1)); 
	memset(ssw_ip,0,sizeof(ssw_ip)); 
	memset(tel,0,sizeof(tel)); 
	memset(bill_type,0,sizeof(bill_type)); 
	memset(num070,0,sizeof(num070)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) {
		if(strlen(argv[2]) == 8) {
			strcpy(inner_num,argv[2]+4);
			strncpy(prefix,argv[2]+1,3);
			strcpy(phoneid,argv[2]);
		}
		else if(strlen(argv[2]) == 7) {
			strcpy(inner_num,argv[2]+3);
			strncpy(prefix,argv[2],3);
			sprintf(phoneid,"1%s",argv[2]);
		}
	}
	else 
		 errorReturn("Err Phoneid",__FILE__,__LINE__);

    if(argv[3] && *argv[3])
		strcpy(ssw_ip,argv[3]);
	else
		strcpy(ssw_ip,SSW_IP);
    if(argv[4] && *argv[4])
		strcpy(option6,argv[4]);
	else
		strcpy(option6,"");
    if(argv[5] && *argv[5])
		strcpy(callerid,argv[5]);
	else
		strcpy(callerid,"");

       t=time(0);
       tp = (struct tm *) localtime(&t);


	//sprintf(resPacket,"|RES|%s|%s|%s|",fphoneid,kind,tel);

	if(*option6 == '1' && strlen(callerid) > 4) {
		sprintf(sqlcmd, "select number from white_list where substr(phoneid,2,7) = '%s' and domain = '%s' and number='%s'",phoneid+1, domain,callerid);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}	
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket,"|RES||||X|");
				return 0;
			}
			else {
				;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	else if(*option6 == '2' && strlen(callerid) > 4) {
		sprintf(sqlcmd, "select number from black_list where substr(phoneid,2,7) = '%s' and domain = '%s' and number='%s'",phoneid+1, domain,callerid);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}	
		else {

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||||X|");
			return 0;
		}
		mysql_free_result(result);
		result = NULL;
		}
	}


	{
	//if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,option1,tel,bill_type,070number,record,manner_flag,sms_flag,record_flag,crm_flag from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
				else {
						
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							{
								if(customInfo(domain) < 0)
									return -1;

								sprintf(sqlcmd, "delete from hunting_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

								sprintf(sqlcmd, "delete from ars_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

							}

							sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
							return -1;
					}
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(phoneid, row[0]?row[0]:"0");
							ps_delSpace(phoneid);
							strcpy(option1, row[1]?row[1]:"N");
							ps_delSpace(option1);
							strcpy(tel, row[2]?row[2]:"");
							ps_delSpace(tel);
							strcpy(bill_type, row[3]?row[3]:"");
							ps_delSpace(bill_type);
							strcpy(num070, row[4]?row[4]:"");
							ps_delSpace(num070);
							strcpy(record, row[5]?row[5]:"");
							ps_delSpace(record);
							strcpy(manner_flag, row[6]?row[6]:"");
							ps_delSpace(manner_flag);
							strcpy(sms_flag, row[7]?row[7]:"N");
							ps_delSpace(sms_flag);
							strcpy(record_flag, row[8]?row[8]:"");
							ps_delSpace(record_flag);
							strcpy(crm_flag, row[9]?row[9]:"");
							ps_delSpace(crm_flag);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}

				if(strlen(tel) < 7)
					strcpy(tel,"");

				if(*option1 != 'F' && *option1 != 'V') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and (domain='%s' or domain = '')",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);
				}

	//		}
	}

	if(*option1 == 'F') {
        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
		;
        }   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
					strcpy(tmp, row[1]?row[1]:"00000000000");
					ps_delSpace(tmp);
					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(frommin, row[7]?row[7]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[8]?row[8]:"0");
					ps_delSpace(tomin);


					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

					if(inttotime == 0 && intfromtime==0)
						inttotime = 24;
					if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
						inttotime += 24;
						if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
							tp->tm_hour += 24;
					}
printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {

					if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
						if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
							forward_check = 1;
						}
					}
					else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
						if(atoi(frommin) <= tp->tm_min) {
							forward_check = 1;
						}
					}
					else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
						if(atoi(tomin) > tp->tm_min) {
							forward_check = 1;
						}
					}
					else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
						forward_check = 1;
					}
					if(forward_check == 1) {
					    if(strlen(tmp) == 4)
						sprintf(fphoneid,"1%3.3s%4.4s",prefix,tmp);
					    else if(strlen(tmp) == 8)
						sprintf(fphoneid,"%s",tmp);
					    else if(strlen(tmp) > 8)
						sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
					}
					else 
						return(errorReturn("90000|",__FILE__,__LINE__));
				}
				else
					return(errorReturn("90000|",__FILE__,__LINE__));
			}
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;
	}
	}

	row_num = 0;
	{
		if(*option1 == 'F' && !strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else if(*option1 == 'F' && strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0) {
			strcpy(tel,"");
			strcpy(option1,"");
		}
	}
	
	sprintf(resPacket,"|RES|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",fphoneid,kind,tel,bill_type,num070,record,manner_flag,sms_flag,record_flag,crm_flag);

    return 0;       
}




/*************************************************************************
* 포워딩 정보 조회 						     *
*************************************************************************/
int
procRF1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq,intfromtime=0,inttotime=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	tmpDay1[9], tmpDay2[9],fphoneid[30],option1[5],ssw_ip[30];
	char	tel[20],option6[10],callerid[20],num070[20];
	char	bill_type[10],record[10],manner_flag[10];
	char	sms_flag[10],messenger_ip[20],tmpcrm[128];
	char	org_num[15];
	char	option2[10],class[20];
	int	intfrommin=0,inttomin=0, forward_check=0;

char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];
struct  tm      *tp;
long	t;


	memset(email,0,sizeof(email));
	memset(tmpcrm,0,sizeof(tmpcrm));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(callerid,0,sizeof(callerid));
	memset(option6,0,sizeof(option6));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(fphoneid,0,sizeof(fphoneid)); 
	memset(option1,0,sizeof(option1)); 
	memset(ssw_ip,0,sizeof(ssw_ip)); 
	memset(tel,0,sizeof(tel)); 
	memset(bill_type,0,sizeof(bill_type)); 
	memset(num070,0,sizeof(num070)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(option2,0,sizeof(option2)); 
	memset(class,0,sizeof(option2)); 
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) {
		if(strlen(argv[2]) == 8) {
			strcpy(inner_num,argv[2]+4);
			strncpy(prefix,argv[2]+1,3);
			strcpy(phoneid,argv[2]);
		}
		else if(strlen(argv[2]) == 7) {
			strcpy(inner_num,argv[2]+3);
			strncpy(prefix,argv[2],3);
			sprintf(phoneid,"1%s",argv[2]);
		}
	}
	else 
		 errorReturn("Err Phoneid",__FILE__,__LINE__);

    if(argv[3] && *argv[3])
		strcpy(ssw_ip,argv[3]);
	else
		strcpy(ssw_ip,SSW_IP);
    if(argv[4] && *argv[4])
		strcpy(option6,argv[4]);
	else
		strcpy(option6,"");
    if(argv[5] && *argv[5])
		strcpy(callerid,argv[5]);
	else
		strcpy(callerid,"");

       t=time(0);
       tp = (struct tm *) localtime(&t);


	//sprintf(resPacket,"|RES|%s|%s|%s|",fphoneid,kind,tel);

	if(*option6 == '1' && strlen(callerid) > 4) {
		sprintf(sqlcmd, "select number from white_list where phoneid = '0%7.7s' and domain = '%s' and number='%s'",phoneid+1, domain,callerid);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if( ret = mysql_query(mysql, sqlcmd) ) {
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}	
		else {

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||||X|");
			return 0;
		}
		else {
			;
		}
		mysql_free_result(result);
		result = NULL;
		}
	}
	else if(*option6 == '2' && strlen(callerid) > 4) {
		sprintf(sqlcmd, "select number from black_list where phoneid = '0%7.7s' and domain = '%s' and number='%s'",phoneid+1, domain,callerid);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}	
		else {

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||||X|");
			return 0;
		}
		mysql_free_result(result);
		result = NULL;
		}
	}


	{
	//if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,option1,tel,bill_type,070number,record,manner_flag,sms_flag,record_flag,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						return(-1);
				}   
				else {
						
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
				{

					if(customInfo(domain) < 0)
						return -1;

					sprintf(sqlcmd, "delete from hunting_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
					ret = mysql_query(mysql, sqlcmd);

					sprintf(sqlcmd, "delete from ars_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
					ret = mysql_query(mysql, sqlcmd);

				}

							sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
							return -1;
					}
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(phoneid, row[0]?row[0]:"0");
							ps_delSpace(phoneid);
							strcpy(option1, row[1]?row[1]:"N");
							ps_delSpace(option1);
							strcpy(tel, row[2]?row[2]:"");
							ps_delSpace(tel);
							strcpy(bill_type, row[3]?row[3]:"");
							ps_delSpace(bill_type);
							strcpy(num070, row[4]?row[4]:"");
							ps_delSpace(num070);
							strcpy(record, row[5]?row[5]:"");
							ps_delSpace(record);
							strcpy(manner_flag, row[6]?row[6]:"");
							ps_delSpace(manner_flag);
							strcpy(sms_flag, row[7]?row[7]:"N");
							ps_delSpace(sms_flag);
							strcpy(record_flag, row[8]?row[8]:"");
							ps_delSpace(record_flag);
							strcpy(crm_flag, row[9]?row[9]:"");
							ps_delSpace(crm_flag);
							strcpy(messenger_ip, row[10]?row[10]:"");
							ps_delSpace(messenger_ip);
							strcpy(org_num, row[11]?row[11]:"");
							ps_delSpace(org_num);
							strcpy(option2, row[12]?row[12]:"");
							ps_delSpace(option2);
							strcpy(class, row[13]?row[13]:"");
							ps_delSpace(class);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}

				if(strlen(tel) < 7)
					strcpy(tel,"");

				if(*option1 != 'F' && *option1 != 'V') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and (domain='%s' or domain = '')",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);
				}

	//		}
	}


	if(strlen(tel) > 8) {
		row_num = 0;
		if(!strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(tel,"");
	}


	if(*option1 == 'F') {
        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where phoneid = '1%7.7s' and (domain='%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
				;
        }   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
					strcpy(tmp, row[1]?row[1]:"00000000000");
					ps_delSpace(tmp);
					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);

					strcpy(frommin, row[7]?row[7]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[8]?row[8]:"0");
					ps_delSpace(tomin);


					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

/****
					if(inttotime == 0 && intfromtime==0)
						inttotime = 24;
					if(inttotime < intfromtime) {
						inttotime += 24;
						if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
							tp->tm_hour += 24;
					}
****/
                                        if(inttotime == 0 && intfromtime==0)
                                                inttotime = 24;
                                
                                        if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin) )) {                     
                                                inttotime += 24;
                                                if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
                                                        tp->tm_hour += 24;
                                        }

                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
                                        if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
                                                if(atoi(frommin) <= tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(tomin) > tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                                                forward_check = 1;
                                        }
                                }



/****
				    if(((atol(fromday) == 0 && atol(totoday)==0) ||
						(time(0) < atol(totoday) && time(0) >  atol(fromday))) && ( inttotime >= intfromtime)  && (tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)) {
*/
				if(forward_check == 1) {
				    if(strlen(tmp) == 4)
					sprintf(fphoneid,"1%3.3s%4.4s",prefix,tmp);
				    else if(strlen(tmp) == 8)
					sprintf(fphoneid,"%s",tmp);
				    else if(strlen(tmp) > 8) {
                                        mysql_free_result(result);
                                        sprintf(sqlcmd, "select phoneid from number_manage where 070number = '%s' or org_num = '%s'",tmp,tmp);
                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                        if( ret = mysql_query(mysql, sqlcmd) ) {
                                                if(mysql)
                                                        mysql_close(mysql);
                                                sqlinit(LOCAL_SERVER);
                                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                                        exit(0);
                                                }
                                        }
                                        
                                        result = mysql_store_result( mysql );
                                        if(!result ) {  
                                                        sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                                                        logCmd();
                                                        return(-1);
                                        }    
                                        else {  
                                                row_num = mysql_num_rows(result);
                                                if( row_num == 0 ) {
                                                        sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                }
                                                else {  
                                                        row = mysql_fetch_row( result);
                                                        if( row) {
                                                                strcpy(fphoneid, row[0]?row[0]:tmp);
                                                                ps_delSpace(fphoneid);
                                                                *fphoneid='1';
                                                        }
                                                        else    
                                                                sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
                                                }
                                                mysql_free_result(result);
                                                result = NULL;
                                        }

                                        
                                        //sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
                                    
                                    }
                                }       
                                        //return(errorReturn("90000|",__FILE__,__LINE__));
                        }

			break;
		}
	}
	mysql_free_result(result);
	result = NULL;
	}
	}

	if(strlen(tmp) > 8) {
		row_num = 0;
		if(!strncmp(tmp,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(fphoneid,"");
	}

	if(*bill_type != 'Y' && *kind != '0' && strlen(messenger_ip) > 10 && strcmp(messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
		sprintf(tmpcrm,"%s^%s^%s^%s^%s",num070,domain,phoneid+4,callerid,org_num);
		commandSendUc(tmpcrm,"NOT",messenger_ip,0);
	}

	if(strlen(fphoneid)  == 8 && *kind == '3') {
		sprintf(sqlcmd, "select bill_type,record,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid='0%7.7s' and domain = '%s'",fphoneid+1,domain);

		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(bill_type_1,row[0]?row[0]:"");
					ps_delSpace(bill_type_1);
					strcpy(num070_1,row[1]?row[1]:"");
					ps_delSpace(num070_1);
					strcpy(crm_flag_1,row[2]?row[2]:"");
					ps_delSpace(crm_flag_1);
					strcpy(messenger_ip_1,row[3]?row[3]:"");
					ps_delSpace(messenger_ip_1);
					strcpy(org_num_1,row[4]?row[4]:"");
					ps_delSpace(org_num_1);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*bill_type_1 == 'Y') {
			strcpy(fphoneid,"");
		}
		else if(*bill_type_1 != 'Y' && strlen(messenger_ip_1) > 10 && strcmp(messenger_ip_1,"127.0.0.1") &&  (*crm_flag_1 == 'A' || *crm_flag_1 == 'B' || *crm_flag_1 == 'C')) {
			sprintf(tmpcrm,"%s^%s^%s^%s^%s",num070_1,domain,fphoneid+4,callerid,org_num_1);
			commandSendUc(tmpcrm,"NOT",messenger_ip_1,0);
		}
	}

	sprintf(resPacket,"|RES|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",fphoneid,kind,tel,bill_type,num070,record,manner_flag,sms_flag,record_flag,crm_flag,messenger_ip,option2,class);

    return 0;       
}


/*************************************************************************
* 포워딩 정보 조회 						     *
*************************************************************************/
int
procRF2()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,datacount=0, j=0,outcheck=0;
  int   test=0,ret,row_num,i,seq,intfromtime=0,inttotime=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],fphone_id[30],option1[5],ssw_ip[30];
	char	tel[20],option6[10],callerid[20],num070[20];
	char	bill_type[10],record[10],inner_forward[128];
	char	manner_flag[5];
	char	sms_flag[10];
struct  tm      *tp;
long	t;


	memset(email,0,sizeof(email));
	memset(callerid,0,sizeof(callerid));
	memset(option6,0,sizeof(option6));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(fphone_id,0,sizeof(fphone_id)); 
	memset(option1,0,sizeof(option1)); 
	memset(ssw_ip,0,sizeof(ssw_ip)); 
	memset(tel,0,sizeof(tel)); 
	memset(bill_type,0,sizeof(bill_type)); 
	memset(num070,0,sizeof(num070)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) {
		if(strlen(argv[2]) == 8) {
			strcpy(inner_num,argv[2]+4);
			strncpy(prefix,argv[2]+1,3);
			strcpy(phoneid,argv[2]);
		}
		else if(strlen(argv[2]) == 7) {
			strcpy(inner_num,argv[2]+3);
			strncpy(prefix,argv[2],3);
			sprintf(phoneid,"1%s",argv[2]);
		}
	}
	else 
		 errorReturn("Err Phoneid",__FILE__,__LINE__);

    if(argv[3] && *argv[3])
		strcpy(ssw_ip,argv[3]);
	else
		strcpy(ssw_ip,SSW_IP);
    if(argv[4] && *argv[4])
		strcpy(option6,argv[4]);
	else
		strcpy(option6,"");
    if(argv[5] && *argv[5])
		strcpy(callerid,argv[5]);
	else
		strcpy(callerid,"");

       t=time(0);
       tp = (struct tm *) localtime(&t);


	//sprintf(resPacket,"|RES|%s|%s|%s|",fphoneid,kind,tel);

	{

	//if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,option1,tel,bill_type,070number,record,manner_flag,sms_flag,record_flag,crm_flag from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
				else {
						
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							{
								if(customInfo(domain) < 0)
									return -1;

								sprintf(sqlcmd, "delete from hunting_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

								sprintf(sqlcmd, "delete from ars_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

							}

							sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
							return -1;
					}
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(phoneid, row[0]?row[0]:"0");
							ps_delSpace(phoneid);
							strcpy(option1, row[1]?row[1]:"N");
							ps_delSpace(option1);
							strcpy(tel, row[2]?row[2]:"");
							ps_delSpace(tel);
							strcpy(bill_type, row[3]?row[3]:"");
							ps_delSpace(bill_type);
							strcpy(num070, row[4]?row[4]:"");
							ps_delSpace(num070);
							strcpy(record, row[5]?row[5]:"");
							ps_delSpace(record);
							strcpy(manner_flag, row[6]?row[6]:"");
							ps_delSpace(manner_flag);
							strcpy(sms_flag, row[7]?row[7]:"N");
							ps_delSpace(sms_flag);
							strcpy(record_flag, row[8]?row[8]:"");
							ps_delSpace(record_flag);
							strcpy(crm_flag, row[9]?row[9]:"");
							ps_delSpace(crm_flag);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}

				if(strlen(tel) < 7)
					strcpy(tel,"");

				if(*option1 != 'F' && *option1 != 'V') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and (domain='%s' or domain = '')",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);
				}

	//		}
	}

	if(*option1 == 'F') {
        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
				;
        }   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
					strcpy(tmp, row[1]?row[1]:"00000000000");
					ps_delSpace(tmp);
					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);


					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

					if(inttotime == 0 && intfromtime==0)
						inttotime = 24;
					if(inttotime < intfromtime) {
						inttotime += 24;
						if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
							tp->tm_hour += 24;
					}

				    if(((atol(fromday) == 0 && atol(totoday)==0) ||
						(time(0) < atol(totoday) && time(0) >  atol(fromday))) && ( inttotime >= intfromtime)  && (tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)) {
/*******************
				    if(strlen(tmp) == 4)
							sprintf(fphoneid,"1%3.3s%4.4s",prefix,tmp);
				    else if(strlen(tmp) == 8)
							sprintf(fphoneid,"%s",tmp);
				    else if(strlen(tmp) > 8)
							sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
******************/
					printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
				}
				else
					return(errorReturn("90000|",__FILE__,__LINE__));
			}
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;
	}
	}

	if((*kind != '-') || (*kind == '-' && strlen(inner_forward) < 4)) {
		sprintf(resPacket,"|RES|-|-|-|-|SIP/1%s|0|",phoneid+1);
		return 0;
	}
	else {
		char *tmpP=NULL;

			memset(fromday,0,sizeof(fromday));
			memset(totoday,0,sizeof(totoday));
			memset(fromtime,0,sizeof(fromtime));
			memset(totime,0,sizeof(totime));
			memset(kind,0,sizeof(kind));
			memset(tmpDay1,0,sizeof(tmpDay1));
			memset(tmpDay2,0,sizeof(tmpDay2));
			memset(fphone_id,0,sizeof(fphone_id));


			sprintf(resPacket,"|RES|-|-|-|-|SIP/1%s",phoneid+1);
			datacount =1;
			
			tmpP = (char *)strtok(inner_forward,"$\0");

			/***
			if(tmpP && strlen(tmpP) == 4)
					sprintf(resPacket,"|RES|1%3.3s%4.4s|",prefix,tmpP);
			*/
			
			while(tmpP && strlen(tmpP) >= 4) {

printf("\n[5m[7m((((%s)))))[0m[0m",tmpP);
				if(strlen(tmpP) > 4) {
						if( datacount == 0) {
								sprintf(resPacket+strlen(resPacket),"SIP/%s@%s",tmpP,ssw_ip);
								datacount++;
						}
						else {
							    sprintf(resPacket+strlen(resPacket),"&SIP/%s@%s",tmpP,ssw_ip);
						}
						outcheck = 1;
						tmpP = (char *)strtok(NULL,"$\0");
						continue;

				}
				sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,tmpP,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
					}	
					else {
						for(j=0;j < row_num;j++) {
							row = mysql_fetch_row( result);
							if( row) {
								strcpy(tmp, row[1]?row[1]:"00000000000");
								ps_delSpace(tmp);
								strcpy(fromday, row[2]?row[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row[3]?row[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row[4]?row[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row[5]?row[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row[6]?row[6]:"0");
								ps_delSpace(kind);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;
								if(inttotime < intfromtime) {
									inttotime += 24;
									if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
										tp->tm_hour += 24;
								}

								if(((atol(fromday) == 0 && atol(totoday)==0) ||
									(time(0) < atol(totoday) && time(0) >  atol(fromday))) && ( inttotime >= intfromtime)  && (tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)) {
										if(strlen(tmp) == 4) {
												sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) > 4) {
												outcheck=1;
												sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

										}
								}
								else {
									strcpy(fphone_id,"");
								}
							}
							break;
						}
					}
					mysql_free_result(result);
					result = NULL;
					}


					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmpP);

						if( datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
									sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
							if(*kind == '3') {
								if(*tmpP && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,tmpP,fphone_id);
										datacount++;
								}
								else if(*tmpP) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,tmpP);
										datacount++;
								}
								else if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*tmpP && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,tmpP,fphone_id);
								}
								else if(*tmpP) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,tmpP);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					}
					tmpP = (char *)strtok(NULL,"$\0");

					memset(fromday,0,sizeof(fromday));
					memset(totoday,0,sizeof(totoday));
					memset(fromtime,0,sizeof(fromtime));
					memset(totime,0,sizeof(totime));
					memset(kind,0,sizeof(kind));
					memset(tmpDay1,0,sizeof(tmpDay1));
					memset(tmpDay2,0,sizeof(tmpDay2));
					memset(fphone_id,0,sizeof(fphone_id));
			}

	}
				sprintf(resPacket+strlen(resPacket),"|%d|",outcheck);

    return 0;       
}



/*************************************************************************
* 포워딩 정보 조회 						     *
*************************************************************************/
int
procRF4()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,datacount=0, j=0,outcheck=0,forward_check = 0;
  int   test=0,ret,row_num,i,seq,intfromtime=0,inttotime=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],fphone_id[30],option1[5],ssw_ip[30];
	char	tel[20],option6[10],callerid[20],num070[20];
	char	bill_type[10],record[10],inner_forward[128];
	char	manner_flag[5];
	char	sms_flag[10];
	char	frommin[5],tomin[5];
char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];
struct  tm      *tp;
long	t;


	memset(email,0,sizeof(email));
	memset(callerid,0,sizeof(callerid));
	memset(option6,0,sizeof(option6));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(fphone_id,0,sizeof(fphone_id)); 
	memset(option1,0,sizeof(option1)); 
	memset(ssw_ip,0,sizeof(ssw_ip)); 
	memset(tel,0,sizeof(tel)); 
	memset(bill_type,0,sizeof(bill_type)); 
	memset(num070,0,sizeof(num070)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) {
		if(strlen(argv[2]) == 8) {
			strcpy(inner_num,argv[2]+4);
			strncpy(prefix,argv[2]+1,3);
			strcpy(phoneid,argv[2]);
		}
		else if(strlen(argv[2]) == 7) {
			strcpy(inner_num,argv[2]+3);
			strncpy(prefix,argv[2],3);
			sprintf(phoneid,"1%s",argv[2]);
		}
	}
	else 
		 errorReturn("Err Phoneid",__FILE__,__LINE__);

    if(argv[3] && *argv[3])
		strcpy(ssw_ip,argv[3]);
	else
		strcpy(ssw_ip,SSW_IP);
    if(argv[4] && *argv[4])
		strcpy(option6,argv[4]);
	else
		strcpy(option6,"");
    if(argv[5] && *argv[5])
		strcpy(callerid,argv[5]);
	else
		strcpy(callerid,"");

       t=time(0);
       tp = (struct tm *) localtime(&t);


	//sprintf(resPacket,"|RES|%s|%s|%s|",fphoneid,kind,tel);

	{

	//if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,option1,tel,bill_type,070number,record,manner_flag,sms_flag,record_flag,crm_flag from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
				else {
						
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							{
								if(customInfo(domain) < 0)
									return -1;

								sprintf(sqlcmd, "delete from hunting_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

								sprintf(sqlcmd, "delete from ars_member where prefix= = '%s' and number='%s' and defaultip = '%s'",prefix,inner_num,serverip);
								ret = mysql_query(mysql, sqlcmd);

							}

							sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
							return -1;
					}
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(phoneid, row[0]?row[0]:"0");
							ps_delSpace(phoneid);
							strcpy(option1, row[1]?row[1]:"N");
							ps_delSpace(option1);
							strcpy(tel, row[2]?row[2]:"");
							ps_delSpace(tel);
							strcpy(bill_type, row[3]?row[3]:"");
							ps_delSpace(bill_type);
							strcpy(num070, row[4]?row[4]:"");
							ps_delSpace(num070);
							strcpy(record, row[5]?row[5]:"");
							ps_delSpace(record);
							strcpy(manner_flag, row[6]?row[6]:"");
							ps_delSpace(manner_flag);
							strcpy(sms_flag, row[7]?row[7]:"N");
							ps_delSpace(sms_flag);
							strcpy(record_flag, row[8]?row[8]:"");
							ps_delSpace(record_flag);
							strcpy(crm_flag, row[9]?row[9]:"");
							ps_delSpace(crm_flag);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}


				if(strlen(tel) > 8) {
					row_num = 0;
					if(!strncmp(tel,"070",3)) {
						sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
						if( ret = mysql_query(mysql, sqlcmd) ) {
							;
						}
						else {
							result = mysql_store_result( mysql );
							if(result) {
								row_num = mysql_num_rows(result);
							mysql_free_result(result);
							result = NULL;
							}
						}
					}
					else {
						sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
						if( ret = mysql_query(mysql, sqlcmd) ) {
							;
						}
						else {
							result = mysql_store_result( mysql );
							if(result) {
								row_num = mysql_num_rows(result);
								mysql_free_result(result);
								result = NULL;
							}
						}
					}
					if(row_num > 0)
						strcpy(tel,"");
				}

				if(*option1 != 'F' && *option1 != 'V') {
					sprintf(sqlcmd, "delete from forward_number where substr(phoneid,2,7) = '%s' and (domain='%s' or domain = '')",phoneid+1,domain);
					mysql_query(mysql, sqlcmd);
				}

	//		}
	}

	if(*option1 == 'F') {
        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
				;
        }   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
					strcpy(tmp, row[1]?row[1]:"00000000000");
					ps_delSpace(tmp);
					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);
					strcpy(frommin, row[8]?row[8]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[9]?row[9]:"0");
					ps_delSpace(tomin);

					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

					if(inttotime == 0 && intfromtime==0)
						inttotime = 24;
					if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
						inttotime += 24;
						if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
							tp->tm_hour += 24;
					}

/*******************
				    if(((atol(fromday) == 0 && atol(totoday)==0) ||
						(time(0) < atol(totoday) && time(0) >  atol(fromday))) && ( inttotime >= intfromtime)  && (tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)) {
				    if(strlen(tmp) == 4)
							sprintf(fphoneid,"1%3.3s%4.4s",prefix,tmp);
				    else if(strlen(tmp) == 8)
							sprintf(fphoneid,"%s",tmp);
				    else if(strlen(tmp) > 8)
							sprintf(fphoneid,"%s@%s",tmp,ssw_ip);
					printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
				}
				else
					return(errorReturn("90000|",__FILE__,__LINE__));
******************/

printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
					if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
						if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
							;
						}
						else 
							return(errorReturn("90000|",__FILE__,__LINE__));
					}
					else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
						if(atoi(frommin) <= tp->tm_min) {
							;
						}
						else 
							return(errorReturn("90000|",__FILE__,__LINE__));
					}
					else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
						if(atoi(tomin) > tp->tm_min) {
							;
						}
						else 
							return(errorReturn("90000|",__FILE__,__LINE__));
					}
					else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
						;
					}
					else 
						return(errorReturn("90000|",__FILE__,__LINE__));
				}
				else
					return(errorReturn("90000|",__FILE__,__LINE__));

			}
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;
	}
	}

	if(strlen(inner_forward) < 4) {
		sprintf(resPacket,"|RES|-|-|-|-|SIP/1%s|0|",phoneid+1);
		return 0;
	}
	else {
		char *tmpP=NULL;

			memset(fromday,0,sizeof(fromday));
			memset(totoday,0,sizeof(totoday));
			memset(fromtime,0,sizeof(fromtime));
			memset(totime,0,sizeof(totime));
			memset(kind,0,sizeof(kind));
			memset(tmpDay1,0,sizeof(tmpDay1));
			memset(tmpDay2,0,sizeof(tmpDay2));
			memset(fphone_id,0,sizeof(fphone_id));


			sprintf(resPacket,"|RES|-|-|-|-|SIP/1%s",phoneid+1);
			datacount =1;
			
			tmpP = (char *)strtok(inner_forward,"$\0");

			/***
			if(tmpP && strlen(tmpP) == 4)
					sprintf(resPacket,"|RES|1%3.3s%4.4s|",prefix,tmpP);
			*/
			
			while(tmpP && strlen(tmpP) >= 4) {

printf("\n[5m[7m((((%s)))))[0m[0m",tmpP);
					if(strlen(tmpP) > 4) {
						if(strlen(tmpP) > 8) {
							row_num = 0;
							if(!strncmp(tmpP,"070",3)) {
								sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmpP);
								if( ret = mysql_query(mysql, sqlcmd) ) {
									;
								}
								else {
									result = mysql_store_result( mysql );
									if(result) {
										row_num = mysql_num_rows(result);
									mysql_free_result(result);
									result = NULL;
									}
								}
							}
							else {
								sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmpP);
								if( ret = mysql_query(mysql, sqlcmd) ) {
									;
								}
								else {
									result = mysql_store_result( mysql );
									if(result) {
										row_num = mysql_num_rows(result);
										mysql_free_result(result);
										result = NULL;
									}
								}
							}
							if(row_num > 0) {
								tmpP = (char *)strtok(NULL,"$\0");
								continue;
							}
						}


						if( datacount == 0) {
								sprintf(resPacket+strlen(resPacket),"SIP/%s@%s",tmpP,ssw_ip);
								datacount++;
						}
						else {
							    sprintf(resPacket+strlen(resPacket),"&SIP/%s@%s",tmpP,ssw_ip);
						}
						outcheck = 1;
						tmpP = (char *)strtok(NULL,"$\0");
						continue;

				}


				sprintf(sqlcmd, "select bill_type,record,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s'  and domain='%s'", prefix,tmpP,domain);

				printf("\n(((%s))))",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}

				result = mysql_store_result( mysql );
				if(!result ) {
					;
				}
				else {
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
					}
					else {
						row = mysql_fetch_row( result );
						if( row) {
					/**bill_type_1[10],record_1{5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];*/
							strcpy(bill_type_1,row[0]?row[0]:"");
							ps_delSpace(bill_type_1);
							strcpy(num070_1,row[1]?row[1]:"");
							ps_delSpace(num070_1);
							strcpy(crm_flag_1,row[2]?row[2]:"");
							ps_delSpace(crm_flag_1);
							strcpy(messenger_ip_1,row[3]?row[3]:"");
							ps_delSpace(messenger_ip_1);
							strcpy(org_num_1,row[4]?row[4]:"");
							ps_delSpace(org_num_1);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
				if(*bill_type_1 == 'Y') {
					continue;
				}

				sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,tmpP,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
					}	
					else {
						for(j=0;j < row_num;j++) {
							row = mysql_fetch_row( result);
							if( row) {
								strcpy(tmp, row[1]?row[1]:"00000000000");
								ps_delSpace(tmp);
								strcpy(fromday, row[2]?row[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row[3]?row[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row[4]?row[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row[5]?row[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row[6]?row[6]:"0");
								ps_delSpace(kind);
								strcpy(frommin, row[7]?row[7]:"0");
								ps_delSpace(frommin);
								strcpy(tomin, row[8]?row[8]:"0");
								ps_delSpace(tomin);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;
								if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
									inttotime += 24;
									if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
										tp->tm_hour += 24;
								}
/****
								if(((atol(fromday) == 0 && atol(totoday)==0) ||
									(time(0) < atol(totoday) && time(0) >  atol(fromday))) && ( inttotime >= intfromtime)  && (tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)) {
										if(strlen(tmp) == 4) {
												sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) > 4) {
												outcheck=1;
												sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

										}
								}
								else {
									strcpy(fphone_id,"");
								}
*****/
printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
									if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
										if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
											if(strlen(tmp) == 4) {
												sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
											}
											else if(strlen(tmp) == 8) {
												sprintf(fphone_id,"%s",tmp);
											}
											else if(strlen(tmp) > 8) {
												outcheck=1;
												sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

											}
											else 
												strcpy(fphone_id,"");
										}
										else
											strcpy(fphone_id,"");
									}
									else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
										if(atoi(frommin) <= tp->tm_min) {
											if(strlen(tmp) == 4) {
												sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
											}
											else if(strlen(tmp) == 8) {
												sprintf(fphone_id,"%s",tmp);
											}
											else if(strlen(tmp) > 8) {
												outcheck=1;
												sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

											}
											else 
												strcpy(fphone_id,"");
										}
										else
											strcpy(fphone_id,"");
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
										if(atoi(tomin) > tp->tm_min) {
											if(strlen(tmp) == 4) {
												sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
											}
											else if(strlen(tmp) == 8) {
												sprintf(fphone_id,"%s",tmp);
											}
											else if(strlen(tmp) > 4) {
												outcheck=1;
												sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

											}
											else 
												strcpy(fphone_id,"");
										}
										else
											strcpy(fphone_id,"");
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
										if(strlen(tmp) == 4) {
											sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) == 8) {
											sprintf(fphone_id,"%s",tmp);
										}
										else if(strlen(tmp) > 4) {
											outcheck=1;
											sprintf(fphone_id,"%s@%s",tmp,ssw_ip);

										}
										else
											strcpy(fphone_id,"");
									}
									else
										strcpy(fphone_id,"");
								}
								else
									strcpy(fphone_id,"");

							}
							break;
						}
					}
					mysql_free_result(result);
					result = NULL;
					}

					if(strlen(tmp) > 4) {
						row_num = 0;
						if(!strncmp(tmp,"070",3)) {
							sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								;
							}
							else {
								result = mysql_store_result( mysql );
								if(result) {
									row_num = mysql_num_rows(result);
								mysql_free_result(result);
								result = NULL;
								}
							}
						}
						else {
							sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								;
							}
							else {
								result = mysql_store_result( mysql );
								if(result) {
									row_num = mysql_num_rows(result);
									mysql_free_result(result);
									result = NULL;
								}
							}
						}
						if(row_num > 0) {
							strcpy(fphone_id,"");
						}
					}


					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmpP);

						if( datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
								sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
									sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
									datacount++;
								}
							}
							if(*kind == '3') {
								if(*tmpP && *fphone_id) {
									sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,tmpP,fphone_id);
									datacount++;
								}
								else if(*tmpP) {
									sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,tmpP);
									datacount++;
								}
								else if(*fphone_id) {
									sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
									datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*tmpP && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,tmpP,fphone_id);
								}
								else if(*tmpP) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,tmpP);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					}
					tmpP = (char *)strtok(NULL,"$\0");

					memset(fromday,0,sizeof(fromday));
					memset(totoday,0,sizeof(totoday));
					memset(fromtime,0,sizeof(fromtime));
					memset(totime,0,sizeof(totime));
					memset(kind,0,sizeof(kind));
					memset(tmpDay1,0,sizeof(tmpDay1));
					memset(tmpDay2,0,sizeof(tmpDay2));
					memset(fphone_id,0,sizeof(fphone_id));
			}

	}
			sprintf(resPacket+strlen(resPacket),"|%d|",outcheck);

    return 0;       
}



/*************************************************************************
* voicemail 조회 						     *
*************************************************************************/
int
procRVM()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i;
  char tmp[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],mailbox[64],option1[5];
	char kind[5];



	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(mailbox,0,sizeof(mailbox)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(kind,0,sizeof(kind));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


	//if(PVS == 1) {
				if(customInfo(domain) < 0)
					return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
/***
	}
	else {
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

*/

	domain_string(domain);
	{
		//if(PVS == 1) {}
				sprintf(sqlcmd, "select phoneid,option1,option8 from number_manage where substr(phoneid,2,7) = '%7.7s' and domain='%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
					logCmd();
					return -1;
				}

				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
					strcpy(option1, row[1]?row[1]:"0");
					ps_delSpace(option1);
					strcpy(kind, row[2]?row[2]:"0");
					ps_delSpace(kind);
				}

				mysql_free_result(result);
				result = NULL;
			//}
	}
	printf("\n=========================================");
	if(*option1 != 'V') {

		sprintf(sqlcmd, "delete from voicemail_users where customer_id = '%s' and domain= '%s'",phoneid+1,domain);
        	mysql_query(mysql, sqlcmd);


                return(errorReturn("90000|",__FILE__,__LINE__));
	}

        sprintf(sqlcmd, "select email from voicemail_users where mailbox = '%s' and domain='%s'",phoneid+1,domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
				result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
			strcpy(mailbox, row[0]?row[0]:"00000000000");
			ps_delSpace(mailbox);
			break;
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

	sprintf(resPacket,"|RES|%s|%s",mailbox,kind);

    return 0;       
}


/*************************************************************************
*************************************************************************/
int
procSSW()
{
  char passwd[256];
  int   ret,row_num;
  char    sqlcmd[512];
  char    tmpPhoneid[10];
  char    secret[10], inner_num[5],outer_num[20];
  char    phoneid[10],etc[20];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(outer_num,0,sizeof(outer_num)); 
	memset(etc,0,sizeof(etc)); 

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);

	/**
	** phoneid 얻기
	**/
	sprintf(sqlcmd, "select etc from number_list where number='%s'",outer_num);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0) {
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",phoneid);
		logCmd();
		return -1;
	}
	else {
		row = mysql_fetch_row( result );
		if(row) {
			strcpy(etc, row[0]?row[0]:"-");
			ps_delSpace(etc);
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%s",etc);
	return 0;
}


/*************************************************************************
*************************************************************************/
int
procRTH()
{
  char passwd[256];
  int   ret,row_num;
  char    sqlcmd[512];
  char    tmpPhoneid[10];
  char    secret[10], inner_num[5];
  char    phoneid[10];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 

	if(argv[2] && *argv[2])
		strcpy(phoneid,argv[2]);

	/**
	** phoneid 얻기
	**/
	sprintf(sqlcmd, "select passwd from number_manage where phoneid='0%7.7s' and domain='%s'",phoneid+1,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);

		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0) {
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",phoneid);
		logCmd();
		return -1;
	}
	else {
		row = mysql_fetch_row( result );
		if(row) {
			strcpy(passwd, row[0]?row[0]:"-");
			ps_delSpace(passwd);
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%s",passwd);
	return 0;
}


/*************************************************************************
* Phoneid(인증) 조회 						     *
*************************************************************************/
int
procATH()
{
  char passwd[256];
  int   ret,row_num;
  char    sqlcmd[512];
  char    tmpPhoneid[130];
  char    secret[10], inner_num[5];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 


	if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	/**
	** phoneid 얻기
	*/
	sprintf(sqlcmd, "select passwd from number_manage where domain = '%s' and imid='%s' ",domain,user);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0  || !strcmp(user,"master")) {
			mysql_free_result(result);
			result = NULL;

			sprintf(sqlcmd, "select passwd from custom_info where domain = '%s' and manager='%s' ",domain,user);

			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
			}   


			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",domain);
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(secret, row[0]?row[0]:"0");
				ps_delSpace(secret);
			}
			mysql_free_result(result);
			result = NULL;
			/**
			** passwd 비교
			*/
			if(!strcmp(secret,passwd)){
				sprintf(resPacket,"|RES|master|");
			} else {
				sprintf(resPacket, "|ERR|Invalid Password(%s)-(master)",domain);
				return -1;
			}
			return 0 ;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(tmpPhoneid, row[0]?row[0]:"1");
		ps_delSpace(tmpPhoneid);
	}
	mysql_free_result(result);
	result = NULL;
/***
	sprintf(phoneid,"2%7.7s",tmpPhoneid+1);
	domain_string(domain);
*/

	/**
	** passwd 비교
	*/
	if(!strcmp(tmpPhoneid,passwd)){
		sprintf(resPacket,"|RES|%s",user);
	}else{
		sprintf(resPacket, "|ERR|Invalid Password(%s)-(%s)",domain,user);
	}

    return 0;       
}



/*************************************************************************
* 비번변경, |domain|passwd|inner_num ~~~ 
*************************************************************************/
int
procUTH()
{
  char passwd[256];
  int   ret,row_num,i;
  char    sqlcmd[1024],sqlcmd1[1024],today[20],tmp[20];
  char    tmpPhoneid[10],num070[14];
  char    secret[10],inner_num[5],phoneid[10],md5_passwd[64];
	char fromoam[10];
	char	messenger_ip[20];
	int src_len;	
        unsigned char src_str[10000];
        unsigned char hash_str[10000];
        unsigned char output[129];
        char passwd_store[387];
        char old_passwd_store[387];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(today,0,sizeof(today)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(today,0,sizeof(today)); 
	memset(passwd_store,0,sizeof(passwd_store)); 
	memset(old_passwd_store,0,sizeof(old_passwd_store)); 
	memset(fromoam,0,sizeof(fromoam)); 

	if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);

	if(strlen(passwd) < 4 || strlen(passwd) == 32) {
		sprintf(resPacket,"|RES|master|(%s)",passwd);
		return 0 ;
	}
	if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) < 4 || strlen(inner_num) > 12)
		strcpy(inner_num,"1111");

	//if(!isdigitstr(inner_num) || !isdigitstr(passwd) || strlen(passwd) < 4) 
	if(!isdigitstr(inner_num) || strlen(passwd) < 4) {
		sprintf(resPacket, "|ERR|g(%s,%s)",inner_num,passwd);
		return -1;
	}

	if(argv[6] && *argv[6])
		strcpy(fromoam,argv[6]);


	if(strlen(passwd) < 30 ) {
		strcpy(src_str,passwd);
		src_len=strlen(src_str);

		sha4( src_str, src_len, output, 0);
		hexify( hash_str, output, 64 );
		//strcpy(passwd,hash_str);
	}
	else 
		strcpy(hash_str,passwd);
	tmm_currDate(YYYYMMDD,today);


printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

	if(!*inner_num) {
	if( !strcmp(user,"master")) {

		//sprintf(sqlcmd, "update custom_info set passwd = '%s' where domain = '%s' and manager='%s' ",hash_str,domain,user);
		sprintf(sqlcmd, "update custom_info set passwd = '%s' where domain = '%s' and manager='%s' ",passwd,domain,user);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		sprintf(resPacket,"|RES|master|",phoneid);
		return 0 ;
	}

	sprintf(sqlcmd, "select passwd_store from number_manage where where domain = '%s' and imid='%s'",domain,user);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) 
	{
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
					
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) 
	{
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) 
	{
		strcpy(old_passwd_store, row[0]?row[0]:"");
		ps_delSpace(old_passwd_store);
	}
	mysql_free_result(result);
	result = NULL;

	if(strlen(old_passwd_store) > 128) {
		sprintf(passwd_store,"%-128.128s|%-257.257s",hash_str,old_passwd_store);

		if(!strncmp(hash_str,old_passwd_store,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_1",passwd);
			return -1;
		}
		else if(!strncmp(hash_str,old_passwd_store+129,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_2",passwd);
			return -1;
		}
		else if(!strncmp(hash_str,old_passwd_store+258,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_3",passwd);
			return -1;
		}
	}
	else if(strlen(old_passwd_store) <= 128)
		sprintf(passwd_store,"%-128.128s|%-128.128s|%-128.128s",hash_str,"","");
	
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

	sprintf(sqlcmd, "update number_manage set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' where domain = '%s' and imid='%s'",hash_str,today,passwd_store,domain,user);
	//sprintf(sqlcmd, "update number_manage set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' where domain = '%s' and imid='%s'",passwd,today,passwd_store,domain,user);

	printf("\nsqlcmd:(%s)",sqlcmd);
	mysql_query(mysql, sqlcmd);
	}
	else {
		if(PVS == 1 && MASTER == 1)  {

			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

				sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd_store from number_manage where phoneid = '0%3.3s%4.4s' and domain = '%s'",prefix,inner_num,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(crm_flag, row[1]?row[1]:"");
					ps_delSpace(crm_flag);
					strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					strcpy(old_passwd_store, row[3]?row[3]:"");
					ps_delSpace(old_passwd_store);
				}
				mysql_free_result(result);
				result = NULL;
		} else {
			if(argv[4] && *argv[4])
				strcpy(phoneid,argv[4]);
			if(argv[5] && *argv[5])
				strcpy(serverip,argv[5]);
			else {
				if(customInfo(domain) < 0)
					return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			}
		}
printf("\n[7m(%s),(%s)[0m",hash_str,passwd);

		//passwd[5] = '\0';
		if(strlen(old_passwd_store) > 128) {
			sprintf(passwd_store,"%-128.128s|%-257.257s",hash_str,old_passwd_store);
			if(!strncmp(hash_str,old_passwd_store,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_1",passwd);
				return -1;
			}
			else if(!strncmp(hash_str,old_passwd_store+129,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_2",passwd);
				return -1;
			}
			else if(!strncmp(hash_str,old_passwd_store+258,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_3",passwd);
				return -1;
			}
		}
		else if(strlen(old_passwd_store) <= 128)
			sprintf(passwd_store,"%-128.128s|%-128.128s|%-128.128s",hash_str,"","");

		sprintf(sqlcmd,"UPDATE number_manage  set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' \
		where phoneid = '0%7.7s' and domain='%s'",\
		hash_str,today,passwd_store,phoneid+1,domain);
		//sprintf(sqlcmd,"UPDATE number_manage  set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' \
		//where phoneid = '0%7.7s' and domain='%s'",\
		//passwd,today,passwd_store,phoneid+1,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}


/*****************************
		sprintf(sqlcmd,"UPDATE voicemail_users  set password = '%s' \
		where mailbox = '%7.7s' and domain='%s'",\
		passwd,phoneid+1, domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
*/

		sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
printf("\n[7m(%s),(%s)[0m",hash_str,passwd);

printf("\ncommandBuf:(%s)",commandBuf);

		sprintf(resPacket,"|RES|UTH userid:(%s)-(%s)_(%s)",user,domain,phoneid);
		printf("\nphoneid1 : (%s)",phoneid);
		if(PVS == 1 && MASTER == 1) 
		{

			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql, sqlcmd);

				}
			}

		printf("\nphoneid2 : (%s)",phoneid);
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
                        int j;
                        MD5_DIGEST digest;
                        md5_digest(passwd, strlen(passwd), digest);
                        for (j=0; j< sizeof(digest); j++) {
                            sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
                        }

			sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,inner_num,phoneid,serverip,num070);
			//sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|%s|",user,domain,hash_str,inner_num,phoneid,serverip,num070);
			if(ret = commandSendUc(commandBuf,"UTH",messenger_ip,1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'UTH','%s','%s')",tmp, commandBuf,serverip,messenger_ip,num070);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				mysql_query(mysql, sqlcmd1);
			}
		}
		printf("\nphoneid3 : (%s)",phoneid);

		sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|UTH userid:(%s)-(%s)_(%s)",user,domain,phoneid);
			/****추가 ***/
			//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTH')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

	}
	sprintf(resPacket,"|RES|master|(%s)",phoneid);
	return 0 ;

}
/*************************************************************************
*************************************************************************/
int
procRTV()
{
  char passwd[256];
  int   ret,row_num;
  char    sqlcmd[512];
  char    tmpPhoneid[10];
  char    secret[10], inner_num[5];
  char    phoneid[10];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 

	if(argv[2] && *argv[2])
		strcpy(phoneid,argv[2]);

	/**
	** phoneid 얻기
	**/
	sprintf(sqlcmd, "select security_passwd from number_manage where phoneid='0%7.7s' and domain='%s'",phoneid+1,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0) {
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",phoneid);
		logCmd();
		return -1;
	}
	else {
		row = mysql_fetch_row( result );
		if(row) {
			strcpy(passwd, row[0]?row[0]:"-");
			ps_delSpace(passwd);
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%s",passwd);
	return 0;
}


/************************************************************************
* 음성비번변경, |domain|passwd|inner_num ~~~ 
*************************************************************************/
int
procUTV()
{
  char passwd[256];
  int   ret,row_num,i;
	int src_len;
  char    sqlcmd[512],sqlcmd1[512],today[20],tmp[20];
  char    tmpPhoneid[10],num070[14];
  char    secret[10],inner_num[5],phoneid[10],md5_passwd[64];
	char	messenger_ip[20];
        unsigned char src_str[10000];
        unsigned char hash_str[10000];
        unsigned char output[129];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(today,0,sizeof(today)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 

	if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);

	if(strlen(passwd) < 4 || strlen(passwd) == 32) {
		sprintf(resPacket,"|RES|master|(%s)",passwd);
		return 0 ;
	}
	if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) < 4 || strlen(inner_num) > 12)
		strcpy(inner_num,"1111");

	if(!isdigitstr(inner_num) || !isdigitstr(passwd) || strlen(passwd) < 4) {
		sprintf(resPacket, "|ERR|g(%s,%s)",inner_num,passwd);
		return -1;
	}

        strcpy(src_str,passwd);
        src_len=strlen(src_str);

        sha4( src_str, src_len, output, 0);
	hexify( hash_str, output, 64 );


	if(!*inner_num) {

	sprintf(sqlcmd, "update number_manage set security_passwd = '%s' where domain = '%s' and imid='%s'",hash_str,domain,user);

	printf("\nsqlcmd:(%s)",sqlcmd);
	mysql_query(mysql, sqlcmd);
	}
	else {
		if(PVS == 1 && MASTER == 1)  {

			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

				sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip from number_manage where phoneid = '0%3.3s%4.4s'",prefix,inner_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(crm_flag, row[1]?row[1]:"");
					ps_delSpace(crm_flag);
					strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(messenger_ip);
				}
				mysql_free_result(result);
				result = NULL;
		}
		else {
			if(argv[4] && *argv[4])
				strcpy(phoneid,argv[4]);
			if(argv[5] && *argv[5])
				strcpy(serverip,argv[5]);
			else {
				if(customInfo(domain) < 0)
					return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			}
		}

		passwd[5] = '\0';
		sprintf(sqlcmd,"UPDATE number_manage  set security_passwd = '%s' \
		where phoneid = '0%7.7s' and domain='%s'",\
		hash_str,phoneid+1,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
		sprintf(sqlcmd,"UPDATE voicemail_users  set password = '%s' \
		where mailbox = '%7.7s' and domain='%s'",\
		hash_str,phoneid+1, domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(commandBuf,"|UTV|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|UTV userid:(%s)-(%s)_(%s)",user,domain,phoneid);


		printf("\nphoneid1 : (%s)",phoneid);
		if(PVS == 1 && MASTER == 1) 
		{

			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql, sqlcmd);

				}
			}

		printf("\nphoneid2 : (%s)",phoneid);
		sprintf(commandBuf,"|UTV|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|UTV userid:(%s)-(%s)_(%s)",user,domain,phoneid);
			/****추가 ***/
			//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);	
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTV')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

	}
	sprintf(resPacket,"|RES|master|(%s) UTV",phoneid);
	return 0 ;

}



/*************************************************************************
* queue_table등록
*************************************************************************/
int
procQHT()
{
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0,sockfd = -1;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[20];
  char  defaultip[20];
  char  play_onoff[20];
  char  prefix[10],inner_digit[10];
  char	policy[20];
  char	command[100];
  char	timeout[20];

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(frommin,0,sizeof(frommin));
	memset(totime,0,sizeof(totime));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
	memset(ment_file,0,sizeof(ment_file)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(defaultip,0,sizeof(defaultip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(play_onoff,0,sizeof(play_onoff)); 
	memset(timeout,0,sizeof(timeout)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[2] && *argv[2])
		strcpy(name,argv[2]);
	else 
		strcpy(name,"");

    if(argv[3] && *argv[3])
		strcpy(method,argv[3]);
	else 
		strcpy(method,"1");

    if(argv[4] && *argv[4])
                strcpy(wait_music,argv[4]);
        else
                strcpy(wait_music,"default");
    if(argv[5] && *argv[5])
                strcpy(play_onoff,argv[5]);
        else
                strcpy(play_onoff,"1");
    if(argv[6] && *argv[6])
                strcpy(timeout,argv[6]);
        else
                strcpy(timeout,"0");

	if(*method == '2')
		strcpy(policy,"linear");
	else if(*method == '3')
		strcpy(policy,"ringall");
	else if(*method == '4')
		strcpy(policy,"random");

	else if(*method == '5')
		strcpy(policy,"roundrobin");
	else
		strcpy(policy,"leastrecent");


	if(strlen(method) > 1 || !isdigitstr(method)) {
		sprintf(resPacket,"|ERR|오류:method(0~4) input::(%s)",method);
		return -1;
	}
	if(strlen(domain) < 5) {
		sprintf(resPacket,"|ERR|오류:domain() invalid",domain);
		return -1;
	}

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[7] && *argv[7]) 
			strcpy(prefix,argv[7]);
		if(argv[8] && *argv[8]) 
			strcpy(serverip,argv[8]);

	}


/***********
	sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain= '%s'",domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,
mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
		return(-1);
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
		strcpy(prefix, row[1]?row[1]:"000");
		ps_delSpace(prefix);
		strcpy(inner_digit, row[2]?row[2]:"4");
		ps_delSpace(inner_digit);
	}
	mysql_free_result(result);
	result = NULL;
*/


	sprintf(sqlcmd,"delete from queue_table where domain = '%s' and defaultip ='%s' and name = '%s'",domain,defaultip,name);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into queue_table(domain,defaultip,name, context,musiconhold,announce ,strategy ,timeout ,retry ,maxlen ,announce_frequency,announce_holdtime, monitor_format ,monitor_join,queue_youarenext, queue_thankyou,regdate,play_onoff,eventmemberstatus,eventwhencalled,joinempty) values ('%s','%s','%s','%s','%s','','%s','%s',1,100,0,'no','','no','silence','',NOW(),'%s',1,1,'yes')",domain,serverip,name,"callback_context",wait_music,policy,timeout,play_onoff);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|QHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],play_onoff,timeout,prefix,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'QHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|QHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],play_onoff,timeout,prefix,serverip);

		sprintf(resPacket,"|RES|QHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,policy);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'QHT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		//sprintf(command,"QueueAdd\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\n",name,domain);
		sprintf(command,"QueueAdd\r\nQueue: %s\r\nDomain: %s\r\n",name,domain);
		printf("\ncommand: (%s)",command);

		sockfd=IPCCManager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
else {
    sprintf(resPacket,"|ERR|QHT userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,policy,timeout);
    return -1;       
}
	}

    sprintf(resPacket,"|RES|QHT userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,policy,timeout);
    return 0;       
}



/*************************************************************************
* ars group
*************************************************************************/
int
procU_A()
{
  char email[256], sqlcmd1[1];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char  wait_music[40],policy[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);

/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(prefix,argv[3]);
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
	}

	sprintf(sqlcmd,"update number_list set type=0,arsflag = 'Y' where number='%s' and domain='%s'",number,domain);

	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( mysql_query(mysql, sqlcmd)) {
			tcpWrite(masterFd,resPacket);
			logCmd();
			exit(0);
		}
	}
	sprintf(sqlcmd,"update number_manage set numbertype = '0',option7 = 'Y',inner_method='0' where 070number='%s' and domain='%s'",number,domain);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s,%s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	printf("\nsqlcmd : (%s)",sqlcmd);

	/*****
	sprintf(sqlcmd,"update ars_group set method = '%s' where domain='%s' and number = '%s' and name = '%s'",method,domain,number,name);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s,%s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
	printf("\nsqlcmd : (%s)",sqlcmd);

	sprintf(sqlcmd,"UPDATE queue_table set strategy = '%s' where domain='%s' and defaultip='%s' and name ='%s'",policy,domain,serverip,name);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   
	printf("\nsqlcmd : (%s)",sqlcmd);
	*/

	sprintf(commandBuf,"|U_A|%s@%s|%s|%s|%s|",user,domain,argv[2],prefix,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UUT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|U_A|%s@%s|%s|%s|%s|",user,domain,argv[2],prefix,serverip);
	sprintf(resPacket,"|RES|U_A userid:(%s)-(%s)-(%s)",user,domain,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1, 'U_A')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|U_A userid:(%s)-(%s)-(%s)",user,domain,number);
	return 0;       
}


/*************************************************************************
* queue_list
*************************************************************************/
int
procRAQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
	char	wait_music[40],policy[20], maxlen[20],play_onoff[20];
	char	timeout[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
	memset(maxlen,0,sizeof(maxlen)); 
	memset(play_onoff,0,sizeof(play_onoff)); 
	memset(timeout,0,sizeof(timeout)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
	if(argv[3]&& *argv[3])
		strcpy(name,argv[3]);
	else
		strcpy(name,"-");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;
/***
	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
*/

		if(name && strlen(name) > 1)
			sprintf(sqlcmd, "select distinct name,musiconhold,strategy,maxlen,play_onoff,timeout from queue_table where domain = '%s' and defaultip = '%s' and name ='%s'",domain,serverip,name);
		else
			sprintf(sqlcmd, "select distinct name,musiconhold,strategy,maxlen,play_onoff,timeout from queue_table where domain = '%s' and defaultip = '%s'",domain,serverip);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(name, row[0]?row[0]:"");
				ps_delSpace(name);
				strcpy(wait_music, row[1]?row[1]:"");
				ps_delSpace(wait_music);
				strcpy(policy, row[2]?row[2]:"2");
				ps_delSpace(policy);
				strcpy(maxlen, row[3]?row[3]:"0");
				ps_delSpace(maxlen);
				strcpy(play_onoff, row[4]?row[4]:"1");
				ps_delSpace(play_onoff);
				strcpy(timeout, row[5]?row[5]:"0");
				ps_delSpace(timeout);
			}

			printf("\n(%s)-(%s)-(%s)",name,maxlen,wait_music);

			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^0^0^0^0^%s",name,maxlen,wait_music,policy,play_onoff,timeout);
			if(!((i+1)%20))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}


/*************************************************************************
* queue_list(엔진_
*************************************************************************/
int
procRAA()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1,sockfd = -1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20],command[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
	char	wait_music[40],policy[20], maxlen[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
	memset(maxlen,0,sizeof(maxlen)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
	if(argv[3]&& *argv[3])
		strcpy(name,argv[3]);
	else
		strcpy(name,"");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));
*/

	if(customInfo(domain) < 0)
		return -1;

	sprintf(sqlcmd, "select domain from number_list where domain = '%s' and status=1 limit 1",domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		;
	}
	else {
		row_num = mysql_num_rows(result);
		if( row_num != 0 ) {
			mysql_free_result(result);
			result = NULL;
		}
		else {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("EInput Domain(domain)",__FILE__,__LINE__));
		}
	}


/***
	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
*/

	sprintf(command,"QueueMonitor");
	sockfd = ManagerQueueInfo(serverip,command,name,domain);
	printf("\n............._tmpBuff:(%s)",_tmpbuf);
	if(sockfd > -1) {
		strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
		write(sockfd, sqlcmd, strlen(sqlcmd));
		close(sockfd);
	}

	memset(resPacket,0,sizeof(resPacket));
	ps_delSpace(_tmpbuf);
	sprintf(resPacket, "|RES|%s",_tmpbuf);
	printf("\nresPacket:(%s)",resPacket);


	return 0;       
}


/*************************************************************************
* queue_list
*************************************************************************/
int
procUAQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
	char	wait_music[40],policy[20];
	char	play_onoff[5];
	char	timeout[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
	memset(play_onoff,0,sizeof(play_onoff)); 
	memset(timeout,0,sizeof(timeout)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
	if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
*/
	if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else
		strcpy(name,"-");

	if(argv[3]&& *argv[3])
		strcpy(wait_music,argv[3]);
	else
		strcpy(wait_music,"default");

	if(argv[4]&& *argv[4]) {
		if(*argv[4] == '2')
			strcpy(policy,"linear");
		else if(*argv[4] == '3')
			strcpy(policy,"ringall");
		else if(*argv[4] == '4')
			strcpy(policy,"random");
		else if(*argv[4] == '5')
			strcpy(policy,"roundrobin");
		else
			strcpy(policy,"leastrecent");
	}
	else
		strcpy(policy,"leastrecent");

	if(argv[5]&& *argv[5])
		strcpy(play_onoff,argv[5]);
	else
		strcpy(play_onoff,"1");

	if(argv[6]&& *argv[6])
		strcpy(timeout,argv[6]);
	else
		strcpy(timeout,"0");


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(PVS == 1) {
	if(customInfo(domain) < 0)
		return -1;
    }
	else {
		if(argv[5]&& *argv[5])
			strcpy(play_onoff,argv[5]);
		else
			strcpy(play_onoff,"1");

	if(argv[6]&& *argv[6])
		strcpy(timeout,argv[6]);
	else
		strcpy(timeout,"0");

		if(argv[7]&& *argv[7])
			strcpy(prefix,argv[7]);
		else
			strcpy(prefix,"000");

		if(argv[8]&& *argv[8])
			strcpy(serverip,argv[8]);
		else
			strcpy(serverip,"127.0.0.1");
	}
/***
	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
*/
	if (strlen(name) < 2)		return(errorReturn("Err queue name`",__FILE__,__LINE__));

		sprintf(sqlcmd, "update queue_table set  musiconhold = '%s', strategy='%s',play_onoff='%s',timeout='%s' where domain='%s' and defaultip='%s' and name='%s'",wait_music,policy,play_onoff,timeout,domain,serverip,name);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Update Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
	/****
		sprintf(sqlcmd, "update ars_group set wait_music = '%s', method='%s' where domain='%s' and defaultip='%s' and name='%s'",wait_music,argv[5]&& *argv[5]?argv[5]:"6",domain,serverip,name);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Update Error ars_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}   
	*/
				
	//sprintf(commandBuf,"|UAQ|%s@%s|%s|%s|%s|%s|%s|",user,domain,name,wait_music,argv[3],play_onoff,prefix,serverip);
	sprintf(commandBuf,"|UAQ|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,wait_music,argv[4],play_onoff,timeout,prefix,serverip);

	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAQ')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	//sprintf(commandBuf,"|UAQ|%s@%s|%s|%s|%s|%s|%s|",user,domain,name,wait_music,argv[3],play_onoff,prefix,serverip);
	//sprintf(commandBuf,"|UAQ|%s@%s|%s|%s|%s|%s|%s|",user,domain,name,wait_music,argv[4],play_onoff,prefix,serverip);
				sprintf(commandBuf,"|UAQ|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,wait_music,argv[4],play_onoff,timeout,prefix,serverip);
				printf("\ncommandBuf(%s)\n",commandBuf);

sprintf(resPacket,"|RES|UAQ userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,wait_music,policy,timeout);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAQ')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
sprintf(resPacket,"|RES|UAQ userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,wait_music,policy,timeout);
return 0;       

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}


/*************************************************************************
* queue_list
*************************************************************************/
int
procDAQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1,sockfd = -1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	wait_music[40],policy[20];
  char	command[100];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(policy,0,sizeof(policy)); 
	memset(command,0,sizeof(command)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else
		strcpy(name,"-");


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(PVS == 1) {
	if(customInfo(domain) < 0)
		return -1;
    }
	else {
		if(argv[3]&& *argv[3])
			strcpy(prefix,argv[3]);
		else
			strcpy(prefix,"000");

		if(argv[4]&& *argv[4])
			strcpy(serverip,argv[4]);
		else
			strcpy(serverip,"127.0.0.1");
	}
/***
	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
*/
	if (strlen(name) < 2)		return(errorReturn("Err queue name`",__FILE__,__LINE__));

		sprintf(sqlcmd, "DELETE from queue_table  where domain='%s' and defaultip='%s' and name='%s'",domain,serverip,name);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Delete Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd,"DELETE from queue_member_table where domain='%s' and queue_name = '%s'",domain,name);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);
/****
		sprintf(sqlcmd, "DELETE from ars_group where domain='%s' and defaultip='%s' and name='%s'",domain,serverip,name);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Update Error hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}   
		printf("\nsqlcmd:(%s)",sqlcmd);
*/
				
	sprintf(commandBuf,"|DAQ|%s@%s|%s|%s|%s|",user,domain,name,prefix,serverip);

	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAQ')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|DAQ|%s@%s|%s|%s|%s|",user,domain,name,prefix,serverip);

sprintf(resPacket,"|RES|DAQ userid:(%s)-(%s)-(%s)",user,domain,name);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAQ')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		//sprintf(command,"QueueRemove\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\n",name,domain);
		sprintf(command,"QueueRemove\r\nQueue: %s\r\nDomain: %s\r\n",name,domain);
		printf("\ncommand: (%s)",command);

		sockfd = IPCCManager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(sqlcmd));
			close(sockfd);
		}
else {
	sprintf(resPacket,"|ERR|DAQ userid:(%s)-(%s)-(%s)",user,domain,name);
	return 0;       
}
	}
sprintf(resPacket,"|RES|DAQ userid:(%s)-(%s)-(%s)",user,domain,name);
	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}


/*************************************************************************
* ars meber
*************************************************************************/
int
procIQM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
char wrapuptime[11],memberdelay[11];
	
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512],command[128];
  char	method[5],extension[10],num070[14];
	char penalty[20];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(wrapuptime,0,sizeof(wrapuptime)); 
	memset(memberdelay,0,sizeof(memberdelay)); 
	memset(penalty,0,sizeof(penalty)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(name,argv[2]);
	else
		strcpy(name,"-");

    if(argv[3] && *argv[3])
                snprintf(number,sizeof(number),"%s",argv[3]);
    else
		strcpy(number,"");
    if(argv[4] && *argv[4])
		strcpy(wrapuptime,argv[4]);
    else
		strcpy(wrapuptime,"0");
    if(argv[5] && *argv[5])
		strcpy(memberdelay,argv[5]);
    else
		strcpy(memberdelay,"0");

    if(argv[6] && *argv[6])
		strcpy(penalty,argv[6]);
    else
		strcpy(penalty,"NULL");
	

    if(strlen(number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		//sprintf(sqlcmd, "select phoneid,070number from number_manage where 070number='%s' and defaultip= '%s'", number,serverip);
		sprintf(sqlcmd, "select phoneid,070number from number_manage where 070number='%s' and defaultip= '%s' and domain = '%s' ", number,serverip,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		ret = mysql_query(mysql, sqlcmd);

		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
				return -1;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(phoneid, row[0]?row[0]:"00000000");
				    ps_delSpace(phoneid);
				    strcpy(num070, row[1]?row[1]:"070000000");
				    ps_delSpace(num070);
				}

				sprintf(interface,"SIP/1%7.7s",phoneid+1);
			}
			mysql_free_result(result);
			result = NULL;
		    }
		else {
			sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		}

		else  {
		    if(argv[4] && *argv[4])
				strcpy(interface,argv[4]);
		    if(argv[5] && *argv[5])
				strcpy(wrapuptime,argv[5]);
		    if(argv[6] && *argv[6])
				strcpy(memberdelay,argv[6]);
		    if(argv[7] && *argv[7])
				strcpy(penalty,argv[7]);
		    if(argv[8] && *argv[8])
				strcpy(prefix,argv[8]);
		    if(argv[9] && *argv[9])
				strcpy(serverip,argv[9]);
		}


		tel_string(number);
		sprintf(sqlcmd,"DELETE from queue_member_table where domain='%s' and interface='%s' and queue_name = '%s'",domain,interface, name);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into queue_member_table( \
			membername,queue_name,interface,paused,paused_cause,domain,wrapuptime,memberdelay,penalty) values( \
			'%s','%s','%s',1,'','%s',%s,%s,%s)",number,name,interface,domain,wrapuptime,memberdelay,penalty);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IQM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,number,interface,wrapuptime,memberdelay,penalty,prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IQM')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}
					sprintf(commandBuf,"|IQM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,number,interface,wrapuptime,memberdelay,penalty,prefix,serverip);
					sprintf(resPacket,"|RES|IQM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,interface,penalty);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IQM')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}
	else {
		sprintf(command,"QueueMemberAdd\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\nInterface: %s\r\nPenalty: 0\r\nPause: 1\r\nWrapup: %s\r\nDelay: %s",name,domain,number,interface,wrapuptime,memberdelay);
		printf("\ncommand: (%s)",command);
			sockfd = IPCCManager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
			}
else {
	sprintf(resPacket,"|ERR|IQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,number,interface);
	return -1;       

}
	}

	sprintf(resPacket,"|RES|IQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,number,interface);
	return 0;       
}

/*************************************************************************
* ars member(DB)
*************************************************************************/
int
procRQM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
char wrapuptime[11],memberdelay[11];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(wrapuptime,0,sizeof(wrapuptime)); 
	memset(memberdelay,0,sizeof(memberdelay)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else 
		strcpy(name,"");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(strlen(name) < 2)
		return(errorReturn("EInput Data(queue name)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
		if(*name != '\0')
			sprintf(sqlcmd, "select membername,interface,penalty,paused,paused_cause,wrapuptime,memberdelay  from queue_member_table where domain = '%s' and queue_name='%s'",domain,name);
		else
			sprintf(sqlcmd, "select membername,interface,penalty,paused,paused_cause,wrapuptime,memberdelay  from queue_member_table where domain = '%s'",domain);


		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(membername, row[0]?row[0]:"001");
				ps_delSpace(membername);
				strcpy(interface, row[1]?row[1]:"0");
				ps_delSpace(interface);
				strcpy(penalty, row[2]?row[2]:"0");
				ps_delSpace(penalty);
				strcpy(paused, row[3]?row[3]:"0");
				ps_delSpace(paused);
				strcpy(paused_cause, row[4]?row[4]:"");
				ps_delSpace(paused_cause);
				strcpy(wrapuptime, row[5]?row[5]:"0");
				ps_delSpace(wrapuptime);
				strcpy(memberdelay, row[6]?row[6]:"0");
				ps_delSpace(memberdelay);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where domain='%s' and phoneid ='0%7.7s' and",domain,interface+5);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^0^0^0",name,membername,interface,penalty,paused,paused_cause,wrapuptime,memberdelay);

			if(!((i+1)%20))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}


/*************************************************************************
* ars member(엔진)
*************************************************************************/
int
procRQ1()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i,sockfd=-1;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64], command[128];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else 
		strcpy(name,"");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/***
	if(strlen(name) < 2)
		return(errorReturn("EInput Data(queue name)",__FILE__,__LINE__));
*/


	if(customInfo(domain) < 0)
		return -1;

	sprintf(command,"MemberMonitor");
	memset(_tmpbuf,0,sizeof(_tmpbuf));
	
	sockfd = ManagerMemberInfo(serverip,command,name,domain);
	if(sockfd > -1) {
		strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
		write(sockfd, sqlcmd, strlen(sqlcmd));
		close(sockfd);
	}
	printf("\n====================>(%s)\n",_tmpbuf);
	ps_delSpace(_tmpbuf);
	sprintf(resPacket, "|RES|%s",_tmpbuf);
	printf("\nresPacket:(((%s)))",resPacket);

	return 0;       
}



/*************************************************************************
* delete ars member
*************************************************************************/
int
procDQM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20], membername[20],command[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[32];
  char	h_number[21],number[21],name[64],code[5],seq[10], sqlcmd1[512];
char	extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else
		strcpy(name,"");

	if(argv[3]&& *argv[3])
		strcpy(membername,argv[3]);
	else
		strcpy(membername,"");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(sqlcmd, "select interface from queue_member_table where domain='%s'  and queue_name = '%s' and membername='%s'",domain,name,membername);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
				return -1;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(interface, row[0]?row[0]:"00000000");
				    ps_delSpace(interface);
				}
			}
			mysql_free_result(result);
			result = NULL;
		    }
		else {
			sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

	}
	else  {
	    if(argv[4] && *argv[4])
			strcpy(interface,argv[4]);
	    if(argv[5] && *argv[5])
			strcpy(prefix,argv[5]);
	    if(argv[6] && *argv[6])
			strcpy(serverip,argv[6]);
	}


	tel_string(number);
	sprintf(sqlcmd,"DELETE from queue_member_table where domain='%s' and interface='%s' and queue_name = '%s'",domain,interface, name);


	sprintf(sqlcmd,"DELETE from  queue_member_table \
		where  domain = '%s' and queue_name='%s' and membername = '%s'",domain,name,membername);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,interface,prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DQM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,interface,prefix,serverip);
				sprintf(resPacket,"|RES|DQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,name,membername);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DQM')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}
	else {
		sprintf(command,"QueueMemberRemove\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\nInterface: %s",name,domain,membername,interface);
		printf("\ncommand: (%s)",command);

			sockfd = IPCCManager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
			}
else {
	sprintf(resPacket,"|ERR|DQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,name,membername);
    return -1;       

}
	}

	sprintf(resPacket,"|RES|DQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,name,membername);
    return 0;       
}



/*************************************************************************
* update queue member
*************************************************************************/
int
procUQM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20], membername[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[32];
	char	paused[11],paused_cause[21],command[128];
  char	h_number[21],number[21],name[64],code[5],seq[10], sqlcmd1[512];
char	extension[10];
char wrapuptime[11],memberdelay[11];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(wrapuptime,0,sizeof(wrapuptime)); 
	memset(memberdelay,0,sizeof(memberdelay)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(name,argv[2]);
    else
	strcpy(name,"");

    if(argv[3]&& *argv[3])
	strcpy(membername,argv[3]);
    else
	strcpy(membername,"");

    if(argv[4]&& *argv[4])
	strcpy(paused,argv[4]);
    else
	strcpy(paused,"0");

    if(argv[5]&& *argv[5])
	strcpy(paused_cause,argv[5]);
    else
	strcpy(paused_cause,"");
    if(argv[6]&& *argv[6])
	strcpy(wrapuptime,argv[6]);
    else
	strcpy(wrapuptime,"0");
    if(argv[7]&& *argv[7])
	strcpy(memberdelay,argv[7]);
    else
	strcpy(memberdelay,"0");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		//sprintf(sqlcmd, "select interface from queue_member_table where domain='%s'  and queue_name = '%s' and membername='%s'",domain,name,membername);
		sprintf(sqlcmd, "select interface from queue_member_table where domain='%s'  and membername='%s'",domain,membername);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			if(mysql)
				mysql_close(mysql);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
				return -1;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(interface, row[0]?row[0]:"00000000");
				    ps_delSpace(interface);
				}
			}
			mysql_free_result(result);
			result = NULL;
		    }
		else {
			sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
	}
	else  {
	    if(argv[8] && *argv[8])
			strcpy(prefix,argv[8]);
	    if(argv[9] && *argv[9])
			strcpy(serverip,argv[9]);
	}

	//sprintf(sqlcmd,"UPDATE queue_member_table set paused = %s, paused_cause='%s',wrapuptime=%s,memberdelay=%s \
		where  domain = '%s' and queue_name='%s' and membername = '%s'",paused,paused_cause,wrapuptime,memberdelay,domain,name,membername);
	sprintf(sqlcmd,"UPDATE queue_member_table set paused = %s, paused_cause='%s',wrapuptime=%s,memberdelay=%s \
		where  domain = '%s' and  membername = '%s'",paused,paused_cause,wrapuptime,memberdelay,domain,membername);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				//sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,wrapuptime,memberdelay,prefix,serverip);
				sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,paused,paused_cause,wrapuptime,memberdelay,prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UQM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				//sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,wrapuptime,memberdelay,prefix,serverip);
				sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,paused,paused_cause,wrapuptime,memberdelay,prefix,serverip);
				sprintf(resPacket,"|RES|UQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,paused);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UQM')",tmp, commandBuf,serverip);

							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}
	else {
		sprintf(command,"QueuePause\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\nInterface: %s\r\nPause: %s\r\nCause: %s\r\nWrapup: %s\r\nDelay: %s",name,domain,membername,interface,paused,paused_cause,wrapuptime,memberdelay);
		printf("\ncommand: (%s)",command);

			sockfd = IPCCManager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
			}
			else {
				sprintf(resPacket,"|ERR|UQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,paused);
				return -1;
			}
	}

	sprintf(resPacket,"|RES|UQM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,paused);
    return 0;       
}


/*************************************************************************
* off day
*************************************************************************/
int
procIFF()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];
  char	offday[10],offname[30];
  char	mohclass[256],decodeMohClass[256];
  char  *tmpP=NULL;
  int   size = 0;

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(mohclass,0,sizeof(mohclass)); 
	memset(decodeMohClass,0,sizeof(decodeMohClass)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(offday,argv[2]);
	else
		strcpy(offday,"");

    if(argv[3] && *argv[3])
		strcpy(offname,argv[3]);
    else
		strcpy(offname,"");

    if(argv[4] && *argv[4])
		strcpy(num070,argv[4]);
    else
		strcpy(num070,"");
    if(argv[5] && *argv[5]){
		strcpy(mohclass,argv[5]);
		if(mohclass != '\0') {
			tmpP =  __base64_decode((unsigned char *)mohclass, strlen(mohclass), &size);
			if(tmpP) {
				strcpy(decodeMohClass,tmpP);
				free(tmpP);
			}
		}
    }
    else
		strcpy(mohclass,"");
	

	if(strlen(num070) < 5 || strlen(offday) < 5)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		}
		else  {
		    if(argv[6] && *argv[6])
				strcpy(prefix,argv[6]);
		    if(argv[7] && *argv[7])
				strcpy(serverip,argv[7]);
		}


		tel_string(num070);
		sprintf(sqlcmd,"DELETE from off_day where domain='%s' and off_day = '%s' and etc='%s'",domain,offday,num070);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			exit(0);
		}

		sprintf(sqlcmd,"INSERT into off_day( \
			domain,off_day,recorddate,etc,name,ment_file) values( \
			'%s','%s',NOW(),'%s','%s','%s')",domain,offday,num070,offname,decodeMohClass);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			exit(0);
		}
		printf("\nsqlcmd:(%s)",sqlcmd);


		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IFF|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,offday,offname,num070,mohclass,prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFF')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}
					sprintf(commandBuf,"|IFF|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,offday,offname,num070,mohclass,prefix,serverip);
					sprintf(resPacket,"|RES|IFF userid:(%s)-(%s)-(%s)-(%s)",user,domain,offday,offname);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFF')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

	sprintf(resPacket,"|RES|IFF userid:(%s)-(%s)-(%s)-(%s)",user,domain,offday,offname);
	return 0;       
}


/*************************************************************************
* off_day
*************************************************************************/
int
procRFF()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char	offday[10],offname[30],etc[20],offmonth[10];
  char mohclass[256];
  char  *tmpP=NULL;
  int  size = 0;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(num070,0,sizeof(num070)); 
	memset(mohclass,0,sizeof(mohclass)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(offmonth,argv[2]);
	else 
		strcpy(offmonth,"");
    if(argv[3]&& *argv[3])
		strcpy(num070,argv[3]);
	else 
		strcpy(num070,"");

	if(strlen(offmonth) != 6 && strlen(offmonth) != 8)
		strcpy(offmonth,"");
		


	if(customInfo(domain) < 0)
		return -1;

	if(strlen(offmonth) == 8) {
		if(strlen(num070) < 5)
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' and off_day='%s' order by off_day ASC",domain,offmonth);
		else
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' and off_day='%s' and etc='%s' order by off_day ASC",domain,offmonth,num070);
	}
	else if(strlen(offmonth) == 6) {
		if(strlen(num070) < 5)
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' and substr(off_day,1,6)='%s' order by off_day ASC",domain,offmonth);
		else
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' and substr(off_day,1,6)='%s' and etc='%s' order by off_day ASC",domain,offmonth,num070);
	}
	else {
		if(strlen(num070) < 5)
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' order by off_day ASC",domain);
		else
			sprintf(sqlcmd, "select off_day,name,etc,ment_file from off_day where domain = '%s' and etc='%s' order by off_day ASC",domain,num070);
	}

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(offday, row[0]?row[0]:"");
				ps_delSpace(offday);
				strcpy(offname, row[1]?row[1]:"");
				ps_delSpace(offname);
				strcpy(num070, row[2]?row[2]:"");
				ps_delSpace(num070);
				strcpy(mohclass, row[3]?row[3]:"");
				ps_delSpace(mohclass);
			}

			if(mohclass != '\0') {
				tmpP =  __base64_encode((unsigned char *)mohclass, strlen(mohclass), &size);
				if(tmpP) {
					strcpy(mohclass,tmpP);
					free(tmpP);
				}
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",offday,offname,num070,mohclass);

			if(!((i+1)%20))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* delete off_day
*************************************************************************/
int
procDFF()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];
  char	offday[10],offname[30];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(offday,argv[2]);
	else
		strcpy(offday,"");

    if(argv[3] && *argv[3])
		strcpy(num070,argv[3]);
	else
		strcpy(num070,"");


	if(strlen(offday) < 5)
		return(errorReturn("EInput Data(offday)",__FILE__,__LINE__));


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		}
		else  {
		    if(argv[4] && *argv[4])
				strcpy(prefix,argv[4]);
		    if(argv[5] && *argv[5])
				strcpy(serverip,argv[5]);
		}


		if(strlen(num070) > 5)
			sprintf(sqlcmd,"DELETE from off_day where domain='%s' and off_day = '%s' and etc='%s'",domain,offday,num070);
		else
			sprintf(sqlcmd,"DELETE from off_day where domain='%s' and off_day = '%s'",domain,offday);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);

			sqlinit();
			if( mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd,resPacket);
				logCmd();
				exit(0);
			}
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		if(PVS == 1 && MASTER == 1) {
					sprintf(commandBuf,"|DFF|%s@%s|%s|%s|%s|%s|",user,domain,offday,num070,prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFF')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}
					sprintf(commandBuf,"|DFF|%s@%s|%s|%s|%s|%s|",user,domain,offday,num070,prefix,serverip);
					sprintf(resPacket,"|RES|DFF userid:(%s)-(%s)-(%s)",user,domain,offday);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFF')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

	sprintf(resPacket,"|RES|DFF userid:(%s)-(%s)-(%s)",user,domain,offday);
	return 0;       
}



/*************************************************************************
* Call_back
*************************************************************************/
int
procRCB()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char	callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char	callback_num[15],recorddate[20],fromsearch[20],tosearch[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(fromsearch,0,sizeof(fromsearch)); 
	memset(tosearch,0,sizeof(tosearch)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(fromsearch,argv[2]);
	else 
		strcpy(fromsearch,"");

    if(argv[3]&& *argv[3])
		strcpy(tosearch,argv[3]);
	else 
		strcpy(tosearch,"999999999999");


	if(customInfo(domain) < 0)
		return -1;

/***********************************
	if(strlen(fromsearch) == 6)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and substr(recorddate,1,8)>='%4.4s-%2.2s-'  and substr(recorddate,1,8) <= '%4.4s-%2.2s-' order by recorddate ASC",domain,fromsearch,fromsearch+4, tosearch,tosearch+4);
	else if(strlen(fromsearch) == 8)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and substr(recorddate,1,10)>='%4.4s-%2.2s-%2.2s' and substr(recorddate,1,10) <='%4.4s-%2.2s-%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,tosearch,tosearch+4,tosearch+6);
	else if(strlen(fromsearch) == 10)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and substr(recorddate,1,13)>='%4.4s-%2.2s-%2.2s %2.2s' and substr(recorddate,1,13) <= '%4.4s-%2.2s-%2.2s %2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8, tosearch,tosearch+4,tosearch+6,tosearch+8);
	else if(strlen(fromsearch) == 12)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and substr(recorddate,1,16)>='%4.4s-%2.2s-%2.2s %2.2s:%2.2s'  and substr(recorddate,1,16) <='%4.4s-%2.2s-%2.2s %2.2s:%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8,fromsearch+10, tosearch,tosearch+4,tosearch+6,tosearch+8,tosearch+10);
	else
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' order by recorddate DESC limit 100",domain);
		//sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' order by recorddate ASC",domain);
**************************/
	if(strlen(fromsearch) == 6)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and recorddate>='%4.4s-%2.2s-'  and recorddate <= '%4.4s-%2.2s-' order by recorddate ASC",domain,fromsearch,fromsearch+4, tosearch,tosearch+4);
	else if(strlen(fromsearch) == 8)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and recorddate>='%4.4s-%2.2s-%2.2s' and recorddate <='%4.4s-%2.2s-%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,tosearch,tosearch+4,tosearch+6);
	else if(strlen(fromsearch) == 10)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and recorddate>='%4.4s-%2.2s-%2.2s %2.2s' and recorddate <= '%4.4s-%2.2s-%2.2s %2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8, tosearch,tosearch+4,tosearch+6,tosearch+8);
	else if(strlen(fromsearch) == 12)
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' and recorddate>='%4.4s-%2.2s-%2.2s %2.2s:%2.2s'  and recorddate <='%4.4s-%2.2s-%2.2s %2.2s:%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8,fromsearch+10, tosearch,tosearch+4,tosearch+6,tosearch+8,tosearch+10);
	else
		sprintf(sqlcmd, "select callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate from callback_list where domain = '%s' order by recorddate DESC limit 100",domain);

		printf("\n(strlen(%d)  fromsearch:(%s) ============ sqlcmd:(%s)",strlen(fromsearch), fromsearch, sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!");
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
//callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(callbackcode, row[0]?row[0]:"");
				ps_delSpace(callbackcode);
				strcpy(ivrcode, row[1]?row[1]:"");
				ps_delSpace(ivrcode);
				strcpy(queuecode, row[2]?row[2]:"");
				ps_delSpace(queuecode);
				strcpy(sender_num, row[3]?row[3]:"");
				ps_delSpace(sender_num);
				strcpy(receiver_num, row[4]?row[4]:"");
				ps_delSpace(receiver_num);
				strcpy(callback_num, row[5]?row[5]:"");
				ps_delSpace(callback_num);
				strcpy(recorddate, row[6]?row[6]:"");
				ps_delSpace(recorddate);
			}
/***
printf("\ncallbackcode:(%s)",callbackcode);
printf("\nivrcode:(%s)",ivrcode);
printf("\nsender_num:(%s)",sender_num);
printf("\nreceiver_num:(%s)",receiver_num);
printf("\ncallback_num:(%s)",callback_num);
printf("\nrecorddate:(%s)",recorddate);
*/


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s",callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate);

			if(!((i+1)%15))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}

/*************************************************************************
* queue-통계 
*************************************************************************/
int
procRSQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0,j=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],sqlcmd1[1024],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char	callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char	callback_num[15],recorddate[15],fromsearch[20],tosearch[20],fromtime[20],totime[20];
  char	data_column[1024],cdr_server[32];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(data_column,0,sizeof(data_column)); 
	memset(fromsearch,0,sizeof(fromsearch)); 
	memset(tosearch,0,sizeof(tosearch)); 
	memset(cdr_server,0,sizeof(cdr_server)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else 
		strcpy(name,"");

    if(argv[3]&& *argv[3])
		strcpy(fromsearch,argv[3]);
	else 
		strcpy(fromsearch,"");

    if(argv[4]&& *argv[4])
		strcpy(tosearch,argv[4]);
	else 
		strcpy(tosearch,"");


	if(customInfo(domain) < 0)
		return -1;


	sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' limit 1",domain);
	printf("\nsqlcmd=================:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
		
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		return(errorReturn("90000|",__FILE__,__LINE__));
	}
	
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	mysql_free_result(result);
	result = NULL;


	strcpy(data_column,"acdcalls, acdabandoned , acdalert, acdanswered , acdnoanswered, acdtransfer, acdalerttime , acdansweredtime, acdabandonedtime, acdnoansweredtime, acdcompletedtime, acdmaxtalk, acdansweredmaxtime, acdabandonedmaxtime, acdnoansweredmaxtime, callscompletedinsl10, callscompletedinsl20, callscompletedinsl30, callscompletedinsl40, callscompletedinsl50, callscompletedinsl60, callscompletedinsl90, callscompletedinsl120, callscompletedinsl180, noanswer10, noanswer20, noanswer30, noanswer40, noanswer50, noanswer60, noanswer90, noanswer120, noanswer180, callsabandoned10, callsabandoned20, callsabandoned30, callsabandoned40, callsabandoned50, callsabandoned60, callsabandoned90, callsabandoned120, callsabandoned180, lastcall");

	printf("\n(%d)((%s))",strlen(data_column),data_column);

	if(*name == '\0') {
		if(strlen(fromsearch) == 8  && *tosearch == '\0' )
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and substr(calldate,1,8) >= '%s' order by calldate ASC",data_column,domain,fromsearch);
		else if(strlen(fromsearch) == 10 && *tosearch == '\0')
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and calldate >= '%s' order by calldate ASC",data_column,domain,fromsearch);
		else if(strlen(fromsearch) == 8  && *tosearch != '\0' )
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and substr(calldate,1,8) >= '%s'  and substr(calldate,1,8) <= '%s' order by calldate ASC",data_column,domain,fromsearch, tosearch);
		else if(strlen(fromsearch) == 10 && *tosearch != '\0')
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and calldate >= '%s'  and calldate <= '%s' order by calldate ASC",data_column,domain,fromsearch, tosearch);
	}
	else {
		if(strlen(fromsearch) == 8  && *tosearch == '\0' )
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and queue_name='%s'  and substr(calldate,1,8) >= '%s' order by calldate ASC",data_column,domain,name,fromsearch);
		else if(strlen(fromsearch) == 10 && *tosearch == '\0')
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and queue_name = '%s' and calldate >= '%s' order by calldate ASC",data_column,domain,name,fromsearch);
		else if(strlen(fromsearch) == 8  && *tosearch != '\0' )
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and queue_name = '%s' and substr(calldate,1,8) >= '%s'  and substr(calldate,1,8) <= '%s' order by calldate ASC",data_column,domain,name,fromsearch, tosearch);
		else if(strlen(fromsearch) == 10 && *tosearch != '\0')
			sprintf(sqlcmd, "select calldate,queue_name,%s from new_queue_stat where domain = '%s' and queue_name = '%s' and calldate >= '%s'  and calldate <= '%s' order by calldate ASC",data_column,domain,name,fromsearch, tosearch);

	}

	j= 0;
	while(strlen(CDR_SERVER_[j].server) > 1) {
		if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
			sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
			break;
		}
		j++;
	}

/***
	strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);
	if(*s_shmP->cdr_server == '\0')
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

	if(s_shmP->cdr_fail > 20) {
		if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
			s_shmP->cdr_change_time=time(0);
		}
		else {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
		}
	}

	if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
		s_shmP->cdr_change_time=time(0);
		s_shmP->cdr_fail = 0;
	}
	sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/


	cdrinit(cdr_server);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			//s_shmP->cdr_fail++;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			if(cdrmysql)
				mysql_close(cdrmysql);

			cdrinit(cdr_server);
			if( ret = mysql_query(cdrmysql, sqlcmd) ) {
				//s_shmP->cdr_fail++;
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		//s_shmP->cdr_fail = 0;

		result = mysql_store_result( cdrmysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			int j = 0;
			row = mysql_fetch_row( result );
			if(row) {
				for(j = 0; j < 45; j++)
					ps_delSpace(row[j]);
			}


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			for(j = 0; j < 45; j++) {
				if(j == 0)
					sprintf(resPacket+strlen(resPacket),"|%s",row[j]); 
				else
					sprintf(resPacket+strlen(resPacket),"^%s",row[j]); 
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s",callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,recorddate);

			if(!((i+1)%10))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* queue-통계(reload) 
*************************************************************************/
int
procRS1()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i,j=0;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],sqlcmd1[256],forward_num[30],mailbox[64],entered[11],ringcnt[11],totring[11];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char	callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char	callback_num[15],recorddate[15],fromsearch[10],tosearch[10],fromtime[10],totime[10];
	char	flag[10],cdr_server[32];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(entered,0,sizeof(entered)); 
	memset(ringcnt,0,sizeof(ringcnt)); 
	memset(totring,0,sizeof(totring)); 
	memset(flag,0,sizeof(flag)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(name,argv[2]);
	else 
		strcpy(name,"");
    if(argv[3]&& *argv[3])
		strcpy(flag,argv[3]);


	if(customInfo(domain) < 0)
		return -1;


	sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' limit 1",domain);
	printf("\nsqlcmd=================:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
		
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		return(errorReturn("90000|",__FILE__,__LINE__));
	}
	
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	mysql_free_result(result);
	result = NULL;

	
	tmm_currDate(YYYYMMDDHHMMSS,today);
	if(*flag == 'D' || *flag == '\0')
		sprintf(sqlcmd, "select sum(acdcalls), sum(acdabandoned) , sum(acdalert), sum(acdanswered) , sum(acdnoanswered), sum(acdtransfer), sum(acdalerttime) , sum(acdansweredtime), sum(acdabandonedtime), sum(acdnoansweredtime), sum(acdcompletedtime), max(acdmaxtalk), max(acdansweredmaxtime), max(acdabandonedmaxtime), max(acdnoansweredmaxtime), sum(callscompletedinsl10), sum(callscompletedinsl20), sum(callscompletedinsl30), sum(callscompletedinsl40), sum(callscompletedinsl50), sum(callscompletedinsl60), sum(callscompletedinsl90), sum(callscompletedinsl120), sum(callscompletedinsl180), sum(noanswer10), sum(noanswer20), sum(noanswer30), sum(noanswer40), sum(noanswer50), sum(noanswer60), sum(noanswer90), sum(noanswer120), sum(noanswer180), sum(callsabandoned10), sum(callsabandoned20), sum(callsabandoned30), sum(callsabandoned40), sum(callsabandoned50), sum(callsabandoned60), sum(callsabandoned90), sum(callsabandoned120), sum(callsabandoned180), max(lastcall) from new_queue_stat where domain='%s' and queue_name='%s' and substr(calldate,1,8) = '%8.8s' order by calldate DESC",domain,name,today); 
	else if(*flag == 'H')
		sprintf(sqlcmd, "select acdcalls, acdabandoned , acdalert, acdanswered , acdnoanswered, acdtransfer, sum(acdalerttime , acdansweredtime, acdabandonedtime, acdnoansweredtime, acdcompletedtime, acdmaxtalk, acdansweredmaxtime, acdabandonedmaxtime, acdnoansweredmaxtime, callscompletedinsl10, callscompletedinsl20, callscompletedinsl30, callscompletedinsl40, callscompletedinsl50, callscompletedinsl60, callscompletedinsl90, callscompletedinsl120, callscompletedinsl180, noanswer10, noanswer20, noanswer30, noanswer40, noanswer50, noanswer60, noanswer90, noanswer120, noanswer180, callsabandoned10, callsabandoned20, callsabandoned30, callsabandoned40, callsabandoned50, callsabandoned60, callsabandoned90, callsabandoned120, callsabandoned180, lastcall from new_queue_stat where domain='%s' and queue_name='%s' and substr(calldate,1,10) = '%10.10' order by calldate DESC",domain,name,today); 


	j= 0;
	while(strlen(CDR_SERVER_[j].server) > 1) {
		if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
			sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
			break;
		}
		j++;
	}

/****
	strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);
	if(*s_shmP->cdr_server == '\0')
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

	if(s_shmP->cdr_fail > 20) {
		if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
			s_shmP->cdr_change_time=time(0);
		}
		else {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
		}
	}

	if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
		s_shmP->cdr_change_time=time(0);
		s_shmP->cdr_fail = 0;
	}

	sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

	cdrinit(cdr_server);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			//s_shmP->cdr_fail++;
			if(mysql)
				mysql_close(cdrmysql);

			cdrinit(cdr_server);

			if( ret = mysql_query(cdrmysql, sqlcmd) ) {
				//s_shmP->cdr_fail++;
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		//s_shmP->cdr_fail = 0;

		result = mysql_store_result( cdrmysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			int j = 0;
			row = mysql_fetch_row( result );
			if(row) {
				for(j = 0; j < 43; j++) {
					ps_delSpace(row[j]?row[j]:"0");
					sprintf(resPacket+strlen(resPacket),"|%s",row[j]?row[j]:"0"); 
				}
			}

			printf("\nresPacket:(%s)",resPacket);

			break;
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}




/*************************************************************************
* delete callback_list
*************************************************************************/
int
procDCB()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];
  char	offday[10],offname[30];
  char	fromsearch[20],tosearch[20];

  char	callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char	callback_num[15],recorddate[15],seachcon[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(fromsearch,0,sizeof(fromsearch)); 
	memset(tosearch,0,sizeof(tosearch)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/****
	if(argv[2] && *argv[2])
		strcpy(sender_num,argv[2]);
	else
		strcpy(sender_num,"");
*/


    if(argv[2]&& *argv[2])
		strcpy(fromsearch,argv[2]);
	else 
		strcpy(fromsearch,"");

    if(argv[3]&& *argv[3])
		strcpy(tosearch,argv[3]);
	else 
		strcpy(tosearch,"999999999999");

/***

	if(argv[3] && *argv[3])
		strcpy(recorddate,argv[3]);
	else
		strcpy(recorddate,"");

	if(strlen(sender_num) < 5 || strlen(recorddate) < 10)
		return(errorReturn("EInput Data(sender_num,recorddate)",__FILE__,__LINE__));
*/


		if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
		}
		else  {
		    if(argv[4] && *argv[4])
				strcpy(prefix,argv[4]);
		    if(argv[5] && *argv[5])
				strcpy(serverip,argv[5]);
		}


		sprintf(sqlcmd,"DELETE from callback_list where domain='%s' and sender_num = '%s' and recorddate='%s'",domain,sender_num,recorddate);
	if(strlen(fromsearch) == 6)
		sprintf(sqlcmd, "delete from callback_list where domain = '%s' and substr(recorddate,1,8)>='%4.4s-%2.2s-'  and substr(recorddate,1,8) <= '%4.4s-%2.2s-' order by recorddate ASC",domain,fromsearch,fromsearch+4, tosearch,tosearch+4);
	else if(strlen(fromsearch) == 8)
		sprintf(sqlcmd, "delete from callback_list where domain = '%s' and substr(recorddate,1,10)>='%4.4s-%2.2s-%2.2s' and substr(recorddate,1,10) <='%4.4s-%2.2s-%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,tosearch,tosearch+4,tosearch+6);
	else if(strlen(fromsearch) == 10)
		sprintf(sqlcmd, "delete from callback_list where domain = '%s' and substr(recorddate,1,13)>='%4.4s-%2.2s-%2.2s %2.2s' and substr(recorddate,1,13) <= '%4.4s-%2.2s-%2.2s %2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8, tosearch,tosearch+4,tosearch+6,tosearch+8);
	else if(strlen(fromsearch) == 12)
		sprintf(sqlcmd, "delete from callback_list where domain = '%s' and substr(recorddate,1,16)>='%4.4s-%2.2s-%2.2s %2.2s:%2.2s'  and substr(recorddate,1,16) <='%4.4s-%2.2s-%2.2s %2.2s:%2.2s' order by recorddate ASC",domain,fromsearch,fromsearch+4,fromsearch+6,fromsearch+8,fromsearch+10, tosearch,tosearch+4,tosearch+6,tosearch+8,tosearch+10);
	else
		sprintf(sqlcmd, "delete from callback_list where domain = '%s' order by recorddate ASC",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd,resPacket);
				logCmd();
				exit(0);
			}
		}

		if(PVS == 1 && MASTER == 1) 
		{
					//sprintf(commandBuf,"|DCB|%s@%s|%s|%s|%s|%s|",user,domain,sender_num,recorddate,prefix,serverip);
					sprintf(commandBuf,"|DCB|%s@%s|%s|%s|%s|%s|",user,domain,fromsearch,tosearch,prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFF')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}
					//sprintf(commandBuf,"|DCB|%s@%s|%s|%s|%s|%s|",user,domain,sender_num,recorddate,prefix,serverip);
					sprintf(commandBuf,"|DCB|%s@%s|%s|%s|%s|%s|",user,domain,fromsearch,tosearch,prefix,serverip);
					sprintf(resPacket,"|RES|DCB userid:(%s)-(%s)-(%s)",user,domain,sender_num);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCB')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

	sprintf(resPacket,"|RES|DCB userid:(%s)-(%s)-(%s)",user,domain,sender_num);
	return 0;       
}


/*************************************************************************
* set max_call
*************************************************************************/
int
procMAX()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];
  char	offday[10],offname[30],maxcall[10];
	char	callback_flag[10],destP[256],command[64];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(maxcall,argv[2]);
	else
		strcpy(maxcall,"0");

	if(argv[3] && *argv[3])
		strcpy(callback_flag,argv[3]);
	else
		strcpy(callback_flag,"0");
	if(argv[4] && *argv[4])
		strcpy(num070,argv[4]);
	else {
		sprintf(resPacket, "|ERR|070 number need");
		return -1;
	}


	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		}
		else  {
		    if(argv[5] && *argv[5])
				strcpy(prefix,argv[5]);
		    if(argv[6] && *argv[6])
				strcpy(serverip,argv[6]);
	}

	if(PVS == 1) {

		sprintf(sqlcmd,"DELETE from max_call where domain='%s' and number='%s'",domain,num070);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd,"INSERT into max_call ( \
			domain,defaultip,maxcall,callback_flag,number) values( \
			'%s','%s',%s,'%s','%s')",domain,serverip,maxcall,callback_flag,num070);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}
		printf("\nsqlcmd:(%s)",sqlcmd);
	}
		sprintf(sqlcmd,"UPDATE sip_buddies set incominglimit='%s' where callerid='<%s>'",maxcall,num070);
		if( mysql_query(mysql, sqlcmd)) {
			if(mysql)
				mysql_close(mysql);
			if( ret = mysql_query(mysql, sqlcmd) ) {

				exit(0);
			}
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd,"UPDATE ars_group set callback_flag='%s' where domain='%s' and number='%s'",callback_flag,domain,num070);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd,"UPDATE pre_ars_check set callback_flag='%s' where domain='%s' and number='%s'",callback_flag,domain,num070);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);


		if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,defaultip from number_manage where 070number = '%s'",num070);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(phoneid, row[0]?row[0]:"00000000");
					ps_delSpace(phoneid);
					strcpy(serverip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(serverip);
				}
				mysql_free_result(result);
				result = NULL;
				phoneid[0] = '1';
/***
				sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = Manager(serverip,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
*/
		}


		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|MAX|%s@%s|%s|%s|%s|%s|%s|",user,domain,maxcall,callback_flag,num070,prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'MAX')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}
					sprintf(commandBuf,"|MAX|%s@%s|%s|%s|%s|%s|%s|",user,domain,maxcall,callback_flag,num070,prefix,serverip);
					sprintf(resPacket,"|RES|MAX userid:(%s)-(%s)-(%s)",user,domain,maxcall);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'MAX')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

	sprintf(resPacket,"|RES|MAX userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,maxcall,callback_flag,num070);
	return 0;       
}


/*************************************************************************
* Call_back
*************************************************************************/
int
procRMA()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
  char	membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char	callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char	callback_num[15],recorddate[15],maxcall[11];
  char  callback_flag[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(penalty,0,sizeof(penalty)); 
	memset(paused,0,sizeof(paused)); 
	memset(paused_cause,0,sizeof(paused_cause)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
	memset(num070,0,sizeof(num070)); 

	if(argv[2] && *argv[2])
		strcpy(num070,argv[2]);
	else
		strcpy(num070,"");


	if(customInfo(domain) < 0)
		return -1;

		sprintf(sqlcmd, "select maxcall,callback_flag,number from max_call where domain = '%s'",domain);
		if(argv[2] && strlen(num070) > 10){
			sprintf(sqlcmd, "select maxcall,callback_flag,number from max_call where domain = '%s' and number='%s'",domain,num070);
		}

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(maxcall, row[0]?row[0]:"0");
				ps_delSpace(maxcall);
				strcpy(callback_flag, row[1]?row[1]:"1");
				ps_delSpace(callback_flag);
				strcpy(num070, row[2]?row[2]:"07000000000");
				ps_delSpace(num070);
			}

	printf("\n>>>> domain:(%s)",domain);
	printf("\n>>>> num070:(%s)",num070);
	printf("\n>>>> maxcall:(%s)",maxcall);
	printf("\n>>>> callback_flag:(%s)",callback_flag);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",domain,num070,maxcall,callback_flag);

			if(!((i+1)%10))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;


	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}

/*************************************************************************
* 서버정보 Get(TT)							     *
*************************************************************************/
int
procRP2()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0, size;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],serverdomain[60];
  char	ment_flag[10],timeout[10];
	char input_ip[20],regday[10], cust_name[128], *tmpP=NULL;
	


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(regday,0,sizeof(regday)); 
	memset(cust_name,0,sizeof(cust_name)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(input_ip,argv[2]);
	else
		strcpy(input_ip,"");

	domain_string(domain);

			if(strlen(input_ip) > 5)
				sprintf(sqlcmd, "select domain,prefix,proxyip,ment_flag,regday,cust_name from custom_info where proxyip='%s'",input_ip);
			else
				sprintf(sqlcmd, "select domain,prefix,proxyip,ment_flag,regday,cust_name from custom_info where domain='%s'",domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",domain);
				logCmd();
				return -1;
			}

			sprintf(resPacket,"|RES");
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(serverdomain, row[0]?row[0]:"unknown.unknown");
					ps_delSpace(serverdomain);
					strcpy(prefix, row[1]?row[1]:"000");
					ps_delSpace(prefix);
					strcpy(serverip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(ment_flag, row[3]?row[3]:"Y");
					ps_delSpace(ment_flag);
					strcpy(regday, row[4]?row[4]:"00000000");
					ps_delSpace(regday);
					strcpy(cust_name, row[5]?row[5]:"");
					ps_delSpace(cust_name);

					if(cust_name != '\0') {
						tmpP =  __base64_encode((unsigned char *)cust_name, strlen(cust_name), &size);
						if(tmpP) {
							strcpy(cust_name,tmpP);
							free(tmpP);
						}
					}


					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",serverdomain,prefix,serverip,ment_flag,regday,cust_name);
				}

				if(!((i+1)%10))
				{
					if((i+1) < row_num)
					{
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						printf("\n[5m%s[0m");
						sprintf(resPacket,"|RES");
					}
					else {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}
				}
		}
		mysql_free_result(result);
		result = NULL;
	    return 0;       
}


/*************************************************************************
* 070 번호자원 조회						     *
*************************************************************************/
int
procR08()
{
  char passwd[256];
  char email[256];
  int   qid,returncode, count=0;
  int   test=0,ret,i,row_num=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],status[20],searchnum[11];
	char	type[11];


    memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(searchnum,0,sizeof(searchnum)); 
	memset(type,0,sizeof(type)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	
*/
    if(argv[2] && *argv[2] && strlen(argv[2]) == 11) {
	sprintf(searchnum,"%s",argv[2]);
    }
    	if(PVS == 1) {

	if(!*domain)
		strcpy(domain,"onnet21.com");

	if(customInfo(domain) < 0)
		return -1;
	printf("\n.... domain (%s)\n",domain);


		/***사용하지 않은 070번호 자원 조회 ****/
		if(*searchnum)
			sprintf(sqlcmd, "select number,status,type from number_list where number >= '%s'  and serverip='%s' order by number asc limit 500", searchnum,serverip);
		else
			//sprintf(sqlcmd, "select number,status,type from number_list where serverip='%s' order by number asc limit 500",serverip);
			sprintf(sqlcmd, "select number,status,type from number_list where serverip='%s' and domain = '%s' order by number asc limit 500",serverip,domain);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		printf("\nsqlcmd:(%s)",sqlcmd);

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
		sprintf(resPacket,"|RES");
		printf("\nrow_num:(%d)",row_num);
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
					strcpy(dbuserid, row[0]?row[0]:"0");
					ps_delSpace(dbuserid);
					strcpy(status, row[1]?row[1]:"0");
					ps_delSpace(status);
					strcpy(type, row[2]?row[2]:"1");
					ps_delSpace(type);

					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",dbuserid, status,type);
			}


			/***Multi line ***/
			if(!((i+1)%30)) {
				if((i+1) < row_num) {
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						memset(resPacket,0,sizeof(resPacket));
						sprintf(resPacket,"|RES");
				}
				else {
						mysql_free_result(result);
						result = NULL;
						return 0;       
				}
			}

			selcnt++;
		}
	mysql_free_result(result);
	result = NULL;
	return 0;       
}





/*************************************************************************
* 서버정보 Get							     *
*************************************************************************/
int
procRIP()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],serverdomain[60];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(seq,argv[2]);
	else
		strcpy(seq,"0");

	domain_string(domain);

    //if(PVS == 1) {
			if(*seq == '0')
					sprintf(sqlcmd, "select domain,prefix,serverip from custom_info where status='A'");
			else
			
					sprintf(sqlcmd, "select domain,prefix,serverip from custom_info where domain = '%s' and status = 'A'",domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",domain);
				logCmd();
				return -1;
			}

			sprintf(resPacket,"|RES");
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if( row) {
						strcpy(serverdomain, row[0]?row[0]:"1");
						ps_delSpace(serverdomain);
						strcpy(prefix, row[1]?row[1]:"000");
						ps_delSpace(prefix);
						strcpy(serverip, row[2]?row[2]:"127.0.0.1");
						ps_delSpace(serverip);
						sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",serverdomain,prefix,serverip);
				}
				if(!((i+1)%30)) {
					if((i+1) < row_num) {
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						printf("\n[5m%s[0m");
						sprintf(resPacket,"|RES");
					}
					else {
						mysql_free_result(result);
						result = NULL;
						return 0;       
				}
			}
			selcnt++;
		}
		mysql_free_result(result);
		result = NULL;
	//}
    return 0;       
}



/*************************************************************************
* 서버정보 Get							     *
*************************************************************************/
int
procRP1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],serverdomain[60];
  char	ment_flag[10],timeout[10];
	char input_ip[20];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(seq,argv[2]);
	else
		strcpy(seq,"0");
    if(argv[3] && *argv[3])
		strcpy(input_ip,argv[3]);
	else
		strcpy(input_ip,"0");

	domain_string(domain);

			sprintf(sqlcmd, "select domain,prefix,proxyip,ment_flag,timeout,inner_digit from custom_info where domain='%s'",domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",domain);
				logCmd();
				return -1;
			}

			sprintf(resPacket,"|RES");
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(serverdomain, row[0]?row[0]:"unknown.unknown");
					ps_delSpace(serverdomain);
					strcpy(prefix, row[1]?row[1]:"000");
					ps_delSpace(prefix);
					strcpy(serverip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(ment_flag, row[3]?row[3]:"Y");
					ps_delSpace(ment_flag);
					strcpy(timeout, row[4]?row[4]:"30");
					ps_delSpace(timeout);
					strcpy(inner_digit, row[5]?row[5]:"4");
					ps_delSpace(inner_digit);


					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",serverdomain,prefix,serverip,ment_flag,timeout,inner_digit);
				}
		}
		mysql_free_result(result);
		result = NULL;
	    return 0;       
}
/*************************************************************************
* 서버정보 Get added moh_bill							     *
*************************************************************************/
int
procRP3()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],serverdomain[60];
  char	ment_flag[10],timeout[10];
  char	moh_bill[10];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(moh_bill,0,sizeof(moh_bill)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(seq,argv[2]);
	else
		strcpy(seq,"0");

	domain_string(domain);

			sprintf(sqlcmd, "select domain,prefix,proxyip,ment_flag,timeout,inner_digit,moh_bill from custom_info where domain='%s'",domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",domain);
				logCmd();
				return -1;
			}

			sprintf(resPacket,"|RES");
			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(serverdomain, row[0]?row[0]:"unknown.unknown");
					ps_delSpace(serverdomain);
					strcpy(prefix, row[1]?row[1]:"000");
					ps_delSpace(prefix);
					strcpy(serverip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(ment_flag, row[3]?row[3]:"Y");
					ps_delSpace(ment_flag);
					strcpy(timeout, row[4]?row[4]:"30");
					ps_delSpace(timeout);
					strcpy(inner_digit, row[5]?row[5]:"4");
					ps_delSpace(inner_digit);
					strcpy(moh_bill, row[6]?row[6]:"");
					ps_delSpace(moh_bill);


					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s",serverdomain,prefix,serverip,ment_flag,timeout,inner_digit,moh_bill);
				}
		}
		mysql_free_result(result);
		result = NULL;
	    return 0;       
}


/*************************************************************************
* VMS insert
|VMS|0019004@gw.iyouone.com|01057409073|01031194114|
10:32:59 |VMS|0010002@test28.net|0220897764|01050990712|<<<<<|ERR|Data Not Found!.(0010002,0010002,test28.net):(112.22
2.225.77)
*************************************************************************/
int
procVMS()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10];
  char	ment_flag[10],timeout[10];
  char	num070[20],call_num[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(num070,0,sizeof(num070)); 
	memset(call_num,0,sizeof(call_num)); 

/*******
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
|VMS|0019004@gw.iyouone.com|01057409073|01031194114|
10:32:59 |VMS|0010002@test28.net|0220897764|01050990712|<<<<<|ERR|Data Not Found!.(0010002,0010002,test28.net):(112.22
|VMS|0010002@test28.net|0220897764|01050990712|
********/


	if(argv[3] && *argv[3])
		strcpy(call_num,argv[3]);
	else 
		strcpy(call_num,"");

	if(argv[2] && strlen(call_num) < 3)
		strcpy(call_num ,argv[2]);

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd, "select 070number from number_manage where phoneid = '0%7.7s' and domain = '%s'",user,domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql_store_result 오류(%s,%s, %s)",user,domain,sqlcmd);
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s,%s)",user,domain,sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
		strcpy(num070, row[0]?row[0]:"07000000000");
		ps_delSpace(num070);
	}

	mysql_free_result(result);
	result = NULL;

	sprintf(sqlcmd, "insert into missed_call(receipt_num, call_num, regdate) values('%s','%s','%s')",num070,call_num,tmp);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(resPacket,"|RES|VMS|%s|%s|",num070,call_num);

    return 0;       
}



/*************************************************************************
* VMS Delete
*************************************************************************/
int
procDMS()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10];
  char	ment_flag[10],timeout[10];
  char	num070[20],call_num[20],index[10];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(num070,0,sizeof(num070)); 
	memset(call_num,0,sizeof(call_num)); 

/*******
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
********/


	if(argv[2] && *argv[2])
		strcpy(index,argv[2]);
	else 
		strcpy(index,"-");
	if(argv[3] && *argv[3])
		strcpy(num070,argv[3]);
	else 
		strcpy(num070,"07000000000");


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd, "delete from missed_call where idx=%s and receipt_num='%s'",index,num070);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if( mysql_query(mysql, sqlcmd) ) {
			logCmd();
			exit(0);
			//return(-1);
		}
	}

	sprintf(resPacket,"|RES|DMS|%s|%s|",num070,index);

    return 0;       

}


/******************************************************************************/
/******************************************************************************/
int
procISM()
{
	//char message[256];
        // 20190507 Change 
	char message[1024];
	char email[256];
	int   qid,returncode,reqflag=0;
	int   test=0,ret,i,row_num=0, res=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],org_num[20];
	char	index[11],num070[20],call_num[20],cid[20],today[20];
	char	recorddate[20],numstr[20];
	char	sms_flag[5];
	char	mailbox[21];

	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(cid,0,sizeof(cid)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(today,0,sizeof(today)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(mailbox,0,sizeof(mailbox)); 
	
	strcpy(mailbox,"999");
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(numstr,argv[3]);
	else 
		 return(errorReturn("SMS dest number error",__FILE__,__LINE__));

	if(argv[4] && *argv[4])
		strcpy(message,argv[4]);
	else 
		 return(errorReturn("SMS message error",__FILE__,__LINE__));


	if(PVS == 1) 
	{
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		sprintf(sqlcmd, "select mailbox from sip_buddies where name='1%7.7s' and defaultip= '%s'",phoneid+1,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
printf("\n11111111111111");
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
/***
			sprintf(resPacket, "|ERR|phone id does Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
*/
		}
		else {
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(mailbox, row[0]?row[0]:"-1");
				ps_delSpace(mailbox);
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*mailbox == '-' || *mailbox == '\0' || *mailbox == '0') {
			sprintf(resPacket, "|ERR|sms not send!.(%s)-(%s),smsflag:(%s)",phoneid,serverip,mailbox);
			return -1;
		}

printf("\nphoneid:(%s),numstr:(%s), message:(%s)",phoneid,numstr,message);
		logCmd();

		res=udpSend(serverip,5060,4,phoneid,numstr,message);

		//res = udpSendSMS(serverip,5060,4,phoneid,numstr,message,cid,org_num,num070);

		if(res == 0)
			sprintf(resPacket, "|RES|sms Send SUCCESS(%s)(%s)(%s)",serverip,numstr,message);
		else
			return(errorReturn("SMS send error",__FILE__,__LINE__));
	}

	return 0; 
}



/******************************************************************************/
/******************************************************************************/
int
procDSM()
{
	char passwd[256];
	char email[256];
	int   qid,returncode,reqflag=0;
	int   test=0,ret,i,row_num=0,j;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],org_num[20];
	char	index[11],num070[20],call_num[20],cid[20],today[20];
	char	recorddate[20],numstr[20];

	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(cid,0,sizeof(cid)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(today,0,sizeof(today)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])
		strcpy(recorddate,argv[2]);
	else
		strcpy(recorddate,"");

	if(argv[3] && *argv[3])
		strcpy(numstr,argv[3]);
	else
		strcpy(numstr,"");


	if(PVS == 1) 
	{
		if(customInfo(domain) < 0)
			return -1;

		if(strlen(numstr) == 3) {
			sprintf(phoneid,"1%3.3s0%s",prefix,numstr);
			strcpy(numstr,phoneid);
		}
		else if(strlen(numstr) == 4) {
			sprintf(phoneid,"1%3.3s%s",prefix,numstr);
			strcpy(numstr,phoneid);
		}

		tmm_currDate_3600_24_30(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
/***
		if(mysql_1) {
			mysql_close(mysql_1);
			mysql_1 = NULL;
		}

        j= 0;
        while(strlen(CDR_SERVER_[j].server) > 1) {
            if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
                break;
            }
            j++;
        }

		if(!mysql_1)
			sqlinit_1(CDR_SERVER_[j].active);
*/


		sprintf(sqlcmd, "delete from sms_send where recorddate = '%s' and (fromstr = '%s' or tostr = '%s') and ip = '%s'",recorddate,numstr,numstr,serverip);

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Delete Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

	}
	sprintf(resPacket, "|RES|delete SUCCESS!(%s, %s)",recorddate,numstr);

    return 0;       
}



/******************************************************************************/
/******************************************************************************/
int
procRSM()
{
	char passwd[256];
	char email[256];
	int   qid,returncode,reqflag=0;
	int   test=0,ret,i,row_num=0,j;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],org_num[20];
	char	index[11],num070[20],call_num[20],cid[20],today[20];
	char	recorddate[20],tostr[20],flag[5],outboundflag[5],cause[50],message[1024];

	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(cid,0,sizeof(cid)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(today,0,sizeof(today)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		reqflag = atoi(argv[3]);

	if(PVS == 1) 
	{

		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
/**************

			sprintf(sqlcmd, "select 070number,domain,cid from number_manage where phoneid='0%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return -1;
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(domain, row[1]?row[1]:"ipcc.com");
					ps_delSpace(domain);
					strcpy(cid, row[2]?row[2]:num070);
					ps_delSpace(cid);
				}
				mysql_free_result(result);
				result = NULL;
			}
*/

		if(mysql_1) {
			mysql_close(mysql_1);
			mysql_1 = NULL;
		}
/***
        j= 0;
        while(strlen(CDR_SERVER_[j].server) > 1) {
            if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
                break;
            }
            j++;
        }
*/
		if(*cid == '\0')
			strcpy(cid,num070);

		/*****
		if(!mysql_1)
			sqlinit_1(CDR_SERVER_[j].active);
		*/

		tmm_currDate_3600_24_30(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		//발신
		if(reqflag == 1)
			sprintf(sqlcmd, "select recorddate,tostr,flag,outboundflag,cause,message from sms_send where  (fromstr='1%7.7s' or fromstr = '%s') and ip='%s' and recorddate > '%s' order by recorddate desc",phoneid+1,phoneid+4, serverip,tmp);
		else if(reqflag == 2) //수신
			sprintf(sqlcmd, "select recorddate,fromstr,flag,outboundflag,cause,message from sms_send where (tostr='1%7.7s' or tostr = '%s') and ip='%s' and recorddate > '%s' order by recorddate desc",phoneid+1,phoneid+4,serverip,tmp);


		printf("\n[5m(%s)[0m",sqlcmd);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			logCmd();
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
		recorddate,tostr,flag,outboundflag,cause,message
*/
	memset(resPacket,0,sizeof(resPacket));
	strcpy(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(recorddate, row[0]?row[0]:"-");
			ps_delSpace(recorddate);
			strcpy(tostr, row[1]?row[1]:"-");
			ps_delSpace(tostr);
			strcpy(flag, row[2]?row[2]:"-");
			ps_delSpace(flag);
			strcpy(cause, row[4]?row[4]:"");
			ps_delSpace(cause);
			strcpy(message, row[5]?row[5]:"");
			ps_delSpace(message);
			while(message[strlen(message)-1] == '\n' || message[strlen(message)-1] == '\r')
				message[strlen(message)-1] = '\0';
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",recorddate,(strlen(tostr)==8 && *tostr=='1')?tostr+4:tostr,flag,cause,message);
		}
		if(!((i+1)%3)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				memset(resPacket,0,sizeof(resPacket));
				strcpy(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;
	printf("\nQuery End .....");

    return 0;       
}






/******************************************************************************/
/******************************************************************************/
int
procRRD()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10],org_num[20];
	char	index[11],num070[20],call_num[20],admin_flag[5];
	char recorddate[20],inner_num[5],peer_num[16],file[130],etc[64];

	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(admin_flag,0,sizeof(admin_flag)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(peer_num,0,sizeof(peer_num)); 
	memset(file,0,sizeof(file)); 
	memset(etc,0,sizeof(etc)); 
	memset(serverip,0,sizeof(serverip)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(admin_flag,argv[3]);
	else
		strcpy(admin_flag,"0");


    //if(PVS == 1) {

	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);
	//}


	if(PVS == 1) 
	{
		if(*admin_flag == '1') 
			sprintf(sqlcmd, "select recorddate,inner_num,peer_num,file,etc from record where proxyip = '%s'  and prefix = '%3.3s' order by inner_num,recorddate desc",serverip,prefix);
		else
			sprintf(sqlcmd, "select recorddate,inner_num,peer_num,file,etc from record where proxyip = '%s'  and prefix = '%3.3s' and inner_num = '%s' order by recorddate desc",serverip,prefix,inner_num);

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			logCmd();
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension

recorddate,inner_num,peer_num,file,etc
*/
	sprintf(resPacket,"|RES");
	for(i=0; i < row_num; i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(recorddate, row[0]?row[0]:"0");
			ps_delSpace(recorddate);
			strcpy(inner_num, row[1]?row[1]:"0");
			ps_delSpace(inner_num);
			strcpy(peer_num, row[2]?row[2]:"-");
			ps_delSpace(peer_num);
			strcpy(file, row[3]?row[3]:"-");
			ps_delSpace(file);
			strcpy(etc, row[4]?row[4]:"-");
			ps_delSpace(etc);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",recorddate,inner_num,peer_num,file,etc);
		}
		if(!((i+1)%10)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}


/*************************************************************************
snprintf(tmpdata,sizeof(tmpdata)-1,"|PWD|%s@lguplus.co.kr|%s|%s|",username,a1_hash);
*************************************************************************/
int
procPWD()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10];
  char	ment_flag[10],timeout[10];
  char	num070[20],phoneid[10],call_num[20],index[10],recorddate[20];
  char	username[20],hash[80],md5_passwd[64],flag[10];

	memset(email,0,sizeof(email));
	memset(flag,0,sizeof(flag));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(num070,0,sizeof(num070)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(username,0,sizeof(username)); 
	memset(hash,0,sizeof(hash)); 
	memset(num070,0,sizeof(num070)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 

/*******
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
********/
	if(argv[2] && *argv[2])
		strcpy(flag,argv[2]);
	else {
		sprintf(resPacket, "|ERR|Error!(flag value)");
		return -1;
	}

        if(*flag == '1') {
                strcpy(username,flag);
                strcpy(flag,"O");

                if(argv[3] && *argv[3])
                        strcpy(hash,argv[3]);
                else {
                        sprintf(resPacket, "|ERR|Error!(hash value)");
                        return -1;
                }
        }
        else if(*flag == 'O') {
                if(argv[3] && *argv[3])
                        strcpy(username,argv[3]);
                else {
                        sprintf(resPacket, "|ERR|Error!(username value)");
                        return -1;
                }

                if(argv[4] && *argv[4])
                        strcpy(hash,argv[4]);
                else {
                        sprintf(resPacket, "|ERR|Error!(hash value)");
                        return -1;
                }
        }
	else if(*flag == 'X') {
		MD5_DIGEST digest;
		int j = 0;

		if(argv[3] && *argv[3])
			strcpy(username,argv[3]);
		else {
			sprintf(resPacket, "|ERR|Error!(username value)");
			return -1;
		}
		if(argv[4] && *argv[4])
			strcpy(passwd,argv[4]);
		else {
			sprintf(resPacket, "|ERR|Error!(passwd value)");
			return -1;
		}
	
		if(strlen(username) == 8) {
			sprintf(sqlcmd, "select 070number,phoneid from number_manage where phoneid='0%7.7s'",username+1);
		}
		else if(strlen(username) == 7) {
			sprintf(sqlcmd, "select 070number,phoneid from number_manage where phoneid='0%7.7s'",username);
		}
		else {
			sprintf(sqlcmd, "select 070number,phoneid from number_manage where 070number='%s' or org_num = '%s'",username,username);
		}
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			_tcpWrite(masterFd, resPacket, strlen(resPacket));
			sleep(1); logCmd();
			exit(0);
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}
		else {
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(num070, row[0]?row[0]:"07000000000");
				ps_delSpace(num070);
				strcpy(phoneid, row[1]?row[1]:"10000000");
				ps_delSpace(phoneid);
			}
			mysql_free_result(result);
			result = NULL;
		}

		snprintf(hash, sizeof(hash), "1%7.7s:centrex:%s", phoneid+1,passwd);

		md5_digest(hash, strlen(hash), digest);
		for (j=0; j<sizeof(digest); j++) {
		    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
		}

	}

	printf("\nusername:(%s)",username);
	printf("\nusername:(%s)",username);
	printf("\nusername:(%s)",username);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nhash:(%s)",hash);
	printf("\nmd5_passwd:(%s)",md5_passwd);

	if(*flag == 'X') {
		sprintf(sqlcmd, "update sip_buddies set secret = '%s',md5secret ='%s' where name='1%7.7s'",passwd,md5_passwd,phoneid);
	}
	else
		sprintf(sqlcmd, "update sip_buddies set md5secret ='%s' where name='%s'",hash,username);


	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	if(*flag == 'X') {
		if(PVS == 1) {
			if(!authmysql)
				authinit(AUTH_SERVER);

			sprintf(sqlcmd,"UPDATE DCS_PHONE_AUTH  set sippwd = '%s' \
			where setdn = '%s'",passwd,num070);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!!(%s)-(%s)",sqlcmd,mysql_error(authmysql));
				logCmd();
				//return(-1);
			}
			sprintf(resPacket, "(%s)",sqlcmd);
			logCmd();
		}
	}


	sprintf(resPacket,"|RES|PWD|%s|%s|",recorddate,username,hash);

    return 0;       

}



/*************************************************************************
* translation					     *
*************************************************************************/
int
procTRI()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, retry=0,i=0;
  int   test=0, ret, row_num;
  char tmp[100],seq[20],today[15],delphoneid[20];
  unsigned int	tmpNumber;
  int	yy,mm,dd;
  struct  tm      *tp, time_str;
  time_t  t;
  char	yystr[5],mmstr[3],ddstr[3];

  char    sqlcmd[512],forward_num[30];
  char	fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
	char	num070[20], numbertype[11];
	char	inner_forward[128];
	char	frommin[5],tomin[5];
	char	tmpphoneid[10],tmp070num[15],tmpoption1[5],forward070num[15];
	char	tmpforward_num[15];


	memset(email,0,sizeof(email));
	memset(numbertype,0,sizeof(numbertype));
	memset(delphoneid,0,sizeof(delphoneid));
	memset(yystr,0,sizeof(yystr));
	memset(mmstr,0,sizeof(mmstr));
	memset(ddstr,0,sizeof(ddstr));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(_tmpbuf,0,sizeof(_tmpbuf)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(tmpphoneid,0,sizeof(tmpphoneid)); 
	memset(tmp070num,0,sizeof(tmp070num)); 
	memset(tmpoption1,0,sizeof(tmpoption1)); 
	memset(forward070num,0,sizeof(forward070num)); 
	memset(tmpforward_num,0,sizeof(tmpforward_num)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	strcpy(kind,argv[2]);
    else 
	strcpy(kind,"2");

    {
		sprintf(sqlcmd,"UPDATE custom_info set dupno='%s' where domain = '%s'",kind,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
    }

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|TRI|%s@%s|%s|",user,domain,kind);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER);
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|TRI|%s@%s|%s|",user,domain,kind);
				    sprintf(resPacket,"|RES|TRI userid:(%s)-(%s)-(%s)",user,domain,kind);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IF1')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|TRI userid:(%s)-(%s)-(%s)",user,domain,kind);
    return 0;       
}


/*************************************************************************
* TRD						     *
*************************************************************************/
int
procTRD()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0, i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30];
	char	sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(seq,0,sizeof(seq)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    domain_string(domain);

	if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;

	}
	

	/*** custom_info ***/
	sprintf(sqlcmd,"UPDATE custom_info  set dupno = '0' \
	where doamin= '%s'",domain);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		sprintf(sqlcmd,"alter table custom_info add column domain_forward varchar(2) default '0'");
		mysql_query(mysql, sqlcmd);
		//return(-1);
	}

	sprintf(commandBuf,"|TRD|%s@%s|",user,domain);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,BACKUP_SERVER);
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|TRD|%s@%s|",user,domain);
		sprintf(resPacket,"|RES|TRD userid:(%s)-(%s)",user,domain);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|TRD userid:(%s)-(%s)",user,domain);
	return 0;       
}




/*************************************************************************
* 포워딩 정보 조회-domain 						     *
*************************************************************************/
int
procTRR()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	tmpDay1[9], tmpDay2[9],inner_forward[128];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(inner_forward,0,sizeof(inner_forward)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;

	}

        sprintf(sqlcmd, "select dupno from custom_info where domain='%s'",domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(tmp, row[0]?row[0]:"0");
				ps_delSpace(tmp);
				sprintf(resPacket+strlen(resPacket),"|%s|",tmp);
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* 포워팅 정보 등록-domain						     *
*************************************************************************/
int
procIFD()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, retry=0,i=0;
  int   test=0, ret, row_num, memcnt=1;
  char tmp[100],seq[20],today[15],delphoneid[20];
  unsigned int	tmpNumber;
  int	yy,mm,dd, insert_flag=0;
  struct  tm      *tp, time_str;
  time_t  t;
  char	yystr[5],mmstr[3],ddstr[3];
char	*token = NULL;

  char    sqlcmd[512],forward_num[512];
  char	fromday[11],totoday[11],fromtime[3],totime[3],kind[2],method[2];
	char	num070[20], numbertype[11];
	char	inner_forward[128];
	char	frommin[5],tomin[5];
	char	tmpphoneid[10],tmp070num[15],tmpoption1[5],forward070num[15];
	char	tmpforward_num[15];
	char	d_timeout[10];


	memset(email,0,sizeof(email));
	memset(numbertype,0,sizeof(numbertype));
	memset(delphoneid,0,sizeof(delphoneid));
	memset(yystr,0,sizeof(yystr));
	memset(mmstr,0,sizeof(mmstr));
	memset(ddstr,0,sizeof(ddstr));
	memset(method,0,sizeof(method));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(_tmpbuf,0,sizeof(_tmpbuf)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(tmpphoneid,0,sizeof(tmpphoneid)); 
	memset(tmp070num,0,sizeof(tmp070num)); 
	memset(tmpoption1,0,sizeof(tmpoption1)); 
	memset(forward070num,0,sizeof(forward070num)); 
	memset(tmpforward_num,0,sizeof(tmpforward_num)); 
	memset(d_timeout,0,sizeof(d_timeout)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	strcpy(inner_num,argv[2]);


    if(argv[3] && *argv[3])
		strcpy(forward_num,argv[3]);
		
    if(argv[8] && *argv[8])
	strncpy(kind,argv[8],1);
    else 
	strcpy(kind,"1");

    if(argv[9] && *argv[9])
	strncpy(method,argv[9],1);
    else 
	strcpy(method,"1");

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
*/

    if(argv[4] && *argv[4] && strlen(argv[4]) > 8)
			strcpy(fromday,argv[4]);
    else  if(strlen(argv[4]) == 8) {
			strncpy(yystr,argv[4],4);

			strncpy(mmstr,argv[4]+4,2);
			strncpy(ddstr,argv[4]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 0;
			time_str.tm_min = 0;
			time_str.tm_sec = 0;
			t = mktime(&time_str);
			sprintf(fromday, "%ld",t);
    }
    else
			strcpy(fromday,"0");

    if(argv[5] && *argv[5] && strlen(argv[5]) > 8)
			strcpy(totoday,argv[5]);
			else  if(strlen(argv[5]) == 8) {
			strncpy(yystr,argv[5],4);
			strncpy(mmstr,argv[5]+4,2);
			strncpy(ddstr,argv[5]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 23;
			time_str.tm_min = 59;
			time_str.tm_sec = 59;
			t = mktime(&time_str);
			sprintf(totoday, "%ld",t);
    }
    else 
			strcpy(totoday,"0");

    if(atol(fromday) > atol(totoday))
	strcpy(fromday,totoday);

    if(argv[6] && *argv[6])
	strcpy(fromtime,argv[6]);
    else 
	strcpy(fromtime,"0");

    if(argv[7] && *argv[7])
	strcpy(totime,argv[7]);
    else 
	strcpy(totime,"0");

    if(atoi(totime) > 23)
	 strcpy(totime,"24");

    if(atoi(fromtime) < 0)
	 strcpy(fromtime,"0");

    if(atoi(totime) < 0)
	 strcpy(totime,"0");
	
    if(argv[10] && *argv[10])
	strcpy(frommin,argv[10]);
    else 
	strcpy(frommin,"0");

    if(argv[11] && *argv[11])
	strcpy(tomin,argv[11]);
    else 
	strcpy(tomin,"0");
    if(argv[12] && *argv[12])
	strcpy(d_timeout,argv[12]);
    else 
	strcpy(d_timeout,"0");


    domain_string(domain);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

	}
	else {
	//frommin,tomin,phoneid,serverip,inner_digit,inner_forward)
			if(argv[13] && *argv[13]) 
				strcpy(serverip,argv[13]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


	sprintf(sqlcmd, "delete from domain_forward_list where domain='%s'",domain);
	mysql_query(mysql, sqlcmd);
	printf("\nsqlcmd : (%s)",sqlcmd);
	printf("\nsqlcmd : (%s)",sqlcmd);
	printf("\nsqlcmd : (%s)",sqlcmd);

	token = (char *)strtok(forward_num, ",\0");
	while(token) {
		tel_string(token);
		if(token && (strlen(_tmpbuf) > 8 && strncmp(_tmpbuf,"070",3))) {
			sprintf(sqlcmd, "insert into domain_forward_list(domain,number,seq,recorddate) values('%s','%s','%d','%s')",domain,_tmpbuf, memcnt,today);
			printf("\nsqlcmd:(%s)",sqlcmd);
			mysql_query(mysql, sqlcmd);
			memcnt++;
			insert_flag = 1;
		}
		token = (char *)strtok(NULL, ",\0");
	}

	/*** number_manage ***/
DOMAIN_FORWARD_RETRY:
	if(insert_flag) {

///////////////////////////
		sprintf(sqlcmd,"delete from domain_forward_info where domain='%s'",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|error!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();

			sprintf(sqlcmd," CREATE TABLE domain_forward_info (domain varchar(64) NOT NULL default '', fromday varchar(10) NOT NULL default '0', today varchar(10) NOT NULL default '0', fromtime varchar(2) NOT NULL default '0', totime varchar(2) NOT NULL default '0', frommin varchar(2) default '0', tomin varchar(2) default '0', kind varchar(1) default '0', method varchar(1) default '0',timeout varchar(3) default '30')");
			mysql_query(mysql, sqlcmd);
			sprintf(sqlcmd," CREATE TABLE domain_forward_list (domain varchar(64) NOT NULL default '', number varchar(15) NOT NULL default '', seq varchar(2),recorddate varchar(15) NOT NULL default '')");
			mysql_query(mysql, sqlcmd);

		}

		strcpy(sqlcmd,"FLUSH PRIVILEGES");
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
		}
		sprintf(sqlcmd,"INSERT into domain_forward_info( \
		domain,fromday,today,fromtime,totime,frommin,tomin,kind,method,timeout) \
		values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
		domain,fromday,totoday,fromtime,totime, frommin,tomin,kind,method,d_timeout);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert domain_forward_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(PVS == 1)
					return(-1);
				else if(retry++ < 3) {
					sprintf(sqlcmd,"delete from domain_forward_info where domain = '%s'",domain);
					mysql_query(mysql, sqlcmd);
					goto DOMAIN_FORWARD_RETRY;
				}
		}
	}

	/*** custom_info ***/
	if(insert_flag) {
			sprintf(sqlcmd,"UPDATE custom_info  set domain_forward = '1' \
			where domain = '%s'",domain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					sprintf(sqlcmd,"alter table custom_info add column domain_forward varchar(2) default '0'");
					mysql_query(mysql, sqlcmd);
					//return(-1);
			}
	}

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
|IFW|zermin1@naonsoft.com|1111|01194916811
*/
		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IFD|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],frommin,tomin,d_timeout,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER);
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IFD|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],frommin,tomin,d_timeout,serverip);
				    sprintf(resPacket,"|RES|IFD userid:(%s)-(%s)-(%s)",user,domain,forward_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IF1')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|IFD userid:(%s)-(%s)-(%s)",user,domain,forward_num);
    return 0;       
}


/*************************************************************************
* 포워팅 정보 삭제						     *
*************************************************************************/
int
procDFD()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0, i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30];
	char	sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(seq,0,sizeof(seq)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(forward_num,argv[2]);

    domain_string(domain);

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

	}
	

    tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** number_manage ***/
	sprintf(sqlcmd,"DELETE from domain_forward_info where domain = '%s'", domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}
	/*** number_manage ***/
	sprintf(sqlcmd,"DELETE from domain_forward_list where domain = '%s'", domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	/*** custom_info ***/
	sprintf(sqlcmd,"UPDATE custom_info  set domain_forward = '0' \
	where doamin= '%s'",domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		sprintf(sqlcmd,"alter table custom_info add column domain_forward varchar(2) default '0'");
		mysql_query(mysql, sqlcmd);
		//return(-1);
	}

	sprintf(commandBuf,"|DFD|%s@%s|%s|",user,domain,forward_num);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,BACKUP_SERVER);
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DFD|%s@%s|%s|",user,domain,forward_num);
		sprintf(resPacket,"|RES|DFD userid:(%s)-(%s)",user,domain);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|DFD userid:(%s)-(%s)",user,domain);
	return 0;       
}



/*************************************************************************
*************************************************************************/
int
procRRR()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1,flag=0;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime,randindex;
char    extension[60];
char    call_kinds[6];
char    inner_num[10];
char    notify_num[10];
char    caller_inner_num[10];
char    fphone_id[64];
char    numbertype[5];
char    context[60];
char    callerid[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    option8[10];
char    cid[30];
char    tel[21];
char    org_num[21];
char    status[11];
char    bill_type[10];
char    imid[64];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[512];
char    number[20];
char    tmpBuff[512];
char    class[20];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	timeout[10];
char	ment_flag[5];
char	record[5];
char	name[64];
char	etc[64];
char	manner_flag[5];
char	sms_flag[10];
char	frommin[5],tomin[5];
char	tmpcrm[128];
char	callback_flag[10];
char	ringcallback_flag[11];
char	ring_flag[11];
char	inner_digit[11];
char	method[10];
char	seq[10];
char	ssip[20];

int forward_check = 0,caller_exist=0;
char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];
  int   test=0;

	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(kind,0,sizeof(kind)); 
	memset(seq,0,sizeof(seq)); 
	memset(number,0,sizeof(number)); 
	memset(ssip,0,sizeof(ssip)); 

	if(argc < 2)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));
printf("\nPVS:(%d), MASTER : (%d)\n",PVS,MASTER);

	if(argv[2] && *argv[2]) 
		strcpy(method,argv[2]);
	else	
		strcpy(method,"0");

	if(argv[3] && *argv[3]) 
		strcpy(seq,argv[3]);
	else	
		strcpy(seq,"0");

	if(argv[4] && *argv[4]) 
		strcpy(ssip,argv[4]);


	if(*method == '1') { //seq
		sprintf(sqlcmd, "select number,seq from domain_forward_list where domain = '%s' and seq > '%s' order by seq ASC",domain,seq);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			strcpy(sqlcmd,"CREATE TABLE domain_forward_list (domain varchar(64) NOT NULL default '', number varchar(15) NOT NULL default '', seq varchar(2),recorddate varchar(15) NOT NULL default '')");
		printf("\nsqlcmd:(%s)",sqlcmd);
			
			ret = mysql_query(mysql, sqlcmd);

			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}   
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||%s|","X");
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(number, row[0]?row[0]:"-------");
				ps_delSpace(number);

				strcpy(seq, row[1]?row[1]:"0");
				ps_delSpace(seq);
				break;
			}
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(resPacket,"|RES|SIP/%s@%s|%s|",number,ssip,seq);
		return 0;
		
	}
	else if(*method == '2') { //random
		sprintf(sqlcmd, "select number from domain_forward_list where domain = '%s'",domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}   
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 || atoi(seq) == row_num) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||%s|","X");
			return 0;
		}
		
		randindex = rand()%row_num;
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(number, row[0]?row[0]:"0");
				ps_delSpace(number);
				if(i == randindex)
					break;
			}
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(resPacket,"|RES|SIP/%s@%s|%s|",number,ssip,seq);
		return 0;
		
	}
	else if(*method == '3') { //concurrent
		sprintf(sqlcmd, "select number from domain_forward_list where domain = '%s'",domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}   
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES||%s|","X");
			return 0;
		}
		
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(number, row[0]?row[0]:"0");
				ps_delSpace(number);

				if(i == 0)
					sprintf(resPacket+strlen(resPacket),"|SIP/%s@%s",number,ssip);
				else
					sprintf(resPacket+strlen(resPacket),"&SIP/%s@%s",number,ssip);
			}
		}
		mysql_free_result(result);
		result = NULL;

		printf("\n[7mresPacket:(%s)[0m",resPacket);
		printf("\n[7mresPacket:(%s)[0m",resPacket);
		printf("\n[7mresPacket:(%s)[0m",resPacket);
		printf("\n[7mresPacket:(%s)[0m",resPacket);
		printf("\n[7mresPacket:(%s)[0m",resPacket);
		return 0;
	}
	else {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		tcpWrite(masterFd, resPacket);
		return 0;
	}
}



/*************************************************************************
* 포워딩 정보 조회-domain 						     *
*************************************************************************/
int
procRDD()
{
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],method[10];
  char	tmpDay1[9], tmpDay2[9],inner_forward[128];
	char	frommin[11],tomin[12],d_timeout[11];

	memset(email,0,sizeof(email));
	memset(method,0,sizeof(method));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(d_timeout,0,sizeof(d_timeout)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;

	}

        sprintf(sqlcmd, "select fromday,today,fromtime,totime,frommin,tomin,kind,method,timeout from domain_forward_info where domain='%s'",domain);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		sprintf(sqlcmd," CREATE TABLE domain_forward_info (domain varchar(64) NOT NULL default '', fromday varchar(10) NOT NULL default '0', today varchar(10) NOT NULL default '0', fromtime varchar(2) NOT NULL default '0', totime varchar(2) NOT NULL default '0', frommin varchar(2) default '0', tomin varchar(2) default '0', kind varchar(1) default '0', method varchar(1) default '0',timeout varchar(3) default '30')");
		mysql_query(mysql, sqlcmd);
		sprintf(sqlcmd," CREATE TABLE domain_forward_list (domain varchar(64) NOT NULL default '', number varchar(15) NOT NULL default '', seq varchar(2),recorddate varchar(15) NOT NULL default '')");
		mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd, "select fromday,today,fromtime,totime,kind,method,timeout from domain_forward_info where domain='%s'",domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(fromday, row[0]?row[0]:"0");
				ps_delSpace(fromday);
				strcpy(totoday, row[1]?row[1]:"0");
				ps_delSpace(totoday);
				strcpy(fromtime, row[2]?row[2]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[3]?row[3]:"0");
				ps_delSpace(totime);
				strcpy(frommin, row[4]?row[4]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[5]?row[5]:"0");
				ps_delSpace(tomin);

				strcpy(kind, row[6]?row[6]:"0");
				ps_delSpace(kind);
				strcpy(method, row[7]?row[7]:"0");
				ps_delSpace(method);
				strcpy(d_timeout, row[8]?row[8]:"30");
				ps_delSpace(d_timeout);

				tmm_Date(YYYYMMDD, atol(fromday), tmpDay1);
				tmm_Date(YYYYMMDD, atol(totoday), tmpDay2);
				sprintf(resPacket+strlen(resPacket),"|%s|%s|%s|%s|%s|%s|%s|%s|%s|",tmpDay1,tmpDay2,fromtime,totime,frommin,tomin,kind,method,d_timeout);
				selcnt++;
				break;
		}
	}
	mysql_free_result(result);
	result = NULL;

	if(selcnt) {
		sprintf(sqlcmd, "select number from domain_forward_list where domain='%s'",domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
		
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(tmp, row[0]?row[0]:"");
				ps_delSpace(tmp);
				if(strlen(tmp) > 8 && strncmp(tmp,"070",3))
					sprintf(resPacket+strlen(resPacket),"%s^",tmp);
				selcnt++;
			}
		}
		mysql_free_result(result);
		result = NULL;


	}

    return 0;       
}


/*************************************************************************
*************************************************************************/
int
procDRD()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10];
  char	ment_flag[10],timeout[10];
  char	num070[20],call_num[20],index[10],recorddate[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(num070,0,sizeof(num070)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(serverip,0,sizeof(serverip)); 

/*******
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
********/

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(recorddate,argv[3]);
	else
		strcpy(recorddate,"0");


	if(customInfo(domain) < 0)
		return -1;

	sprintf(sqlcmd, "delete from record where recorddate='%s' and proxyip='%s' and prefix='%s' and inner_num='%s'",recorddate,serverip,prefix,inner_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd,resPacket);
			logCmd();
			exit(0);
		}
	}

	sprintf(resPacket,"|RES|DRD|%s|%s|%s|%s|",recorddate,proxyip,prefix,inner_num);

    return 0;       

}



/******************************************************************************/
/******************************************************************************/
int
procRMS()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10],org_num[20];
	char	index[11],num070[20],call_num[20];

	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(num070, argv[2]);
	else strcpy(num070, "07000000000");

	if(PVS == 1) 
	{
		sprintf(sqlcmd, "select idx,call_num, regdate,receipt_num from missed_call where  receipt_num = '%s' order by idx desc",num070);

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			logCmd();
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(index, row[0]?row[0]:"0");
			ps_delSpace(index);
			strcpy(call_num, row[1]?row[1]:"0");
			ps_delSpace(call_num);
			strcpy(tmp, row[2]?row[2]:"-");
			ps_delSpace(tmp);
			strcpy(num070, row[3]?row[3]:"070");
			ps_delSpace(num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",index,call_num,tmp,num070);
		}
		if(!((i+1)%20)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}


/******************************************************************************/
/******************************************************************************/
int
procRM1()
{
	char	index[11],call_num[20];
	char passwd[256];
	char email[256];
	int   qid,returncode,fields_num,cpid,typeflag=0;
	int   test=0, ret, row_num,i,size=0;
	char tmp[100],seq[20],today[15],sqlcmd1[512];
	unsigned int	tmpNumber;
	char    prefix_num[200],forbid_prefix[128],inner_domain[32];
	char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
	char	tmpname1[32],num070[20];


	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 

	memset(inner_domain,0,sizeof(inner_domain));
	memset(num070,0,sizeof(num070));
	memset(prefix,0,sizeof(prefix));
	memset(inner_num,0,sizeof(inner_num));
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/


    if(argv[1] && *argv[1] && strlen(argv[1]) == 8) {
                strncpy(prefix,argv[1]+1,3);
                strcpy(inner_num,argv[1]+4);
	}
        else
		return(errorReturn("Input parameter invalid",__FILE__,__LINE__));

	if(argv[2] && *argv[2] && strlen(argv[2]) > 5)
                strcpy(serverip,argv[2]);
        else
                strcpy(serverip,"211.32.148.82");


	if(PVS == 1) {
			sprintf(sqlcmd, "select 070number,domain from number_manage where phoneid='0%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return -1;
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(domain, row[1]?row[1]:"ipcc.com");
					ps_delSpace(domain);
				}
				mysql_free_result(result);
				result = NULL;
			}
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	if(PVS == 1) 
	{
		sprintf(sqlcmd, "select idx,call_num, regdate,receipt_num from missed_call where  receipt_num = '%s' order by idx desc",num070);

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(index, row[0]?row[0]:"0");
			ps_delSpace(index);
			strcpy(call_num, row[1]?row[1]:"0");
			ps_delSpace(call_num);
			strcpy(tmp, row[2]?row[2]:"-");
			ps_delSpace(tmp);
			strcpy(num070, row[3]?row[3]:"070");
			ps_delSpace(num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",index,call_num,tmp,num070);
		}
		if(!((i+1)%20)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}


/*************************************************************************
* Ring timeout
*************************************************************************/
int
procSP1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,sockfd;
  int   test=0,ret,row_num,i,seq;
  char tmp[100],sqlcmd1[512],command[64];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2];
  char	fromday[11],totoday[11],fromtime[3],totime[3],today[20];
  char	tmpDay1[9], tmpDay2[9],regi_time[10];
  char	ment_flag[10],timeout[10];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(regi_time,0,sizeof(regi_time)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(inner_digit,0,sizeof(inner_digit)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(ment_flag,argv[2]);
	else 
		strcpy(ment_flag,"Y");

	strcpy(ment_flag,"Y");

	if(argv[3] && *argv[3])
		strcpy(timeout,argv[3]);
	else 
		strcpy(timeout,"30");

	if(atoi(timeout) < 5)
		strcpy(timeout,"5");

	if(atoi(timeout) > 90)
		strcpy(timeout,"90");

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[5] && *argv[5])
			strcpy(serverip,argv[5]);
	}

	if(argv[4] && *argv[4])
		strcpy(inner_digit,argv[4]);
	else 
		strcpy(inner_digit,"4");

	sprintf(sqlcmd, "update custom_info set ment_flag = '%s', timeout = '%s',inner_digit='%s' where domain = '%s'",ment_flag,timeout,inner_digit,domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
	}   

	//sprintf(sqlcmd, "update number_manage set ment_flag = '%s', timeout = '%s',inner_digit='%s' where domain = '%s'",ment_flag,timeout,inner_digit,domain);
	sprintf(sqlcmd, "update number_manage set timeout = '%s',inner_digit='%s' where domain = '%s'",timeout,inner_digit,domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Update Error!!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
	}   
	/***
	|SP1|superadmin@temp4402.lgdacom.net|N|40|3|superadmin|<<<<<|RES|SP1|N|40|3|211.32.148.76:(164.124.107.163)
	*/

	sprintf(commandBuf,"|SP1|%s@%s|%s|%s|%s|%s|",user,domain,ment_flag,timeout,inner_digit,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SP1')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|SP1|%s@%s|%s|%s|%s|%s|",user,domain,ment_flag,timeout,inner_digit,serverip);
		sprintf(resPacket,"|RES|SP1|%s|%s|%s|%s",ment_flag,timeout,inner_digit,serverip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'SP1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
					sleep(2);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|SP1|%s|%s|%s|%s",ment_flag,timeout,inner_digit,serverip);
    return 0;       
}




/*************************************************************************
* 서버정보 Delete					(중앙)		     *
*************************************************************************/
int
procDIP()
{
  char passwd[256];
  char email[256],sqlcmd1[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],servername[60];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	domain_string(domain);

    if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;
	}
	else {
	    if(argv[2] && *argv[2])
			strcpy(serverip,argv[2]);
		else
			strcpy(serverip,"127.0.0.1");
	}


	sprintf(sqlcmd,"DELETE from custom_info \
	where domain = '%s'",domain);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		exit(0);
	}

	sprintf(commandBuf,"|DIP|%s@%s|%s|%s|",user,domain,serverip,prefix);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIP')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DIP|%s@%s|%s|%s|",user,domain,serverip,prefix);
		sprintf(resPacket,"|RES|DIP userid:(%s)-(%s)",user,domain);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIP')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


    sprintf(resPacket,"|RES|DIP domain:(%s)-(%s)",user,domain);

    return 0;       
}


/*************************************************************************
text
*************************************************************************/
int
procSYN()
{
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],seq[20],today[15],proxyip[30];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],servername[60];
  char	phone_type[11],ipphone_num[5],wifiphone_num[5],cpgport_num[5],add_svc[11];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(phone_type,0,sizeof(phone_type)); 
	memset(ipphone_num,0,sizeof(ipphone_num)); 
	memset(wifiphone_num,0,sizeof(wifiphone_num)); 
	memset(cpgport_num,0,sizeof(cpgport_num)); 
	memset(add_svc,0,sizeof(add_svc)); 


	/** command 실행 ***/
	if(argv[1] && strlen(argv[1]) > 10) {
		sprintf(tmp,"/home/dacom/.Install/.mailif/MYSQL/sendtomsg");
		system(tmp);
		sprintf(resPacket,"|RES|TEST OK!!");
		return 0;
	}

	sprintf(sqlcmd, "select servername,serverip from server_info where status = 'A'");
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
	}

	mysql_free_result(result);
	result = NULL;

	sprintf(resPacket,"|RES|TEST OK!!");

return 0;       
}




/*************************************************************************************************************/
/* 202003 New procIIP  */
/*************************************************************************************************************/
int
procIIP(char *tmpip)
{
char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,j=0, rand_check = 0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,retry = 0,index;
  char tmp[100],seq[20],today[15],proxyip[30],sqlcmd1[256];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],servername[60];
  char	phone_type[11],ipphone_num[5],wifiphone_num[5],cpgport_num[5],add_svc[11];
  char	manager[20],con_prefix[10];
  char	svc_kind[10],ttmpip[20];
  char	nextprefix[5];
  char	con_ip[64],tmpbuf[64];
  struct  timeval     tp;
  struct  utsname   ht;
  //struct  timezone    tz;

  uname(&ht);
  gettimeofday(&tp, NULL);


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(phone_type,0,sizeof(phone_type)); 
	memset(ipphone_num,0,sizeof(ipphone_num)); 
	memset(wifiphone_num,0,sizeof(wifiphone_num)); 
	memset(cpgport_num,0,sizeof(cpgport_num)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(proxyip,0,sizeof(proxyip)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(nextprefix,0,sizeof(nextprefix)); 
	memset(servername,0,sizeof(servername)); 
	memset(con_prefix,0,sizeof(con_prefix)); 
	memset(con_ip,0,sizeof(con_ip)); 
	memset(ttmpip,0,sizeof(ttmpip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	strcpy(con_prefix,"0");

	domain_string(domain);
    	if(argv[2] && *argv[2])
		strcpy(phone_type,argv[2]);
	else
		strcpy(phone_type,"hard-phone");
    	if(argv[3] && *argv[3])
		strcpy(ipphone_num,argv[3]);
	else
		strcpy(ipphone_num,"0");
    	if(argv[4] && *argv[4])
		strcpy(wifiphone_num,argv[4]);
	else
		strcpy(wifiphone_num,"0");

    	if(argv[5] && *argv[5])
		strcpy(cpgport_num,argv[5]);
	else
		strcpy(cpgport_num,"0");

    	if(argv[6] && *argv[6])
		strcpy(add_svc,argv[6]);
	else
		strcpy(phone_type,"NNNNNNNNNN");

    	if(argv[7] && *argv[7])
		strcpy(manager,argv[7]);
	else
		strcpy(manager,"master");

    	if(argv[8] && *argv[8])
		strcpy(passwd,argv[8]);
	else
		strcpy(passwd,"1111");

	srand(getpid());

	//sem_wait(&s_shmP->sem);
	/*** prefiX의 최대값 get ***/
	if(PVS == 1 && MASTER == 1) {
//
//ADD 20200316
		char domainips[256];
		memset(domainips,0,sizeof(domainips));
		int NewPrefixtype=0;
//End 20200316

		index = 0;

		while(strlen(VIP_LIST_[index].vip1) > 5 && i < INDEX) {
printf("\n===>1.index: (%d) tmpip(%s)  VIP_LIST_[%d].vip1(%s)\n",index,tmpip,index,VIP_LIST_[index].vip1);
			//if(!strcmp(tmpip,VIP_LIST_[index].vip1) || !strcmp(tmpip,VIP_LIST_[index].vip2)) {
			if(!strcmp(tmpip,VIP_LIST_[index].vip1)) {

				//sprintf(sqlcmd, "select max(binary(prefix)) from custom_info where prefix <> '999'  and (proxyip = '%s' or proxyip = '%s') and prefix > '%s' and substr(prefix,2) < '9A' ",VIP_LIST_[index].vip1,VIP_LIST_[index].vip2,con_prefix);
				//sprintf(con_ip,"proxyip = '%s' or proxyip = '%s'",VIP_LIST_[index].vip1,tmpip,VIP_LIST_[index].vip2);
				//sprintf(con_ip,"proxyip = '%s' or proxyip = '%s'",VIP_LIST_[index].vip1,VIP_LIST_[index].vip2);
				//sprintf(domainips,"domain = '%s' or domain = '%s'",VIP_LIST_[index].vip1,VIP_LIST_[index].vip2); //ADD 20200316
				sprintf(sqlcmd, "select prefix from prefix_list where prefix not in ( select prefix from custom_info where proxyip = '%s')  limit 5",tmpip);
				sprintf(con_ip,"proxyip = '%s'",tmpip);
				sprintf(domainips,"domain = '%s'",tmpip);
				strcpy(ttmpip,tmpip);

				break;
			}
			index ++;
		}
printf("\n2.VIP_LIST_[index].seq:([7m%d[0m), index : (%d) \n",VIP_LIST_[index].seq,index );
printf("\n2.VIP_LIST_[index].seq:([7m%d[0m), index : (%d) \n",VIP_LIST_[index].seq,index );
		
		if(VIP_LIST_[index].seq == 0) {
			if(tmpip) {
				//sprintf(sqlcmd, "select max(binary(prefix)) from custom_info where proxyip = '%s' and substr(prefix,2) < '9A' ",tmpip);
				//sprintf(con_ip,"proxyip = '%s'",tmpip);
                                sprintf(sqlcmd, "select prefix from prefix_list where prefix not in ( select prefix from custom_info where proxyip = '%s')  limit 5",tmpip);
                                sprintf(con_ip,"proxyip = '%s'",tmpip);
				sprintf(domainips,"domain = '%s'",tmpip); //ADD 20200316
				strcpy(ttmpip,tmpip);
			}
			else {  //recording PRO
				//sprintf(sqlcmd, "select max(binary(prefix)) from custom_info where proxyip = '%s' and substr(prefix,2) < '9A' ","211.32.148.82");
				//sprintf(con_ip,"proxyip = '%s'","211.32.148.82");
				//sprintf(domainips,"domain = '%s'","211.32.148.82"); //ADD 20200316
				//strcpy(ttmpip,"211.32.148.82");
				sprintf(sqlcmd, "select prefix from prefix_list where prefix not in ( select prefix from custom_info where proxyip = '%s')  limit 5","211.32.148.82");
				sprintf(con_ip,"proxyip = '%s'","211.32.148.82");
				sprintf(domainips,"domain = '%s'","211.32.148.82"); //ADD 20200316
				strcpy(ttmpip,"211.32.148.82");
			}
		}

		printf("\n([7m%s[0m)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
		printf("\n([7m%s[0m)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
		printf("\n([7m%s[0m)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				//sem_post(&s_shmP->sem);
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			//sem_post(&s_shmP->sem);
			sprintf(tmpbuf,"(%s)(%s)prefix full,%s-next prefix(%s)",ht.nodename,tmpip?tmpip:ttmpip,domain,"");
			ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
			logCmd();
			return(-1);
		}   
				
//printf("\nrow_num :(%d)",row_num);
//printf("\nrow[0] :(%s)",row[0]);
//printf("\nrow_num :(%d)",row_num);
//printf("\n===================\n");

		row_num = mysql_num_rows(result);
		if(row_num > 0) {
			row = mysql_fetch_row(result) ;
			if( row && row[0] && strcasecmp(row[0],"NULL")) {
				//row = mysql_fetch_row(result);
				strcpy(prefix, row[0]?row[0]:"000");
				ps_delSpace(prefix);
				strcpy(nextprefix,prefix);	
				mysql_free_result(result);
				result = NULL;
				if(row_num < 5) {
					sprintf(tmpbuf,"(%s)(%s),prefix free count(%d)",ht.nodename,tmpip?tmpip:ttmpip,row_num);
					ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
				}
				if(strlen(nextprefix) != 3) {
					sprintf(tmpbuf,"(%s)(%s)prefix full,%s-%s",ht.nodename,tmpip?tmpip:ttmpip,domain,nextprefix);
					ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
					sprintf(resPacket, "|ERR|prefix allot ERROR-full");
					printf("\n(%s)|ERR|mysql Search Error custom_info!(%s-%s)\n",recvPacket[_request_id].value,resPacket);
					//sem_post(&s_shmP->sem);
					//exit(0);
					return -2;
				}
			}
			else {
				mysql_free_result(result);
				result = NULL;

				sprintf(tmpbuf,"(%s)(%s)prefix full,%s-%s",ht.nodename,tmpip?tmpip:ttmpip,domain,nextprefix);
				ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
				sprintf(resPacket, "|ERR|prefix allot ERROR-full");
				printf("\n(%s)|ERR|mysql Search Error custom_info!(%s-%s)\n",recvPacket[_request_id].value,resPacket);
				//sem_post(&s_shmP->sem);
				//exit(0);
				return -2;
			}
		}
		else {
			mysql_free_result(result);
			result = NULL;
			sprintf(tmpbuf,"(%s)(%s,free count(%d))prefix full,%s",ht.nodename,tmpip?tmpip:ttmpip,row_num,nextprefix);
			ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
			sprintf(resPacket, "|ERR|prefix allot ERROR-full(%s)",tmpip?tmpip:ttmpip);
			printf("\n(%s)|ERR|mysql Search Error custom_info!(%s-%s)\n",recvPacket[_request_id].value,resPacket);
			//sem_post(&s_shmP->sem);
			//exit(0);
			return -2;
		}

printf("\nnext-prfix[[7m%s[0m]-[%s]",nextprefix,tmpip);
printf("\nnext-prfix[[7m%s[0m]-[%s]",nextprefix,tmpip);
printf("\nnext-prfix[[7m%s[0m]-[%s]",nextprefix,tmpip);
NEXT_RETRY:

		if(tmpip)
			strcpy(ttmpip,tmpip);
		
		gettimeofday(&tp, NULL);

		sprintf(sqlcmd, "select proxyip from custom_info where (%s) and binary(prefix)= '%s'",con_ip,nextprefix);
		printf("\n(%s)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\n(%s)|ERR|mysql Search Error!(%d,%s, %s)\n",recvPacket[_request_id].value,ret,mysql_error(mysql),sqlcmd );
			//_tcpWrite(masterFd, resPacket, strlen(resPacket));
			//sleep(1); 
			//sem_post(&s_shmP->sem);
			logCmd();
			//exit(0);
		}
		else {
			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				//sem_post(&s_shmP->sem);
				logCmd();
			}
			else {
				row_num = mysql_num_rows(result);
				printf("\n(%s)row_num(%d)\n",recvPacket[_request_id].value,row_num);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}
				else {
					row = mysql_fetch_row(result);
					sprintf(tmpbuf,"(%s)(%s)prefix dup,%s-%s",ht.nodename,tmpip?tmpip:ttmpip,domain,nextprefix);
					ret = smsSend(tmpbuf,"164.124.107.28","mysqlif");
					sprintf(resPacket, "|ERR|prefix allot ERROR-dup(%s, %s-%s)",mysql_error(mysql),tmpip?tmpip:ttmpip,nextprefix);
					printf("\n(%s)|ERR|mysql Search Error custom_info!(%s, %s)\n",recvPacket[_request_id].value,mysql_error(mysql),sqlcmd );
					mysql_free_result(result);
					result = NULL;

					return -2;
					//sem_post(&s_shmP->sem);
					//exit(0);
				}
			}
		}
	}
	else {
		if(argv[9] && *argv[9])
			strcpy(ttmpip,argv[9]);

		if(argv[10] && *argv[10])
			strcpy(nextprefix,argv[10]);
	}

/***
phone_type[11],ipphone_num[5],wifiphone_num[5],cpgport_num[5],add_svc[11]
*/

		tmm_currDate(YYYYMMDD,today);
//printf("\nPROXY IP : (%s)",ttmpip?ttmpip:"no ip");

		if((ttmpip && !strcmp(ttmpip,"211.32.148.81")) || !strcmp(ttmpip,"211.32.148.81"))
			strcpy(svc_kind,"UC");
		else if((ttmpip && !strcmp(ttmpip,"211.32.148.82")) || !strcmp(ttmpip,"211.32.148.82"))
			strcpy(svc_kind,"RC");
		else if((ttmpip && !strcmp(ttmpip,"112.222.225.91")) || !strcmp(ttmpip,"112.222.225.91"))
			strcpy(svc_kind,"RC");
		else if((ttmpip && !strcmp(ttmpip,"112.222.225.207")) || !strcmp(ttmpip,"112.222.225.207"))
			strcpy(svc_kind,"RC");
		else if((ttmpip && !strcmp(ttmpip,"58.151.244.78")) || !strcmp(ttmpip,"58.151.244.78"))
			strcpy(svc_kind,"IPCC");
		else if((ttmpip && !strcmp(ttmpip,"58.151.244.79")) || !strcmp(ttmpip,"58.151.244.79"))
			strcpy(svc_kind,"IPCC");
		else
			strcpy(svc_kind,"PC");


		//추가
		sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain = '%s'",domain);
		printf("\n(%s)sqlcmd:(%s)-(%d)\n",recvPacket[_request_id].value,sqlcmd,getpid());
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
			sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
			printf("\n(%s)resPacket:(%s)\n",recvPacket[_request_id].value,resPacket);
			//sem_post(&s_shmP->sem);
			return -1;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			//printf("\nresPacket:(%s)",resPacket);
			sprintf(errorCause,"custom_info Select error!(%s)(%d)",domain,__LINE__);
			//sem_post(&s_shmP->sem);
			return(-1);
		}   

		row_num = mysql_num_rows(result);

		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;

			sprintf(sqlcmd,"INSERT into custom_info( \
			domain , serverip , servername ,service, billtype,regday,prefix,manager,passwd,phone_type,ipphone_num,wifiphone_num,cpgport_num,add_svc,proxyip,dialplan,svc_kind, cust_name) \
			values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s',%s,%s,%s,'%s','%s','N','%s','%s')", \
			domain,MYOAM_SERVER,servername,"GROUPWARE","A",today,nextprefix,manager,passwd,phone_type,ipphone_num,wifiphone_num,cpgport_num,add_svc,ttmpip,svc_kind,cust_name);


			//printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
			printf("\n[7m[5m(%s)insert custom_info prefix : ((((%s)))) domain(%s)[0m[0m\n",recvPacket[_request_id].value,nextprefix,domain);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Input Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
				//sem_post(&s_shmP->sem);
				logCmd();
				return(-1);
			}
/***************************
			sprintf(sqlcmd,"update server_info set lastprefix = '%s' where  serverip = '%s'",\
			nextprefix,tmpip);

			printf("\n[7m[5m(%s)sqlcmd : ((((%s))))[0m[0m\n",recvPacket[_request_id].value,sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
			}
			//sem_post(&s_shmP->sem);
*/

			sprintf(commandBuf,"|IIP|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phone_type,ipphone_num,wifiphone_num,cpgport_num,add_svc,manager,passwd,ttmpip,nextprefix,cust_name);
			if(PVS == 1 && MASTER == 1) 
			{
				//system("/home/dacom/.Install/.mailif/MYSQL/sendtomsg");

				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIP')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IIP|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phone_type,ipphone_num,wifiphone_num,cpgport_num,add_svc,manager,passwd,ttmpip,nextprefix,cust_name);
				sprintf(resPacket,"|RES|IIP userid:(%s)-(%s)_(%s)",user,domain,nextprefix);

				/****추가 ***/
				//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",ttmpip,ttmpip);
				sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",tmpip);
				printf("\n(%s)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					printf("\n(%s)|ERR|mysql Search Error!(%s, %s)\n",recvPacket[_request_id].value,mysql_error(mysql),sqlcmd );
						//_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						//exit(0);
						return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					printf("\n(%s)|ERR|mysql Search Error!(%s, %s)\n",recvPacket[_request_id].value,mysql_error(mysql),sqlcmd );
					//_tcpWrite(masterFd, resPacket, strlen(resPacket));
					logCmd();
					//exit(0);
					return -1;
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIP')",tmp, commandBuf,serverip);
							printf("\n(%s)sqlcmd:(%s)\n",recvPacket[_request_id].value,sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
			}
		}else{
			printf("\n(%s)........................ procIIP 내에서 custom_info 존재!! \n",recvPacket[_request_id].value);
		}

    sprintf(resPacket,"|RES|IIP domain:(proxy:%s)-(%s)-(%s)-(%s)-(%s-%s)-%s-%s-%s)",proxyip,domain,servername,serverip,phone_type,ipphone_num,wifiphone_num,cpgport_num,add_svc);

    return 0;       
}

/***************************************************************************************/
/***************************************************************************************/
int
clickCall(ip,callerid,callername,phoneid,context,target,option3,par_domain,auth_num)
char	*ip;
char	*callerid;
char	*callername;
char	*phoneid;
char	*context;
char	*target;
char	*option3;
char	*par_domain;
char	*auth_num;
{
	int	sockfd=-1,n;
	char	event[64],exten[32],channel[64],actionid[10];
	char	destP[256];
	int	channelflag = 1,callflag=0;
	EVENT_STRUCT	data;
	long 	dur_time=0L;


	memset(event,0,sizeof(event));
	memset(exten,0,sizeof(exten));
	memset(channel,0,sizeof(channel));
	memset(actionid,0,sizeof(actionid));
	memset(&data,0,sizeof(EVENT_STRUCT));

	strcpy(data.event,"Newchannel");

	//sprintf(data.channel,"SIP/%s",target);
	
	sprintf(data.channel,"SIP/1%s",phoneid);

	strcpy(data.callerid,callerid);


printf("\ncallerid:(%s)",callerid);
	//strcpy(data.exten,phoneid);

	strcpy(data.exten,target);

	//strcpy(data.context,"clickcall");
	strcpy(data.context,"outbound");
	strcpy(data.serverip,ip);
	data.state = 0;

	//sockfd = tcpConnect(ip, 5038);

	//sprintf(destP,"Action: login\nUsername: manager\nSecret: ippbx@IX\n\n\n\n\n");
	//write(sockfd, destP, strlen(destP));
	//tcpWrite(sockfd, destP);
	
	sockfd = connectToManager(ip);
	if(sockfd < 0) {
		usleep(10000);
		sockfd = connectToManager(ip);
		if(sockfd < 0) {
			sprintf(resPacket, "|ERR|Service Error!(%s-%s)",phoneid+3,target);
			return sockfd;
		}
	}
/****
        sprintf(destP,"Action: Login\r\nUsername: manager\r\nsecret: ippbx@ix\r\n\r\n");
        write(sockfd, destP, strlen(destP));
        readline(sockfd, destP, 1024);
        printf("\n1.[5m[7m(%s)[0m[0m",destP);
        readline(sockfd, destP, 1024);
        printf("\n2.[5m[7m(%s)[0m[0m",destP);
*/

	memset(destP,0,sizeof(destP));

	//sprintf(destP+strlen(destP),"Action: Originate\r\n\r\nActionID: %d\r\n",getpid());

	sprintf(destP+strlen(destP),"Action: Originate\r\nWhere: MYSQLIF\r\nActionID: %d\r\n",getpid());

/***
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
*/

	sprintf(actionid,"%d",getpid());

	if(strlen(phoneid) < 8)
		//sprintf(destP,"Channel: SIP/1%s\r\n",target);
		sprintf(destP+strlen(destP),"Channel: Local/1%s\r\n",phoneid);
	else {
		sprintf(resPacket, "|ERR|Phone ID Error(%s-%s)",phoneid,target);
		return -1;
	}
	//sprintf(destP,"Channel: SIP/%s@%s\r\n",target,SSW_IP);

/***
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);
*/
	sprintf(destP+strlen(destP),"CallerID: %s\r\n",callerid);
	sprintf(destP+strlen(destP),"CallerIDNAME: %s\r\n",callername);
	sprintf(destP+strlen(destP),"Exten: %s\r\n",target);
	sprintf(destP+strlen(destP),"Context: %s\r\n",context);
	sprintf(destP+strlen(destP),"Priority: 1\r\n");
	sprintf(destP+strlen(destP),"Variable: DOMAIN=%s\r\n",par_domain);
	sprintf(destP+strlen(destP),"Variable: CALL=CLICK\r\n");
	sprintf(destP+strlen(destP),"Variable: PREFIX=%3.3s\r\n",phoneid);
	sprintf(destP+strlen(destP),"Variable: TARGETNUM=WEB_%s\r\n",target);
	if(auth_num)
		sprintf(destP+strlen(destP),"Variable: AUTH_KEY=%s\r\n",auth_num?auth_num:"000000");
	sprintf(destP+strlen(destP),"Async: yes\r\n\r\n");
	write(sockfd, destP, strlen(destP));
	printf("%s",destP);

	dur_time = time(0);
	alarm(60);
	while((n=readline(sockfd, destP, 1024))) {

		alarm(0);
/***
		if(time(0) - dur_time > 10)
			break;
*/
			
		if(n < 0) {
			close(sockfd);
			sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",phoneid+3,target);
			return -1;
		}

		if(!strncasecmp(destP,"server: ",strlen("server: "))) {
			strcpy(data.serverip,destP+strlen("server: "));
			if(strncasecmp(data.serverip,ip,strlen(ip))) {
				memset(&data,0,sizeof(EVENT_STRUCT));
			}
		}

	printf("\n[5mreadline:(%s)[0m",destP);
		if(!strncasecmp(destP,"event: ",strlen("event: "))) {
			strcpy(data.event,destP+strlen("event: "));
			printf("\ndata.event:([5m%s[0m)",data.event);
/**
			if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess")) || !strcasecmp(data.event,"originatefailure",strlen("originatefailure"))) {

			}
*/

			if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess"))) {
				data.state = 1;
				channelflag = 2;
			}
			printf("\nstate(%d):::::(((%s)))((%s)",data.state,data.event,destP);
			if(!strncasecmp(data.event,"newchannel",strlen("newchannel"))) {

			}

			printf("\ndata.event:([5m%s[0m)",data.event);
		}

		if(!strncasecmp(destP,"channel: ",strlen("channel: "))) {
			if(!strncasecmp(data.event,"newchannel",strlen("newchannel")))
				strcpy(data.channel,destP+strlen("channel: "));
		}

		sprintf(actionid,"%d",getpid());
		if(!strncasecmp(destP,"actionid: ",strlen("actionid: "))) {
			strcpy(data.actionid,destP+strlen("actionid: "));
			printf("\n=========>data.event:([7m%s[0m)data.actionId:(%s),actionId:(%s)",data.event,data.actionid,actionid);
			if(strncasecmp(data.actionid,actionid,strlen(actionid))) {
				if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess")) || !strcasecmp(data.event,"originatefailure",strlen("originatefailure")))  {

					strcpy(data.event,"");
					printf("\n[5mEVENT_STRUCT Cleared!!!!![0m");
				}
				printf("\n!!!stranged!!!");
				printf("\n!!!stranged!!!");

			}
			else {
				if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess"))) {
					callflag = 1;
					break;
				}
				if(!strncasecmp(data.event,"originatefailure",strlen("originatefailure"))) 
				{
					callflag = -1;
					break;
				}

			printf("[7m(%s)[0m\n",data.event);
			printf("[7m(%s)[0m\n",data.event);
			printf("[7m(%s)[0m\n",data.event);
		

			}
		}

		if(!strcmp(destP,"\n") || !strcmp(destP,"\r\n")) {
			memset(&data,0,sizeof(EVENT_STRUCT));
			printf("\n[5mEVENT_STRUCT Cleared!!!!![0m");
		}
		printf(">>:%s",destP);
		alarm(60*2);
	}
	alarm(0);


	strcpy(destP,"Action: Logoff\r\n\r\n");
	write(sockfd, destP, strlen(destP));
	close(sockfd);

	if(callflag == 0) {
		if(!strncasecmp(data.event,"link",strlen("link")))
			callflag = 1;
		else
			callflag = -1;
	}

	return callflag;
}

int sqlinit_1(char *ip)
{
        char con_user[32], con_pass[32];
        int ret;

        /* host 부분이 NULL이면 localhost입니다. */

        printf("\n[5m[7mmysql_1 init start!!!(%s)[0m[0m",ip);
	mysql_1 = mysql_init(NULL);
	mysql_1 = mysql_real_connect(mysql_1, ip, "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock.0",0);

        printf("\n[5m[7mmysql_1 init start!!!(%s)[0m[0m",ip);
/***
	if(!mysql_1)
		exit(0);
*/

        return 1;
}



int cdrinit(char *ip)
{
        char con_user[32], con_pass[32];
        int ret;

        /* host 부분이 NULL이면 localhost입니다. */
        printf("\n[5m[7mcdrmysql init start!!![0m[0m");
        printf("\n[5m[7mcdrmysql init start(%d)!!![0m[0m",getpid());

        cdrmysql = mysql_init(NULL);
        cdrmysql = mysql_real_connect(cdrmysql, ip, "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock.1",0);
/***
        if(!mysql_1)
                exit(0);
*/
        return 1;
}


int authinit(char *ip)
{
        char con_user[32], con_pass[32];
        int ret;

        /* host 부분이 NULL이면 localhost입니다. */
        printf("\n[5m[7mauthmysql init start0(%d)!!![0m[0m\n",getpid());
        printf("\n[5m[7mauthmysql init start1(%s)!!![0m[0m\n",ip);

        authmysql = mysql_init(NULL);
        authmysql = mysql_real_connect(authmysql, ip, "ippbx", "ippbxrw", "ippbx",3306, "/tmp/mysql.sock.2",0);
        if(!authmysql){
        	printf("\n[5m[7mauthmysql init ERRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR(%d)!!![0m[0m",getpid());

               // exit(0);
	}
//20130708 AUTH 한글 깨지는 현상 방어
	if (authmysql && !mysql_set_character_set(authmysql, "euckr"))
	{
    		MY_CHARSET_INFO cs;
    		mysql_get_character_set_info(authmysql, &cs);
    		printf("character set name: %s\n", cs.name);
    		printf("collation name: %s\n", cs.csname);
    		printf("comment: %s\n", cs.comment);
    		printf("multi byte character min. length: %d\n", cs.mbminlen);
    		printf("multi byte character max. length: %d\n", cs.mbmaxlen);
	}
        return 1;
}




/*************************************************************************
* Click Call요청
*************************************************************************/
int
procCC1()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid,outboundcall=0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0, match=0;
  char tmp[100],dest[30],target[30],callerid[30],inner_num[5],tmpinner_num[12],context[30];
  unsigned int	tmpNumber;
  int 	intfromtime=0,inttotime=0;
  char    sqlcmd[512],servername[60],forbiden_call[11];
  char	fromtime[11],totime[11],tempinner_num[20];
  char	forbid_prefix[256],option3[11],phoneid[11];
  char	*tmpP;
struct  tm      *tp;
time_t  t;


	memset(fromtime,0,sizeof(fromtime));
	memset(phoneid,0,sizeof(phoneid));
	memset(totime,0,sizeof(totime));
	memset(forbiden_call,0,sizeof(forbiden_call));

	memset(callerid,0,sizeof(callerid));
	memset(email,0,sizeof(email));
	memset(option3,0,sizeof(option3));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(tmpinner_num,0,sizeof(tmpinner_num)); 
/****
	if (isMailList(argv[1])		
		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
        t=time(0);
        tp = (struct tm *) localtime(&t);

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) 
		strcpy(dest,argv[2]);
	else {
		sprintf(resPacket, "|ERR|CCC|%s@%s|",user,domain);
		return -1;
	}

/***
	if(argv[3] && *argv[3]) 
		strcpy(callerid,argv[3]);
	else
		strcpy(callerid,"");
*/

	if(argv[3] && *argv[3]) 
		strcpy(callerid,argv[3]);
	else 
		strcpy(callerid,"070");

	if(argv[4] && *argv[4]) 
		strcpy(context,argv[4]);
	else
		strcpy(context,"clickcall");


	if(!strncmp(callerid,"070",3))
		sprintf(sqlcmd, "select defaultip,phoneid from number_manage where 070number = '%s'",callerid);
	else
		sprintf(sqlcmd, "select defaultip,phoneid from number_manage where org_num = '%s'",callerid);

		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,callerid,domain);
			if(mysql_1)
				mysql_close(mysql_1);
			sqlinit_1(LOCAL_SERVER);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql_1);
		if(!result) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,callerid,domain);
			tcpWrite(masterFd, resPacket);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,callerid,domain);
			tcpWrite(masterFd, resPacket);
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(serverip, row[0]?row[0]:"1");
			ps_delSpace(serverip);
			strcpy(phoneid, row[1]?row[1]:"00000000");
			ps_delSpace(phoneid);
		}
		mysql_free_result(result);
		result = NULL;

		*phoneid = '1';
		strncpy(prefix, phoneid+1,3);
		strncpy(tempinner_num, phoneid+4,4);

	printf("\nproxyip : (%s)",serverip);

	if(strlen(tempinner_num) > 4)
		strcpy(inner_num,tempinner_num+(strlen(tempinner_num)-4));
	else if(strlen(tempinner_num) == 4)
		strcpy(inner_num,tempinner_num);
	else if(strlen(tempinner_num) == 3)
		sprintf(inner_num,"0%s",tempinner_num);
	else  {
		sprintf(resPacket, "|ERR|CCC|%s@%s|",user,domain);
		return -1;
	}
	
	strcpy(context,"clickcall");

	printf("\nproxyip : (%s)",serverip);

	sprintf(sqlcmd, "select phoneid,070number,forbiden_call,fromtime,totime from number_manage where phoneid = '0%7.7s' and defaultip = '%s'",phoneid+1,serverip);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
		strcpy(phoneid, row[0]?row[0]:"0");
printf("\nphoneid:(%s)",phoneid);
		ps_delSpace(phoneid);
		if(strlen(inner_num) != 4)
			strcpy(inner_num,phoneid+4);

		if(strlen(callerid) < 11)
			strcpy(callerid, row[1]?row[1]:"07000000000");
		
		ps_delSpace(callerid);
		strcpy(forbiden_call, row[2]?row[2]:"YYYYYYYY");
		ps_delSpace(forbiden_call);
		strcpy(fromtime, row[3]?row[3]:"YYYYYYYY");
		ps_delSpace(fromtime);
		strcpy(totime, row[4]?row[4]:"YYYYYYYY");
		ps_delSpace(totime);
	}

	mysql_free_result(result);
	result = NULL;

/***
	if(strcmp(phoneid+4,inner_num) && strlen(inner_num) == 4)
		strcpy(phoneid+4, inner_num);
*/
	if(strlen(dest) == 3 || strlen(dest) == 4 || strlen(dest) == 8) {
		outboundcall = 0;
		//sprintf(target,"%3.3s%s",phoneid+1,dest);
		sprintf(target,"%s",dest);
	}
	else {
		outboundcall = 1;
		sprintf(target,"%s",dest);
		if(strlen(target) < 9) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			return -1;
		}
	}

	if(outboundcall) {
                sprintf(sqlcmd, "select forbid_prefix from number_list where number = '%s'",callerid);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
		else {
			row_num = mysql_num_rows(result);
			if( row_num != 0 ) {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(forbid_prefix, row[0]?row[0]:"0");
					ps_delSpace(forbid_prefix);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}


		if(*forbid_prefix) {
			tmpP = (char *)strtok(forbid_prefix,",");
			if(!strncmp(tmpP,target,strlen(tmpP))) {
				match = 1;
			}
			if(match != 1) {
				while(tmpP = (char *)strtok(NULL,",")) {
					if(!strncmp(tmpP,target,strlen(tmpP))) {
						match = 1;
						break;
					}
				}
			}
		}

		if(match == 1) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			return -1;
		}
/*****
	strcpy(phoneid, row[0]?row[0]:"0");
	ps_delSpace(phoneid);
	if(strlen(callerid) < 11)
	strcpy(callerid, row[1]?row[1]:"07000000000");
	ps_delSpace(callerid);
	strcpy(forbiden_call, row[2]?row[2]:"YYYYYYYY");
	ps_delSpace(forbiden_call);
	strcpy(fromtime, row[3]?row[3]:"YYYYYYYY");
	ps_delSpace(fromtime);
	strcpy(totime, row[4]?row[4]:"YYYYYYYY");
	ps_delSpace(totime);
*/


               sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime,option3 from number_manage where phoneid= '0%7.7s' and domain = '%s'",phoneid + 1,domain);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                       exit(0);
                }


                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(phoneid, row[0]?row[0]:"0");
				ps_delSpace(phoneid);
				strcpy(forbiden_call, row[1]?row[1]:"0");
				ps_delSpace(forbiden_call);
				strcpy(fromtime, row[2]?row[2]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[3]?row[3]:"0");
				ps_delSpace(totime);
				strcpy(option3, row[4]?row[4]:"0");
				ps_delSpace(option3);
			}
			mysql_free_result(result);
			result = NULL;
		}


                intfromtime= atoi(fromtime);
                inttotime= atoi(totime);

		if(intfromtime == 0 && inttotime == 0)
			inttotime = 24;

                if(inttotime < intfromtime) {
                        inttotime+=24;
                        if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
                                tp->tm_hour += 24;
		}
printf("\n[7m===>(%s)--->(%s)[0m",phoneid,forbiden_call);

		if(inttotime == 0 && intfromtime==0);
		else {

                if(forbiden_call[0] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			return -1;
		}
                else if(forbiden_call[2] == 'N' && tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(target,"010",3) || !strncmp(target,"011",3) || !strncmp(target,"017",3) || !strncmp(target,"018",3) || !strncmp(target,"016",3) || !strncmp(target,"019",3)) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			return -1;
			}
                }
                else if(forbiden_call[3] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(target,"001",3) || !strncmp(target,"002",3)  || !strncmp(target,"006",3) || !strncmp(target,"00700",5) || !strncmp(target,"00777",5) || !strncmp(target,"005",3)  || !strncmp(target,"00777",5)) {
				sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
				return -1;
			}
                }
                else if(forbiden_call[1] == 'N' &&  tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(strlen(target) > 4 && (strncmp(target,"070",3) && strncmp(target,"010",3) && strncmp(target,"011",3) && strncmp(target,"017",3) && strncmp(target,"018",3) && strncmp(target,"016",3) && strncmp(target,"019",3) && strncmp(target,"001",3) && strncmp(target,"002",3) && strncmp(target,"006",3) && strncmp(target,"00700",5) && strncmp(target,"00777",5) && strncmp(target,"00777",5) && strncmp(target,"005",3) && strncmp(target,"008",3)))
				sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
				return -1;
			}
		}
	}
printf("\n[7m===>(%s)--->(%s)[0m",phoneid,inner_num);

printf("\ntarget : (%s)",target);
printf("\ntarget : (%s)",target);

printf("\ncallerid:([%s])",callerid);


if(PVS == 0)  {
	   if((ret = clickCall("127.0.0.1",callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,NULL)) < 0) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
	   }
	   else  {
		sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
	   }
	   tcpWrite(masterFd, resPacket, strlen(resPacket));
		

}
else {
	   if((ret = clickCall(serverip,callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,NULL)) < 0) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
	    }
	    else  {
		sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
		}
	mysql_close(mysql_1);
	mysql_1 = NULL;
	    tcpWrite(masterFd, resPacket, strlen(resPacket));
}
return 0;


/***
|CCC|dacom4753@gw.iyouone.com|7320|7321|clickcall|
*/
	sprintf(commandBuf,"|CCC|%s@%s|%s|%s|clickcall|",user,domain,dest,tempinner_num,phoneid);

	printf("\ncommandBuf:(%s)",commandBuf);
	if(PVS == 1 && MASTER == 1) {
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			tcpWrite(masterFd, resPacket, strlen(resPacket));
			logCmd();
			return 0; 
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
			tcpWrite(masterFd, resPacket, strlen(resPacket));
			logCmd();
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
printf("\nserverip:(%s)",serverip);
			//if(*serverip && strlen(serverip) > 10 && (cpid = fork()) == 0) {
			if(*serverip && strlen(serverip) > 10) {
				mysql_free_result(result);
				result = NULL;
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
					tcpWrite(masterFd, resPacket, strlen(resPacket));
				}
			}
			/*** 클릭Call은 두서버 중 1대에서만 수행되면 됨 ***/
			break;
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
	tcpWrite(masterFd, resPacket, strlen(resPacket));
	return 0;
    /*** 응답 결과를 보내지 않음 ***/
}



/************************************************************************************************/
/************************************************************************************************/
int
procPRY()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char	callerid[20];
char	phoneid[10];
char	defaultip[20];
char	passwd[256];
int	ret,row_num,j;

	memset(callerid,0,sizeof(callerid));
	memset(phoneid,0,sizeof(phoneid));
	memset(defaultip,0,sizeof(defaultip));
	memset(passwd,0,sizeof(passwd));

	if(argv[2] && *argv[2]) 
		strcpy(callerid,argv[2]);
	else	
		strcpy(callerid,"07000000000");

		if(!strncmp(callerid,"070",3))
			sprintf(sqlcmd, "select phoneid,defaultip,passwd from number_manage where 070number = '%s'",callerid);
		else
			sprintf(sqlcmd, "select phoneid,defaultip,passwd from number_manage where org_num = '%s'",callerid);
		printf("\nsqlcmd:(%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|%s@%s|",user,domain);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd,resPacket);
				logCmd();
				exit(0);
			}
                }

                result = mysql_store_result( mysql );
                if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|%s@%s|",user,domain);
				return -1;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"00000000");
					ps_delSpace(phoneid);
					strcpy(defaultip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(defaultip);
					strcpy(passwd, row[2]?row[2]:"1111");
					ps_delSpace(passwd);
				}
				mysql_free_result(result);
				result = NULL;
			}
		}
		else {
			sprintf(resPacket, "|ERR|%s@%s|",user,domain);
			return -1;
		}
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
		    if(!strcmp(defaultip,CDR_SERVER_[j].vip)) {
			break;
		    }
		    j++;
		}

		sprintf(resPacket,"|RES|%s|%s|%s|%s|",phoneid,defaultip,CDR_SERVER_[j].active?CDR_SERVER_[j].active:defaultip,passwd);
	return 0;
}

/*************************************************************************
* |ROT|admin@onnet21.com|07075969004|0013833|01
051356838|
*************************************************************************/
int
procROT()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime,match = 0;
char    callerid[60];
char    call_kinds[6];
char    inner_num[10];
char    cid[20];
char    caller_inner_num[10];
char    fphone_id[64];
char    forbid_prefix[128];
char    numbertype[5];
char    extension[32];
char    context[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    etc[30];
char    status[11];
char    org_num[14];
char    imid[64];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128],bill_type[3];
char    tmpBuff[128];
char    forbiden_call[11];
char    price[12],interval[11];
char    allot_pay[21];
char    class[20];
char	*tmpP;
int	fallot_pay,fprice;
int	tottime;
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2],areacode[10];
char	record[10];
char	sms_flag[10];
char	s_serverip[20];
char	r_serverip[20];
int	inbound_flag = 0;


	if(argc < 2) {
		sprintf(resPacket,"|RES|N||||");
		return 0;
	}

       t=time(0);
       tp = (struct tm *) localtime(&t);

	memset(kind,0,sizeof(kind));
	memset(tmp,0,sizeof(tmp));
	memset(forbiden_call,0,sizeof(forbiden_call));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(forbid_prefix,0,sizeof(forbid_prefix));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(etc,0,sizeof(etc));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	memset(numbertype,0,sizeof(numbertype));
	memset(letter_flag,0,sizeof(letter_flag));
	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(resPacket,0,sizeof(resPacket));
        memset(extension,0,sizeof(extension));
        memset(bill_type,0,sizeof(bill_type));
        memset(price,0,sizeof(price));
        memset(allot_pay,0,sizeof(allot_pay));
        memset(interval,0,sizeof(interval));
        memset(status,0,sizeof(status));
        memset(class,0,sizeof(class));
        memset(areacode,0,sizeof(areacode));
        memset(record,0,sizeof(record));
        memset(s_serverip,0,sizeof(s_serverip));
        memset(r_serverip,0,sizeof(r_serverip));
        memset(sms_flag,0,sizeof(sms_flag));
        memset(record_flag,0,sizeof(record_flag));
        memset(sms_flag,0,sizeof(sms_flag));

	if(argv[2] && *argv[2]) 
		strcpy(callerid,argv[2]);
	else	
		strcpy(callerid,"00000000000");

	if(argv[3] && *argv[3]) 
		strcpy(phoneid,argv[3]);
	else	
		strcpy(phoneid,"0000000");
	if(argv[4] && *argv[4]) 
		strcpy(extension,argv[4]);
	else	
		strcpy(extension,"0000000");
	if(argv[5] && *argv[5]) 
		strcpy(ssw_ip,argv[5]);
	else	
		strcpy(ssw_ip,SSW_IP);

	if(!strcmp(callerid,"00000000000") || strncmp(callerid,"070",3)) {
                sprintf(sqlcmd, "select 070number from number_manage where phoneid= '0%7.7s' ",phoneid);

			printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                        if(mysql)
                                mysql_close(mysql);
                        sqlinit();
                        if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
                                exit(0);
                        }
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|N||||");
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|N||||");
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(callerid, row[0]?row[0]:"0");
                        ps_delSpace(callerid);
		}
                mysql_free_result(result);
		result = NULL;
	}

	if(!strcmp(phoneid,"0000000")) {
                sprintf(sqlcmd, "select substr(phoneid,2,7) from number_manage where 070number= '%s'",callerid);
		printf("\nsqlcmd : (%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                        if(mysql)
                                mysql_close(mysql);
                        sqlinit();
                        if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
                                exit(0);
                        }
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|N||||");
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|N||||");
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(phoneid, row[0]?row[0]:"0000000");
                        ps_delSpace(callerid);
		}
                mysql_free_result(result);
		result = NULL;
	}
	printf("\nphoneid:(%s)",phoneid);

        sprintf(sqlcmd, "select forbid_prefix,etc,org_num,status,areacode,serverip from number_list where number = '%s'",callerid);
	printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                        if(mysql)
                                mysql_close(mysql);
                        sqlinit();
                        if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
                                exit(0);
                        }
                }

                result = mysql_store_result( mysql );
                if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,letter_flag,phoneid);
			//	sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
				goto NEXT;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(forbid_prefix, row[0]?row[0]:"0");
					ps_delSpace(forbid_prefix);
					strcpy(etc, (row[1] && strlen(row[1]) > 5)?row[1]:(argv[5]?argv[5]:SSW_IP));
					ps_delSpace(etc);
					strcpy(org_num, row[2]?row[2]:"");
					ps_delSpace(org_num);
					strcpy(status, row[3]?row[3]:"1");
					ps_delSpace(status);
					strcpy(areacode, row[4]?row[4]:"");
					ps_delSpace(areacode);
					strcpy(s_serverip, row[5]?row[5]:"");
					ps_delSpace(s_serverip);
				}
				mysql_free_result(result);
			result = NULL;
			}
                }

                if(*forbid_prefix) {
			printf("\nforbid_prefix:(%s)",forbid_prefix);
			printf("\nextension:(%s)",extension);
                        tmpP = (char *)strtok(forbid_prefix,",");
                        if(!strncmp(tmpP,extension,strlen(tmpP))) {
                                match = 9;
                        }
                        if(match != 1) {
                                while(tmpP = (char *)strtok(NULL,",")) {
                                        if(!strncmp(tmpP,extension,strlen(tmpP))) {
                                                match = 9;
                                                break;
                                        }
                                }
                        }
                }
/****
	if(org_num[0]=='\0')
		strcpy(areacode,"");
*****/

	printf("\nmatch : (%d)",match);
NEXT:
	if(match == 0) {
                //sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime,option5,option6,option7,bill_type,cid,class,option1,record,sms_flag,record_flag,crm_flag from number_manage where phoneid= '0%7.7s' and domain='%s'",phoneid,domain);
                sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime,option5,option6,option7,bill_type,cid,class,option1,record, letter_flag,sms_flag,record_flag,crm_flag from number_manage where 070number = '%s'",callerid);


		printf("\n SQLCMD :(%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,letter_flag,phoneid);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,letter_flag,phoneid);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,letter_flag,phoneid);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(phoneid, row[0]?row[0]:"0");
                        ps_delSpace(phoneid);
                        strcpy(forbiden_call, row[1]?row[1]:"0");
                        ps_delSpace(forbiden_call);
                        strcpy(fromtime, row[2]?row[2]:"0");
                        ps_delSpace(fromtime);
                        strcpy(totime, row[3]?row[3]:"0");
                        ps_delSpace(totime);
                        strcpy(option5, row[4]?row[4]:"N");
                        ps_delSpace(option5);
                        strcpy(option6, row[5]?row[5]:"0");
                        ps_delSpace(option6);
                        strcpy(option7, row[6]?row[6]:"N");
                        ps_delSpace(option7);
                        strcpy(bill_type, row[7]?row[7]:"0");
                        ps_delSpace(bill_type);
                        strcpy(cid, row[8]?row[8]:"");
                        ps_delSpace(cid);
                        strcpy(class, row[9]?row[9]:"");
                        ps_delSpace(class);
                        strcpy(option1, row[10]?row[10]:"");
                        ps_delSpace(option1);
                        strcpy(record, row[11]?row[11]:"");
                        ps_delSpace(record);
                        strcpy(letter_flag, row[12]?row[12]:"0");
                        ps_delSpace(letter_flag);
                        strcpy(sms_flag, row[13]?row[13]:"N");
                        ps_delSpace(sms_flag);
                        strcpy(record_flag, row[14]?row[14]:"");
                        ps_delSpace(record_flag);
                        strcpy(crm_flag, row[15]?row[15]:"");
                        ps_delSpace(crm_flag);
                }
                mysql_free_result(result);
		result = NULL;

                intfromtime= atoi(fromtime);
                inttotime= atoi(totime);

		if(intfromtime < 0)
			intfromtime = 0;
		if(inttotime < 0)
			inttotime = 0;

		if(intfromtime == 0 && inttotime == 0)
			inttotime = 24;

                if(inttotime < intfromtime) {
                        inttotime+=24;
                        if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
                                tp->tm_hour += 24;
                }


printf("\n[7m[5m (%s)-(%s),forbiden_call:(%s),extension:(%s)[0m[0m",fromtime,totime,forbiden_call,extension);

                if(forbiden_call[0] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)
                        match=1;
                if(match == 0 && forbiden_call[2] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(extension,"010",3) || !strncmp(extension,"011",3) || !strncmp(extension,"017",3) || !strncmp(extension,"018",3) || !strncmp(extension,"016",3) || !strncmp(extension,"019",3))
                                match =3;
                }
                if(match == 0 && forbiden_call[3] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(extension,"001",3) || !strncmp(extension,"002",3)  || !strncmp(extension,"006",3) || !strncmp(extension,"00700",5) || !strncmp(extension,"005",3) || !strncmp(extension,"008",3) || !strncmp(extension,"00777",5))
                                match =4;
                }
                if(match == 0 && forbiden_call[1] == 'N' &&  tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(strlen(extension) > 4 && (strncmp(extension,"070",3) && strncmp(extension,"010",3) && strncmp(extension,"011",3) && strncmp(extension,"017",3) && strncmp(extension,"018",3) && strncmp(extension,"016",3) && strncmp(extension,"019",3) && strncmp(extension,"001",3) && strncmp(extension,"002",3)  && strncmp(extension,"006",3) && strncmp(extension,"00700",5) && strncmp(extension,"005",3) && strncmp(extension,"008",3) && strncmp(extension,"00777",5)))

                                match =2;
                }
	}

	if(strlen(cid) < 4 ) {
		strcpy(cid,"");
		strcpy(option5,"N");
	}
	if(!strcasecmp(cid,"anonymous"))
		strcpy(cid,"00000000000");

/**
+----------+-----------+------+
| phoneid  | allot_pay | etc  |
+----------+-----------+------+
| 00043833 |    100000 | NULL |
+----------+-----------+------+
**/
	printf("\nmatch : (%d)",match);

/***
	if(!strcmp(bill_type,"01")) {
		if(!strncmp(extension,"010",3) || !strncmp(extension,"011",3) || !strncmp(extension,"017",3) || !strncmp(extension,"018",3) || !strncmp(extension,"016",3) || !strncmp(extension,"019",3))
			sprintf(sqlcmd, "select price,time_int from price_list where code = '02'");
		else if(!strncmp(extension,"001",3) || !strncmp(extension,"002",3) || !strncmp(extension,"006",3) || !strncmp(extension,"00700",5) || !strncmp(extension,"005",3) || !strncmp(extension,"008",3) || !strncmp(target,"00777",5))
			sprintf(sqlcmd, "select price,time_int from price_list where code = '03'");

		else if(strlen(extension) > 4 && (strncmp(extension,"070",3) && strncmp(extension,"010",3) && strncmp(extension,"011",3) && strncmp(extension,"017",3) && strncmp(extension,"018",3) && strncmp(extension,"016",3) && strncmp(extension,"019",3) && strncmp(extension,"001",3) && strncmp(extension,"002",3)  && strncmp(extension,"006",3) && strncmp(extension,"00700",5) &&strncmp(extension,"005",3) && strncmp(extension,"008",3) && strncmp(target,"00777",5)))

			sprintf(sqlcmd, "select price,time_int from price_list where code = '01'");
		

		printf("\nsql:([5m%s[0m)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(result ) {

			row_num = mysql_num_rows(result);

			row = mysql_fetch_row( result );
			if( row) {
				strcpy(price, row[0]?row[0]:"0");
				ps_delSpace(price);
				strcpy(interval, row[1]?row[1]:"0");
				ps_delSpace(interval);
			}
			mysql_free_result(result);
			result = NULL;
		}
		sprintf(sqlcmd, "select allot_pay from pre_pay where phoneid= '0%7.7s'",phoneid+1);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

		printf("\nsql:([5m%s[0m)",sqlcmd);


                result = mysql_store_result( mysql );
                if(result ) {

                        row_num = mysql_num_rows(result);

                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(allot_pay, row[0]?row[0]:"0");
                                ps_delSpace(allot_pay);
                        }
                        mysql_free_result(result);
                        result = NULL;
                }

		printf("\nsql:([5m%s[0m)",allot_pay);
		printf("\nsql:([5m%s[0m)",price);
		printf("\nsql:([5m%s[0m)",interval);
		fallot_pay=atoi(allot_pay);
		fprice=atoi(price);
		
		tottime=(int) fallot_pay/fprice +1;
		//tottime=(int) (atof(allot_pay))+1;
		//tottime=(int) (atof(price));
		tottime *= atoi(interval);
		printf("\nsql:([5m%d[0m)",tottime);
	}
*******/


	if(*option5 == 'N' && *org_num != '\0' && strlen(org_num) > 7) {
		strcpy(option5,"Y");
		strcpy(cid,org_num);
	}
	if(strlen(cid) > 4) {
		strcpy(option5,"Y");
	}

/*******
        row_num = 0;
        if(!strncmp(extension,"070",3)) {
                sprintf(sqlcmd, "select serverip from number_list where number = '%s'",extension);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }
                else {
                        result = mysql_store_result( mysql );
                        if(result) {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(r_serverip, row[0]?row[0]:"");
					ps_delSpace(r_serverip);
				}
                                mysql_free_result(result);
                                result = NULL;
                        }
                }

        }


	if(strlen(s_serverip) > 5 && strlen(r_serverip) > 5) {

		if(!strcmp(s_serverip,r_serverip)) {
			//sprintf(resPacket,"|RES|inbound|inbound|inbound|inbound|");
			inbound_flag = 1;
		}
		else
			strcpy(etc,r_serverip);
	}
*******/

        row_num = 0;
	if(strlen(extension) > 4) {
		if(*extension == '0')
			sprintf(sqlcmd, "select forbid_prefix from number_list where number = '%s' or org_num='%s'",extension,extension);
		else 
			sprintf(sqlcmd, "select forbid_prefix from number_list where org_num='%s%s'",areacode,extension);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		else {
			result = mysql_store_result( mysql );
			if(result) {
				row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
			}
		}
	}



	if(match > 0) {
		if(row_num)
			sprintf(resPacket,"|RES|Y|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|OWNER|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,record,letter_flag,phoneid,inbound_flag?"Y":"N",sms_flag,record_flag,crm_flag);
		else
			sprintf(resPacket,"|RES|Y|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|0|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,record,letter_flag,phoneid,inbound_flag?"Y":"N",sms_flag,record_flag,crm_flag);
	}
	else {
		if(row_num)
			sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|extension|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,record,letter_flag,phoneid,inbound_flag?"Y":"N",sms_flag,record_flag,crm_flag);
		else
			sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|0|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,record,letter_flag,phoneid,inbound_flag?"Y":"N",sms_flag,record_flag,crm_flag);
	}


	printf("\nresPacket : (%s)",resPacket);

        return 0;
}

/*************************************************************************
* 
*************************************************************************/
int
procNUM()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1,flag=0;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime;
char    extension[60];
char    call_kinds[6];
char    inner_num[10];
char    notify_num[10];
char    caller_inner_num[10];
char    fphone_id[64];
char    numbertype[5];
char    context[60];
char    callerid[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    cid[30];
char    tel[21];
char    org_num[21];
char    status[11];
char    bill_type[10];
char    imid[64];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128];
char    tmpBuff[128];
char    class[20];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	timeout[10];
char	ment_flag[5];
char	record[5];
char	name[64];
char	etc[64];
char	manner_flag[5];
char	sms_flag[10];
char	frommin[5],tomin[5];
char	tmpcrm[128];
char	serverip[20];
int forward_check = 0;
char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];


	if(argc < 2)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));


	if(argv[2] && *argv[2]) 
		strcpy(extension,argv[2]);
	else	
		strcpy(extension,"00000000000");

	if(argv[3] && *argv[3]) 
		strcpy(ssw_ip,argv[3]);
	else	
		strcpy(ssw_ip,SSW_IP);

	if(argv[4] && strlen(argv[4]) > 5) 
		strcpy(callerid,argv[4]);
	else	
		strcpy(callerid,"");

	t=time(0);
	tp = (struct tm *) localtime(&t);

	memset(timeout,0,sizeof(timeout));
	memset(notify_num,0,sizeof(notify_num));
	memset(phoneid,0,sizeof(phoneid));
	memset(kind,0,sizeof(kind));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	memset(numbertype,0,sizeof(numbertype));
	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(tmp,0,sizeof(tmp));
        memset(resPacket,0,sizeof(resPacket));
        memset(bill_type,0,sizeof(bill_type));
        memset(class,0,sizeof(class));
        memset(status,0,sizeof(status));
        memset(serverip,0,sizeof(serverip));
        memset(org_num,0,sizeof(org_num));
        memset(record,0,sizeof(record));
        memset(name,0,sizeof(name));
        memset(etc,0,sizeof(etc));
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(serverip,0,sizeof(serverip)); 

	sprintf(sqlcmd, "select status,etc,type,arsflag,org_num, serverip from number_list where number='%s'",extension);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(result ) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 )
			strcpy(serverip,"NOT");
		else {
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(status, row[0]?row[0]:"1");
				ps_delSpace(status);
				strcpy(ssw_ip, (row[1] && strlen(row[1]) > 5)?row[1]:(argv[3]?argv[3]:SSW_IP));
				ps_delSpace(ssw_ip);
				strcpy(numbertype, row[2]?row[2]:"1");
				ps_delSpace(numbertype);
				strcpy(option7, row[3]?row[3]:"N");
				ps_delSpace(option7);
				strcpy(org_num, row[4]?row[4]:"");
				ps_delSpace(org_num);
				strcpy(serverip, row[5]?row[5]:"");
				ps_delSpace(serverip);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else 
		strcpy(serverip,"NOT");


	sprintf(resPacket,"|RES|%s|%s|%s|",ssw_ip,serverip,org_num);

	printf("\nresult Packet : (%s)",resPacket);
	return 0;

}



/*************************************************************************
* 
*************************************************************************/
int
procRIN()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1,flag=0;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime;
char    extension[60];
char    call_kinds[6];
char    inner_num[10];
char    notify_num[10];
char    caller_inner_num[10];
char    fphone_id[64];
char    numbertype[5];
char    context[60];
char    callerid[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    option8[10];
char    cid[30];
char    tel[21];
char    org_num[21];
char    status[11];
char    bill_type[10];
char    imid[64];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128];
char    tmpBuff[128];
char    class[20];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	timeout[10];
char	ment_flag[5];
char	record[5];
char	name[64];
char	etc[64];
char	manner_flag[5];
char	sms_flag[10];
char	frommin[5],tomin[5];
char	tmpcrm[128];
char	ring_flag[10];
int forward_check = 0;
char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];


	if(argc < 2)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));


	if(argv[2] && *argv[2]) 
		strcpy(extension,argv[2]);
	else	
		strcpy(extension,"00000000000");

	if(argv[3] && *argv[3]) 
		strcpy(ssw_ip,argv[3]);
	else	
		strcpy(ssw_ip,SSW_IP);

	if(argv[4] && strlen(argv[4]) > 5) 
		strcpy(callerid,argv[4]);
	else	
		strcpy(callerid,"");

	t=time(0);
	tp = (struct tm *) localtime(&t);

	memset(timeout,0,sizeof(timeout));
	memset(notify_num,0,sizeof(notify_num));
	memset(phoneid,0,sizeof(phoneid));
	memset(kind,0,sizeof(kind));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(option8,0,sizeof(option8));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	memset(numbertype,0,sizeof(numbertype));
	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(tmp,0,sizeof(tmp));
        memset(resPacket,0,sizeof(resPacket));
        memset(bill_type,0,sizeof(bill_type));
        memset(class,0,sizeof(class));
        memset(status,0,sizeof(status));
        memset(serverip,0,sizeof(serverip));
        memset(org_num,0,sizeof(org_num));
        memset(record,0,sizeof(record));
        memset(name,0,sizeof(name));
        memset(etc,0,sizeof(etc));
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(ring_flag,0,sizeof(ring_flag)); 

	sprintf(sqlcmd, "select status,etc,type,arsflag,org_num from number_list where number='%s'",extension);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(result ) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 );
		else {
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(status, row[0]?row[0]:"1");
				ps_delSpace(status);
				strcpy(ssw_ip, (row[1] && strlen(row[1]) > 5)?row[1]:(argv[3]?argv[3]:SSW_IP));
				ps_delSpace(ssw_ip);
				strcpy(numbertype, row[2]?row[2]:"1");
				ps_delSpace(numbertype);
				strcpy(option7, row[3]?row[3]:"N");
				ps_delSpace(option7);
				strcpy(org_num, row[4]?row[4]:"");
				ps_delSpace(org_num);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
        if(*status == '9' || *status == '8')
                goto NUMBER_CHANGE;

printf("\nSSW_IP:(%s)",ssw_ip);
printf("\nSSW_IP:(%s)",ssw_ip);


	sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,numbertype,option5,option6,option7,messenger_ip,tel,bill_type,class,cid,defaultip,timeout,ment_flag,record,manner_flag,sms_flag,record_flag,crm_flag,ring_flag,option8 from number_manage where 070number = '%s'",extension);

		printf("\nsqlcmd : (%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|조회 오류(%s)",sqlcmd);
			return -1;
                }

                result = mysql_store_result( mysql );
                if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",extension );
				return -1;
			}
			else  {
				flag = row_num;
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"00000000");
					ps_delSpace(phoneid);
					strcpy(option1, row[1]?row[1]:"N");
					ps_delSpace(option1);
					strcpy(option2, row[2]?row[2]:"N");
					ps_delSpace(option2);
					strcpy(option3, row[3]?row[3]:"0");
					ps_delSpace(option3);
					strcpy(inner_num, row[4]?row[4]:"0");
					ps_delSpace(inner_num);
					strcpy(imid, row[5]?row[5]:"---");
					ps_delSpace(imid);
					strcpy(domain, row[6]?row[6]:"---");
					ps_delSpace(domain);
					strcpy(option4, row[7]?row[7]:"N");
					ps_delSpace(option4);
					//strcpy(numbertype, row[8]?row[8]:"1");
					//ps_delSpace(numbertype);

					strcpy(option5, row[9]?row[9]:"N");
					ps_delSpace(option5);
					strcpy(option6, row[10]?row[10]:"0");
					ps_delSpace(option6);
/****
					strcpy(option7, row[11]?row[11]:"N");
					ps_delSpace(option7);
*/

					sprintf(prefix,"%3.3s",phoneid+1);
					strcpy(messenger_ip, row[12]?row[12]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					strcpy(tel, row[13]?row[13]:"");
					ps_delSpace(tel);
					strcpy(bill_type, row[14]?row[14]:"N");
					ps_delSpace(bill_type);
					strcpy(class, row[15]?row[15]:"");
					ps_delSpace(class);
					strcpy(cid, row[16]?row[16]:"");
					ps_delSpace(cid);
					strcpy(serverip, row[17]?row[17]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(timeout, row[18]?row[18]:"20");
					ps_delSpace(timeout);
					strcpy(ment_flag, row[19]?row[19]:"Y");
					ps_delSpace(ment_flag);
					strcpy(record, row[20]?row[20]:"");
					ps_delSpace(record);
					strcpy(manner_flag, row[21]?row[21]:"");
					ps_delSpace(manner_flag);
					strcpy(sms_flag, row[22]?row[22]:"N");
					ps_delSpace(sms_flag);
					strcpy(record_flag, row[23]?row[23]:"");
					ps_delSpace(record_flag);
					strcpy(crm_flag, row[24]?row[24]:"");
					ps_delSpace(crm_flag);
					strcpy(ring_flag, row[25]?row[25]:"0");
					ps_delSpace(ring_flag);
					strcpy(option8, row[26]?row[26]:"0");
					ps_delSpace(option8);
				}
			}
			mysql_free_result(result);
			result = NULL;
        }


	if(*option1 == 'F') {
		sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				strcpy(option1,"N");
				mysql_free_result(result);
				result = NULL;
			}	
			else {

			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					strcpy(tmp, row[1]?row[1]:"00000000000");
					ps_delSpace(tmp);

					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(frommin, row[7]?row[7]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[8]?row[8]:"0");
					ps_delSpace(tomin);

					mysql_free_result(result);
					result = NULL;

					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

					if(inttotime == 0 && intfromtime==0)
						inttotime = 24;

					if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin) )) {
						inttotime += 24;
						if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
							tp->tm_hour += 24;
					}

printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
                                        if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
                                                if(atoi(frommin) <= tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(tomin) > tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                                                forward_check = 1;
                                        }

				}

				    if(forward_check == 1) {
				    if(strlen(tmp) == 4) {
					sprintf(fphone_id,"%3.3s%4.4s",prefix,tmp);
					printf("\nfphone_id:(%s)",fphone_id);
					printf("\nfphone_id:(%s)",fphone_id);
					if(strcmp(phoneid+1,fphone_id)) {
					    sprintf(notify_num,"1%3.3s%4.4s",prefix,tmp);
					
					if(*forwardnumber) {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,prefix,tmp);
					}
					else {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,tmp,prefix,tmp);
						
					}
					}
				    }
				    else if(strlen(tmp) == 8) {
					sprintf(fphone_id,"%s",tmp);
					if(strcmp(phoneid,tmp)) {
					    sprintf(notify_num,"%s",fphone_id);
					if(*forwardnumber) {
printf("\n1111111111111111111:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"&SIP/1%s&SIP/2%s",fphone_id+1,fphone_id+1);
				
					}
					else {
printf("\n2222222222222222222:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"SIP/1%s&SIP/1%s",fphone_id+1,fphone_id+1);
					}
					}

				    }
				    else if(strlen(tmp) > 4) {
					if(strcmp(phoneid,tmp)) {
						row_num=0;
						if(!strncmp(tmp,"070",3)) {
							sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								;
							}
							else {
								result = mysql_store_result( mysql );
								if(result) {
									row_num = mysql_num_rows(result);
								mysql_free_result(result);
								result = NULL;
								}
							}
						}
						else {
							sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
							if( ret = mysql_query(mysql, sqlcmd) ) {
								;
							}
							else {
								result = mysql_store_result( mysql );
								if(result) {
									row_num = mysql_num_rows(result);
								mysql_free_result(result);
								result = NULL;
								}
							}
						}



						if(row_num == 0) {
							if(*forwardnumber)
							    sprintf(forwardnumber,"&SIP/%s@%s",tmp,ssw_ip);
							else
							    sprintf(forwardnumber,"SIP/%s@%s",tmp,ssw_ip);
						}

					printf("\nforwardnumber:(%s)",forwardnumber);
					}
				   }
				}
			    }
			else {
					mysql_free_result(result);
					result = NULL;
			}
			
			}
			}
		}

		/*** notify ***/
		if(forward_check == 1 && *notify_num && *kind == '3') {
			sprintf(sqlcmd, "select bill_type,record,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid='0%7.7s' and defaultip = '%s'",notify_num+1,serverip);

			printf("\n(((%s))))",sqlcmd);

			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}
				else {
					row = mysql_fetch_row( result );
					if( row) {
				/**bill_type_1[10],record_1{5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];*/
						strcpy(bill_type_1,row[0]?row[0]:"");
						ps_delSpace(bill_type_1);
						strcpy(num070_1,row[1]?row[1]:"");
						ps_delSpace(num070_1);
						strcpy(crm_flag_1,row[2]?row[2]:"");
						ps_delSpace(crm_flag_1);
						strcpy(messenger_ip_1,row[3]?row[3]:"");
						ps_delSpace(messenger_ip_1);
						strcpy(org_num_1,row[4]?row[4]:"");
						ps_delSpace(org_num_1);
					}
				}
				mysql_free_result(result);
				result = NULL;
			}
			if(*bill_type_1 == 'Y') {
				strcpy(option1,"");
				strcpy(forwardnumber,"");
				strcpy(kind,"");
			}
			else if(*bill_type_1 != 'Y' && strlen(messenger_ip_1) > 10 && strcmp(messenger_ip_1,"127.0.0.1") &&  (*crm_flag_1 == 'A' || *crm_flag_1 == 'B' || *crm_flag_1 == 'C')) {
				sprintf(tmpcrm,"%s^%s^%s^%s^%s",num070_1,domain,notify_num+4,callerid,org_num_1);
				commandSendUc(tmpcrm,"NOT",messenger_ip_1,0);
			}
		}
		
	} /* end of forward number process */


	if(*option1 == 'F') {
		if(strlen(forwardnumber) < 5 && strlen(fphone_id) < 4)
			strcpy(option1,"");
	}
	if(*option1 == 'V') {
		sprintf(sqlcmd, "select uniqueid from voicemail_users where mailbox = '%3.3s%4.4s' and domain='%s'",prefix,phoneid+4,domain);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			strcpy(option1,"");
		}else{
//VMS option 추가 20130412
			strcpy(kind,option8);
		}
		if(result) 
			mysql_free_result(result);
	}
/***
	if( flag > 1 ) 
		strcpy(numbertype,"0");
	else
		strcpy(numbertype,"1");
*/

printf("\n[5m(%s)-numbertype:(%s)]0m",phoneid,numbertype);
	row_num = 0;
	if(strlen(tel) < 8 || !isdigitstr(tel))
		strcpy(tel,"");
	else  {
		if(!strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(tel,"");
	}


	/*주소록 조회 */
	/****
	if(strlen(messenger_ip) > 10 && *numbertype == '1') {
		sprintf(sqlcmd, "select name,etc from address_member where phone1 = '%s' or phone2 = '%s' or phone3 = '%s'",callerid,callerid,callerid);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		{
				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
				}   
						
				else {
						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							sprintf(resPacket, "|ERR|(%s) custom_info is not",domain);
						}

						else {
								row = mysql_fetch_row( result );
								if(row) {
									strcpy(name, row[0]?row[0]:"");
									ps_delSpace(name);
									strcpy(etc, row[1]?row[1]:"");
									ps_delSpace(etc);
								}
						}
						mysql_free_result(result);
						result = NULL;
				}
		}

	}
	*/
NUMBER_CHANGE:
	if(*status == '9' || *status == '8') {
		sprintf(sqlcmd, "select dst from number_change where src = '%s'",extension);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(tmp, row[0]?row[0]:"0000");
			ps_delSpace(tmp);
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(forwardnumber,"SIP/%s@%s",tmp,ssw_ip);
		strcpy(tel,tmp);
	}


	if(strlen(phoneid) == 8)
		sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",phoneid+1,option1,option2,option3,option4,kind,forwardnumber,fphone_id,messenger_ip,imid,domain,inner_num,numbertype,option5,option6,option7,tmp,tel,bill_type,class,status,cid,ssw_ip,timeout,ment_flag,org_num,record,callerid,name,etc,manner_flag,sms_flag,record_flag,crm_flag, ring_flag);
	else
		sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",phoneid,option1,option2,option3,option4,kind,forwardnumber,fphone_id,messenger_ip,imid,domain,inner_num,numbertype,option5,option6,option7,tmp,tel,bill_type,class,status,cid,ssw_ip,timeout,ment_flag,org_num,record,callerid,name,etc,manner_flag,sms_flag,record_flag,crm_flag, ring_flag);
	//RCV:sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",phoneid+1,option1,option2,option3,option4,option5,option6,kind,forwardnumber,fphone_id,messenger_ip,imid,domain,inner_num,cid,option7);

	printf("\nresult Packet : (%s)",resPacket);
	return 0;

}


/*************************************************************************
|INF|admin@onnet21.com|07075969004|0013833|01
051356838|
*************************************************************************/
int
procINF()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime,match = 0;
char    callerid[60];
char    call_kinds[6];
char    inner_num[10];
char    cid[20];
char    caller_inner_num[10];
char    fphone_id[64];
char    forbid_prefix[128];
char    numbertype[5];
char    extension[32];
char    context[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    etc[30];
char    status[11];
char    org_num[14];
char    imid[64];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128],bill_type[3];
char    tmpBuff[128];
char    forbiden_call[11];
char    price[12],interval[11];
char    allot_pay[21];
char    class[20];
char	*tmpP;
int	fallot_pay,fprice;
int	tottime;
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char    areacode[11];

       t=time(0);
       tp = (struct tm *) localtime(&t);

	memset(kind,0,sizeof(kind));
	memset(forbiden_call,0,sizeof(forbiden_call));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(forbid_prefix,0,sizeof(forbid_prefix));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(etc,0,sizeof(etc));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	memset(bill_type,0,sizeof(bill_type));
	memset(numbertype,0,sizeof(numbertype));
	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(resPacket,0,sizeof(resPacket));
        memset(extension,0,sizeof(extension));
        memset(bill_type,0,sizeof(bill_type));
        memset(price,0,sizeof(price));
        memset(allot_pay,0,sizeof(allot_pay));
        memset(interval,0,sizeof(interval));
        memset(status,0,sizeof(status));
        memset(class,0,sizeof(class));
        memset(areacode,0,sizeof(areacode));

	if(argc < 2) {
		sprintf(resPacket,"|RES|N||||");
		return 0;
	}

	if(argv[2] && *argv[2]) 
		strcpy(callerid,argv[2]);
	else	
		strcpy(callerid,"00000000000");

	if(argv[3] && *argv[3] && strlen(argv[3]) == 7) 
		strcpy(phoneid,argv[3]);
	else if(argv[3] && *argv[3] && strlen(argv[3]) == 8) 
		strcpy(phoneid,argv[3]+1);
	else	
		strcpy(phoneid,"0000000");

	if(argv[4] && *argv[4]) 
		strcpy(extension,argv[4]);
	else	
		strcpy(extension,"0000000");

	if(!strcmp(callerid,"00000000000")) {
                sprintf(sqlcmd, "select number,bill_type from number_manage where phoneid= '0%7.7s' and domain='%s'",phoneid,domain);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd,resPacket);
				logCmd();
				exit(0);
			}
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(callerid, row[0]?row[0]:"0");
                        ps_delSpace(callerid);
                        strcpy(bill_type, row[1]?row[1]:"N");
                        ps_delSpace(bill_type);
		}
                mysql_free_result(result);
		result = NULL;
	}

        sprintf(sqlcmd, "select forbid_prefix,etc,org_num,status,areacode from number_list where number = '%s'",callerid
);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }

                result = mysql_store_result( mysql );
                if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);


			//	sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
				return 0;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(forbid_prefix, row[0]?row[0]:"0");
					ps_delSpace(forbid_prefix);
					strcpy(etc, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(etc);
					strcpy(org_num, row[2]?row[2]:"");
					ps_delSpace(org_num);
					strcpy(status, row[3]?row[3]:"1");
					ps_delSpace(status);
                                        strcpy(areacode, row[4]?row[4]:"");
                                        ps_delSpace(areacode);

				}
				mysql_free_result(result);
			result = NULL;
			}
                }

                if(*forbid_prefix) {
                        tmpP = (char *)strtok(forbid_prefix,",");
                        if(!strncmp(tmpP,extension,strlen(tmpP))) {
                                match = 9;
                        }
                        if(match != 1) {
                                while(tmpP = (char *)strtok(NULL,",")) {
                                        if(!strncmp(tmpP,extension,strlen(tmpP))) {
                                                match = 9;
                                                break;
                                        }
                                }
                        }
                }


	if(match == 0) {
                sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime,option5,option6,option7,bill_type,cid,class,option1,option2,option3,option4,bill_type from number_manage where phoneid= '0%7.7s' and domain='%s'",phoneid,domain);


		printf("\n SQLCMD :(%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
                        sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
			//sprintf(resPacket,"|RES|N||||||||||||||%s|",callerid);
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(phoneid, row[0]?row[0]:"0");
                        ps_delSpace(phoneid);
                        strcpy(forbiden_call, row[1]?row[1]:"0");
                        ps_delSpace(forbiden_call);
                        strcpy(fromtime, row[2]?row[2]:"0");
                        ps_delSpace(fromtime);
                        strcpy(totime, row[3]?row[3]:"0");
                        ps_delSpace(totime);
                        strcpy(option5, row[4]?row[4]:"N");
                        ps_delSpace(option5);
                        strcpy(option6, row[5]?row[5]:"0");
                        ps_delSpace(option6);
                        strcpy(option7, row[6]?row[6]:"N");
                        ps_delSpace(option7);
                        strcpy(bill_type, row[7]?row[7]:"0");
                        ps_delSpace(bill_type);
                        strcpy(cid, row[8]?row[8]:"");
                        ps_delSpace(cid);
                        strcpy(class, row[9]?row[9]:"");
                        ps_delSpace(class);

			strcpy(option1, row[10]?row[10]:"N");
			ps_delSpace(option1);
			strcpy(option2, row[11]?row[11]:"N");
			ps_delSpace(option2);
			strcpy(option3, row[12]?row[12]:"0");
			ps_delSpace(option3);
			strcpy(option4, row[13]?row[13]:"N");
			ps_delSpace(option4);
			strcpy(bill_type, row[14]?row[14]:"N");
			ps_delSpace(bill_type);


printf("\nbill_type : (%s)",bill_type);
printf("\nbill_type : (%s)",bill_type);
printf("\nbill_type : (%s)",bill_type);
printf("\nbill_type : (%s)",bill_type);

                }
                mysql_free_result(result);
		result = NULL;

                intfromtime= atoi(fromtime);
                inttotime= atoi(totime);

		if(inttotime == 0 && intfromtime==0)
			inttotime = 24;

                if(inttotime < intfromtime) {
                        inttotime+=24;
                        if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
                                tp->tm_hour += 24;
                }

                if(forbiden_call[0] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime)
                        match=1;
                else if(forbiden_call[2] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(extension,"010",3) || !strncmp(extension,"011",3) || !strncmp(extension,"017",3) || !strncmp(extension,"018",3) || !strncmp(extension,"016",3) || !strncmp(extension,"019",3))
                                match =3;
                }
                else if(forbiden_call[3] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(extension,"001",3) || !strncmp(extension,"002",3) || !strncmp(extension,"006",3) || !strncmp(extension,"00700",5) || !strncmp(extension,"00777",5) || !strncmp(extension,"005",3) || !strncmp(extension,"008",3))
                                match =4;
                }
                else if(forbiden_call[1] == 'N' &&  tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(strlen(extension) > 4 && (strncmp(extension,"070",3) && strncmp(extension,"010",3) && strncmp(extension,"011",3) && strncmp(extension,"017",3) && strncmp(extension,"018",3) && strncmp(extension,"016",3) && strncmp(extension,"019",3) && strncmp(extension,"001",3) && strncmp(extension,"002",3)  && strncmp(extension,"006",3) && strncmp(extension,"00700",5) && strncmp(extension,"00777",5) && strncmp(extension,"005",3) && strncmp(extension,"008",3)))
                                match =2;
                }
	}

	if(strlen(cid) < 4 ) {
		strcpy(cid,"");
		strcpy(option5,"N");
	}
	if(!strcasecmp(cid,"anonymous"))
		strcpy(cid,"00000000000");

/**
+----------+-----------+------+
| phoneid  | allot_pay | etc  |
+----------+-----------+------+
| 00043833 |    100000 | NULL |
+----------+-----------+------+
**/
	printf("\nbill_type : (%s)",bill_type);

	if(!strcmp(bill_type,"01")) {
		if(!strncmp(extension,"010",3) || !strncmp(extension,"011",3) || !strncmp(extension,"017",3) || !strncmp(extension,"018",3) || !strncmp(extension,"016",3) || !strncmp(extension,"019",3))
			sprintf(sqlcmd, "select price,time_int from price_list where code = '02'");
		else if(!strncmp(extension,"001",3) || !strncmp(extension,"002",3) || !strncmp(extension,"006",3) || !strncmp(extension,"00700",5) || !strncmp(extension,"00777",5) || !strncmp(extension,"005",3) || !strncmp(extension,"008",3))
			sprintf(sqlcmd, "select price,time_int from price_list where code = '03'");
		else if(strlen(extension) > 4 && (strncmp(extension,"070",3) && strncmp(extension,"010",3) && strncmp(extension,"011",3) && strncmp(extension,"017",3) && strncmp(extension,"018",3) && strncmp(extension,"016",3) && strncmp(extension,"019",3) && strncmp(extension,"001",3) && strncmp(extension,"002",3) && strncmp(extension,"006",3) && strncmp(extension,"00700",5) && strncmp(extension,"00777",5) && strncmp(extension,"005",3) && strncmp(extension,"008",3)))
			sprintf(sqlcmd, "select price,time_int from price_list where code = '01'");
		

		printf("\nsql:([5m%s[0m)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(result ) {

			row_num = mysql_num_rows(result);

			row = mysql_fetch_row( result );
			if( row) {
				strcpy(price, row[0]?row[0]:"0");
				ps_delSpace(price);
				strcpy(interval, row[1]?row[1]:"0");
				ps_delSpace(interval);
			}
			mysql_free_result(result);
			result = NULL;
		}
		printf("\nsql:([5m%s[0m)",interval);
		fallot_pay=atoi(allot_pay);
		fprice=atoi(price);
		
		tottime=(int) fallot_pay/fprice +1;
		//tottime=(int) (atof(allot_pay))+1;
		//tottime=(int) (atof(price));
		tottime *= atoi(interval);
		printf("\nsql:([5m%d[0m)",tottime);
	}


	if(*option5 == 'N' && *org_num != '\0' && strlen(org_num) > 7) {
		strcpy(option5,"Y");
		strcpy(cid,org_num);
		strcpy(callerid,org_num);
	}

	if(*org_num != '\0' && strlen(org_num) > 7) {
		strcpy(callerid,org_num);
	}

        row_num = 0;
        if(!strncmp(extension,"070",3)) {
                sprintf(sqlcmd, "select forbid_prefix from number_list where number = '%s'",extension);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }
                else {
                        result = mysql_store_result( mysql );
                        if(result) {
                                row_num = mysql_num_rows(result);
                                mysql_free_result(result);
                                result = NULL;
                        }
                }

        }


	if(match > 0) {
		if(row_num)
			sprintf(resPacket,"|RES|Y|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
		else
			sprintf(resPacket,"|RES|Y|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|0|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
	}
	else {
		if(row_num)
			sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|1|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
		else
			sprintf(resPacket,"|RES|N|%s|%s|%d|%s|%s|%s|%s|%s|%d|%s|%s|%s|0|%s|%s|%s|%s|%s|%s|%s|%s|%s|",forbid_prefix,forbiden_call,match,option5,option6,option7,cid,bill_type,tottime,price,interval,etc,callerid,status,class,areacode,option1,option2,option3,option4,bill_type);
	}

	printf("\nresPacket : (%s)",resPacket);

        return 0;
}


/*************************************************************************************/
/*************************************************************************************/
int
procRID()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	//if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);
	//}



	sprintf(sqlcmd, "select cid from number_manage where substr(phoneid,2,7) = '%s' and domain='%s'",phoneid+1,domain);

	printf("\nsql:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(cid, row[0]?row[0]:"");
		ps_delSpace(cid);
		strcpy(recorddate, row[1]?row[1]:"0");
		ps_delSpace(recorddate);
	}
	mysql_free_result(result);
	result = NULL;


	sprintf(resPacket,"|RES|%s|0000-00-00|",cid);
	return 0;

}


/*************************************************************************************/
/*************************************************************************************/
int
procSNU()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    command[100],cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21],cmd[10];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(cmd,0,sizeof(cmd));

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(call_seq,argv[2]);


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
		sprintf(sqlcmd, "select command,messenger_ip,cmd from send_uc where no = %s",call_seq);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sync_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(commandBuf, row[0]?row[0]:"____");
			ps_delSpace(commandBuf);
			strcpy(serverip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(serverip);
			strcpy(cmd, row[2]?row[2]:"___");
			ps_delSpace(cmd);
		}
		mysql_free_result(result);
		result = NULL;


		if(ret = commandSendUc(commandBuf,cmd,serverip,1) < 0) {
			 tmm_currDate(YYYYMMDDHHMMSS,today);
			 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "update send_uc set cnt = cnt +1 where no = %s",call_seq);
			printf("\nsqlcmd:(%s)",sqlcmd);
			printf("\nsqlcmd:(%s)",sqlcmd);
			printf("\nsqlcmd:(%s)",sqlcmd);
			printf("\nsqlcmd:(%s)",sqlcmd);
			mysql_query(mysql, sqlcmd);

			return(errorReturn(_tmpbuf,__FILE__,__LINE__));
		}
		else {
			 tmm_currDate(YYYYMMDDHHMMSS,today);
			 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "update send_uc set flag = '1' where no = %s",call_seq);
			mysql_query(mysql, sqlcmd);
			printf("\nsqlcmd:(%s)",sqlcmd);

			sprintf(resPacket,"|RES|(%s) re_send success",call_seq);
			return 0;
		}
	}
	else {
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}
}


/*************************************************************************************/
/*************************************************************************************/
int
procSND()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    command[100],cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(call_seq,argv[2]);


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
		sprintf(sqlcmd, "select command,serverip from sync_info where no = %s",call_seq);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sync_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(commandBuf, row[0]?row[0]:"____");
			ps_delSpace(commandBuf);
			strcpy(serverip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;


		if(ret = commandSend(commandBuf,serverip,"sub1") < 0) {
			 tmm_currDate(YYYYMMDDHHMMSS,today);
			 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "update sync_info set cnt = cnt +1 where no = %s",call_seq);
			mysql_query(mysql, sqlcmd);

			return(errorReturn(_tmpbuf,__FILE__,__LINE__));
		}
		else {
			 tmm_currDate(YYYYMMDDHHMMSS,today);
			 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "update sync_info set flag = '1' where no = %s",call_seq);
			mysql_query(mysql, sqlcmd);

			sprintf(resPacket,"|RES|(%s) re_send success",call_seq);
			return 0;
		}
	}
	else {
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}
}


/*************************************************************************************/
/*************************************************************************************/
int
procICH()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    before_num[32];
char    src[21],dst[21];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(src,0,sizeof(src));
	memset(dst,0,sizeof(dst));
	memset(today,0,sizeof(today));

    t=time(0);
    tp = (struct tm *) localtime(&t);
/*
    if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));
*/

    if(argv[2] && *argv[2])
		strcpy(src,argv[2]);
    else
		strcpy(src,"");

    if(argv[3] && *argv[3])
		strcpy(dst,argv[3]);
    else
		strcpy(dst,"");

    if(argv[5] && *argv[5])
		strcpy(before_num,argv[5]);
    else
		strcpy(before_num,"");

	if(strlen(src) < 7 || strlen(dst) < 7)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


printf("\n[1;41msrc:(%s),dst:(%s)[0m\n",src,dst);
printf("\n[1;41msrc:(%s),dst:(%s)[0m\n",src,dst);
printf("\n[1;41msrc:(%s),dst:(%s)[0m\n",src,dst);
printf("\n[1;41msrc:(%s),dst:(%s)[0m\n",src,dst);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(sqlcmd, "select number,serverip from number_list where number = '%s' or org_num = '%s'",src,src);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		printf("\nERR db(%s)\n",sqlcmd);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
		printf("\nERR db2(%s)\n",sqlcmd);
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_list!no result db2 ICH(%s,%s)",mysql_error(mysql),sqlcmd );
			logCmd();
		printf("\nno result db2(%s)\n",sqlcmd);
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.no result db3 ICH(%s)",sqlcmd);
			logCmd();
		printf("\nno result db3(%s)\n",sqlcmd);
			return 0;
		}

		row = mysql_fetch_row( result);
		if(row) 
		{
			//for uc,rc,동아제약
			if(!strcmp(domain,"lgdacom.net")){
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
				printf("\n>>>>>>>>> for uc,rc,dpharm serverip(%s) <<<<<<<<<<<\n",serverip);
				ps_delSpace(row[1]);
			}
		}

		mysql_free_result(result);
		result = NULL;
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(serverip,argv[4]);
	}

printf("\nbefore_num(%s):\n",before_num);
	//if(!strcmp(req_status,"해지"))
	if(strlen(before_num) > 4)
		sprintf(sqlcmd, "update number_list set status = 9,lastdate=NOW()  where number='%s' or org_num = '%s'",src,src);
	else 
		sprintf(sqlcmd, "update number_list set status = 8,lastdate=NOW()  where number='%s' or org_num = '%s'",src,src);


	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	printf("\nsqlcmd:(%s)",sqlcmd);


	sprintf(sqlcmd, "delete from number_change where src = '%s'",src);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}
	printf("\nsqlcmd:(%s)",sqlcmd);


	sprintf(sqlcmd, "insert into number_change values(NOW(),'%s','%s')",src,dst);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	sprintf(sqlcmd, "update number_manage set forbiden_call = 'NNNN' ,passwd = 'unauthorized' where 070number='%s'",src);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	printf("\nsqlcmd:(%s)",sqlcmd);


	sprintf(commandBuf,"|ICH|%s@%s|%s|%s|%s|%s|",user,domain,src,dst,serverip,before_num);
	if(PVS == 1 && MASTER == 1) 
	{
			if(!authmysql)
				authinit(AUTH_SERVER);
			//sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000'\
			sprintf(sqlcmd,"delete from DCS_PHONE_AUTH \
			where setdn = '%s'",src);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if(!authmysql)
				authinit(AUTH_SERVER);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s),(0000.0000.0000)(%d)(%s)",src,__LINE__,mysql_error(authmysql));
				printf("\nresPacket:(%s)",resPacket);
				logCmd();
			}

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|ICH|%s@%s|%s|%s|%s|%s|",user,domain,src,dst,serverip,before_num);
		sprintf(resPacket,"|RES|(%s) - (%s)ICH success",src,dst);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICH')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}

		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|(%s) - (%s)insert success",src,dst);
	return 0;
}





/*************************************************************************************/
/*************************************************************************************/
int
procIID()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20],num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21],forward_num[15],tmpnum[20];;
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(forward_num,0,sizeof(forward_num));
	memset(tmpnum,0,sizeof(tmpnum));
	memset(num070,0,sizeof(num070));

    t=time(0);
    tp = (struct tm *) localtime(&t);

    if(argc < 3)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3){
		sprintf(tmpnum,"0%3.3s",inner_num);
		strcpy(inner_num,tmpnum);
	}
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(cid,argv[3]);
    else
		strcpy(cid,"");

    if(argv[4] && *argv[4])
		strcpy(forward_num,argv[4]);
    else
		strcpy(forward_num,"");

    if(strlen(cid) < 7)
		return(errorReturn("ErrInputData____ CID",__FILE__,__LINE__));

//    if(strlen(cid) == 8 && *cid == '1')
//	sprintf(cid,"02%s",cid);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%3.3s%4.4s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5]) 
			strcpy(serverip,argv[5]);
		if(argv[6] && *argv[6]) 
			strcpy(forward_num,argv[6]);
		else 
			strcpy(forward_num,"");
	}


/*******
	sprintf(sqlcmd, "insert into cid_rid(phoneid,recorddate,cid) values('%s','%s','%s')",phoneid,tmp, _tmpbuf );
	mysql_query(mysql, sqlcmd);

	printf("\nsqlcmd:(%s)",sqlcmd);


	if(MASTER==1 && strlen(BACKUP_SERVER) > 8) {
		sprintf(commandBuf,"|IID|%s@%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],phoneid,serverip);
		if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
			 tmm_currDate(YYYYMMDDHHMMSS,today);
			 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
			mysql_query(mysql, sqlcmd);

		}
	}
*/
	

	if(isdigit(*cid))
		tel_string(cid);
	else 
		strcpy(_tmpbuf,cid);

	if(strlen(forward_num) > 5 && isdigitstr(forward_num))
			sprintf(sqlcmd, "update number_manage set option1 = 'F',option5='Y',cid = '%s' where substr(phoneid,2,7) = '%s' and domain='%s'",_tmpbuf,phoneid+1,domain);
	else
			sprintf(sqlcmd, "update number_manage set option5='Y',cid = '%s' where substr(phoneid,2,7) = '%s' and domain='%s'",_tmpbuf,phoneid+1,domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	if(strlen(forward_num) > 5 && isdigitstr(forward_num)) {
		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
		sprintf(sqlcmd,"INSERT into forward_number( \
		phoneid ,domain,imid,executedate , executeseq ,number,fromday,today,fromtime,totime,kind) \
		values('1%3.3s%4.4s','%s','tmpid%s','%s',%d,'%s','%s','%s','%s','%s','%s')", \
		prefix,inner_num,domain,inner_num,tmp,1,forward_num,"0","0","0","0", "0");
	}

	sprintf(commandBuf,"|IID|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,cid,phoneid,serverip,forward_num);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IID|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,cid,phoneid,serverip,forward_num);
		sprintf(resPacket,"|RES|(%s) - (%s),(%s) IID success",phoneid, cid, forward_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
//				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
//					tmm_currDate(YYYYMMDDHHMMSS,today);
//					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
//					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IID')",tmp, commandBuf,serverip);
//					printf("\nsqlcmd:(%s)",sqlcmd);
//					mysql_query(mysql, sqlcmd1);
//				}


				if(strlen(forward_num) > 5 && isdigitstr(forward_num))
					sprintf(sqlcmd, "update number_manage set option1 = 'F',option5='Y',cid = '%s' where substr(phoneid,2,7) = '%s' and domain='%s'",_tmpbuf,phoneid+1,domain);
				else
					sprintf(sqlcmd, "update number_manage set option5='Y',cid = '%s' where substr(phoneid,2,7) = '%s' and domain='%s'",_tmpbuf,phoneid+1,domain);

					if(mysql_1)
						mysql_close(mysql_1);

					sqlinit_1(serverip);
					if(!mysql_1)
						sqlinit_1(serverip);
			printf("IID mmysqlcoonect (%s) sqlcmd(%s)\n",serverip,sqlcmd);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					if(!mysql_1)
						sqlinit_1(serverip);
					if( ret = mysql_query(mysql_1, sqlcmd) ) {
						//exit(0);
					}
					if(mysql_1)
						mysql_close(mysql_1);
				}


//
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|(%s)-(%s)-(%s),(%s) insert success",num070,phoneid, cid, forward_num);
	return 0;
}


/*************************************************************************************/
/*************************************************************************************/
int
procDID()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21],tmpnum[20];
int row_num = 0, ret = 0, i=0, sd=-1, cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(tmpnum,0,sizeof(tmpnum));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3){
		sprintf(tmpnum,"0%3.3s",inner_num);
		strcpy(inner_num,tmpnum);
	}
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");
		

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%s%s", prefix,inner_num);


		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	else {
		if(argv[3] && *argv[3]) 
			strcpy(phoneid,argv[3]);
		if(argv[4] && *argv[4]) 
			strcpy(serverip,argv[4]);
	}


	sprintf(sqlcmd, "update number_manage set option5='N',cid='' where substr(phoneid,2,7) = '%s' and domain='%s'",phoneid+1,domain);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	sprintf(commandBuf,"|DID|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DID|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|(%s) - (%s) DID  success",domain, phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|(%s)-(%s)-(%s) delete success",num070,phoneid, cid);
	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procIFS()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],kind[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    manner_flag[5];
char    recorddate[32];
char    crm_flag[5];
char    phoneid[21],sms_flag[5];
char    smscount[11];
	char	messenger_ip[20];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(sms_flag,0,sizeof(sms_flag));
	memset(smscount,0,sizeof(smscount));
	memset(crm_flag,0,sizeof(crm_flag));
	memset(messenger_ip,0,sizeof(messenger_ip)); 

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 3)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(smscount,argv[3]);
	else 
		strcpy(smscount,"0");

	if(!strcmp(smscount,"0") || atoi(smscount) < 0)
		strcpy(sms_flag,"N");
	else
		strcpy(sms_flag,"Y");

	strcpy(sms_flag,"Y");
    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);
/*****
		sprintf(sqlcmd, "select crm_flag,messenger_ip from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket, strlen(resPacket));
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) 
		{
			strcpy(crm_flag, row[0]?row[0]:"");
			ps_delSpace(crm_flag);
			strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(messenger_ip);
		}
		mysql_free_result(result);
		result = NULL;
*/

	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5]) 
			strcpy(serverip,argv[5]);
	}


	if(isdigit(*cid))
		tel_string(cid);
	else 
		strcpy(_tmpbuf,cid);
/****
	sprintf(sqlcmd, "update number_manage set sms_flag='Y' where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		printf("\n|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		sprintf(resPacket,"|RES|N|0|");
		return 0;
	}
*/
	sprintf(sqlcmd, "delete from sms_count where phoneid = '1%7.7s' and defaultip = '%s'",phoneid+1,serverip);
	ret = mysql_query(mysql, sqlcmd);

	printf("\nsqlcmd:(%s)",sqlcmd);
	sprintf(sqlcmd, "insert into sms_count values(NOW(),'1%7.7s','%s','%s')",phoneid+1,serverip,smscount);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		printf("\n|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		sprintf(resPacket,"|RES|N|0|");
		return 0;
	}

/**********
	if(atoi(smscount) < 1)
		sprintf(sqlcmd, "update sip_buddies  set mailbox = '-1' where name = '1%7.7s' and defaultip = '%s'",phoneid+1,serverip);
	else 
		sprintf(sqlcmd, "update sip_buddies  set mailbox = mailbox+%s where name = '1%7.7s' and defaultip = '%s'",smscount,phoneid+1,serverip);
	ret = mysql_query(mysql, sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);
*/
	sprintf(commandBuf,"|IFS|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,smscount,phoneid,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'I_S')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}
/***
		sprintf(commandBuf,"|I_S|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,sms_flag,phoneid,serverip);
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
			if(ret = commandSendUc(commandBuf,"I_S",messenger_ip,1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip) values ('%s','%s','%s','0',1,'I_S','%s')",tmp, commandBuf,serverip,messenger_ip);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				mysql_query(mysql, sqlcmd1);
			}
		}
*/

		sprintf(commandBuf,"|IFS|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,smscount,phoneid,serverip);
		sprintf(resPacket,"|RES|(%s) - (%s) IIR success",phoneid, serverip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFS')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|IFS(%s)-(%s) - (%s) insert success",phoneid, serverip,smscount);
	return 0;
}




/*************************************************************************************/
/*************************************************************************************/
int
procI_S()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],kind[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    manner_flag[5];
char    recorddate[32];
char    crm_flag[5];
char    phoneid[21],sms_flag[5];
char    smscount[11];
	char	messenger_ip[20];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;
	//20220826 ADD 
	memset(kind,0,sizeof(kind));

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(sms_flag,0,sizeof(sms_flag));
	memset(smscount,0,sizeof(smscount));
	memset(crm_flag,0,sizeof(crm_flag));
	memset(messenger_ip,0,sizeof(messenger_ip)); 

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 3)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(smscount,argv[3]);
	else 
		strcpy(smscount,"0");

	if(!strcmp(smscount,"0") || atoi(smscount) < 0)
		strcpy(sms_flag,"N");
	else
		strcpy(sms_flag,"Y");

	//strcpy(sms_flag,"Y");
    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);

/*****************
		sprintf(sqlcmd, "select crm_flag,messenger_ip from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket, strlen(resPacket));
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) 
		{
			strcpy(crm_flag, row[0]?row[0]:"");
			ps_delSpace(crm_flag);
			strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(messenger_ip);
		}
		mysql_free_result(result);
		result = NULL;
*/

	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		if(argv[5] && *argv[5]) 
			strcpy(serverip,argv[5]);
	}


	if(isdigit(*cid))
		tel_string(cid);
	else 
		strcpy(_tmpbuf,cid);

	sprintf(sqlcmd, "update number_manage set sms_flag='%s' where phoneid = '0%7.7s' and domain='%s'",sms_flag,phoneid+1,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		printf("\n|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		sprintf(resPacket,"|RES|N|0|");
		return 0;
	}
/***************
	sprintf(sqlcmd, "delete from sms_count where phoneid = '1%7.7s' and defaultip = '%s'",phoneid+1,serverip);
	ret = mysql_query(mysql, sqlcmd);

	printf("\nsqlcmd:(%s)",sqlcmd);
	sprintf(sqlcmd, "insert into sms_count values(NOW(),'1%7.7s','%s','%s')",phoneid+1,serverip,kind);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		printf("\n|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		sprintf(resPacket,"|RES|N|0|");
		return 0;
	}
**************/
	if(atoi(smscount) < 1)
		sprintf(sqlcmd, "update sip_buddies  set mailbox = '-1' where name = '1%7.7s' and defaultip = '%s'",phoneid+1,serverip);
	else 
		sprintf(sqlcmd, "update sip_buddies  set mailbox = '%s' where name = '1%7.7s' and defaultip = '%s'",smscount,phoneid+1,serverip);
	ret = mysql_query(mysql, sqlcmd);
	printf("\nsqlcmd:(%s)",sqlcmd);

	sprintf(commandBuf,"|I_S|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,smscount,phoneid,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'I_S')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}
/***************
		sprintf(commandBuf,"|I_S|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,sms_flag,phoneid,serverip);
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
			if(ret = commandSendUc(commandBuf,"I_S",messenger_ip,1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip) values ('%s','%s','%s','0',1,'I_S','%s')",tmp, commandBuf,serverip,messenger_ip);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				mysql_query(mysql, sqlcmd1);
			}
		}
*/

		sprintf(commandBuf,"|I_S|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,smscount,phoneid,serverip);
		sprintf(resPacket,"|RES|(%s) - (%s) IIR success",phoneid, serverip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'I_S')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|I_S(%s)-(%s) - (%s) insert success",phoneid, serverip,kind);
	return 0;
}



/************************************************************************************/
/************************************************************************************/
int
procR_S()
{
	char 	passwd[256];
	char 	email[256];
	int   	qid,returncode,reqflag=0;
	int   	test=0,ret,i,row_num=0,j;
	unsigned int	tmpNumber;
	char 	tmp[100];
	char    sqlcmd[512],domain1[64],lastdate[21],org_num[20];
	char	index[11],num070[20],call_num[20],cid[20],today[20];
	char	recorddate[20],tostr[20],flag[5],outboundflag[5],cause[50],message[200];
	char	sms_flag[10],sms_count[11],freesms_count[11];

	memset(num070,0,sizeof(num070)); 
	memset(index,0,sizeof(index)); 
	memset(call_num,0,sizeof(call_num)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(cid,0,sizeof(cid)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(today,0,sizeof(today)); 
	memset(sms_flag,0,sizeof(sms_flag)); 
	memset(sms_count,0,sizeof(sms_count)); 
	memset(freesms_count,0,sizeof(freesms_count)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	strcpy(sms_count,"0");
	strcpy(freesms_count,"0");

	if(PVS == 1) 
	{
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		sprintf(sqlcmd, "select sms_flag from number_manage where phoneid='0%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|RES|N|0|");
			return 0;
		}
		else {
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(sms_flag, row[0]?row[0]:"N");
				ps_delSpace(sms_flag);
			}
			mysql_free_result(result);
			result = NULL;
		}

		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
		    if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
			break;
		    }
		    j++;
		}

		if(!mysql_1)
			sqlinit_1(CDR_SERVER_[j].active);

		sprintf(sqlcmd, "select mailbox from sip_buddies where name ='1%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
			printf("\n(((%s)",resPacket);
			if(mysql_1)
				mysql_close(mysql_1);
			sqlinit_1(CDR_SERVER_[j].active);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
printf("\n111111");

		result = mysql_store_result( mysql_1 );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sip_buddies!(%s, %s)",mysql_error(mysql_1),sqlcmd );
			printf("\n(((%s)",resPacket);
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|RES|N|0|");
			return 0;
		}
		else {
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(sms_count, row[0]?row[0]:"0");
				ps_delSpace(sms_count);
			}
			mysql_free_result(result);
			result = NULL;
		}
printf("\n111111");
	}
printf("\n[5m[7m(%s)[0m[0m",sms_count);

	if(strcmp(sms_count,"99999")) {
/*
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| recorddate | datetime    | YES  |     | NULL    |       |
| phoneid    | varchar(8)  | NO   | MUL |         |       |
| defaultip  | varchar(32) | YES  |     | NULL    |       |
| count      | varchar(11) | YES  |     | 0       |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)
*/
		sprintf(sqlcmd, "select count from sms_count where phoneid ='1%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
			printf("\n(((%s)",resPacket);
			if(mysql_1)
				mysql_close(mysql_1);

			sqlinit_1(CDR_SERVER_[j].active);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql_1 );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sms_count!(%s, %s)",mysql_error(mysql_1),sqlcmd );
			printf("\n(((%s)",resPacket);
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
		}
		else {
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(freesms_count, row[0]?row[0]:"0");
				ps_delSpace(freesms_count);
			}
			mysql_free_result(result);
			result = NULL;
		}
		mysql_close(mysql_1);
		mysql_1 = NULL;

		if(atoi(sms_count) < 0) {
			if(atoi(freesms_count) > 0)
				sprintf(resPacket, "|RES|Y|%s|",freesms_count);
			else
				sprintf(resPacket, "|RES|N|%s|",freesms_count);
		}
		else
			sprintf(resPacket, "|RES|Y|%d|",atoi(sms_count) + atoi(freesms_count));
	}
	else {
		mysql_close(mysql_1);
		mysql_1 = NULL;
		sprintf(resPacket, "|RES|Y|%s|",sms_count);
		return 0;       
	}
}



/*************************************************************************************/
/*************************************************************************************/
int
procIIR()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],kind[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    manner_flag[5];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(manner_flag,0,sizeof(manner_flag));

	memset(kind,0,sizeof(kind));

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 3)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(kind,argv[3]);
	else 
		strcpy(kind,"0");
    if(argv[4] && *argv[4] && (*argv[4]=='N' || *argv[4]=='Y'))
                strcpy(manner_flag,argv[4]);
        else
                strcpy(manner_flag,"N");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%3.3s%4.4s", prefix,inner_num);
	}
	else {
		if(argv[5] && *argv[5]) 
			strcpy(phoneid,argv[5]);
		if(argv[6] && *argv[6]) 
			strcpy(serverip,argv[6]);
	}


	if(isdigit(*cid))
		tel_string(cid);
	else 
		strcpy(_tmpbuf,cid);

	sprintf(sqlcmd, "update number_manage set record='%s',manner_flag='%s' where phoneid = '0%7.7s' and domain='%s'",kind,manner_flag,phoneid+1,domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	printf("\nsqlcmd:(%s)\n",sqlcmd);

	//sprintf(commandBuf,"|IIR|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,kind,manner_flag,phoneid,serverip);
	sprintf(commandBuf,"|IIR|%s@%s|%s|%s|%s|%s|%s||",user,domain,inner_num,kind,manner_flag,phoneid,serverip);
	printf("\ncommandBuf:(%s)\n",commandBuf);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IIR|%s@%s|%s|%s|%s|%s|%s||",user,domain,inner_num,kind,manner_flag,phoneid,serverip);
		sprintf(resPacket,"|RES|(%s) - (%s) IIR success",phoneid, serverip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIR')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|(%s) - (%s) insert success",phoneid, serverip);
	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procDUR()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));

       t=time(0);
       tp = (struct tm *) localtime(&t);

    if(argc < 3)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%3.3s%4.4s", prefix,inner_num);
	}
	else {
		if(argv[3] && *argv[3]) 
			strcpy(phoneid,argv[3]);
		if(argv[4] && *argv[4]) 
			strcpy(serverip,argv[4]);
	}


	if(isdigit(*cid))
		tel_string(cid);
	else 
		strcpy(_tmpbuf,cid);
	sprintf(sqlcmd, "update number_manage set record='' where substr(phoneid,2,7) = '%s' and domain='%s'",phoneid+1,domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|||");
		return 0;
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	sprintf(commandBuf,"|DUR|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DUR|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|(%s) - (%s) DUR success",phoneid, serverip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DUR')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|(%s) - (%s) insert success",phoneid, serverip);
	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procRWH()
{
char	sqlcmd[512];
char	tmp[30],messenger_ip[32];
char    extension[60];
char    number[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);

	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(prefix,argv[3]);
	

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);

	sprintf(sqlcmd, "select 070number from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}
	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(num070, row[0]?row[0]:"00000000");
				    ps_delSpace(num070);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket, "|RES|%s-%s|",num070,phoneid);
	logCmd();

	sprintf(sqlcmd, "select number,recorddate from white_list where substr(phoneid,2,7) = '%s' and domain = '%s'",phoneid+1, domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|10000|Data Not Found!.(%s)",sqlcmd);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|10000|Data Not Found!.(%s)",sqlcmd);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|10000|Data Not Found!.(%s)",sqlcmd);
		return 0;
	}
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(number, row[0]?row[0]:"");
			ps_delSpace(number);
			strcpy(recorddate, row[1]?row[1]:"0");
			ps_delSpace(recorddate);
		}
		sprintf(resPacket+strlen(resPacket),"|%s^%s",number,recorddate);
/****
		if (i > 100)
			break;
*/
        if(!((i+1)%41))
        {
            if((i+1) < row_num)
            {
                strcat(resPacket,"\n");
                tcpWrite(masterFd, resPacket);
                printf("\n[5m%s[0m");
                sprintf(resPacket,"|RES");
            }
            else {
                mysql_free_result(result);
                result = NULL;
                return 0;
            }
        }

	}
	mysql_free_result(result);
	result = NULL;

	return 0;
}

/*************************************************************************************/
/*************************************************************************************/
int
procRW1()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    number[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char    outer_num[21];
char    extension[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(outer_num,0,sizeof(outer_num));
	memset(extension,0,sizeof(extension));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);

	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(prefix,argv[3]);


    if(argv[4] && *argv[4])
		strcpy(outer_num,argv[4]);
    if(argv[5] && *argv[5])
		strcpy(extension,argv[5]);

	if(*extension == '\0')
		strcpy(extension,"07000000000");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    //if(PVS == 1  && *prefix == '\0') {

	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);
	//}



	sprintf(sqlcmd, "select number,recorddate from white_list where (substr(phoneid,2,7) = '%s' or substr(phoneid,2,7) = '%3.3s0000') and domain = '%s' and (number='%s' or number = '%s')",phoneid+1,phoneid+1, domain,outer_num,extension);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|RES|1|(%s) white list exist",phoneid);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result) {
		sprintf(resPacket, "|RES|1|(%s) white list exist",phoneid);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|RES|0|(%s) white_list is not",phoneid);
		return 0;
	}
	else {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|RES|1|(%s) white_list exist",phoneid);
		return 0;
	}
	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procIWH()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[30],messenger_ip[32];
char    extension[60];
char    cid[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char *token, *pcLast,*token1,flag[2];
int row_num = 0, ret = 0, i=0, sd=-1, cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(flag,argv[3]);
	else
		strcpy(flag,"1");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    sprintf(commandBuf,"|IWH|%s@%s|%s|%s",user,domain,argv[2],argv[3]);
    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return(-1);

		sprintf(phoneid, "0%s%s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		sprintf(commandBuf+strlen(commandBuf),"|%s",phoneid);

		for(i = 4; i < argc ; i++) {
		  if(argv[i] && strlen(argv[i]) > 3) {
			sprintf(commandBuf+strlen(commandBuf),"|%s",argv[i]);
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);

			if(token)
			  tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "insert into white_list(phoneid,domain,number,recorddate) values('%s','%s','%s','%s')",phoneid,domain,_tmpbuf, token1?token1:tmp);

			 printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}

		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1i'IWH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}


		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IWH')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

		for(i = 5; i < argc; i++) {
		  if(argv[i] && strlen(argv[i]) > 3) {
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			if(token)
			  tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "insert into white_list(phoneid,domain,number,recorddate) values('%s','%s','%s','%s')",phoneid,domain,_tmpbuf, token1?token1:tmp);

			printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
	}

	sprintf(resPacket,"|RES|IWH(%s)insert success|%s",phoneid,num070);
	return 0;
}

/*************************************************************************************
16:03:54 |DWH|superadmin@test68.net|2997|1|01080807261^|s
*************************************************************************************/
int
procDWH()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[30],messenger_ip[32];
char    extension[60];
char    cid[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char *token, *pcLast,*token1,flag[2];
int row_num = 0, ret = 0, i=0, sd=-1, cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

        if(argv[2] && *argv[2])
                strcpy(inner_num,argv[2]);

        if(strlen(inner_num) == 3)
                sprintf(inner_num,"0%s",inner_num);
        else if(strlen(inner_num) != 4)
                strcpy(inner_num,"0000");

        if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");
        if(argv[3] && *argv[3])
                strcpy(flag,argv[3]);
        else
                strcpy(flag,"0");


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    sprintf(commandBuf,"|DWH|%s@%s|%s|%s",user,domain,argv[2],argv[3]);
    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%s%s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		sprintf(commandBuf+strlen(commandBuf),"|%s",phoneid);
		for(i = 4; i < argc ; i++) {
		  if(argv[i] && strlen(argv[i]) > 3) {
			sprintf(commandBuf+strlen(commandBuf),"|%s",argv[i]);
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			if(token)
				tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "delete from white_list where substr(phoneid,2,7) = '%s' and number='%s' and domain='%s'",phoneid+1,_tmpbuf,domain);

			printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}

		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1, domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DWH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DWH')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		for(i = 5; i < argc ; i++) {
		  if(argv[i] && strlen(argv[i]) > 3) {
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			if(token)
			  tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "delete from white_list where substr(phoneid,2,7) = '%s' and number='%s' and domain='%s'",phoneid+1,_tmpbuf,domain);

			printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1, domain);
		mysql_query(mysql, sqlcmd);
			printf("\nsqlcmd:(%s)",sqlcmd);
	}
	sprintf(resPacket,"|RES|DWH(%s)insert success|%s",phoneid,num070);
	return 0;
}

/*************************************************************************************/
/*************************************************************************************/
int
procRBD()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    number[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(prefix,argv[3]);

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    //if(PVS == 1  && *prefix == '\0') {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "1%s%s", prefix,inner_num);
/****
	}
	else if(*prefix != '\0') {
		sprintf(phoneid, "1%s%s", prefix,inner_num);
	}
	else
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
*/

	sprintf(sqlcmd, "select number,recorddate from black_list where substr(phoneid,2,7) = '%s' and domain='%s'",phoneid+1,domain);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|10000|Data Not Found!.(%s)",sqlcmd);
		return 0;
	}
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(number, row[0]?row[0]:"");
			ps_delSpace(number);
			strcpy(recorddate, row[1]?row[1]:"0");
			ps_delSpace(recorddate);
		}
		sprintf(resPacket+strlen(resPacket),"|%s^%s",number,recorddate);
		if (i > 100)
			break;
	}
	mysql_free_result(result);
	result = NULL;

	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procRB1()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[21];
char    number[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char    outer_num[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(outer_num,0,sizeof(outer_num));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(prefix,argv[3]);
    if(argv[4] && *argv[4])
		strcpy(outer_num,argv[4]);
    if(argv[5] && *argv[5])
		strcpy(extension,argv[5]);

	if(*extension == '\0')
		strcpy(extension,"07000000000");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    //if(PVS == 1  && *prefix == '\0') {

	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid, "1%s%s", prefix,inner_num);
/*****************
	}
	else if(*prefix != '\0') {
		sprintf(phoneid, "1%s%s", prefix,inner_num);
	}
	else
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
****************/

	sprintf(sqlcmd, "select number,recorddate from black_list where (substr(phoneid,2,7) = '%s' or substr(phoneid,2,7) = '%3.3s0000') and domain = '%s' and (number='%s' or number = '%s')",phoneid+1,phoneid+1, domain,outer_num,extension);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|10000|Data Not Found!.(%s)",sqlcmd);
		return 0;
	}
	else {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|RES|1|(%s) black_list exist",phoneid);
		return 0;
	}
	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procRBL()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    number[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(prefix,argv[3]);

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid, "1%s%s", prefix,inner_num);

	sprintf(sqlcmd, "select 070number from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}
	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(num070, row[0]?row[0]:"00000000");
				    ps_delSpace(num070);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket, "|RES|%s-%s|)",num070,phoneid);
	logCmd();

	sprintf(sqlcmd, "select number,recorddate from black_list where (substr(phoneid,2,7) = '%s' or substr(phoneid,2,7) = '%3.3s0000') and domain = '%s'",phoneid+1,phoneid+1, domain);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|10000|조회 오류(%s)",sqlcmd);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000| Data not found(%s)",sqlcmd);
		return 0;
	}
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(number, row[0]?row[0]:"");
			ps_delSpace(number);
			strcpy(recorddate, row[1]?row[1]:"0");
			ps_delSpace(recorddate);
		}
		sprintf(resPacket+strlen(resPacket),"|%s^%s",number,recorddate);
/***
		if (i > 100)
			break;
*/

        if(!((i+1)%41))
        {
            if((i+1) < row_num)
            {
                strcat(resPacket,"\n");
                tcpWrite(masterFd, resPacket);
                printf("\n[5m%s[0m");
                sprintf(resPacket,"|RES");
            }
            else {
                mysql_free_result(result);
                result = NULL;
                return 0;
            }
        }

	}
	mysql_free_result(result);
	result = NULL;

	return 0;
}



/*************************************************************************************/
/*************************************************************************************/
int
procIBL()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[30],messenger_ip[32];
char    extension[60];
char    cid[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char *token, *pcLast,*token1,flag[2];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(flag,argv[3]);
	else
		strcpy(flag,"2");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    sprintf(commandBuf,"|IBL|%s@%s|%s|%s",user,domain,argv[2],argv[3]);
    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;



		sprintf(phoneid, "0%s%s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		sprintf(commandBuf+strlen(commandBuf),"|%s",phoneid);
		for(i = 4; i < argc ; i++) {
			if(argv[i] && strlen(argv[i]) > 3) {
			sprintf(commandBuf+strlen(commandBuf),"|%s",argv[i]);
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			if(token)
				tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "insert into black_list(phoneid,domain,number,recorddate) values('%s','%s','%s','%s')",phoneid,domain,_tmpbuf, token1?token1:tmp);

			printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IBL')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IBL')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		for(i = 5; i < argc; i++) {
		  if(argv[i] && strlen(argv[i]) > 3 ) {
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			if(token)
			  tel_string(token);
			  sprintf(sqlcmd, "insert into black_list(phoneid,domain,number,recorddate) values('%s','%s','%s','%s')",phoneid,domain,_tmpbuf, token1?token1:tmp);

			 printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
	}

	sprintf(resPacket,"|RES|IBL(%s)insert success|%s|",phoneid,num070);
	return 0;
}


/*************************************************************************************/
/*************************************************************************************/
int
procDBL()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[30],messenger_ip[32];
char    extension[60];
char    cid[20];
char    num070[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
char *token, *pcLast,*token1,flag[2];
int row_num = 0, ret = 0, i=0, sd=-1,cpid;
struct  tm      *tp;
long	t;

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(num070,0,sizeof(num070));

       t=time(0);
       tp = (struct tm *) localtime(&t);

	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(flag,argv[3]);
	else
		strcpy(flag,"0");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    sprintf(commandBuf,"|DBL|%s@%s|%s|%s",user,domain,argv[2],argv[3]);
    if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "0%s%s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '%s' and domain='%s'",phoneid,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		sprintf(commandBuf+strlen(commandBuf),"|%s",phoneid);
		for(i = 4; i < argc ; i++) {
		if(argv[i] && strlen(argv[i]) > 3) {
			sprintf(commandBuf+strlen(commandBuf),"|%s",argv[i]);
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			if(token)
				tel_string(token);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			  sprintf(sqlcmd, "delete from black_list where substr(phoneid,2,7) = '%s' and number='%s' and domain='%s'",phoneid+1,_tmpbuf,domain);

			printf("\nsqlcmd:(%s)",sqlcmd);
			mysql_query(mysql, sqlcmd);
			}
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DBL')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DBL')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
/***
				if(strcmp(row[1],"sub1")) {
					tmm_DateAddOneDay(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
*/
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		if(argv[4] && *argv[4]) 
			strcpy(phoneid,argv[4]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		for(i = 5; i < argc ; i++) {
		  if(argv[i] && strlen(argv[i]) > 5 ) {
			  token = (char *)strtok_r(argv[i], "^\0", &pcLast);
			  token1 = (char *)strtok_r(pcLast, "^\0", &pcLast);
			if(token)
			  tel_string(token);
			  sprintf(sqlcmd, "delete from black_list where substr(phoneid,2,7) = '%s' and number='%s' and domain='%s'",phoneid+1,_tmpbuf,domain);

			printf("\nsqlcmd:(%s)",sqlcmd);
			 mysql_query(mysql, sqlcmd);

		  }
		}
		sprintf(sqlcmd, "update number_manage set option6='%s' where substr(phoneid,2,7) = '%s' and domain='%s'",flag,phoneid+1,domain);
		mysql_query(mysql, sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
	}

	sprintf(resPacket,"|RES|DBL(%s)insert success|%s",phoneid,num070);
	return 0;
}


/*************************************************************************************/
/*************************************************************************************/
int
procARS()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    h_number[20];
char    call_seq[11];
char    hunt_num[32],numbertype[2];
char    method[5],resultment[65],lastresult[65];
char    ment[65];
char	regday[10],month[10],week[10],day[10],fromtime[10],totime[10];
struct  tm      *tp;
time_t	t;


int row_num = 0, ret = 0, i=0, sd=-1,check=0,lastcheck=0;

	memset(regday,0,sizeof(regday));
	memset(month,0,sizeof(month));
	memset(week,0,sizeof(week));
	memset(day,0,sizeof(day));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(h_number,0,sizeof(h_number));
	memset(extension,0,sizeof(extension));
	memset(hunt_num,0,sizeof(hunt_num));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(method,0,sizeof(method));
	memset(numbertype,0,sizeof(numbertype));


        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));


        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");

/***
        if(argv[3] && *argv[3])
                strcpy(call_seq,argv[3]);
        else
                strcpy(call_seq,"0");
*/

	sprintf(sqlcmd, "select phoneid,numbertype from number_manage where 070number = '%s'",h_number);
	if( ret = mysql_query(mysql, sqlcmd) ) {
                return(errorReturn("Err",__FILE__,__LINE__));
	}

	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			return(errorReturn("Err",__FILE__,__LINE__));
			return 0;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(phoneid, row[0]?row[0]:"00000000");
				    ps_delSpace(phoneid);
				    strcpy(numbertype, row[0]?row[0]:"0");
				    ps_delSpace(numbertype);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		return(errorReturn("Err",__FILE__,__LINE__));
		return 0;
	}

	strncpy(prefix,phoneid+1,3);

	printf("\nprefix:(%s), h_number:(%s)",prefix,h_number);


	sprintf(sqlcmd, "select regday,month,week,day,fromtime,totime,ment from ars_schedule where prefix = '%3.3s' and number = '%s'",prefix,h_number);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		return(errorReturn("Err",__FILE__,__LINE__));
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		return(errorReturn("Err",__FILE__,__LINE__));
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		return(errorReturn("Err",__FILE__,__LINE__));
	}

        t=time(0);

        tp = (struct tm *) localtime(&t);

	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
/**
+----------+-------+------+------+----------+--------+-------+
| 20081202 |       |      |      | 10       | 20     | test1 |
*/
			strcpy(regday, *row[0]?row[0]:"00000000");
			ps_delSpace(regday);
			strcpy(month, *row[1]?row[1]:"0");
			ps_delSpace(month);
			strcpy(week, *row[2]?row[2]:"7");
			ps_delSpace(week);
			strcpy(day, *row[3]?row[3]:"0");
			ps_delSpace(day);
			strcpy(fromtime, *row[4]?row[4]:"25");
			ps_delSpace(fromtime);
			strcpy(totime, *row[5]?row[5]:"25");
			ps_delSpace(totime);
			strcpy(ment, *row[6]?row[6]:"");
			ps_delSpace(ment);
			//sprintf(resPacket+strlen(resPacket),"%s^%s^%s^%s^%s^%s|");

printf("\nmonth:(%s),week:(%s),day:(%s),fromtime:(%s),totime:(%s),ment:(%s)",month,week,day,fromtime,totime,ment);

/**
month:(0),week:(7),day:(0),fromtime:(10),totime:(20),ment:(test1)
month:(0),week:(7),day:(0),fromtime:(10),totime:(20),ment:(test1)
*/
printf("\natoi(month):(%d),tp->tm_mon + 1:(%d)",atoi(month),tp->tm_mon + 1);

			if(check == 0 && ((atoi(month) ==  tp->tm_mon + 1) || atoi(month) == 0)) {
				strcpy(resultment,ment);
				check=1;
printf("\n000000000000000000000000000000");
			}
			if(check == 1 &&  ((atoi(week) == tp->tm_wday) || atoi(week) == 7)) {
				strcpy(resultment,ment);
				check=2;
			}
			if(check == 2 &&  ((atoi(day) == tp->tm_mday) || atoi(day) == 0)) {
				strcpy(resultment,ment);
				check=3;
printf("\n1111111111111111");
			}
			if(check == 3 &&  ((atoi(fromtime) <= tp->tm_hour < atoi(totime)) || atoi(fromtime) == 15)) {
				strcpy(resultment,ment);
				check=4;
printf("\n2222222222222222222222");
			}
			if(check > lastcheck) {
				lastcheck = check;
				strcpy(lastresult,resultment);
				check = 0;
printf("\n333333333333333333333");
			}
		}
	}
	sprintf(resPacket,"|RES|%s",lastresult);
	return 0;
}




/*************************************************************************************/
//|AN1|xxx@temp4402.lgdacom.net|07086119500|1|0|0|115.95.192.16
/*************************************************************************************/
int
procAN1()
{
char	sqlcmd[512];
char	tmp[64],messenger_ip[32];
char    firstexten[20],secondexten[20];
char    h_number[20];
char    call_seq[11];
char    hunt_num[32],numbertype[2],fphone_id[30];
char    method[5],ssw_ip[20],option1[10];
int row_num = 0, ret = 0, i=0, sd=-1,intfromtime,inttotime, j=0;
int randnum = 0, datacount = 0;
struct  tm      *tp;
long	t;
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	tel[20],option6[10];
char    numlist[100][20],tmpnum[10],directnumber[20];
char	frommin[5],tomin[5];
int	forward_check = 0;
char    callerid[20],tmpcrm[256];
char    crm_070[15],crm_flag[5],crm_messenger_ip[16];
char	record[11],org_num[20];
char	option2[10],class[20];


	memset(number,0,sizeof(number));
	memset(org_num,0,sizeof(org_num));
	memset(option6,0,sizeof(option6));
	memset(firstexten,0,sizeof(firstexten));
	memset(secondexten,0,sizeof(secondexten));
	memset(hunt_num,0,sizeof(hunt_num));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(method,0,sizeof(method));
	memset(numbertype,0,sizeof(numbertype));
	memset(ssw_ip,0,sizeof(ssw_ip));
	memset(option1,0,sizeof(option1));
	memset(tel,0,sizeof(tel));
	memset(directnumber,0,sizeof(directnumber));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(callerid,0,sizeof(callerid)); 
        memset(record,0,sizeof(record));
        memset(tmpcrm,0,sizeof(tmpcrm));
        memset(crm_070,0,sizeof(crm_070));
        memset(crm_flag,0,sizeof(crm_flag));
        memset(crm_messenger_ip,0,sizeof(crm_messenger_ip));
        memset(option2,0,sizeof(option2));
        memset(class,0,sizeof(class));


       t=time(0);
       tp = (struct tm *) localtime(&t);


        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");

        if(argv[3] && *argv[3])
                strcpy(firstexten,argv[3]);
        else
                strcpy(firstexten,"0000");

        if(argv[4] && *argv[4])
                strcpy(secondexten,argv[4]);
        else
                strcpy(secondexten,"0000");

        if(argv[5] && *argv[5])
                strcpy(call_seq,argv[5]);
        else
                strcpy(call_seq,"0");

        if(argv[6] && *argv[6])
                strcpy(ssw_ip,argv[6]);
        else
                strcpy(ssw_ip,SSW_IP);

        if(argv[7] && *argv[7])
                strcpy(callerid,argv[7]);
        else
                strcpy(callerid,"07000000000");

	sprintf(sqlcmd, "select phoneid,numbertype from number_manage where 070number = '%s'",h_number);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}
	result = mysql_store_result( mysql );
printf("\nsqlcmd : (%s)",sqlcmd);
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			sprintf(resPacket,"|RES|0|0|X|");
			return 0;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(phoneid, row[0]?row[0]:"00000000");
				    ps_delSpace(phoneid);
				    strcpy(numbertype, row[0]?row[0]:"0");
				    ps_delSpace(numbertype);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}

	strncpy(prefix,phoneid+1,3);


	sprintf(sqlcmd, "select distinct method,number from sub_ars where h_number = '%s' and first_extension = '%s' and extension='%s'",h_number,firstexten,secondexten);

	printf("\nsqlcmd : (%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|1|0|X|");
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket,"|RES|1|0|X|");
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket,"|RES|1|0|X|");
		return 0;
	}
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(method, row[0]?row[0]:"2");
		ps_delSpace(method);
		strcpy(directnumber, row[1]?row[1]:"07000000000");
		ps_delSpace(directnumber);
	}
	mysql_free_result(result);
	result = NULL;

printf("\n[5m[7mMETHOD : (%s)[0m[0m",method);

	if(*method == '0') {
		sprintf(resPacket,"|RES|0|%s|1%3.3s%4.4s|",call_seq,prefix,h_number+strlen(h_number)-4);
	}
	else if(*method == '9') {
		if(strlen(directnumber) == 3)
			sprintf(resPacket,"|RES|9|%s|1%s0%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) == 4)
			sprintf(resPacket,"|RES|9|%s|1%s%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) > 4)
			sprintf(resPacket,"|RES|9|%s|%s|",call_seq,directnumber);
		else 
			sprintf(resPacket,"|RES|9|0|-|");

	}
	else if(*method == '1') {
		sprintf(resPacket,"|RES|1|0|-|");
	}
	else if(*method == '2') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,firstexten,secondexten,call_seq);

		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select option1,tel,option6,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);

                                        strcpy(record,row[3]?row[3]:"");
                                        ps_delSpace(record);
                                        strcpy(crm_070,row[4]?row[4]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row[5]?row[5]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row[6]?row[6]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row[7]?row[7]:"");
                                        ps_delSpace(org_num);
                                        strcpy(option2,row[8]?row[8]:"");
                                        ps_delSpace(option2);
                                        strcpy(class,row[9]?row[9]:"");
                                        ps_delSpace(class);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(strlen(tel) < 7)
			strcpy(tel,"");


                if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
                        sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                        commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                }



		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|2|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|",call_seq,prefix,hunt_num,option1,tel,option6,option2,class);
		else 
			sprintf(resPacket,"|RES|2|%s|%s|%s|%s|%s|%s|%s|",call_seq,hunt_num,option1,tel,option6,option2,class);

	}
	else if(*method == '3') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq > %s order by seq asc",prefix,h_number,firstexten,secondexten,call_seq);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }
		sprintf(resPacket,"|RES|3|0|");
		if(row_num > 20)
			row_num = 20;

		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(hunt_num, row[0]?row[0]:"");
				ps_delSpace(hunt_num);
				strcpy(call_seq, row[1]?row[1]:"0");
				ps_delSpace(call_seq);

		if(strlen(hunt_num) == 4) {
		int j = 0,row_num1;
		memset(fphone_id,0,sizeof(fphone_id));

                if(strlen(hunt_num) == 4) {
                        int j = 0,row_num1;
                        if(mysql_1) {
                        sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

                        printf("\nABSENT : (%s)",sqlcmd);
                        ret = mysql_query(mysql_1, sqlcmd);

                        printf("\nsqlcmd :(%s)",sqlcmd);

                        result_1 = mysql_store_result( mysql_1 );
                        if(result_1) {
                                row_num1 = mysql_num_rows(result_1);
                                if(row_num1 == 0) {
                                        mysql_free_result(result_1);
                                        result_1 = NULL;
                                        continue;
                                }
                                else {
                                        row1 = mysql_fetch_row( result_1 );
                                        if(row1 && row1[1] && *row1[1] == 'Y') {
                                                mysql_free_result(result_1);
                                                result_1 = NULL;
                                                continue;
                                        }

                                        strcpy(crm_070,row1[2]?row1[2]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row1[3]?row1[3]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row1[5]?row1[5]:"");
                                        ps_delSpace(org_num);

                                        memset(tmpcrm,0,sizeof(tmpcrm));
                                        if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
                                                sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                                                commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                                        }
                                }
                        }
                        mysql_free_result(result_1);
                        result_1 = NULL;
                        }
                }

		if(mysql_1) {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
		else
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

		printf("\nFORWARD_INFO : (%s)",sqlcmd);
		ret = mysql_query(mysql_1, sqlcmd);

		printf("\nsqlcmd :(%s)",sqlcmd);

		result_1 = mysql_store_result( mysql_1 );
		if(result_1) {
			row_num1 = mysql_num_rows(result_1);
			if( row_num1 == 0 ) {
				mysql_free_result(result_1);
				result_1 = NULL;
			}	
			else {
				for(j=0;j < row_num1;j++) {
				    row1 = mysql_fetch_row( result_1);
				    if( row1) {
						strcpy(tmp, row1[1]?row1[1]:"00000000000");
						ps_delSpace(tmp);
						strcpy(fromday, row1[2]?row1[2]:"0");
						ps_delSpace(fromday);
						strcpy(totoday, row1[3]?row1[3]:"0");
						ps_delSpace(totoday);
						strcpy(fromtime, row1[4]?row1[4]:"0");
						ps_delSpace(fromtime);
						strcpy(totime, row1[5]?row1[5]:"0");
						ps_delSpace(totime);
						strcpy(kind, row1[6]?row1[6]:"0");
						ps_delSpace(kind);
						strcpy(frommin, row1[7]?row1[7]:"0");
						ps_delSpace(frommin);
						strcpy(tomin, row1[8]?row1[8]:"0");
						ps_delSpace(tomin);

						intfromtime= atoi(fromtime);
						inttotime= atoi(totime);


                                                if(inttotime == 0 && intfromtime==0)
                                                        inttotime = 24;
						if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
                                                        inttotime += 24;
							if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
                                                                tp->tm_hour += 24;
                                                }
						 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
							if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
								if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
								if(atoi(frommin) <= tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
								if(atoi(tomin) > tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
								forward_check = 1;
							}
							if(forward_check) {
							    if(strlen(tmp) == 4) {

								sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
							    }
							    else if(strlen(tmp) == 8) {
								sprintf(fphone_id,"%s",tmp);
							    }
							    else if(strlen(tmp) > 8) {
								sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
							    }
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							else {
								strcpy(kind,"X");
								strcpy(fphone_id,"");
							}
						}
						else {
							strcpy(kind,"X");
							strcpy(fphone_id,"");
						}
					}
					break;
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
		}
					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

						if(datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
									sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
							if(*kind == '3') {
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										datacount++;
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
										datacount++;
								}
								else if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					} ///////
				}
				else {
					if(i == 0)
						sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
					else
						sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
	}
	else if(*method == '4') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension ='%s'",prefix,h_number,firstexten,secondexten);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                sprintf(resPacket,"|RES|4|0|");
                for(j=0; j < 100; j++)
                        strcpy(numlist[j],"");

                for(i=0;i < row_num, i < 100;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        sprintf(numlist[i],"%8.8s",hunt_num);

                                }
                                printf("\n(numlist[i]:(%s)",numlist[i]);
                        }
                }
                mysql_free_result(result);
                result = NULL;

                srand(getpid());
                for(i=0;i < row_num;i++) {
                        randnum = rand()%row_num;
                        strcpy(tmpnum,numlist[i]);
                        strcpy(numlist[i],numlist[randnum]);
                        strcpy(numlist[randnum],tmpnum);

                        printf("\nrow_num:(%d),(%s)",i,numlist[i]);
                        if(i == 99)
                                break;
                }

                for(i=0;i < row_num;i++) {
                        if(strlen(numlist[i]) == 8)
                                sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
                }
	}
        else if(*method == '5') {
		sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' order by lasttime ASC",prefix,h_number,firstexten,secondexten);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                sprintf(resPacket,"|RES|5|0|");
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        if( i == 0)
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        if(i == 0)
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);

                                }
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
	printf("\nresPacket:(%s)",resPacket);
	return 0;
}





/*************************************************************************
* 
*************************************************************************/
int
procRC1()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime;
char    extension[60];
char    call_kinds[6];
char    inner_num[10];
char    caller_inner_num[10];
char    fphone_id[64];
char    context[60];
char    callerid[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    number070[20];
char    cid[30];
char    status[11];
char    tel[21];
char    imid[64],sender[10];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128];
char    tmpBuff[128];
char    bill_type[10];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	class[20],num070[20],senderopt1[10];
char	frommin[5],tomin[5];
int	forward_check = 0;


	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	memset(phoneid,0,sizeof(phoneid));
	memset(kind,0,sizeof(kind));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(number070,0,sizeof(number070));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(resPacket,0,sizeof(resPacket));
        memset(tel,0,sizeof(tel));
        memset(bill_type,0,sizeof(bill_type));
        memset(class,0,sizeof(class));
        memset(num070,0,sizeof(num070));
        memset(status,0,sizeof(status));
        memset(senderopt1,0,sizeof(senderopt1));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 

	if(argv[2] && *argv[2]) 
		sprintf(callerid,"%s",argv[2]);
	else	
		strcpy(prefix,"000");


       t=time(0);
       tp = (struct tm *) localtime(&t);


                sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6, option7,messenger_ip,tel,bill_type,class,cid,070number,domain from number_manage where 070number= '%s'",callerid);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);
                }

                result = mysql_store_result( mysql );
                if(result) {
			sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);

			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;

				sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
					strcpy(option1, row[1]?row[1]:"N");
					ps_delSpace(option1);
					strcpy(option2, row[2]?row[2]:"N");
					ps_delSpace(option2);
					strcpy(option3, row[3]?row[3]:"0");
					ps_delSpace(option3);
					strcpy(inner_num, row[4]?row[4]:"0");
					ps_delSpace(inner_num);
					strcpy(imid, row[5]?row[5]:"---");
					ps_delSpace(imid);
					strcpy(domain, row[6]?row[6]:"---");
					ps_delSpace(domain);
					strcpy(option4, row[7]?row[7]:"N");
					ps_delSpace(option4);
					strcpy(option5, row[8]?row[8]:"N");
					ps_delSpace(option5);
					strcpy(option6, row[9]?row[9]:"0");
					ps_delSpace(option6);
					strcpy(option7, row[10]?row[10]:"N");
					ps_delSpace(option7);
					strcpy(messenger_ip, row[11]?row[11]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					strcpy(tel, row[12]?row[12]:"");
					ps_delSpace(tel);
					strcpy(bill_type, row[13]?row[13]:"N");
					ps_delSpace(bill_type);
					strcpy(class, row[14]?row[14]:"");
					ps_delSpace(class);
					strcpy(cid, row[15]?row[15]:"");
					ps_delSpace(cid);
					strcpy(num070, row[16]?row[16]:"07000000000");
					ps_delSpace(num070);
					strcpy(domain, row[17]?row[17]:"unknown.com");
					ps_delSpace(domain);
				}
				mysql_free_result(result);
				result = NULL;
			}
                }

		sprintf(sqlcmd, "select status,etc,arsflag,serverip from number_list where number='%s'",num070);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 );
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(status, row[0]?row[0]:"1");
					ps_delSpace(status);
					strcpy(ssw_ip, (row[1] && strlen(row[1]) > 5)?row[1]:(argv[4]?argv[4]:SSW_IP));
					ps_delSpace(ssw_ip);
					strcpy(option7, row[2]?row[2]:"N");
					ps_delSpace(option7);
					strcpy(serverip, row[3]?row[3]:"127.0.0.1");
					ps_delSpace(serverip);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		sprintf(prefix,"%3.3s",phoneid+1);


	if(*option1 == 'F') {
		sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		printf("\nsqlcmd :(%s)",sqlcmd);

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}	
			else {

			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(frommin, row[7]?row[7]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[8]?row[8]:"0");
					ps_delSpace(tomin);

printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);

printf("\n from:(%ld), to:(%ld), cur:(%ld)",atol(fromday),atol(totoday),time(0));

					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

					if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
						inttotime += 24;
						if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
							tp->tm_hour += 24;
					}


printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
                                        if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
                                                if(atoi(frommin) <= tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(tomin) > tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                                                forward_check = 1;
                                        }
				}

				if(forward_check == 1) {
				if(strlen(tmp) == 4) {
					sprintf(fphone_id,"%3.3s%4.4s",prefix,tmp);
					if(strcmp(phoneid+1,fphone_id)) {
					if(*forwardnumber) {
printf("\n1111111111111111111:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,tmp,prefix,tmp);
				
					}
					else {
printf("\n2222222222222222222:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,tmp,prefix,tmp);
					}
					}
				    }
				    else if(strlen(tmp) == 8) {
					sprintf(fphone_id,"%s",tmp);
					if(strcmp(phoneid,tmp)) {
					if(*forwardnumber) {
printf("\n1111111111111111111:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"&SIP/1%s&SIP/2%s",fphone_id+1,fphone_id+1);
				
					}
					else {
printf("\n2222222222222222222:option3:(%s)",option3);
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"SIP/1%s&SIP/1%s",fphone_id+1,fphone_id+1);
					}
					}

				    }
				    else if(strlen(tmp) > 8) {
					if(strcmp(phoneid,tmp)) {
					if(*forwardnumber)
					    sprintf(forwardnumber,"&SIP/%s@%s",tmp,ssw_ip);
					else
					    sprintf(forwardnumber,"SIP/%s@%s",tmp,ssw_ip);
printf("\n33333333333333333333333:option3:(%s)-(%s)",option3,forwardnumber);
					}
				   }
				}
				break;
			    }
			}
			mysql_free_result(result);
			result = NULL;
			}
		}
	} /* end of forward number process */

/***
(?-)-(3)
*/


	if(*option1 == 'F') {
		if(strlen(forwardnumber) < 5 && strlen(fphone_id) < 4)
			strcpy(option1,"");
	}
	if(*option1 == 'V') {
		sprintf(sqlcmd, "select uniqueid from voicemail_users where mailbox = '%7.7s' and domain='%s'",phoneid+1,domain);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			strcpy(option1,"");
		}
		mysql_free_result(result);
	}

	printf("\n1111111111111111111111111111111");
	if(strlen(tel) < 8 || !isdigitstr(tel))
		strcpy(tel,"");
	
	sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",phoneid+1,option1,option2,option3,option4,option5,option6,kind,forwardnumber,fphone_id,messenger_ip,imid,domain,inner_num,cid,option7,tmp,number070,sender+4,tel,bill_type,class,num070,status,ssw_ip,senderopt1);
	return 0;

}




/*************************************************************************
* 
*************************************************************************/
int
procRCV()
{
char	sqlcmd[512];
char	tmp[20],messenger_ip[32];
int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime;
char    extension[60];
char    call_kinds[6];
char    inner_num[10];
char    caller_inner_num[10];
char    fphone_id[64];
char    context[60];
char    callerid[60];
char    channel[60];
char    phoneid[60];
char    option1[10];
char    option2[10];
char    option3[10];
char    option4[10];
char    option5[10];
char    option6[10];
char    option7[10];
char    number070[20];
char    cid[30];
char    status[11];
char    tel[21];
char    imid[64],sender[10];
//char    domain[64];
char    ssw_ip[20];
char    forwardnumber[128];
char    tmpBuff[128];
char    bill_type[10];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	class[20],num070[20],senderopt1[10];
char	timeout[10],record[10];
char	inner_forward[128];
char	frommin[5],tomin[5],crm_flag[5];
int	forward_check = 0;
char	org_num[20];
char	inner_kind[10];
char	tmpcrm[128];
char   	bill_type_1[10],record_1[5],num070_1[15],crm_flag_1[5],messenger_ip_1[20],org_num_1[15];
char    notify_num[10];
char    ring_flag[10];
char    inner_method[10],type[10];
char   bizskype[2];

	if(argc < 3)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	memset(phoneid,0,sizeof(phoneid));
	memset(tmpcrm,0,sizeof(tmpcrm));
	memset(notify_num,0,sizeof(notify_num));
	memset(org_num,0,sizeof(org_num));
	memset(tmp,0,sizeof(tmp));
	memset(kind,0,sizeof(kind));
	memset(fphone_id,0,sizeof(fphone_id));
	memset(messenger_ip,0,sizeof(messenger_ip));
	memset(forwardnumber,0,sizeof(forwardnumber));
	memset(option1,0,sizeof(option1));
	memset(option2,0,sizeof(option2));
	memset(option3,0,sizeof(option3));
	memset(option4,0,sizeof(option4));
	memset(option5,0,sizeof(option5));
	memset(option6,0,sizeof(option6));
	memset(option7,0,sizeof(option7));
	memset(number070,0,sizeof(number070));
	memset(imid,0,sizeof(imid));
	memset(cid,0,sizeof(cid));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(inner_forward,0,sizeof(inner_forward));
	memset(inner_kind,0,sizeof(inner_kind));
	memset(inner_method,0,sizeof(inner_method));

	//memset(domain,0,sizeof(domain));
        memset(tmpBuff,0,sizeof(tmpBuff));
        memset(resPacket,0,sizeof(resPacket));
        memset(tel,0,sizeof(tel));
        memset(bill_type,0,sizeof(bill_type));
        memset(class,0,sizeof(class));
        memset(num070,0,sizeof(num070));
        memset(status,0,sizeof(status));
        memset(senderopt1,0,sizeof(senderopt1));
        memset(serverip,0,sizeof(serverip));
        memset(timeout,0,sizeof(timeout));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(type,0,sizeof(type)); 
	memset(ring_flag,0,sizeof(ring_flag)); 
	memset(bizskype,0,sizeof(bizskype)); 
strcpy(bizskype,"N");

	if(argv[2] && *argv[2]) 
		sprintf(prefix,"%3.3s",argv[2]);
	else	
		strcpy(prefix,"000");

	sprintf(sender,"0%7.7s",argv[2]);

	if(argv[3] && *argv[3]) 
		strcpy(extension,argv[3]);

	if(strlen(extension) == 3)
		sprintf(extension,"0%s",inner_num);
	else if(strlen(extension) != 4)
		strcpy(extension,"0000");

	if(argv[4] && *argv[4]) 
		strcpy(ssw_ip,argv[4]);
	else	
		strcpy(ssw_ip,SSW_IP);

	if(argv[5] && *argv[5]) 
		strcpy(callerid,argv[5]);
	else	
		strcpy(callerid,"0000000");

       t=time(0);
       tp = (struct tm *) localtime(&t);

if(*domain)
                sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6, option7,messenger_ip,tel,bill_type,class,cid,070number,defaultip,timeout,inner_digit,record,crm_flag,org_num,inner_method,numbertype,ring_flag from number_manage where phoneid= '0%3.3s%4.4s' and domain='%s'",prefix,extension,domain);
                //sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6, option7,messenger_ip,tel,bill_type,class,cid,070number,defaultip,timeout,inner_digit,record,crm_flag,org_num,inner_method,numbertype,ring_flag from number_manage where phoneid= '0%3.3s%4.4s' and domain='%s'",prefix,extension,domain);
else
                sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6, option7,messenger_ip,tel,bill_type,class,cid,070number,defaultip,timeout,inner_digit,record,crm_flag,org_num,inner_method,numbertype,ring_flag from number_manage where phoneid = '0%3.3s%4.4s'",prefix,extension);
                //sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6, option7,messenger_ip,tel,bill_type,class,cid,070number,defaultip,timeout,inner_digit,record,crm_flag,org_num,inner_method,numbertype,ring_flag from number_manage where phoneid = '0%3.3s%4.4s'",prefix,extension);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);
                }

                result = mysql_store_result( mysql );
                if(result) {
			sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);

			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;

				sprintf(phoneid,"0%3.3s%4.4s",prefix,extension);
				if(strlen(extension)==4 || strlen(extension)==8) {
						sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
						return -1;
				}
				else
						return(errorReturn("ErrInputData____",__FILE__,__LINE__));

			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
					strcpy(option1, row[1]?row[1]:"N");
					ps_delSpace(option1);
					strcpy(option2, row[2]?row[2]:"N");
					ps_delSpace(option2);
					strcpy(option3, row[3]?row[3]:"0");
					ps_delSpace(option3);
					strcpy(inner_num, row[4]?row[4]:"0");
					ps_delSpace(inner_num);
					strcpy(imid, row[5]?row[5]:"---");
					ps_delSpace(imid);
					strcpy(domain, row[6]?row[6]:"unknown.com");
					ps_delSpace(domain);
					strcpy(option4, row[7]?row[7]:"N");
					ps_delSpace(option4);
					strcpy(option5, row[8]?row[8]:"N");
					ps_delSpace(option5);
					strcpy(option6, row[9]?row[9]:"0");
					ps_delSpace(option6);
					strcpy(option7, row[10]?row[10]:"N");
					ps_delSpace(option7);
					strcpy(messenger_ip, row[11]?row[11]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					strcpy(tel, row[12]?row[12]:"");
					ps_delSpace(tel);
					strcpy(bill_type, row[13]?row[13]:"N");
					ps_delSpace(bill_type);
					strcpy(class, row[14]?row[14]:"");
					ps_delSpace(class);
					strcpy(cid, row[15]?row[15]:"");
					ps_delSpace(cid);
					strcpy(num070, row[16]?row[16]:"07000000000");
					ps_delSpace(num070);
					strcpy(serverip, row[17]?row[17]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(timeout, row[18]?row[18]:"30");
					ps_delSpace(timeout);
					strcpy(inner_digit, row[19]?row[19]:"4");
					ps_delSpace(inner_digit);
					strcpy(record, row[20]?row[20]:"");
					ps_delSpace(record);
					strcpy(crm_flag, row[21]?row[21]:"");
					ps_delSpace(crm_flag);
					strcpy(org_num, row[22]?row[22]:"");
					ps_delSpace(org_num);
					strcpy(inner_method, row[23]?row[23]:"");
					ps_delSpace(inner_method);
					strcpy(type, row[24]?row[24]:"1");
					ps_delSpace(type);

				}
				mysql_free_result(result);
				result = NULL;
			}
                }

		sprintf(sqlcmd, "select status,etc,arsflag from number_list where number='%s'",num070);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 );
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(status, row[0]?row[0]:"1");
					ps_delSpace(status);
					strcpy(ssw_ip, (row[1] && strlen(row[1]) > 5)?row[1]:(argv[4]?argv[4]:SSW_IP));
					ps_delSpace(ssw_ip);
					strcpy(option7, row[2]?row[2]:"N");
					ps_delSpace(option7);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}


		if(strncmp(phoneid+4,inner_num,4)) {
                sprintf(sqlcmd, "select phoneid,option1,option2,option3,extension,imid,domain,option4,option5,option6,option7,messenger_ip,cid from number_manage where substr(phoneid,2,3)= '%3.3s' and substr(phoneid,5,4) = '%4.4s' and domain = '%s'",prefix,extension,domain);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			;
                }
                result = mysql_store_result( mysql );
		
                if(result) {
			row_num = mysql_num_rows(result);
			if(row_num == 0 ) ;
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
					strcpy(option1, row[1]?row[1]:"N");
					ps_delSpace(option1);
					strcpy(option2, row[2]?row[2]:"N");
					ps_delSpace(option2);
					strcpy(option3, row[3]?row[3]:"0");
					ps_delSpace(option3);
					strcpy(inner_num, row[4]?row[4]:"0");
					ps_delSpace(inner_num);
					strcpy(imid, row[5]?row[5]:"---");
					ps_delSpace(imid);
					strcpy(domain, row[6]?row[6]:"---");
					ps_delSpace(domain);
					strcpy(option4, row[7]?row[7]:"N");
					ps_delSpace(option4);
					strcpy(option5, row[8]?row[8]:"N");
					ps_delSpace(option5);
					strcpy(option6, row[9]?row[9]:"0");
					ps_delSpace(option6);
					strcpy(option7, row[10]?row[10]:"N");
					ps_delSpace(option7);
					strcpy(messenger_ip, row[11]?row[11]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					//strcpy(cid, row[12]?row[12]:"");
					//ps_delSpace(cid);

				}
			}
		mysql_free_result(result);
		result = NULL;
                }
	}

printf("\noption1::::(%s)",option1);
printf("\noption1::::(%s)",option1);

	if(*option1 == 'F') {
		sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (domain='%s' or domain='') order by executeseq asc", prefix,extension,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		printf("\nsqlcmd :(%s)",sqlcmd);

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				strcpy(option1,"N");
				mysql_free_result(result);
				result = NULL;
			}	
			else {

			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					//strcpy(tmp,"");

					strcpy(fromday, row[2]?row[2]:"0");
					ps_delSpace(fromday);
					strcpy(totoday, row[3]?row[3]:"0");
					ps_delSpace(totoday);
					strcpy(fromtime, row[4]?row[4]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[5]?row[5]:"0");
					ps_delSpace(totime);
					strcpy(kind, row[6]?row[6]:"0");
					ps_delSpace(kind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);
					strcpy(frommin, row[8]?row[8]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[9]?row[9]:"0");
					ps_delSpace(tomin);

printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);

printf("\n from:(%ld), to:(%ld), cur:(%ld)",atol(fromday),atol(totoday),time(0));

					intfromtime= atoi(fromtime);
					inttotime= atoi(totime);

                                        if(intfromtime ==0 && inttotime==0)
                                                inttotime=24;

					if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
						inttotime += 24;
						if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
							tp->tm_hour += 24;
					}


printf("\nfromday:(%s)",fromday);
printf("\ntoday:(%s)",totoday);
printf("\nfromtime:(%s)",fromtime);
printf("\ntotime:(%s)",totime);
printf("\nfrommin:(%s)",frommin);
printf("\ntomin:(%s)",tomin);
                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
                                        if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
                                                if(atoi(frommin) <= tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
                                                if(atoi(tomin) > tp->tm_min) {
                                                        forward_check = 1;
                                                }
                                        }
                                        else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                                                forward_check = 1;
                                        }
				}

				if(forward_check == 1) {
				    if(strlen(tmp) == 4) {
					sprintf(fphone_id,"%3.3s%4.4s",prefix,tmp);
					if(strcmp(phoneid+1,fphone_id)) {
					    sprintf(notify_num,"1%3.3s%4.4s",prefix,tmp);
					if(*forwardnumber) {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"&SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,tmp,prefix,tmp);
				
					}
					else {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s",prefix,tmp);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/2%3.3s%4.4s",prefix,tmp);
					    else
						    sprintf(forwardnumber,"SIP/1%3.3s%4.4s&SIP/2%3.3s%4.4s",prefix,tmp,prefix,tmp);
					}
					}
				    }
				    else if(strlen(tmp) == 8) {
					sprintf(fphone_id,"%s",tmp);
					if(strcmp(phoneid,tmp)) {
					    sprintf(notify_num,"%s",fphone_id);
					if(*forwardnumber) {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"&SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"&SIP/1%s&SIP/2%s",fphone_id+1,fphone_id+1);
				
					}
					else {
					    if(*option3 == '1')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else if(*option3 == '2')
						    sprintf(forwardnumber,"SIP/%s",fphone_id);
					    else
						    sprintf(forwardnumber,"SIP/1%s&SIP/1%s",fphone_id+1,fphone_id+1);
					   
						
					}
					}

				    }
				    else if(strlen(tmp) > 8) {
					if(strcmp(phoneid,tmp)) {
					if(*forwardnumber)
					    sprintf(forwardnumber,"&SIP/%s@%s",tmp,ssw_ip);
					else
					    sprintf(forwardnumber,"SIP/%s@%s",tmp,ssw_ip);
printf("\n33333333333333333333333:option3:(%s)-(%s)",option3,forwardnumber);
					}
				   }
				}
				break;
			    }
			}
			mysql_free_result(result);
			result = NULL;
			}
		}

		if(forward_check == 1 && *notify_num && *kind == '3') {
			sprintf(sqlcmd, "select bill_type,record,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid='0%7.7s' and defaultip = '%s'",notify_num+1,serverip);

			printf("\n(((%s))))",sqlcmd);

			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}
				else {
					row = mysql_fetch_row( result );
					if( row) {
						strcpy(bill_type_1,row[0]?row[0]:"");
						ps_delSpace(bill_type_1);
						strcpy(num070_1,row[1]?row[1]:"");
						ps_delSpace(num070_1);
						strcpy(crm_flag_1,row[2]?row[2]:"");
						ps_delSpace(crm_flag_1);
						strcpy(messenger_ip_1,row[3]?row[3]:"");
						ps_delSpace(messenger_ip_1);
						strcpy(org_num_1,row[4]?row[4]:"");
						ps_delSpace(org_num_1);
					}
				}
				mysql_free_result(result);
				result = NULL;
			}
			if(*bill_type_1 == 'Y') {
				strcpy(option1,"");
				strcpy(forwardnumber,"");
				strcpy(kind,"");
			}
			else if(*bill_type_1 != 'Y' && strlen(messenger_ip_1) > 10 && strcmp(messenger_ip_1,"127.0.0.1") &&  (*crm_flag_1 == 'A' || *crm_flag_1 == 'B' || *crm_flag_1 == 'C')) {
				sprintf(tmpcrm,"%s^%s^%s^%s^%s",num070_1,domain,notify_num+4,callerid,org_num_1);
				commandSendUc(tmpcrm,"NOT",messenger_ip_1,0);
			}
		}
		if(!strncmp(forwardnumber,"SIP",3)) {
			if(!strncmp(tmp,"070",3)) {
				sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}
				else {
					result = mysql_store_result( mysql );
					if(result) {
						row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
					}
				}
			}
			else {
				sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}
				else {
					result = mysql_store_result( mysql );
					if(result) {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
						result = NULL;
					}
				}
			}
			if(row_num > 0)
				strcpy(forwardnumber,"");
		}

	} /* end of forward number process */

/***
(?-)-(3)
*/

	if(*option1 == 'F') {
		if(strlen(forwardnumber) < 5 && strlen(fphone_id) < 4 && strlen(inner_forward) < 3)
			strcpy(option1,"");
	}
	if(*option1 == 'V') {
		sprintf(sqlcmd, "select uniqueid from voicemail_users where mailbox = '%3.3s%4.4s' and domain='%s'",prefix,extension,domain);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			strcpy(option1,"");
		}
		mysql_free_result(result);
	}


	sprintf(sqlcmd, "select 070number,option5,cid,option1 from number_manage where phoneid = '%s' and domain='%s'",sender,domain);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}
	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			strcpy(cid,"");
			strcpy(option5,"N");
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(number070, row[0]?row[0]:"07000000000");
				    ps_delSpace(number070);
				    strcpy(option5, row[1]?row[1]:"N");
				    ps_delSpace(option5);
				    strcpy(cid, row[2]?row[2]:"");
				    ps_delSpace(cid);
				    strcpy(senderopt1, row[3]?row[3]:"");
				    ps_delSpace(senderopt1);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		strcpy(cid,"");
		strcpy(option5,"N");
	}

	if(strlen(cid) < 4) {
		strcpy(cid,"");
		strcpy(option5,"N");
	}
	else 
		strcpy(option5,"Y");
	if(!strcasecmp(cid,"anonymous"))
		strcpy(cid,"00000000000");

	if(*senderopt1 == 'F') {
				sprintf(sqlcmd, "select number from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", sender+1,domain);

				printf("\nsqlcmd :(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}
				else {

						result = mysql_store_result( mysql );
						if(result ) {
							row_num = mysql_num_rows(result);
							if( row_num == 0 ) {
								strcpy(senderopt1,"N");
							}	
						mysql_free_result(result);
						result = NULL;
						}
				}
	}

printf("\ndomain:(%s)",domain);

/***
main:(gw.springwall.co.kr)
domain:(gw.springwall.co.kr)
1111111111111111111111111111111
(5)-(|RES|0829714|N|N|1|N|N|N||||211.32.148.81|jh|gw.springwall.co.kr|9714||N|8?|07075969716|9716||||07075969714|1|12
3.142.128.16|N|),  (RCV)
DBMS connect success
(5)reqPacket:(|ROT|admin@premium_c_4520.lgdacom.net|07082149112|2721003|01033096503||)

*/
	printf("\n1111111111111111111111111111111");
	row_num = 0;
	if(strlen(tel) < 8 || !isdigitstr(tel))
		strcpy(tel,"");
	else {
		if(!strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(tel,"");
	}

	if(*kind == '-' && strlen(inner_forward) < 4)
			strcpy(option1,"");

	if(strlen(inner_forward) > 3) {
		strcpy(option1,"F");
		strcpy(inner_kind,"-");
	}


		
//0438771917||0|0|)
	
	sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",phoneid+1,option1,option2,option3,option4,option5,option6,kind,forwardnumber,fphone_id,messenger_ip,imid,domain,inner_num,cid,option7,tmp,number070,sender+4,tel,bill_type,class,num070,status,ssw_ip,senderopt1,timeout,inner_digit,record,crm_flag,org_num,inner_kind,inner_method,type,ring_flag);
	return 0;
}


/*************************************************************************
* 신규 개통요청	(중앙)		     			*
*************************************************************************/
int
procIRQ()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],servername[60];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) 
		strcpy(name,argv[2]);
	else	
		strcpy(name,"");
	if(argv[3] && *argv[3]) 
		strcpy(tel,argv[3]);
	else
		strcpy(tel,"");

	if(argv[4] && *argv[4]) 
		strcpy(mobile,argv[4]);
	else
		strcpy(mobile,"");

	if(argv[5] && *argv[5]) 
		strcpy(email,argv[5]);
	else
		strcpy(email,"");

	if(argv[6] && *argv[6]) 
		strcpy(c_name,argv[6]);
	else
		strcpy(c_name,"");


	if(PVS == 1 && MASTER == 1) {

/****
	sprintf(sqlcmd, "select domain from request_pool where domain = '%s' and (status = '0' or status = '1' or status ='3')",domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error request_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num != 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|중복(%s)",sqlcmd);
			logCmd();
			return -1;
	}
	mysql_free_result(result);
	result = NULL;
*/



	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd,"INSERT into request_pool( \
	recorddate , id,domain , name ,tel, mobile,email,companyname) \
	values('%s','%s','%s','%s','%s','%s','%s')", \
	tmp,user,domain,name,tel,mobile,email,c_name);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|g(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
	}
    }

    sprintf(resPacket,"|RES|IRQ domain:(%s)-(%s)-(%s)",domain,name,tel);

    return 0;       
}


/*************************************************************************
* 070 신청현황 조회							*
*************************************************************************/
int
procRR7()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid, index=0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],servername[60];
  char	data[128], *tmpP;
  char	id[64],numtype[11],numforbid[256],status[5],number[11],recorddate[20];

/**
id,name,number,type,forbid,status
*/

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/***
		sprintf(sqlcmd,"INSERT into numrequest_pool( \
		recorddate , id,domain , name ,tel, mobile,email,companyname,number,type,forbid) \
		values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
		tmp,user,domain,name,tel,mobile,email,c_name, num070, numtype, numforbid);
*/
	if(PVS == 1) {
		sprintf(sqlcmd, "select recorddate,id,name,number,type,forbid,status from numrequest_pool where domain = '%s' and (status = '0' or status = '1')",domain);
 
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error request_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}
/***
id[64],numtype[5],numforbid[256],status[5],number
*/

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
		sprintf(resPacket,"|RES");

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(recorddate, row[0]?row[0]:tmp);
				strcpy(id, row[1]?row[1]:"unknown");
				strcpy(numtype, row[2]?row[2]:"1");
				strcpy(numforbid, row[3]?row[3]:"");
				strcpy(status, row[4]?row[4]:"");
				strcpy(number, row[5]?row[5]:"");
				ps_delSpace(recorddate);
				ps_delSpace(id);
				ps_delSpace(numtype);
				ps_delSpace(numforbid);
				ps_delSpace(status);
				ps_delSpace(number);

				sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",recorddate,id,numtype,numforbid,status,number);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
    return 0;       
}


/*************************************************************************
* 070 해지요청				(중앙)	 *
0,1,2,3:신규 개통/해지 요청
|DD7|p3146@onnet25.com|심형식|2089-3833|010-5135-6838|p3146@chol.com|ㅅㄷㄴㅅ5|0701101235^1^00,01|
*************************************************************************/
int
procDD7()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid, index=0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],servername[60];
  char	data[128], *tmpP;
  char	num070[12],numtype[11],numforbid[256];
  


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) 
		strcpy(name,argv[2]);
	else	
		strcpy(name,"");
	if(argv[3] && *argv[3]) 
		strcpy(tel,argv[3]);
	else
		strcpy(tel,"");

	if(argv[4] && *argv[4]) 
		strcpy(mobile,argv[4]);
	else
		strcpy(mobile,"");

	if(argv[5] && *argv[5]) 
		strcpy(email,argv[5]);
	else
		strcpy(email,"");

	if(argv[6] && *argv[6]) 
		strcpy(c_name,argv[6]);
	else
		strcpy(c_name,"");

	index =7;
printf("\nc_name:(%s),index=(%d)",c_name,index);
printf("\nc_name:(%s),index=(%d)",c_name,index);
printf("\nc_name:(%s),index=(%d)",c_name,index);

	if(*user == '\0')
		strcpy(user,domain);
	if(*domain == '\0')
		strcpy(domain,user);

	if(argv[index] && *argv[index])
		strcpy(data,argv[index]);
	else
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	/*** num070[12],numtype[11],numforbid[256]; ***/
	if(PVS == 1 && MASTER == 1) {
		while(argv[index] && *argv[index]) {
		if(argv[index] && *argv[index])
			strcpy(data,argv[index]);
		else
			strcpy(data,"");

printf("\nargv[index]:(%s)", data);
printf("\nargv[index]:(%s)", data);
printf("\nargv[index]:(%s)", data);
		strcpy(num070,(tmpP=(char *) strtok(data,"^"))?tmpP:"");
		strcpy(numtype,(tmpP=(char *) strtok(NULL,"^"))?tmpP:"");
		strcpy(numforbid,(tmpP=(char *) strtok(NULL,"^\0"))?tmpP:"");
printf("\nargv[index]:(%s)",num070);
printf("\nargv[index]:(%s)",numtype);
printf("\nargv[index]:(%s)",numforbid);

		sprintf(sqlcmd, "select domain from numrequest_pool where cmd = 'DD7' and domain = '%s'  and number  = '%s' and (status = '0' or status = '1')",domain,num070);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error request_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num != 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|중복오류(%s)",sqlcmd);
				logCmd();
				return -1;
		}
		mysql_free_result(result);
		result = NULL;

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


		/*** num070[12],numtype[2],numforbid[256]; ***/
		sprintf(sqlcmd,"INSERT into numrequest_pool( \
		recorddate , cmd,id,domain , name ,tel, mobile,email,companyname,number,type,forbid,status) \
		values('%s','DD7','%s','%s','%s','%s','%s','%s','%s', '%s',%s,'%s','0')", \
		tmp,user,domain,name,tel,mobile,email,c_name, num070, numtype, numforbid);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
/****
		sprintf(sqlcmd,"UPDATE number_list set status=4,domain='%s'\
		where number = '%s'",domain,num070);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
*/

		index++;

	}
   }
   else
	return -1;

   sprintf(resPacket,"|RES|DD7 domain:(%s)-(%s)-(%s)",domain,user,tel);

    return 0;       
}


/*************************************************************************
* 070 신규 개통요청						(중앙)	 *
0,1,2,3:신규 개통
10,11,12,13: 해지 요청
|II7|p3146@onnet25.com|심형식|2089-3833|010-5135-6838|p3146@chol.com|ㅅㄷㄴㅅ5|0701101235^1^00,01|
|II7|dskim@gw.iyouone.com|c2VpMDY3ejQ=||||S01IV0tiN0d3TXpBcjcvNHZOTEh3Y2F1|07075991255
^1^00,060|
*************************************************************************/
int
procII7()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid, index=0, size;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name1[30],name[60],today[15],tel[20],mobile[20],email[64],c_name1[64],c_name[128];
  unsigned int	tmpNumber;
  char    sqlcmd[512],servername[60];
  char	data[128], *tmpP;
  char	num070[12],numtype[11],numforbid[256];
  


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2]) 
		strcpy(name1,argv[2]);
	else	
		strcpy(name1,"");

/***
	if(ishangul(name1))
		strcpy(name, __base64_encode((unsigned char *)name1, strlen(name1), &size)); 
	else
*/
	strcpy(name,name1);


printf("\nname:((((%s))))",name);

	if(argv[3] && *argv[3]) 
		strcpy(tel,argv[3]);
	else
		strcpy(tel,"");

	if(argv[4] && *argv[4]) 
		strcpy(mobile,argv[4]);
	else
		strcpy(mobile,"");

	if(argv[5] && *argv[5]) 
		strcpy(email,argv[5]);
	else
		strcpy(email,"");

	if(argv[6] && *argv[6]) 
		strcpy(c_name1,argv[6]);
	else
		strcpy(c_name1,"");

/***
	if(ishangul(name1))
		strcpy(c_name, __base64_encode((unsigned char *)c_name1, strlen(c_name1), &size)); 
	else
*/
	strcpy(c_name,c_name1);


	index =7;
printf("\nc_name:(%s),index=(%d)",c_name,index);

	if(argv[index] && *argv[index])
		strcpy(data,argv[index]);
	else
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));


	tmm_currDate_10(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** num070[12],numtype[11],numforbid[256]; ***/
	if(PVS == 1 && MASTER == 1) {
		while(argv[index] && *argv[index]) {
		if(argv[index] && *argv[index])
			strcpy(data,argv[index]);
		else
			strcpy(data,"");

printf("\nargv[index]:(%s)", data);
		strcpy(num070,(tmpP=(char *) strtok(data,"^"))?tmpP:"");
		strcpy(numtype,(tmpP=(char *) strtok(NULL,"^"))?tmpP:"");
		strcpy(numforbid,(tmpP=(char *) strtok(NULL,"^\0"))?tmpP:"");
printf("\nargv[index]:(%s)",numforbid);

		sprintf(sqlcmd, "select domain from numrequest_pool where domain = '%s'  and number  = '%s' and (status = '0' or status = '1' or status ='3')",domain,num070);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|Search Error request_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if(strcmp(hostip,"127.0.0.1") && row_num != 0) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|중복오류(%s)",sqlcmd);
				logCmd();
				return -1;
		}
		mysql_free_result(result);
		result = NULL;

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


		/*** num070[12],numtype[2],numforbid[256]; ***/
		sprintf(sqlcmd,"INSERT into numrequest_pool( \
		recorddate , cmd,id,domain , name ,tel, mobile,email,companyname,number,type,forbid,status) \
		values('%s','II7','%s','%s','%s','%s','%s','%s','%s', '%s',%s,'%s','0')", \
		tmp,user,domain,name,tel,mobile,email,c_name, num070, numtype, numforbid);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"UPDATE number_list set status=4,domain='%s', type= %s\
		where number = '%s'",domain,numtype,num070);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
		index++;

	    }
    }
    else
	return -1;

    sprintf(resPacket,"|RES|II7 domain:(%s)-(%s)-(%s)",domain,user,tel);

    return 0;       
}


/*************************************************************************
*070번호의 개통/반려/삭제 처리
* ************************************************************************/
int
procUU7()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],number[11], status[5];
  char	  numbertype[5];
  char	  forbid[256];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(numbertype,0,sizeof(numbertype)); 
	memset(forbid,0,sizeof(forbid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


	if(argv[2] && *argv[2]) 
                snprintf(number,sizeof(number),"%s",argv[2]);
	else	
		strcpy(number,"");

	if(argv[3] && *argv[3]) 
		strcpy(numbertype,argv[3]);
	else
		strcpy(numbertype,"1");
	if(argv[4] && *argv[4]) 
		strcpy(forbid,argv[4]);
	else
		strcpy(forbid,"");
	if(argv[5] && *argv[5]) 
		strcpy(status,argv[5]);
	else
		strcpy(status,"1");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(PVS == 1 && MASTER == 1) {

		if(*status == '0') {
			sprintf(resPacket, "|ERR|오류(%s, %s)",number,status );
			return(-1);
		}   

	if(*status != '4' &&  *status != '3') {
		sprintf(sqlcmd,"UPDATE numrequest_pool set status = '%s',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",status,tmp,domain,number);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
		}
	else if(*status == '4') {
		sprintf(sqlcmd,"DELETE from numrequest_pool where domain = '%s' and number='%s' and cmd = 'II7'",domain,number);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
	}

    if(*status == '3') {
		argv[2] = number;
		argv[3] = numbertype;
		argv[4] = forbid;
		procU07();
    }
    else if(*status == '2' || *status == '4') {
		sprintf(sqlcmd,"UPDATE number_list set status=0,domain='',\
		forbid_prefix= '' where number = '%s' and status=4",number);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
	    }
    }
    else
	return -1;

    sprintf(resPacket,"|RES|URQ070 domain:(%s)-(%s)=(%s)",domain,number,status);

    return 0;       
}



/*************************************************************************
*070번호의 해지/반려/삭제 처리
*************************************************************************/
int
procDU7()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],status[5];
  char	  forbid[256];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(numbertype,0,sizeof(numbertype)); 
	memset(forbid,0,sizeof(forbid)); 
	memset(resPacket,0,sizeof(resPacket)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


	if(argv[2] && *argv[2]) 
                snprintf(number,sizeof(number),"%s",argv[2]);
	else	
		strcpy(number,"");

	if(argv[3] && *argv[3]) 
		strcpy(numbertype,argv[3]);
	else
		strcpy(numbertype,"1");
	if(argv[4] && *argv[4]) 
		strcpy(forbid,argv[4]);
	else
		strcpy(forbid,"");
	if(argv[5] && *argv[5]) 
		strcpy(status,argv[5]);
	else
		strcpy(status,"0");
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
	

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(PVS == 1 && MASTER == 1) {
		if(*status == '0') {
			sprintf(resPacket, "|ERR|오류(%s, %s)",number,status );
			logCmd();
			return(-1);
		}   

	if(*status != '4' &&  *status != '3') {
			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '%s',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'DD7'",status,tmp,domain,number);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
	}
	else if(*status == '4') {
		sprintf(sqlcmd,"DELETE from numrequest_pool where domain = '%s' and number='%s' and cmd = 'DD7'",domain,number);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
	}


printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
	/*** 해지 마킹 ***/
	//type=1,status = 3, lastdate = NOW(),arsflag='N',admin_flag='N',domain='',org_num='',cust_name=''  where \
	//type=1,status = 3, lastdate = NOW(),arsflag='N',admin_flag='N',domain='',cust_name='',org_num=''  where \

	sprintf(sqlcmd,"UPDATE number_list set \
	type=1,status = 3, lastdate = NOW(),arsflag='N',admin_flag='N',domain='',cust_name=''  where number = '%s'", number);
			
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|update number_list!13(%s, %s,%s)",mysql_error(mysql),sqlcmd,"~~~~");
		logCmd();
		return(-1);
	} 

//	/*** 해지 마킹 ***/
//	sprintf(sqlcmd,"UPDATE number_list set \
//	status = 3,admin_flag='N',lastdate = '%s' where \
//	number = '%s'", tmp,number);
//
//	printf("\nsqlcmd : ((((%s))))",sqlcmd);
//	if( mysql_query(mysql, sqlcmd) ) {
//		sprintf(resPacket, "|ERR| update number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
//		logCmd();
//		//return(-1);
//	}
		//fields_num = mysql_affected_rows(mysql);

	/*** 해지 처리 */
	printf("\nstatus : (%s)",status);
	if(*status == '3') {
		argv[2] = number;
		if(!procD08(0))  {
			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '%s',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'DD7'",status,tmp,domain,number);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}

		}else{ //20150205 add
			return -1;
		}
	}

    }
    else
	return -1;

    sprintf(resPacket,"|RES|DU7 domain:(%s)-(%s)=(%s)",domain,number,status);

    return 0;       
}



/*************************************************************************
*ID delete SMS send
*************************************************************************/
int
procIDD()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],number[11], status[5],from[20];
  char	  numbertype[5];
  char	  forbid[256];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(numbertype,0,sizeof(numbertype)); 
	memset(forbid,0,sizeof(forbid)); 
	memset(from,0,sizeof(from)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	memset(tel,0,sizeof(tel));

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(PVS == 1 && MASTER==1) {
		if(argv[2] && *argv[2]) 
			strcpy(tel,argv[2]);
		if(argv[3] && *argv[3]) 
			strcpy(from,argv[3]);
		if(argv[4] && *argv[4]) 
			strcpy(sqlcmd,argv[4]);

		 smsSendToGW(sqlcmd,tel,from);
	}
	else 
		return -1;
    sprintf(resPacket,"|IDD|tel:(%s),message:(%s)",tel,sqlcmd);

    return 0;       
}



/*************************************************************************
*070번호의 개통요청 전체삭제
*************************************************************************/
int
procDDD()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],number[11], status[5];
  char	  numbertype[5];
  char	  forbid[256];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(numbertype,0,sizeof(numbertype)); 
	memset(forbid,0,sizeof(forbid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(PVS == 1 && MASTER==1) {
		if(*status == '0') {
			sprintf(resPacket, "|ERR|오류!(%s, %s)",number,status );
			return(-1);
		}   

		sprintf(sqlcmd,"DELETE from numrequest_pool where domain = '%s'",domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
		/*** 삭제 처리 */
	}
	else 
		return -1;
    sprintf(resPacket,"|DDD|domain:(%s)",domain);

    return 0;       
}


/*************************************************************************
*개통/반려/삭제 처리
*************************************************************************/
int
procURQ()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0;
  char tmp[100],name[30],today[15],tel[20],mobile[20],email[64],c_name[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],targetdomain[60], status[5];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


	if(argv[2] && *argv[2]) 
		strcpy(targetdomain,argv[2]);
	else	
		strcpy(targetdomain,"");

	if(argv[3] && *argv[3]) 
		strcpy(status,argv[3]);
	else
		strcpy(status,"0");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


	if(PVS == 1 && MASTER == 1) {
		if(*status == '0') {
			sprintf(resPacket, "|ERR|오류(%s, %s)",targetdomain,status );
			return(-1);
		}   

		if(*status != '4') {
			sprintf(sqlcmd,"UPDATE request_pool set status = '%s',recorddate='%s' where domain = '%s'",status,tmp,targetdomain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
		}
		else {
			sprintf(sqlcmd,"DELETE from request_pool where domain = '%s'",targetdomain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
		}

		/*** 개통 처리 */
		if(*status == '3') {
			strcpy(domain,targetdomain);
			procIIP("211.32.148.81");
		}
    }

    sprintf(resPacket,"|RES|URQ domain:(%s)-(%s)",domain,name);

    return 0;       
}



/*************************************************************************
* 포워팅 정보 삭제						     *
*************************************************************************/
int
procDFW()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0, i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],num070[20];
	char	sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(seq,0,sizeof(seq)); 
	memset(num070,0,sizeof(num070)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(forward_num,argv[3]);
	else
		strcpy(forward_num,"");

    tel_string(forward_num);
    strcpy(forward_num,_tmpbuf);

    domain_string(domain);

	if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);

		sprintf(sqlcmd, "select 070number from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					    strcpy(num070, row[0]?row[0]:"00000000");
					    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	else {
		if(argv[4] && *argv[4]) 
			sprintf(phoneid, "%s", argv[4]);
		else {
			//return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid, "1%3.3s%4.4s", prefix,inner_num);

		}
		sprintf(prefix,"%3.3s",phoneid+1);
}
	
/*******************
    if(PVS == 1) {
		sprintf(sqlcmd, "select phoneid from number_manage where substr(phoneid,2,7)= '%7.7s' and domain='%s'",phoneid +1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			ps_delSpace(phoneid);
		}

		mysql_free_result(result);
		result = NULL;
	}
*/


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** number_manage ***/
	sprintf(sqlcmd,"DELETE from forward_number \
	where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='')",\
	phoneid+1, domain);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	/*** number_manage ***/
	if(strlen(phoneid) == 8)
		sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'N' \
		where phoneid= '0%7.7s' and domain='%s'",\
		phoneid+1,domain);
	else
		sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'N' \
		where phoneid= '0%7.7s' and domain='%s'",\
		phoneid,domain);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(commandBuf,"|DFW|%s@%s|%s|%s|%s|",user,domain,inner_num,forward_num,phoneid);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DFW|%s@%s|%s|%s|%s|",user,domain,inner_num,forward_num,phoneid);
		sprintf(resPacket,"|RES|DFW userid:(%s)-(%s)",user,forward_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DFW')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|DFW userid:(%s)-(%s)-(%s)",user,num070,forward_num);
	return 0;       
}



/*************************************************************************
* 보이스메일 정보 삭제						     *
*************************************************************************/
int
procDVM()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
 char    sqlcmd[512],forward_num[30],mailbox[64];


    memset(email,0,sizeof(email));
    memset(passwd,0,sizeof(passwd));
    memset(sqlcmd,0,sizeof(sqlcmd));
    memset(prefix,0,sizeof(prefix));
/****
    if (isMailList(argv[1])     return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

    strcat(email, user);
    strcat(email, "@");
    strcat(email, domain);

    if(argv[2] && *argv[2])
        strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    domain_string(domain);

    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(phoneid,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag = 1;

			sprintf(prefix,"%3.3s",phoneid+1);
	}

/*******************
    if(PVS == 1) {
		sprintf(sqlcmd, "select phoneid from number_manage where substr(phoneid,2,7) = '%7.7s' and domain='%s'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			ps_delSpace(phoneid);
		}

		mysql_free_result(result);
		result = NULL;
		sprintf(phoneid,"1%s%s",prefix,inner_num);
	}
************/

    tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	/*** number_manage ***/
	sprintf(sqlcmd,"DELETE from voicemail_users \
	where mailbox = '%7.7s'",\
	phoneid+1);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s)",sqlcmd);
		logCmd();
		//return(-1);
	}

	/*** number_manage ***/
	sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'N',option8='1' \
	where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s)",sqlcmd);
		logCmd();
		//return(-1);
	}
	sprintf(resPacket,"|RES|DVM userid:(%s)-(%s)",user,inner_num);
	//_tcpWrite(masterFd, resPacket, strlen(resPacket));


	//tcpWrite(masterFd,resPacket);
	sprintf(commandBuf,"|DVM|%s@%s|%s|%s",user,domain,inner_num,phoneid);

	if(PVS == 1 && MASTER == 1) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				 tmm_currDate(YYYYMMDDHHMMSS,today);
				 sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DVM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DVM|%s@%s|%s|%s",user,domain,inner_num,phoneid);
		sprintf(resPacket,"|RES|DVM userid:(%s)-(%s)",user,inner_num);
		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DVM')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    sprintf(resPacket,"|RES|DVM userid:(%s)-(%s)",user,inner_num);
    return 0;       
}

/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRC9()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0,intbreakfrom=0,intbreakto=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],frommin[10],tomin[10],kind[10],etc[10];
  char	breakfrom[10],breakto[10];
  char	breakfrommin[10],breaktomin[10];
  char	conn_method[10],forward_num[20];
  char	breakconn_method[10],breakforward_num[20];
  char	classresult[100];

	int	intfrommin, inttomin;
	int	intbreakfrommin, intbreaktomin;
        struct  tm      *tp;
        time_t  t;


        t = time(0);
        tp = (struct tm *) localtime(&t);

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(breakfrom,0,sizeof(breakfrom)); 
	memset(breakto,0,sizeof(breakto)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(breakconn_method,0,sizeof(breakconn_method)); 
	memset(breakforward_num,0,sizeof(breakforward_num)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2]) {
		strcpy(phoneid,argv[2]);
		sprintf(prefix,"%3.3s",phoneid+1);
	}
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}
    if(argv[3] && *argv[3])
		strcpy(etc,argv[3]);
    else 
	strcpy(etc,"1");

	if(!isdigitstr(etc))
		strcpy(etc,"1");
		

	    domain_string(domain);
	    /*** number_manage ***/
	    {
		sprintf(sqlcmd, "select option2,class,defaultip from number_manage where substr(phoneid,2,7) = '%7.7s' and domain='%s'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if( row) {
			strcpy(option2, row[0]?row[0]:"0");
			strcpy(class, row[1]?row[1]:"default1");
			strcpy(serverip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(option2);
			ps_delSpace(class);
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	    }
	sprintf(resPacket,"|RES|%s|%s",option2,class);

	if((*option2 == 'K' || *option2 == 'Z') && !strncmp(class+3,"work",4)) {
		if(*etc == '1')
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'in' or kind = 'break') and defaultip = '%s' order by kind asc",prefix,class, serverip);
		else if(*etc == '6')
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'sain' or kind = 'break') and defaultip='%s' order by kind asc",prefix,class, serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			if(tp->tm_wday == 0)
				sprintf(resPacket+strlen(resPacket),"|sunin^0^0^0^0^0^^");
			else if(tp->tm_wday == 6)
				sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^0^^");
			else
				sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");
			return 0;
		}
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					if(row[0] && !strncasecmp(row[0],"break",5)) {
						strcpy(breakfrom,(row[1]?row[1]:"0"));
						strcpy(breakto,(row[2]?row[2]:"0"));

						strcpy(breakfrommin,(row[4]?row[4]:"0"));
						strcpy(breaktomin,(row[5]?row[5]:"0"));

						strcpy(breakconn_method,(row[6]?row[6]:"0"));
						strcpy(breakforward_num,(row[7]?row[7]:""));

						ps_delSpace(breakfrom);
						ps_delSpace(breakto);
						ps_delSpace(breakfrommin);
						ps_delSpace(breaktomin);
						ps_delSpace(breakconn_method);
						ps_delSpace(breakforward_num);

						ps_delSpace(etc);

						intbreakfrom = atoi(breakfrom);
						intbreakto = atoi(breakto);
						intbreakfrommin = atoi(breakfrommin);
						intbreaktomin = atoi(breaktomin);

printf("\n[7m[5m(%s)breakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto,row[0]);
printf("\n[7m[5mbreakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto);

						if(intbreakto < intbreakfrom) {
							intbreakto += 24;
							if(tp->tm_hour < intbreakto && tp->tm_hour < intbreakfrom)
								tp->tm_hour += 24;
						}

printf("\n[7m[5mbreakfrom:(%d), breakto:(%d)[0m[0m",intbreakfrom,intbreakto);
printf("\n[7m[5mbreakfrommin:(%d), breaktomin:(%d)[0m[0m",intbreakfrommin,intbreaktomin);
/****
						if(intbreakto <= intbreakfrom)
							intbreakto = intbreakto+24;
*/
						if( tp->tm_hour >= intbreakfrom  && tp->tm_hour <= intbreakto) {
							if( tp->tm_hour == intbreakfrom) {
								if(intbreakfrommin <= tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}

							}
							if( tp->tm_hour == intbreakto) {
								if(intbreaktomin > tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}
							}
						}
						else  {
							strcpy(breakfrom,"0");
							strcpy(breakto,"0");
							strcpy(breakfrommin,"0");
							strcpy(breaktomin,"0");
							intbreakfrom = 0;
							intbreakto = 0;
							intbreakfrommin = 0;
							intbreaktomin = 0;
						}
						continue;
					}
printf("\n==================================================================");

					strcpy(kind, row[0]?row[0]:"0");
					strcpy(fromtime, row[1]?row[1]:"0");
					strcpy(totime, row[2]?row[2]:"24");
					strcpy(etc, row[3]?row[3]:"");
					strcpy(frommin,(row[4]?row[4]:"0"));
					strcpy(tomin,(row[5]?row[5]:"0"));

					strcpy(conn_method,(row[6]?row[6]:"0"));
					strcpy(forward_num,(row[7]?row[7]:""));

					ps_delSpace(kind);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(frommin);
					ps_delSpace(tomin);
					ps_delSpace(conn_method);
					ps_delSpace(forward_num);
					ps_delSpace(etc);

printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
					if(tp->tm_wday == 6 && !strcasecmp(kind,"sain")) {
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto !=0 )
								sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
							else
								sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^0^^");
					}
					if(tp->tm_wday != 6 && !strcasecmp(kind,"in")) {
/***
|RES|Z|078work|in^09^30^18^30^2^01050990712^)
*/
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto != 0)
								sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
							else
								sprintf(resPacket+strlen(resPacket),"|in^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");

					}
			    }
			}
			mysql_free_result(result);
			result = NULL;
		}
	    }
	printf("\nresPacket : (((%s)))",resPacket);
	return 0;
}



/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRC2()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0,intbreakfrom=0,intbreakto=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],frommin[10],tomin[10],kind[10],etc[10];
  char	breakfrom[10],breakto[10];
  char	breakfrommin[10],breaktomin[10];
  char	conn_method[10],forward_num[20];
  char	breakconn_method[10],breakforward_num[20];
  char	classresult[100];

	int	intfrommin, inttomin;
	int	intbreakfrommin, intbreaktomin;
        struct  tm      *tp;
        time_t  t;


        t = time(0);
        tp = (struct tm *) localtime(&t);

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(breakfrom,0,sizeof(breakfrom)); 
	memset(breakto,0,sizeof(breakto)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(breakconn_method,0,sizeof(breakconn_method)); 
	memset(breakforward_num,0,sizeof(breakforward_num)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}
    if(argv[3] && *argv[3])
		strcpy(etc,argv[3]);
    else 
	strcpy(etc,"1");

	if(!isdigitstr(etc))
		strcpy(etc,"1");
		

	strcpy(prefix,inner_num);
	sprintf(phoneid,"1%s%s",inner_num,inner_num);

	    domain_string(domain);
	    /*** number_manage ***/
	    {
		sprintf(sqlcmd, "select option2,class,defaultip from number_manage where substr(phoneid,2,3) = '%3.3s' and domain='%s'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if( row) {
			strcpy(option2, row[0]?row[0]:"0");
			strcpy(class, row[1]?row[1]:"default1");
			strcpy(serverip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(option2);
			ps_delSpace(class);
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	    }
	sprintf(resPacket,"|RES|%s|%s",option2,class);

	if((*option2 == 'K' || *option2 == 'Z') && !strncmp(class+3,"work",4)) {
		if(*etc == '1')
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'in' or kind = 'break') and defaultip = '%s' order by kind asc",prefix,class, serverip);
		else if(*etc == '6')
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'sain' or kind = 'break') and defaultip='%s' order by kind asc",prefix,class, serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
                                if(tp->tm_wday == 0)
                                        sprintf(resPacket+strlen(resPacket),"|sunin^0^0^0^0^0^^");
                                else if(tp->tm_wday == 6)
                                        sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^0^^");
                                else
                                        sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");
                                return 0;
		}
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					if(row[0] && !strncasecmp(row[0],"break",5)) {
						strcpy(breakfrom,(row[1]?row[1]:"0"));
						strcpy(breakto,(row[2]?row[2]:"0"));

						strcpy(breakfrommin,(row[4]?row[4]:"0"));
						strcpy(breaktomin,(row[5]?row[5]:"0"));

						strcpy(breakconn_method,(row[6]?row[6]:"0"));
						strcpy(breakforward_num,(row[7]?row[7]:""));

						ps_delSpace(breakfrom);
						ps_delSpace(breakto);
						ps_delSpace(breakfrommin);
						ps_delSpace(breaktomin);
						ps_delSpace(breakconn_method);
						ps_delSpace(breakforward_num);

						ps_delSpace(etc);

						intbreakfrom = atoi(breakfrom);
						intbreakto = atoi(breakto);
						intbreakfrommin = atoi(breakfrommin);
						intbreaktomin = atoi(breaktomin);

printf("\n[7m[5m(%s)breakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto,row[0]);
printf("\n[7m[5mbreakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto);

						if(intbreakto < intbreakfrom) {
							intbreakto += 24;
							if(tp->tm_hour < intbreakto && tp->tm_hour < intbreakfrom)
								tp->tm_hour += 24;
						}

printf("\n[7m[5mbreakfrom:(%d), breakto:(%d)[0m[0m",intbreakfrom,intbreakto);
printf("\n[7m[5mbreakfrommin:(%d), breaktomin:(%d)[0m[0m",intbreakfrommin,intbreaktomin);
/****
						if(intbreakto <= intbreakfrom)
							intbreakto = intbreakto+24;
*/
						if( tp->tm_hour >= intbreakfrom  && tp->tm_hour <= intbreakto) {
							if( tp->tm_hour == intbreakfrom) {
								if(intbreakfrommin <= tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}

							}
							if( tp->tm_hour == intbreakto) {
								if(intbreaktomin > tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}
							}
						}
						else  {
							strcpy(breakfrom,"0");
							strcpy(breakto,"0");
							strcpy(breakfrommin,"0");
							strcpy(breaktomin,"0");
							intbreakfrom = 0;
							intbreakto = 0;
							intbreakfrommin = 0;
							intbreaktomin = 0;
						}
						continue;
					}
printf("\n==================================================================");

					strcpy(kind, row[0]?row[0]:"0");
					strcpy(fromtime, row[1]?row[1]:"0");
					strcpy(totime, row[2]?row[2]:"24");
					strcpy(etc, row[3]?row[3]:"");
					strcpy(frommin,(row[4]?row[4]:"0"));
					strcpy(tomin,(row[5]?row[5]:"0"));

					strcpy(conn_method,(row[6]?row[6]:"0"));
					strcpy(forward_num,(row[7]?row[7]:""));

					ps_delSpace(kind);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(frommin);
					ps_delSpace(tomin);
					ps_delSpace(conn_method);
					ps_delSpace(forward_num);
					ps_delSpace(etc);

printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
					if(tp->tm_wday == 6 && !strcasecmp(kind,"sain")) {
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto !=0 )
								sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
							else
								sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^0^^");
					}
					if(tp->tm_wday != 6 && !strcasecmp(kind,"in")) {
/***
|RES|Z|078work|in^09^30^18^30^2^01050990712^)
*/
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto != 0)
								sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
							else
								sprintf(resPacket+strlen(resPacket),"|in^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");

					}
			    }
			}
			mysql_free_result(result);
			result = NULL;
		}
	    }
	printf("\nresPacket : (((%s)))",resPacket);
	return 0;
}


/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRC3()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0,intbreakfrom=0,intbreakto=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],frommin[10],tomin[10],kind[10],etc[10];
  char	breakfrom[10],breakto[10];
  char	breakfrommin[10],breaktomin[10];
  char	conn_method[10],forward_num[20];
  char	breakconn_method[10],breakforward_num[20];
  char	classresult[100];

	int	intfromtime, inttotime;
	int	intfrommin, inttomin,off=0;
	int	intbreakfrommin, intbreaktomin;
    struct  tm      *tp;
    time_t  t;


    t = time(0);
    tp = (struct tm *) localtime(&t);

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(breakfrom,0,sizeof(breakfrom)); 
	memset(breakto,0,sizeof(breakto)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(breakconn_method,0,sizeof(breakconn_method)); 
	memset(breakforward_num,0,sizeof(breakforward_num)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(prefix,0,sizeof(prefix)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(etc,argv[3]);
    else 
	strcpy(etc,"1");

	if(!isdigitstr(etc))
		strcpy(etc,"1");
		

	//strcpy(prefix,inner_num);
	//sprintf(phoneid,"1%s%s",inner_num,inner_num);

	    domain_string(domain);
	    /*** number_manage ***/
	    {
		sprintf(sqlcmd, "select phoneid,option2,class,defaultip from number_manage where domain='%s' and substr(phoneid,5,4) = '%4.4s'",domain,inner_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}

		row = mysql_fetch_row( result );
		if( row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				strcpy(option2, row[1]?row[1]:"0");
				strcpy(class, row[2]?row[2]:"default1");
				strcpy(serverip, row[3]?row[3]:"127.0.0.1");
				ps_delSpace(phoneid);
				ps_delSpace(option2);
				ps_delSpace(class);
				ps_delSpace(serverip);
				strncpy(prefix,phoneid+1,3);
		}
		mysql_free_result(result);
		result = NULL;
	    }

	printf("\nphoneid:((((%s))))",phoneid);
	printf("\nprefix:((((%s))))",prefix);
	sprintf(resPacket,"|RES|%s|%s",option2,class);  ///////////////////////////

tmm_currDate(YYYYMMDDHHMMSS,today);
sprintf(tmp,"%4.4s%2.2s%2.2s",today,today+4,today+6);


	sprintf(sqlcmd, "select domain from off_day where domain='%s' and off_day = '%s'",domain,tmp);
	printf("\nsqlcmd:(%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
            sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
            logCmd();
        }
	else {
		result = mysql_store_result( mysql );
		if(!result ) {
			return -1;
		}
		else {
				row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;

				if(row_num > 0) {
					off = 1;
				}
		}
	}

	row_num = 0;
	if((*option2 == 'K' || *option2 == 'Z') && strstr(class,"work")) {

		if(off == 1) {
			sprintf(resPacket+strlen(resPacket),"|off^23^59^23^59^%s^%s^",conn_method,forward_num);
			mysql_free_result(result);
			result = NULL;
			return 0;
		}
		if(tp->tm_wday == 6)
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'sain' or kind = 'break') and defaultip='%s' order by kind asc",prefix,class, serverip);
		else if(tp->tm_wday == 0)
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'sunin' or kind = 'break') and defaultip='%s' order by kind asc",prefix,class, serverip);
		else
			sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and (kind = 'in' or kind = 'break') and defaultip = '%s' order by kind asc",prefix,class, serverip);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
                                if(tp->tm_wday == 0)
                                        sprintf(resPacket+strlen(resPacket),"|sunin^0^0^0^0^0^^");
                                else if(tp->tm_wday == 6)
                                        sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^0^^");
                                else
                                        sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");
                                return 0;

		}
		else {
			for(i=0;i < row_num;i++) {

				tp = (struct tm *) localtime(&t);
			    row = mysql_fetch_row( result);
			    if( row) {
					if(row[0] && !strncasecmp(row[0],"break",5)) {
						strcpy(breakfrom,(row[1]?row[1]:"0"));
						strcpy(breakto,(row[2]?row[2]:"0"));

						strcpy(breakfrommin,(row[4]?row[4]:"0"));
						strcpy(breaktomin,(row[5]?row[5]:"0"));

						strcpy(breakconn_method,(row[6]?row[6]:"0"));
						strcpy(breakforward_num,(row[7]?row[7]:""));

						ps_delSpace(breakfrom);
						ps_delSpace(breakto);
						ps_delSpace(breakfrommin);
						ps_delSpace(breaktomin);
						ps_delSpace(breakconn_method);
						ps_delSpace(breakforward_num);

						ps_delSpace(etc);

						intbreakfrom = atoi(breakfrom);
						intbreakto = atoi(breakto);
						intbreakfrommin = atoi(breakfrommin);
						intbreaktomin = atoi(breaktomin);

printf("\n[7m[5m(%s)breakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto,row[0]);
printf("\n[7m[5mbreakfrom:(%s), breakto:(%s)[0m[0m",breakfrom,breakto);

						if(intbreakto < intbreakfrom) {
							intbreakto += 24;
							if((tp->tm_hour < intbreakto && tp->tm_hour < intbreakfrom) || (intbreakfrom+24 == intbreakto && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}

printf("\n[7m[5mbreakfrom:(%d), breakto:(%d)[0m[0m",intbreakfrom,intbreakto);
printf("\n[7m[5mbreakfrommin:(%d), breaktomin:(%d)[0m[0m",intbreakfrommin,intbreaktomin);
/****
						if(intbreakto <= intbreakfrom)
							intbreakto = intbreakto+24;
*/
						if( tp->tm_hour >= intbreakfrom  && tp->tm_hour <= intbreakto) {

							if( tp->tm_hour == intbreakfrom && tp->tm_hour == intbreakto) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;

								}
							}
							else if( tp->tm_hour == intbreakfrom && tp->tm_hour < intbreakto) {
								if(intbreakfrommin <= tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}
							}
							else if( tp->tm_hour > intbreakfrom && tp->tm_hour == intbreakto) {
								if(intbreaktomin > tp->tm_min);
								else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
								}
							}
							else if( tp->tm_hour > intbreakfrom && tp->tm_hour < intbreakto) ;
							else {
									strcpy(breakfrom,"0");
									strcpy(breakto,"0");
									strcpy(breakfrommin,"0");
									strcpy(breaktomin,"0");
									intbreakfrom = 0;
									intbreakto = 0;
									intbreakfrommin = 0;
									intbreaktomin = 0;
							}
			

						}
						else  {
							strcpy(breakfrom,"0");
							strcpy(breakto,"0");
							strcpy(breakfrommin,"0");
							strcpy(breaktomin,"0");
							intbreakfrom = 0;
							intbreakto = 0;
							intbreakfrommin = 0;
							intbreaktomin = 0;
						}
						continue;
					}

					strcpy(kind, row[0]?row[0]:"0");
					strcpy(fromtime, row[1]?row[1]:"0");
					strcpy(totime, row[2]?row[2]:"24");
					strcpy(etc, row[3]?row[3]:"");
					strcpy(frommin,(row[4]?row[4]:"0"));
					strcpy(tomin,(row[5]?row[5]:"0"));

					strcpy(conn_method,(row[6]?row[6]:"0"));
					strcpy(forward_num,(row[7]?row[7]:""));

					ps_delSpace(kind);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(frommin);
					ps_delSpace(tomin);
					ps_delSpace(conn_method);
					ps_delSpace(forward_num);
					ps_delSpace(etc);

						intfromtime = atoi(fromtime);
						inttotime = atoi(totime);
						intfrommin = atoi(frommin);
						inttomin = atoi(tomin);


printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
printf("\nfromtime:(%s),totime:(%s)",fromtime,totime);
					if(tp->tm_wday == 6 && !strcasecmp(kind,"sain")) {
						if(off == 1) {
								sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^%s^%s^",conn_method,forward_num);
								mysql_free_result(result);
								result = NULL;
								return 0;
						}
					
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto != 0 ) {

							if(intbreakto < intbreakfrom) {
								intbreakto += 24;
								if((tp->tm_hour < intbreakto && tp->tm_hour < intbreakfrom) || (intbreakfrom+24 == intbreakto && intbreakfrommin > intbreaktomin))
									tp->tm_hour += 24;
							}
							if(intbreakto <= intbreakfrom)
								intbreakto = intbreakto+24;
							if( tp->tm_hour >= intbreakfrom  && tp->tm_hour <= intbreakto) {

								if( tp->tm_hour == intbreakfrom && tp->tm_hour == intbreakto) {
									if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour == intbreakfrom && tp->tm_hour < intbreakto) {
									if(intbreakfrommin <= tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour > intbreakfrom && tp->tm_hour == intbreakto) {
									if(intbreaktomin > tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour > intbreakfrom && tp->tm_hour < intbreakto) 
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
								else {
										sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);

								}
							}
							else
								sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
							}
							else
								sprintf(resPacket+strlen(resPacket),"|sain^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|sain^0^0^0^0^%s^%s^",conn_method,forward_num);
					}
					else if(tp->tm_wday == 0 && !strcasecmp(kind,"sunin")) {
						if(off == 1) {
printf("\n[7m000000000000000000000000[0m");
								sprintf(resPacket+strlen(resPacket),"|sunin^0^0^0^0^%s^%s^",conn_method,forward_num);
								mysql_free_result(result);
								result = NULL;
								return 0;
						}
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
printf("\n[7m11111111111111111111111111[0m");
							if(intbreakfrom != 0 && intbreakto !=0 ) {

							if(intbreakto < intbreakfrom) {
								intbreakto += 24;
								if((tp->tm_hour < intbreakto && tp->tm_hour < intbreakfrom) || (intbreakfrom+24 == intbreakto && intbreakfrommin > intbreaktomin))
									tp->tm_hour += 24;
							}
							if(intbreakto <= intbreakfrom)
								intbreakto = intbreakto+24;
							if( tp->tm_hour >= intbreakfrom  && tp->tm_hour <= intbreakto) {

								if( tp->tm_hour == intbreakfrom && tp->tm_hour == intbreakto) {
									if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour == intbreakfrom && tp->tm_hour < intbreakto) {
									if(intbreakfrommin <= tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour > intbreakfrom && tp->tm_hour == intbreakto) {
									if(intbreaktomin > tp->tm_min)
										sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
									else
										sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
								}
								else if( tp->tm_hour > intbreakfrom && tp->tm_hour < intbreakto) 

									sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
								else
									sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
							}
							else
								sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);

						}
						else  {
							printf("\n[7m222222222222222222222222222[0m");
							sprintf(resPacket+strlen(resPacket),"|sunin^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|sunin^0^0^0^0^%s^%s^",conn_method,forward_num);
					}
					else if(!strcasecmp(kind,"in")) {
						if(off == 1) {
								sprintf(resPacket+strlen(resPacket),"|in^23^59^23^59^%s^%s^",conn_method,forward_num);
								mysql_free_result(result);
								result = NULL;
								return 0;
						}
/***
|RES|Z|078work|in^09^30^18^30^2^01050990712^)
*/
						if(atoi(fromtime) != 0 && atoi(totime) != 0) {
							if(intbreakfrom != 0 && intbreakto != 0)
								sprintf(resPacket+strlen(resPacket),"|break^%s^%s^%s^%s^%s^%s^",breakfrom,breakfrommin,breakto,breaktomin,breakconn_method,breakforward_num);
							else
								sprintf(resPacket+strlen(resPacket),"|in^%s^%s^%s^%s^%s^%s^",fromtime,frommin,totime,tomin,conn_method,forward_num);
						}
						else 
							sprintf(resPacket+strlen(resPacket),"|in^0^0^0^0^0^^");

					}
			    }
			}
			mysql_free_result(result);
			result = NULL;
		}
	    }

	printf("\nresPacket : (((%s)))",resPacket);
	return 0;
}


/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRCR()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],kind[10],etc[10];
  char	classresult[100];
  char	frommin[10],tomin[10],conn_method[10],forward_num[20];


	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(to,0,sizeof(to)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(serverip,0,sizeof(serverip)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}
	strcpy(prefix,inner_num);
	sprintf(phoneid,"1%s%s",inner_num,inner_num);

	    domain_string(domain);
	    /*** number_manage ***/
	    {
		sprintf(sqlcmd, "select option2,class,defaultip from number_manage where substr(phoneid,2,3) = '%3.3s' and domain='%s' and option2 <> 'N'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}


		row = mysql_fetch_row( result );
		if( row) {
			strcpy(option2, row[0]?row[0]:"0");
			strcpy(class, row[1]?row[1]:"default1");
			strcpy(serverip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(option2);
			ps_delSpace(class);
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	    }
	sprintf(resPacket,"|RES|%s|%s",option2,class);

	if((*option2 == 'K' || *option2 == 'Z') && !strncmp(class+3,"work",4)) {

		sprintf(sqlcmd, "select kind,fromtime,totime,etc,frommin,tomin,conn_method,number from color_class where prefix='%3.3s' and class = '%s' and defaultip='%s'",prefix,class,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return -1;
		}
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					strcpy(kind, row[0]?row[0]:"0");
					strcpy(fromtime, row[1]?row[1]:"0");
					strcpy(totime, row[2]?row[2]:"24");
					strcpy(etc, row[3]?row[3]:"");
					strcpy(frommin, row[4]?row[4]:"0");
					strcpy(tomin, row[5]?row[5]:"0");
					strcpy(conn_method, row[6]?row[6]:"0");
					strcpy(forward_num, row[7]?row[7]:"");

					ps_delSpace(kind);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(etc);
					ps_delSpace(frommin);
					ps_delSpace(tomin);
					ps_delSpace(conn_method);
					ps_delSpace(forward_num);
			    }
			
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s",kind,fromtime,frommin,totime,tomin,etc,conn_method,forward_num);
			}
			mysql_free_result(result);
			result = NULL;
		}
	    }
	return 0;
}



/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRC5()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],kind[10],etc[10];
  char	classresult[100];
  char	content[65],tmpdomain[64];
  char	frommin[10],tomin[10],conn_method[10],forward_num[20];


	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(tmpdomain,0,sizeof(tmpdomain)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(to,0,sizeof(to)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(content,0,sizeof(content)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/****
    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}
*/
	    domain_string(domain);
	    /*** number_manage ***/
	    {
			if(customInfo(domain) < 0)
				return -1;

			printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd, "select prefix,class,serverip,content,domain from color_info where prefix = '%3.3s' and serverip='%s' order by class asc",prefix,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		strcpy(resPacket,"|RES");

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					strcpy(prefix, row[0]?row[0]:"000");
					strcpy(class, row[1]?row[1]:"");
					strcpy(serverip, row[2]?row[2]:"127.0.0.1");
					strcpy(content, row[3]?row[3]:"");
					strcpy(tmpdomain, row[4]?row[4]:"");

					ps_delSpace(prefix);
					ps_delSpace(class);
					ps_delSpace(serverip);
					ps_delSpace(content);
					ps_delSpace(tmpdomain);

				    sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",prefix,class,serverip,content,tmpdomain);
			    }
			

				if(!((i+1)%20))
				{
					if((i+1) < row_num)
					{
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						printf("\n[5m%s[0m");
						sprintf(resPacket,"|RES");
					}
					else
					{
						mysql_free_result(result);
						result = NULL;
						return 0;
					}
				}

			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	return 0;
}



/*************************************************************************
* color 설정 조회(class)
*************************************************************************/
int
procRC6()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],kind[10],etc[10];
  char	classresult[100];
  char	content[65];
  char	frommin[10],tomin[10],conn_method[10],forward_num[20];


	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(to,0,sizeof(to)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(conn_method,0,sizeof(conn_method)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(content,0,sizeof(content)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(class,argv[2]);
    else {
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	}
/****
	strcpy(prefix,inner_num);
	sprintf(phoneid,"1%s%s",inner_num,inner_num);
*/

	    domain_string(domain);
	    /*** number_manage ***/
	    {
			if(customInfo(domain) < 0)
				return -1;
	    }
	sprintf(resPacket,"|RES");
/****
		if(!strstr(class,"work")) {
			sprintf(resPacket,"|RES|%s^%s^all^0^0^0^0^0^0^-^%s",prefix,class,kind,fromtime,frommin,totime,tomin,etc,conn_method,forward_num,content);
			return 0;
		}
*/

		if(*class && strlen(class) > 3 && strstr(class,"work"))
			sprintf(sqlcmd, "select class,kind,fromtime,totime,etc,frommin,tomin,conn_method,number,content from color_class where prefix='%3.3s' and class = '%s' and defaultip='%s'",prefix,class,serverip);
		else
			sprintf(sqlcmd, "select class,'all','0','0',etc,'0','0','','',content from color_info where prefix='%3.3s' and serverip='%s' and class = '%s'",prefix,serverip,class);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return -1;
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return -1;
		}
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
					strcpy(class, row[0]?row[0]:"-");
					strcpy(kind, row[1]?row[1]:"0");
					strcpy(fromtime, row[2]?row[2]:"0");
					strcpy(totime, row[3]?row[3]:"24");
					strcpy(etc, row[4]?row[4]:"");
					strcpy(frommin, row[5]?row[5]:"0");
					strcpy(tomin, row[6]?row[6]:"0");
					strcpy(conn_method, row[7]?row[7]:"0");
					strcpy(forward_num, row[8]?row[8]:"");
					strcpy(content, row[9]?row[9]:"");

					ps_delSpace(kind);
					ps_delSpace(class);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(etc);
					ps_delSpace(frommin);
					ps_delSpace(tomin);
					ps_delSpace(conn_method);
					ps_delSpace(forward_num);
					ps_delSpace(content);
			    }
			
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,class,kind,fromtime,frommin,totime,tomin,etc,conn_method,forward_num,content);

					if((i+1) < row_num)
					{
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						printf("\n[5m%s[0m");
						sprintf(resPacket,"|RES");
					}
					else
					{
						mysql_free_result(result);
						result = NULL;
						return 0;
					}
				}

		}
		mysql_free_result(result);
		result = NULL;
	return 0;
}



/*************************************************************************
* option 설정 조회
*************************************************************************/
int
procRE1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  unsigned int	tmpNumber;
  char tmp[100],seq[20],today[20];
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[20],fromtime[20],totime[20];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[20],forwardtotoday[20],forwardfromtime[20],forwardtotime[20],forwardkind[2];
  char	forwardemail[64],record[5];
  char	class[20],from[20],to[20],kind[10],etc[10];
  char	classresult[100],number[20],type[11],arsflag[2];
	char	bill_type[10],timeout[10],ment_flag[5];
	char	inner_forward[128];
	char	manner_flag[10];
	char	crm_flag[10];
	char	frommin[5],tomin[5];
	char	letter_flag[5],record_flag[5];
	char    moh_bill[10],callback_flag[10];
	char    autobill[10];
	int	ai_exist = 0;


	memset(bill_type,0,sizeof(bill_type));
	memset(timeout,0,sizeof(timeout));
	memset(ment_flag,0,sizeof(ment_flag));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(callback_flag,0,sizeof(callback_flag)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(number,0,sizeof(number)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(letter_flag,0,sizeof(letter_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(moh_bill,0,sizeof(moh_bill)); 
        memset(console_bill,0,sizeof(console_bill));
        memset(autobill,0,sizeof(autobill));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2] && strlen(argv[2]) < 7)
		strcpy(inner_num,argv[2]);
    else if(argv[2] && *argv[2] && strlen(argv[2]) == 8) {
		strcpy(inner_num,argv[2]+4);
		strncpy(prefix,argv[2]+1,3);
    }
    else {
		sprintf(sqlcmd, "select phoneid from number_manage where domain='%s' and imid = '%s'",domain,user);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(inner_num, row[0]?row[0]+4:"0000");
		}
		mysql_free_result(result);
	result = NULL;
    }

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    //if(PVS == 1) {
	if(strlen(prefix) < 1) {
		if(customInfo(domain) < 0)
			return -1;
	}

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
***/

    domain_string(domain);
    /*** number_manage ***/
    {
	//sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,letter_flag,record_flag,moh_bill,console_bill,autorec_bill,callback_flag from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1, domain);
	sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,letter_flag,record_flag,moh_bill,console_bill,autorec_bill from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1, domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			strcpy(option1, row[1]?row[1]:"0");
			strcpy(option2, row[2]?row[2]:"0");
			strcpy(option3, row[3]?row[3]:"0");
			strcpy(option4, row[4]?row[4]:"0");
			strcpy(option5, row[5]?row[5]:"N");
			strcpy(forbiden_call, row[6]?row[6]:"YYYYYY");
			strcpy(fromtime, row[7]?row[7]:"0");
			strcpy(totime, row[8]?row[8]:"0");
			strcpy(option6, row[9]?row[9]:"0");
			strcpy(option7, row[10]?row[10]:"N");
			strcpy(option8, row[11]?row[11]:"0");
			strcpy(class, row[12]?row[12]:"default1");
			strcpy(number, row[13]?row[13]:"07000000000");
			strcpy(bill_type, row[14]?row[14]:"N");
			strcpy(timeout, row[15]?row[15]:"40");
			strcpy(ment_flag, row[16]?row[16]:"Y");
			strcpy(inner_digit, row[17]?row[17]:"4");
			strcpy(record, row[18]?row[18]:"");
			strcpy(manner_flag, row[19]?row[19]:"N");
			strcpy(crm_flag, row[20]?row[20]:"");
			strcpy(letter_flag, row[21]?row[21]:"N");
			strcpy(record_flag, row[22]?row[22]:"A");
			strcpy(moh_bill, row[23]?row[23]:"N");
			strcpy(console_bill, row[24]?row[24]:"N");
			strcpy(autobill, row[25]?row[25]:"N");
			//strcpy(callback_flag, row[26]?row[26]:"N");

			ps_delSpace(phoneid);
			ps_delSpace(option1);
			ps_delSpace(option2);
			ps_delSpace(option3);
			ps_delSpace(option4);
			ps_delSpace(option5);
			ps_delSpace(option6);
			ps_delSpace(option7);
			ps_delSpace(option8);
			ps_delSpace(class);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(class);
			ps_delSpace(number);
			ps_delSpace(bill_type);
			ps_delSpace(timeout);
			ps_delSpace(ment_flag);
			ps_delSpace(inner_digit);
			ps_delSpace(record);
			ps_delSpace(manner_flag);
			ps_delSpace(crm_flag);
			ps_delSpace(letter_flag);
			ps_delSpace(record_flag);
			ps_delSpace(moh_bill);
			ps_delSpace(console_bill);
			ps_delSpace(autobill);
			//ps_delSpace(callback_flag);
	}
	mysql_free_result(result);
	result = NULL;
    }
	sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",number);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   
	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!..(%s)",sqlcmd);
		logCmd();
		return -1;
	}
	row = mysql_fetch_row( result );
	if(row) {
		strcpy(type, row[0]?row[0]:"1");
		ps_delSpace(type);

		strcpy(arsflag, row[1]?row[1]:"N");
		ps_delSpace(arsflag);
	}
	mysql_free_result(result);
	result = NULL;

	strcpy(option7,arsflag);


//AI-CALL

        sprintf(sqlcmd, "select number from aicall_info where number = '%s' and domain='%s'",number,domain);
	printf("\nsqlcmd:[%s]",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }
        else {
                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
                else {
                        row_num = mysql_num_rows(result);
                        if( row_num == 0 )
                                ai_exist = 0;
                        else
                                ai_exist = 1;
                }
                mysql_free_result(result);
                result = NULL;
        }


    if(*option1 == 'F') {
                sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain) ;


printf("\n(((%s))))",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
						strcpy(option1,"N");
                        mysql_free_result(result);
			result = NULL;
                }
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					strcpy(forwardfromday, row[2]?row[2]:"0");
					ps_delSpace(forwardfromday);
					strcpy(forwardtotoday, row[3]?row[3]:"0");
					ps_delSpace(forwardtotoday);
					strcpy(forwardfromtime, row[4]?row[4]:"0");
					ps_delSpace(forwardfromtime);
					strcpy(forwardtotime, row[5]?row[5]:"0");
					ps_delSpace(forwardtotime);
					strcpy(forwardkind, row[6]?row[6]:"0");
					ps_delSpace(forwardkind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);
					strcpy(frommin, row[8]?row[8]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[9]?row[9]:"0");
					ps_delSpace(tomin);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
/****
		if(*option1 == 'F' && *tmp == '\0') {
			sprintf(sqlcmd,"update number_manage set option1 = 'N' where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
		    ret = mysql_query(mysql, sqlcmd);

		}
*/

		tmm_Date(YYYYMMDD, atol(forwardfromday), tmpDay1);
		tmm_Date(YYYYMMDD, atol(forwardtotoday), tmpDay2);


		printf("\nresPacket:(%s)",option8);
		printf("\nrecord:(%s)",record);

		//sprintf(resPacket,"|RES|%s|%s_%s_%s_%s_%s_%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,tmp,tmpDay1,tmpDay2,forwardfromtime,forwardtotime,forwardkind,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,inner_forward,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,callback_flag);
		sprintf(resPacket,"|RES|%s|%s_%s_%s_%s_%s_%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,tmp,tmpDay1,tmpDay2,forwardfromtime,forwardtotime,forwardkind,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,inner_forward,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,ai_exist?"Y":"N");


		printf("\nresPacket:(%s)",resPacket);

/***

				|RES|F|01197453149_20080611_20080611_00_23_0|N|0|N|Y|YYYY|3|5|2|N|N|
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| phoneid  | numbertype | phonetype | domain               | imid  | 070number   | extension | defco
ntext | option1 | option2 | option3 | option4 | option5 | master_phoneid | name     | forbiden_call
| fromtime | totime | recorddate | option6 | option7 | option8 |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| 09991845 | 0          | 1         | dacommi6.onnet21.com | damo2 | 07075991844 | 1845      | outbo
und   | N       | N       | N       | N       | N       | NULL           | xde9usau | YYYN
|       20 |      8 | NULL       | N       | N       | N       |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
|RES|F|01197453149_20080611_20080611_00_23_0|N|0||54|YYYY|3|5|1854|991854|09991854|
*/
	}
        else if(*option1 == 'V') {
		memset(email,0,sizeof(email));
                sprintf(sqlcmd, "select email from voicemail_users \
		where customer_id = '%7.7s' and domain='%s'", phoneid+1, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                }
		else {
			result = mysql_store_result( mysql );
			if(!result ) {
				;
			}
			else {

				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}

				for(i=0;i < row_num;i++) {
				    row = mysql_fetch_row( result);
				    if( row) {
					    strcpy(email, row[0]?row[0]:"unknown@unknown.unknown");
					    ps_delSpace(email);
				    }
				}
				mysql_free_result(result);
				result = NULL;
			}
		}
/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
*/
                //sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin);
                //sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,callback_flag);
                sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,ai_exist?"Y":"N");

	}
	else
                //sprintf(resPacket,"|RES|%s|_|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,callback_flag);
                sprintf(resPacket,"|RES|%s|_|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,moh_bill,console_bill,autobill,ai_exist?"Y":"N");

/**
*/
    return 0;       
}




/*************************************************************************
* option 설정 조회
*************************************************************************/
int
procRE2()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  unsigned int	tmpNumber;
  char tmp[100],seq[20],today[20];
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[20],fromtime[20],totime[20];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[20],forwardtotoday[20],forwardfromtime[20],forwardtotime[20],forwardkind[2];
  char	forwardemail[64],record[5];
  char	class[20],from[20],to[20],kind[10],etc[10];
  char	classresult[100],number[20],type[11],arsflag[2];
	char	ring_flag[5];
	char	bill_type[10],timeout[10],ment_flag[5];
	char	inner_forward[128];
	char	manner_flag[10];
	char	crm_flag[10];
	char	frommin[5],tomin[5];
	char	letter_flag[5],record_flag[5];


	memset(bill_type,0,sizeof(bill_type));
	memset(timeout,0,sizeof(timeout));
	memset(ment_flag,0,sizeof(ment_flag));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(number,0,sizeof(number)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(letter_flag,0,sizeof(letter_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(ring_flag,0,sizeof(ring_flag)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		sprintf(sqlcmd, "select phoneid from number_manage where imid = '%s' and domain='%s'",user, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(inner_num, row[0]?row[0]+4:"0000");
		}
		mysql_free_result(result);
	result = NULL;
    }

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
***/



    domain_string(domain);
    /*** number_manage ***/
    {
	sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,letter_flag,record_flag,ring_flag from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1, domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			strcpy(option1, row[1]?row[1]:"0");
			strcpy(option2, row[2]?row[2]:"0");
			strcpy(option3, row[3]?row[3]:"0");
			strcpy(option4, row[4]?row[4]:"0");
			strcpy(option5, row[5]?row[5]:"N");
			strcpy(forbiden_call, row[6]?row[6]:"YYYYYY");
			strcpy(fromtime, row[7]?row[7]:"0");
			strcpy(totime, row[8]?row[8]:"0");
			strcpy(option6, row[9]?row[9]:"0");
			strcpy(option7, row[10]?row[10]:"N");
			strcpy(option8, row[11]?row[11]:"0");
			strcpy(class, row[12]?row[12]:"default1");
			strcpy(number, row[13]?row[13]:"07000000000");
			strcpy(bill_type, row[14]?row[14]:"N");
			strcpy(timeout, row[15]?row[15]:"40");
			strcpy(ment_flag, row[16]?row[16]:"Y");
			strcpy(inner_digit, row[17]?row[17]:"4");
			strcpy(record, row[18]?row[18]:"");
			strcpy(manner_flag, row[19]?row[19]:"N");
			strcpy(crm_flag, row[20]?row[20]:"");
			strcpy(letter_flag, row[21]?row[21]:"N");
			strcpy(record_flag, row[22]?row[22]:"A");
			strcpy(ring_flag, row[23]?row[23]:"0");

			ps_delSpace(phoneid);
			ps_delSpace(option1);
			ps_delSpace(option2);
			ps_delSpace(option3);
			ps_delSpace(option4);
			ps_delSpace(option5);
			ps_delSpace(option6);
			ps_delSpace(option7);
			ps_delSpace(option8);
			ps_delSpace(class);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(class);
			ps_delSpace(number);
			ps_delSpace(bill_type);
			ps_delSpace(timeout);
			ps_delSpace(ment_flag);
			ps_delSpace(inner_digit);
			ps_delSpace(record);
			ps_delSpace(manner_flag);
			ps_delSpace(crm_flag);
			ps_delSpace(letter_flag);
			ps_delSpace(record_flag);
			ps_delSpace(ring_flag);
	}
	mysql_free_result(result);
	result = NULL;
    }
	sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",number);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   
	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!..(%s)",sqlcmd);
		logCmd();
		return -1;
	}
	row = mysql_fetch_row( result );
	if(row) {
		strcpy(type, row[0]?row[0]:"1");
		ps_delSpace(type);

		strcpy(arsflag, row[1]?row[1]:"N");
		ps_delSpace(arsflag);
	}
	mysql_free_result(result);
	result = NULL;

	strcpy(option7,arsflag);

    if(*option1 == 'F') {
                sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain) ;


printf("\n(((%s))))",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
						strcpy(option1,"N");
                        mysql_free_result(result);
			result = NULL;
                }
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					strcpy(forwardfromday, row[2]?row[2]:"0");
					ps_delSpace(forwardfromday);
					strcpy(forwardtotoday, row[3]?row[3]:"0");
					ps_delSpace(forwardtotoday);
					strcpy(forwardfromtime, row[4]?row[4]:"0");
					ps_delSpace(forwardfromtime);
					strcpy(forwardtotime, row[5]?row[5]:"0");
					ps_delSpace(forwardtotime);
					strcpy(forwardkind, row[6]?row[6]:"0");
					ps_delSpace(forwardkind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);
					strcpy(frommin, row[8]?row[8]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[9]?row[9]:"0");
					ps_delSpace(tomin);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
/****
		if(*option1 == 'F' && *tmp == '\0') {
			sprintf(sqlcmd,"update number_manage set option1 = 'N' where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
		    ret = mysql_query(mysql, sqlcmd);

		}
*/

		tmm_Date(YYYYMMDD, atol(forwardfromday), tmpDay1);
		tmm_Date(YYYYMMDD, atol(forwardtotoday), tmpDay2);


		printf("\nresPacket:(%s)",option8);
		printf("\nrecord:(%s)",record);

		sprintf(resPacket,"|RES|%s|%s_%s_%s_%s_%s_%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,tmp,tmpDay1,tmpDay2,forwardfromtime,forwardtotime,forwardkind,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,inner_forward,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag);


		printf("\nresPacket:(%s)",resPacket);

/***

				|RES|F|01197453149_20080611_20080611_00_23_0|N|0|N|Y|YYYY|3|5|2|N|N|
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| phoneid  | numbertype | phonetype | domain               | imid  | 070number   | extension | defco
ntext | option1 | option2 | option3 | option4 | option5 | master_phoneid | name     | forbiden_call
| fromtime | totime | recorddate | option6 | option7 | option8 |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| 09991845 | 0          | 1         | dacommi6.onnet21.com | damo2 | 07075991844 | 1845      | outbo
und   | N       | N       | N       | N       | N       | NULL           | xde9usau | YYYN
|       20 |      8 | NULL       | N       | N       | N       |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
|RES|F|01197453149_20080611_20080611_00_23_0|N|0||54|YYYY|3|5|1854|991854|09991854|
*/
	}
        else if(*option1 == 'V') {
                sprintf(sqlcmd, "select email from voicemail_users \
		where customer_id = '%7.7s' and domain='%s'", phoneid+1, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                }
		else {
			result = mysql_store_result( mysql );
			if(!result ) {
				;
			}
			else {

				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}

				for(i=0;i < row_num;i++) {
				    row = mysql_fetch_row( result);
				    if( row) {
					    strcpy(email, row[0]?row[0]:"unknown@unknown.unknown");
					    ps_delSpace(email);
				    }
				}
				mysql_free_result(result);
				result = NULL;
			}
		}
/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
*/
                //sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin);
                sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag);

	}
	else
                sprintf(resPacket,"|RES|%s|_|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|",option1,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag);

/**
*/
    return 0;       
}
/*************************************************************************
* option 설정 조회 added moh_bill
*************************************************************************/
int
procRE3()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  unsigned int	tmpNumber;
  char tmp[100],seq[20],today[20];
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[20],fromtime[20],totime[20];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[20],forwardtotoday[20],forwardfromtime[20],forwardtotime[20],forwardkind[2];
  char	forwardemail[64],record[5];
  char	class[20],from[20],to[20],kind[10],etc[10];
  char	classresult[100],number[20],type[11],arsflag[2];
	char	ring_flag[5];
	char	bill_type[10],timeout[10],ment_flag[5];
	char	inner_forward[128];
	char	manner_flag[10];
	char	crm_flag[10];
	char	frommin[5],tomin[5];
	char	letter_flag[5],record_flag[5];
	char	moh_bill[10];
	char	bizskype[10];
	int	ai_exist=0;


	memset(bill_type,0,sizeof(bill_type));
	memset(timeout,0,sizeof(timeout));
	memset(ment_flag,0,sizeof(ment_flag));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(email,0,sizeof(email));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(record,0,sizeof(record)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(crm_flag,0,sizeof(crm_flag)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(number,0,sizeof(number)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(letter_flag,0,sizeof(letter_flag)); 
	memset(record_flag,0,sizeof(record_flag)); 
	memset(ring_flag,0,sizeof(ring_flag)); 
	memset(moh_bill,0,sizeof(moh_bill)); 

	memset(bizskype,0,sizeof(bizskype)); 
	strcpy(bizskype,"N");

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		sprintf(sqlcmd, "select phoneid from number_manage where imid = '%s' and domain='%s'",user, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(inner_num, row[0]?row[0]+4:"0000");
		}
		mysql_free_result(result);
	result = NULL;
    }

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
***/



    domain_string(domain);
    /*** number_manage ***/
    {
	//sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,letter_flag,record_flag,ring_flag,moh_bill from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1, domain);
	sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,letter_flag,record_flag,ring_flag,moh_bill from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1, domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			strcpy(option1, row[1]?row[1]:"0");
			strcpy(option2, row[2]?row[2]:"0");
			strcpy(option3, row[3]?row[3]:"0");
			strcpy(option4, row[4]?row[4]:"0");
			strcpy(option5, row[5]?row[5]:"N");
			strcpy(forbiden_call, row[6]?row[6]:"YYYYYY");
			strcpy(fromtime, row[7]?row[7]:"0");
			strcpy(totime, row[8]?row[8]:"0");
			strcpy(option6, row[9]?row[9]:"0");
			strcpy(option7, row[10]?row[10]:"N");
			strcpy(option8, row[11]?row[11]:"0");
			strcpy(class, row[12]?row[12]:"default1");
			strcpy(number, row[13]?row[13]:"07000000000");
			strcpy(bill_type, row[14]?row[14]:"N");
			strcpy(timeout, row[15]?row[15]:"40");
			strcpy(ment_flag, row[16]?row[16]:"Y");
			strcpy(inner_digit, row[17]?row[17]:"4");
			strcpy(record, row[18]?row[18]:"");
			strcpy(manner_flag, row[19]?row[19]:"N");
			strcpy(crm_flag, row[20]?row[20]:"");
			strcpy(letter_flag, row[21]?row[21]:"N");
			strcpy(record_flag, row[22]?row[22]:"A");
			strcpy(ring_flag, row[23]?row[23]:"0");
			strcpy(moh_bill, row[24]?row[24]:"");

			ps_delSpace(phoneid);
			ps_delSpace(option1);
			ps_delSpace(option2);
			ps_delSpace(option3);
			ps_delSpace(option4);
			ps_delSpace(option5);
			ps_delSpace(option6);
			ps_delSpace(option7);
			ps_delSpace(option8);
			ps_delSpace(class);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(class);
			ps_delSpace(number);
			ps_delSpace(bill_type);
			ps_delSpace(timeout);
			ps_delSpace(ment_flag);
			ps_delSpace(inner_digit);
			ps_delSpace(record);
			ps_delSpace(manner_flag);
			ps_delSpace(crm_flag);
			ps_delSpace(letter_flag);
			ps_delSpace(record_flag);
			ps_delSpace(ring_flag);
			ps_delSpace(moh_bill);
	}
	mysql_free_result(result);
	result = NULL;
    }
	sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",number);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   
	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!..(%s)",sqlcmd);
		logCmd();
		return -1;
	}
	row = mysql_fetch_row( result );
	if(row) {
		strcpy(type, row[0]?row[0]:"1");
		ps_delSpace(type);

		strcpy(arsflag, row[1]?row[1]:"N");
		ps_delSpace(arsflag);
	}
	mysql_free_result(result);
	result = NULL;

	strcpy(option7,arsflag);


//AI-CALL
        sprintf(sqlcmd, "select number from aicall_info where number = '%s' and domain='%s'",number,domain);
	printf("\nsqlcmd:[%s]",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }
        else {
                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
                else {
                        row_num = mysql_num_rows(result);
                        if( row_num == 0 )
                                ai_exist = 0;
                        else
                                ai_exist = 1;
                }
                mysql_free_result(result);
                result = NULL;
        }


    if(*option1 == 'F') {
                sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,inner_forward,frommin,tomin from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain) ;


printf("\n(((%s))))",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        memset(forwardfromday,0,sizeof(forwardfromday));
                        memset(forwardtotoday,0,sizeof(forwardtotoday));
                        memset(forwardfromtime,0,sizeof(forwardfromtime));
                        memset(forwardtotime,0,sizeof(forwardtotime));
                        memset(forwardkind,0,sizeof(forwardkind));
                        memset(inner_forward,0,sizeof(inner_forward));
                        memset(frommin,0,sizeof(frommin));
                        memset(tomin,0,sizeof(tomin));

			strcpy(option1,"N");
                        mysql_free_result(result);
			result = NULL;
                }
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					strcpy(forwardfromday, row[2]?row[2]:"0");
					ps_delSpace(forwardfromday);
					strcpy(forwardtotoday, row[3]?row[3]:"0");
					ps_delSpace(forwardtotoday);
					strcpy(forwardfromtime, row[4]?row[4]:"0");
					ps_delSpace(forwardfromtime);
					strcpy(forwardtotime, row[5]?row[5]:"0");
					ps_delSpace(forwardtotime);
					strcpy(forwardkind, row[6]?row[6]:"0");
					ps_delSpace(forwardkind);
					strcpy(inner_forward, row[7]?row[7]:"");
					ps_delSpace(inner_forward);
					strcpy(frommin, row[8]?row[8]:"0");
					ps_delSpace(frommin);
					strcpy(tomin, row[9]?row[9]:"0");
					ps_delSpace(tomin);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
/****
		if(*option1 == 'F' && *tmp == '\0') {
			sprintf(sqlcmd,"update number_manage set option1 = 'N' where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
		    ret = mysql_query(mysql, sqlcmd);

		}
*/

		tmm_Date(YYYYMMDD, atol(forwardfromday), tmpDay1);
		tmm_Date(YYYYMMDD, atol(forwardtotoday), tmpDay2);


		printf("\nresPacket:(%s)",option8);
		printf("\nrecord:(%s)",record);

		sprintf(resPacket,"|RES|%s|%s_%s_%s_%s_%s_%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,tmp,tmpDay1,tmpDay2,forwardfromtime,forwardtotime,forwardkind,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,inner_forward,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag,moh_bill);

		printf("\nresPacket:(%s)",resPacket);

/***

				|RES|F|01197453149_20080611_20080611_00_23_0|N|0|N|Y|YYYY|3|5|2|N|N|
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| phoneid  | numbertype | phonetype | domain               | imid  | 070number   | extension | defco
ntext | option1 | option2 | option3 | option4 | option5 | master_phoneid | name     | forbiden_call
| fromtime | totime | recorddate | option6 | option7 | option8 |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| 09991845 | 0          | 1         | dacommi6.onnet21.com | damo2 | 07075991844 | 1845      | outbo
und   | N       | N       | N       | N       | N       | NULL           | xde9usau | YYYN
|       20 |      8 | NULL       | N       | N       | N       |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
|RES|F|01197453149_20080611_20080611_00_23_0|N|0||54|YYYY|3|5|1854|991854|09991854|
*/
	}
        else if(*option1 == 'V') {
                sprintf(sqlcmd, "select email from voicemail_users \
		where customer_id = '%7.7s' and domain='%s'", phoneid+1, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                }
		else {
			result = mysql_store_result( mysql );
			if(!result ) {
				;
			}
			else {

				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
				}

				for(i=0;i < row_num;i++) {
				    row = mysql_fetch_row( result);
				    if( row) {
//NEWNEW
					    if(row[0])
						    ps_delSpace(row[0]);
					    strcpy(email, row[0]?row[0]:"unknown@unknown.unknown");
				    }
				}
				mysql_free_result(result);
				result = NULL;
			}
		}
/***
bill_type
| timeout        | varchar(2)  | YES  |     | 30        |       |
| ment_flag      | varchar(2)  | YES  |     | Y         |       |
| inner_digit    | int(4)      | YES  |     | 4         |       |
*/
                //sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin);
                sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag,moh_bill,ai_exist?"Y":"N");

	}
	else
                sprintf(resPacket,"|RES|%s|_|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s||%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class,bill_type,timeout,ment_flag,inner_digit,record,manner_flag,crm_flag,frommin,tomin,letter_flag,record_flag,ring_flag,moh_bill,ai_exist?"Y":"N");

/**
*/
    return 0;       
}



/*************************************************************************
* option 설정 조회
*************************************************************************/
int
procREV()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],option1[2],option2[2],option3[2];
  char	option4[2],option5[2],option6[2],option7[2],option8[2],forbiden_call[11],fromtime[11],totime[11];
  char	tmpDay1[9],tmpDay2[9];
  char  forwardfromday[11],forwardtotoday[11],forwardfromtime[3],forwardtotime[3],forwardkind[2];
  char	forwardemail[64];
  char	class[20],from[10],to[10],kind[10],etc[10];
  char	classresult[100],number[20],type[10],arsflag[5];


	memset(email,0,sizeof(email));
	memset(phoneid,0,sizeof(phoneid));
	memset(tmpDay1,0,sizeof(tmpDay1));
	memset(tmpDay2,0,sizeof(tmpDay2));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 

	memset(option1,0,sizeof(option1)); 
	memset(option2,0,sizeof(option2)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option5,0,sizeof(option5)); 
	memset(option6,0,sizeof(option6)); 
	memset(option7,0,sizeof(option7)); 
	memset(option8,0,sizeof(option8)); 
	memset(class,0,sizeof(class)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(class,0,sizeof(class)); 
	memset(from,0,sizeof(from)); 
	memset(to,0,sizeof(to)); 
	memset(kind,0,sizeof(kind)); 
	memset(etc,0,sizeof(etc)); 
	memset(number,0,sizeof(number)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(forwardfromday,0,sizeof(forwardfromday)); 
	memset(forwardtotoday,0,sizeof(forwardtotoday)); 
	memset(forwardfromtime,0,sizeof(forwardfromtime)); 
	memset(forwardtotime,0,sizeof(forwardtotime)); 
	memset(forwardkind,0,sizeof(forwardkind)); 
	memset(tmp,0,sizeof(tmp)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    else {
		sprintf(sqlcmd, "select phoneid from number_manage where imid = '%s' and domain='%s'",user, domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);		
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(inner_num, row[0]?row[0]+4:"0000");
		}
		mysql_free_result(result);
	result = NULL;
    }

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    //if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);


    domain_string(domain);
    /*** number_manage ***/
    {
	sprintf(sqlcmd, "select phoneid,option1,option2,option3,option4,option5,forbiden_call,fromtime,totime,option6,option7,option8,class,070number from number_manage where substr(phoneid,2,7) = '%7.7s' and domain='%s'",phoneid+1, domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if( row) {
			strcpy(phoneid, row[0]?row[0]:"0");
			strcpy(option1, row[1]?row[1]:"0");
			strcpy(option2, row[2]?row[2]:"0");
			strcpy(option3, row[3]?row[3]:"0");
			strcpy(option4, row[4]?row[4]:"0");
			strcpy(option5, row[5]?row[5]:"N");
			strcpy(forbiden_call, row[6]?row[6]:"YYYYYY");
			strcpy(fromtime, row[7]?row[7]:"0");
			strcpy(totime, row[8]?row[8]:"0");
			strcpy(option6, row[9]?row[9]:"0");
			strcpy(option7, row[10]?row[10]:"N");
			strcpy(option8, row[11]?row[11]:"0");
			strcpy(class, row[12]?row[12]:"default1");
			strcpy(number, row[13]?row[13]:"07000000000");
			ps_delSpace(phoneid);
			ps_delSpace(option1);
			ps_delSpace(option2);
			ps_delSpace(option3);
			ps_delSpace(option4);
			ps_delSpace(option5);
			ps_delSpace(option6);
			ps_delSpace(option7);
			ps_delSpace(option8);
			ps_delSpace(class);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(class);
			ps_delSpace(number);
	}
	mysql_free_result(result);
	result = NULL;
    }

	sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",number);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!..(%s)",sqlcmd);
		logCmd();
		return -1;
	}
	row = mysql_fetch_row( result );
	if(row) {
		strcpy(type, row[0]?row[0]:"1");
		ps_delSpace(type);

		strcpy(arsflag, row[1]?row[1]:"N");
		ps_delSpace(arsflag);
	}
	mysql_free_result(result);
	result = NULL;

	strcpy(option7,arsflag);


    if(*option1 == 'F') {
                sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='') order by executeseq asc", phoneid+1,domain) ;


printf("\n(((%s))))",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
						strcpy(option1,"N");
                        mysql_free_result(result);
			result = NULL;
                }
		else {
			for(i=0;i < row_num;i++) {
			    row = mysql_fetch_row( result);
			    if( row) {
				    strcpy(tmp, row[1]?row[1]:"00000000000");
				    ps_delSpace(tmp);
					strcpy(forwardfromday, row[2]?row[2]:"0");
					ps_delSpace(forwardfromday);
					strcpy(forwardtotoday, row[3]?row[3]:"0");
					ps_delSpace(forwardtotoday);
					strcpy(forwardfromtime, row[4]?row[4]:"0");
					ps_delSpace(forwardfromtime);
					strcpy(forwardtotime, row[5]?row[5]:"0");
					ps_delSpace(forwardtotime);
					strcpy(forwardkind, row[6]?row[6]:"0");
					ps_delSpace(forwardkind);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		tmm_Date(YYYYMMDD, atol(forwardfromday), tmpDay1);
		tmm_Date(YYYYMMDD, atol(forwardtotoday), tmpDay2);

		sprintf(resPacket,"|RES|%s|%s_%s_%s_%s_%s_%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s",option1,tmp,tmpDay1,tmpDay2,forwardfromtime,forwardtotime,forwardkind,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class);
/***
				|RES|F|01197453149_20080611_20080611_00_23_0|N|0|N|Y|YYYY|3|5|2|N|N|
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| phoneid  | numbertype | phonetype | domain               | imid  | 070number   | extension | defco
ntext | option1 | option2 | option3 | option4 | option5 | master_phoneid | name     | forbiden_call
| fromtime | totime | recorddate | option6 | option7 | option8 |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------
+----------+--------+------------+---------+---------+---------+
| 09991845 | 0          | 1         | dacommi6.onnet21.com | damo2 | 07075991844 | 1845      | outbo
und   | N       | N       | N       | N       | N       | NULL           | xde9usau | YYYN
|       20 |      8 | NULL       | N       | N       | N       |
+----------+------------+-----------+----------------------+-------+-------------+-----------+------
------+---------+---------+---------+---------+---------+----------------+----------+---------------

			   	   |RES|F|01197453149_20080611_20080611_00_23_0|N|0||54|YYYY|3|5|1854|991854|09991854|
*/
	}
        else if(*option1 == 'V') {
                sprintf(sqlcmd, "select email from voicemail_users \
		where customer_id = '%7.7s' and domain='%s'", phoneid+1, domain);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
                }

                for(i=0;i < row_num;i++) {
                    row = mysql_fetch_row( result);
                    if( row) {
                            strcpy(email, row[0]?row[0]:"unknown@unknown.unknown");
                            ps_delSpace(email);
		    }
		}
		if(result) {
			mysql_free_result(result);
			result = NULL;
		}
		sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,email,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7,option8,class);
	}
	else

		sprintf(resPacket,"|RES|%s|_|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",option1,option2,option3,option4,forbiden_call,fromtime,totime,option5,option6,option7, option8,class);
/**
*/
    return 0;       
}



/*************************************************************************
*************************************************************************/
int
procUMM()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],phonekind[64];
	char	sqlcmd1[512],ment_flag[11];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);
	else
		strcpy(outer_num,"07000000000");

    if(argv[4] && *argv[4])
		strcpy(ment_flag,argv[4]);
	else
		strcpy(ment_flag,"Y");

    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
			if(argv[5] && *argv[5]) 
				strcpy(phoneid,argv[5]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

    domain_string(domain);
	/*** number_manage ***/
	{
			sprintf(sqlcmd,"UPDATE number_manage  set ment_flag = '%s' \
			where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
			ment_flag,phoneid+1,domain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!!(%s)",sqlcmd);
				logCmd();
				//return(-1);
			}
	}


	sprintf(commandBuf,"|UMM|%s@%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],phoneid);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UMM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UMM|%s@%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],phoneid);
	    	sprintf(resPacket,"|RES|UMM userid:(%s)-(%s)-(%s)",user,outer_num,ment_flag);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UMM')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|UMM userid:(%s)-(%s)-(%s)",user,outer_num,ment_flag);
    return 0;       
}



/*************************************************************************
*************************************************************************/
int
procUSP()
{
  char email[256];
  int   qid,returncode,fields_num,cpid,sockfd = -1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char  tmp[100],seq[20],today[20];
  char  sqlcmd[512],forward_num[30],phonekind[64];
  char	passwd[20],command[128];
	char	sqlcmd1[512],ment_flag[11],destP[256];
	char	hash[256],md5_passwd[256];
	int j;
	MD5_DIGEST digest;


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(passwd,0,sizeof(passwd)); 
	memset(hash,0,sizeof(hash)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);
	else
		strcpy(outer_num,"07000000000");

    if(argv[4] && *argv[4])
		strcpy(passwd,argv[4]);
	else
		strcpy(passwd,"Y");

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);


snprintf(hash, sizeof(hash), "1%7.7s:centrex:%s", phoneid+1,passwd);
md5_digest(hash, strlen(hash), digest);
for (j=0; j<sizeof(digest); j++) {
    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
}

	}
	else {
		if(argv[5] && *argv[5]) 
			strcpy(phoneid,argv[5]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
            if(argv[6] && *argv[6])
                        strcpy(md5_passwd,argv[6]);
                else
                        strcpy(md5_passwd,"");
	}

	domain_string(domain);
	/*** number_manage ***/
	{

			sprintf(sqlcmd,"UPDATE sip_buddies  set secret = '%s',md5secret='%s' \
			where callerid = '<%s>'",passwd,md5_passwd,outer_num);
			
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!!(%s)",sqlcmd);
				logCmd();
				//return(-1);
			}
			sprintf(resPacket, "(%s)",sqlcmd);
			//logCmd();
			if(PVS == 1) {
				sprintf(sqlcmd,"update number_list set chg_flag ='0' \
				,lastdate=NOW(),checkflag='0' where number = '%s'",outer_num);
				mysql_query(mysql, sqlcmd);

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"UPDATE DCS_PHONE_AUTH  set sippwd = '%s' , sipetc3 = 'N' \
				where setdn = '%s'",passwd,outer_num);
				
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!!(%s)-(%s)",sqlcmd,mysql_error(authmysql));
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%d) (%s)",__LINE__,mysql_error(authmysql));
					logCmd();
					//return(-1);
				}
				sprintf(resPacket, "(%s)",sqlcmd);
				//logCmd();
			}

//			sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
//			printf("\ncommand(%s)",command);
/***
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,command);
				if(sockfd > -1) {
					strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
					write(sockfd, sqlcmd, strlen(sqlcmd));
					close(sockfd);
				}
			}
*/
			if(strlen(phoneid) == 8)
				sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			else if(strlen(phoneid) == 7)
				sprintf(command,"sip prune realtime peer 1%7.7s",phoneid);

			sockfd = Manager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
			}
	}

	sprintf(commandBuf,"|USP|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],phoneid,md5_passwd);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'USP')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|USP|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],phoneid,md5_passwd);
		sprintf(resPacket,"|RES|USP userid:(%s)-(%s)-(%s)",user,outer_num,passwd);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'USP')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|USP userid:(%s)-(%s)-(%s)",user,outer_num,passwd);
    return 0;       
}




/*************************************************************************
* voice_mail								     *
*************************************************************************/
int
procIPK()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],phonekind[64];
	char	sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strncpy(phonekind,argv[3],1);
	else
		strcpy(phonekind,"1");

    if(!isdigitstr(phonekind))
		strcpy(phonekind,"1");
		

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(phoneid,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}
    domain_string(domain);
	/*** number_manage ***/
	{
			sprintf(sqlcmd,"UPDATE number_manage  set option3 = '%s' \
			where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
			phonekind,phoneid+1,domain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!!(%s)",sqlcmd);
					logCmd();
					//return(-1);
			}
	}


	sprintf(commandBuf,"|IPK|%s@%s|%s|%s|%s",user,domain,argv[2],argv[3],phoneid);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IPK')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IPK|%s@%s|%s|%s|%s",user,domain,argv[2],argv[3],phoneid);
		sprintf(resPacket,"|RES|IPK userid:(%s)-(%s)",user,phonekind);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IPK')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IPK userid:(%s)-(%s)",user,phonekind);
    return 0;       
}



/*************************************************************************
* voice_mail								     *
*************************************************************************/
int
procIVM()
{
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip[30];
  char	prefix[5],passwd[256];
	char  kind[5];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(passwd,0,sizeof(passwd)); 
	memset(kind,0,sizeof(kind));
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strcpy(mailbox,argv[3]);
	else
		strcpy(mailbox,"-");
    if(argv[4] && *argv[4])
		strcpy(passwd,argv[4]);
	else
		strcpy(passwd,"-");
    if(argv[5] && *argv[5])
                strcpy(kind,argv[5]);
        else
                strcpy(kind,"1");


    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");

    if(PVS == 1 && MASTER == 1) {
		sprintf(sqlcmd, "select proxyip,prefix from custom_info where domain = '%s'",domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
			strcpy(prefix, row[1]?row[1]:"001");
			ps_delSpace(prefix);
		}
		mysql_free_result(result);
		result = NULL;
		sprintf(phoneid,"1%s%s",prefix,inner_num);

	printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(phoneid,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;

			sprintf(prefix,"%3.3s",phoneid+1);
	}

	domain_string(domain);

	printf("\nphoneid : (%s)",phoneid);

	if(strlen(passwd) < 4)
		strcpy(passwd,"1111");
	/****
	sprintf(sqlcmd, "select passwd from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
	}
	else {
		row = mysql_fetch_row( result );
		if(row) {
			strcpy(passwd, row[0]?row[0]:"1111");
			ps_delSpace(passwd);
		}
		mysql_free_result(result);
		result = NULL;
	}
	****/
	printf("\n[7mpasswd:(%s)[0m",passwd);
	printf("\n[7mpasswd:(%s)[0m",passwd);
	printf("\n[7mpasswd:(%s)[0m",passwd);
	printf("\n[7mpasswd:(%s)[0m",passwd);
	printf("\n[7mpasswd:(%s)[0m",passwd);
	printf("\n[7mpasswd:(%s)[0m",passwd);

	passwd[5] = '\0';

	sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7)='%7.7s' and (domain='%s or domain='')", phoneid+1,domain);
	mysql_query(mysql, sqlcmd);

	sprintf(sqlcmd, "delete from voicemail_users where customer_id = '%s' and domain='%s'",phoneid+1,domain);
	mysql_query(mysql, sqlcmd);


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	printf("\ndate : (%s)",tmp);
	/*** number_manage ***/
VOICE_RETRY:
    {
			sprintf(sqlcmd,"INSERT into voicemail_users( \
			customer_id,context,mailbox,password,fullname,email,tz,saycid,sendvoicemail,stamp,domain) \
			values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
			phoneid+1,"default",phoneid+1,passwd,user,mailbox,"korea","no","yes",tmp,domain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(PVS == 1)
						return(-1);
					else if(retry++ < 3) {
						sprintf(sqlcmd,"delete from voicemail_users where customer_id = '%s' and domain='%s'",phoneid+1, domain);
						mysql_query(mysql, sqlcmd);

						goto VOICE_RETRY;
					}
			}
//???????????????????????????????????????????
			passwd[5] = '\0';
			sprintf(sqlcmd,"UPDATE number_manage  set security_passwd = '%s',option8='%s' \
			where phoneid = '0%7.7s' and domain='%s'",\
			passwd,kind,phoneid+1,domain);
		}

	/*** number_manage ***/
	{
			sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'V',option8='%s' \
			where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
			kind,phoneid+1,domain);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					//return(-1);
			}
	}

    sprintf(commandBuf,"|IVM|%s@%s|%s|%s|%s|%s|%s",user,domain,inner_num,mailbox,phoneid,passwd,kind);
    if(PVS == 1 && MASTER == 1) {
/***
			if(*serverip && (cpid = fork()) == 0) {
					commandSend(commandBuf,serverip,"");
					exit(0);
			}
*/
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}
	    //sprintf(commandBuf,"|IVM|%s@%s|%s|%s|%s",user,domain,inner_num,mailbox,phoneid);
	    sprintf(commandBuf,"|IVM|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,mailbox,phoneid,passwd,kind);
	    sprintf(resPacket,"|RES|%s",passwd);
		/****추가 ***/
	   // sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
	    sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);

		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
    sprintf(resPacket,"|RES|%s",passwd);
    return 0;       
}


/*************************************************************************
* color ring
*************************************************************************/
int
procICD()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	tmp1[64],line[512],compStr[10],vip[20],class[20];
  FILE *fp,*fp1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(phoneid,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

	sprintf(sqlcmd, "select option2,class from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1, serverip);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(option2, row[0]?row[0]:"N");
		ps_delSpace(option2);
		strcpy(class, row[1]?row[1]:"");
		ps_delSpace(class);
	}
	mysql_free_result(result);
	result = NULL;

	if(*class == '\0') {
		return(errorReturn("Not Set Coloring ID",__FILE__,__LINE__));
	}

	sprintf(sqlcmd, "update number_manage set option2 = 'Z' where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1, serverip);
	mysql_query(mysql, sqlcmd);
	

    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICD')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|ICD|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|ICD userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICD')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|ICD userid:(%s)-(%s)-(%s)",user,domain,phoneid);
	return 0;       
}



/*************************************************************************
* phone check
*************************************************************************/
int
procPCK()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i, res=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],realip[20],class[20];
  char	tmp1[64],line[512],compStr[10],vip[20];
char	phoneip[20];
char	phoneport[10];
  FILE *fp,*fp1;

	memset(phoneip,0,sizeof(phoneip));
	memset(phoneport,0,sizeof(phoneport));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(class,0,sizeof(class)); 
	memset(realip,0,sizeof(realip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

/***
|IC1|nwadm1@temp4402.lgdacom.net|9503|1_078work|10789503|
*/
    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return (-1);
		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		printf("\nphoneid:(%s)",phoneid);


		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main' and servername <> 'sub2'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|REAP IP Not Found!.(%s)",phoneid);
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(realip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(realip);
			}
		}
		mysql_free_result(result);
		result = NULL;

		res = udpSend(realip,5061,3,phoneid,serverip,NULL);
		if(res < 0)  {
			while(resPacket[strlen(resPacket)-1] == '\n' || resPacket[strlen(resPacket)-1] == '\r')
				resPacket[strlen(resPacket)-1] = '\0';
			sprintf(reqPacket, "|ERR|%s",resPacket);
			strcpy(resPacket, reqPacket);
			return 0;
		}
		else {
			/***
			SIP/2.0 _DATA_58.150.129.180|5060|
			*/
			while(resPacket[strlen(resPacket)-1] == '\n' || resPacket[strlen(resPacket)-1] == '\r')
				resPacket[strlen(resPacket)-1] = '\0';
			sprintf(reqPacket, "|RES|%s",resPacket);
			strcpy(resPacket, reqPacket);
			return 0;
		}
	}
	else {
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

	}
}


/*************************************************************************
* color ring
*************************************************************************/
int
procIC1()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],class[20];
  char	tmp1[64],line[512],compStr[10],vip[20];
  FILE *fp,*fp1;

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(class,0,sizeof(class)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strcpy(class,argv[3]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

/***
|IC1|nwadm1@temp4402.lgdacom.net|9503|1_078work|10789503|
*/
    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(class,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[4] && *argv[4]) 
				strcpy(phoneid,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[5] && *argv[5]) 
				strcpy(serverip,argv[5]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}


	sprintf(sqlcmd, "update number_manage set option2 = 'Z',class='%s' where phoneid = '0%7.7s' and defaultip='%s'",class,phoneid+1, serverip);
	mysql_query(mysql, sqlcmd);
	

	sprintf(commandBuf,"|IC1|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,class,phoneid,serverip);
	sprintf(resPacket,"|RES|IC1 userid:(%s)-(%s)_(%s)",user,domain,phoneid);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IC1')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IC1|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,class,phoneid,serverip);
		sprintf(resPacket,"|RES|IC1 userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1','IC1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|IC1 userid:(%s)-(%s)-(%s)-(%s)",user,domain,phoneid,class);
	return 0;       
}
/*************************************************************************
* color ring added moh_bill
*************************************************************************/
int
procIC2()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],class[20];
  char	tmp1[64],line[512],compStr[10],vip[20];
  FILE *fp,*fp1;
  char moh_bill[5];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(class,0,sizeof(class)); 
	memset(moh_bill,0,sizeof(moh_bill)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3])
		strcpy(class,argv[3]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

/***
|IC1|nwadm1@temp4402.lgdacom.net|9503|1_078work|10789503|
*/
    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(class,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[4] && *argv[4]) 
				strcpy(phoneid,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[5] && *argv[5]) 
				strcpy(serverip,argv[5]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[6] && *argv[6]) 
				strcpy(moh_bill,argv[6]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

	//default set
	//*moh_bill = 'Y';

    	if(PVS == 1) {
				sprintf(sqlcmd, "select moh_bill from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(moh_bill, row[0]?row[0]:"N");
					ps_delSpace(moh_bill);
				}
				mysql_free_result(result);
				result = NULL;

	}


        if(!strcmp(moh_bill,"Y")){
                sprintf(sqlcmd, "update number_manage set option2 = 'Z',class='%s' where phoneid = '0%7.7s' and defaultip='%s'",class,phoneid+1, serverip);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
        }else{
                sprintf(sqlcmd, "update number_manage set option2 = 'Z',class='%s' where phoneid = '0%7.7s' and defaultip='%s'",class,phoneid+1, serverip);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
        }


	mysql_query(mysql, sqlcmd);
	

	sprintf(commandBuf,"|IC2|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,class,phoneid,serverip,moh_bill);
	sprintf(resPacket,"|RES|IC2 userid:(%s)-(%s)_(%s)",user,domain,phoneid);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IC2')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IC2|%s@%s|%s|%s|%s|%s|%s|",user,domain,inner_num,class,phoneid,serverip,moh_bill);
		sprintf(resPacket,"|RES|IC2 userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1','IC2')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|IC2 userid:(%s)-(%s)-(%s)-(%s)",user,domain,phoneid,class);
	return 0;       
}



/*************************************************************************
* color ring
*************************************************************************/
int
procDCD()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	tmp1[64],line[512],compStr[10],vip[20];
  FILE *fp,*fp1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
		printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(phoneid,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

	sprintf(sqlcmd, "select option2 from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1, serverip);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(option2, row[0]?row[0]:"N");
		ps_delSpace(option2);
	}
	mysql_free_result(result);
	result = NULL;

	if(*option2 != 'Y' && *option2 != 'Z' && *option2 != 'K') {
		return(errorReturn("Not Coloring ID",__FILE__,__LINE__));
	}

	sprintf(sqlcmd, "update number_manage set option2 = 'N' where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1, serverip);
	mysql_query(mysql, sqlcmd);
	

    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCD')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DCD|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|DCD userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCD')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DCD userid:(%s)-(%s)-(%s)",user,domain,phoneid);
	return 0;       
}


/*************************************************************************
* color ring
*************************************************************************/
int
procDC1()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11], option2[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	tmp1[64],line[512],compStr[10],vip[20];
  FILE *fp,*fp1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		strcpy(vip,serverip);
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(phoneid,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}


	sprintf(sqlcmd, "update number_manage set option2 = 'N',class='' where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1, serverip);
	mysql_query(mysql, sqlcmd);
	

	sprintf(commandBuf,"|DC1|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);

    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DC1')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DC1|%s@%s|%s|%s|%s|",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|DC1 userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DC1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DC1 userid:(%s)-(%s)-(%s)",user,domain,phoneid);
	return 0;       
}



/*************************************************************************
* color ring
|DCR|nwadm1@temp4402.lgdacom.net|078work|1078078work
*************************************************************************/
int
procDCR()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	tmp1[64],line[512],compStr[10],vip[20],class[20];
  FILE *fp,*fp1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(class,0,sizeof(class)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
/***
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");
*/


    if(PVS == 1) {
				sprintf(sqlcmd, "select add_svc, proxyip,prefix from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",domain);
					logCmd();
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(add_svc, row[0]?row[0]:"NNNNNN");
					ps_delSpace(add_svc);
					strcpy(serverip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(vip,serverip);
					strcpy(prefix, row[2]?row[2]:"001");
					ps_delSpace(prefix);
				}
				mysql_free_result(result);
				result = NULL;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		printf("\nphoneid:(%s)",phoneid);
	}
	else {
			if(argv[3] && *argv[3]) 
				sprintf(phoneid,"%8.8s",argv[3]);
			if(argv[4] && *argv[4])  {
				strcpy(serverip,argv[4]);
				strcpy(vip,argv[4]);
			}
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;
	}


	printf("\nphoneid : (%s)",phoneid);

    tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	printf("\ndate : (%s)",tmp);
	/*** number_manage ***/
VOICE_RETRY:
    /*** number_manage ***/
	if(!strcmp(inner_num,"XXXX")) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'N',class = '' \
		where substr(phoneid,2,3) = '%3.3s' and (option2 = 'Z' or option2 = 'K') and domain='%s' and class='%3.3s'",\
		phoneid+1,domain,phoneid+1);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);
                strcpy(resPacket,sqlcmd);
                logCmd();

	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'N',class = '' \
		where substr(phoneid,2,7) = '%7.7s' and domain='%s' and class = '%7.7s'",\
		phoneid+1, domain,phoneid+1);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);
                strcpy(resPacket,sqlcmd);
                logCmd();

	}
	else if(strstr(inner_num,"work") || strstr(inner_num,"week")) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'N',class = '' \
		where substr(phoneid,2,3) = '%3.3s' and (option2 = 'Z' or option2 = 'K') and domain = '%s' and class = '%s'",\
		phoneid+1, domain,inner_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);
                strcpy(resPacket,sqlcmd);
                logCmd();

	printf("\ninner_num : ((((%s)))), phoneid:(%s)",inner_num,phoneid);
		if(strlen(inner_num) > 6 && !strncmp(inner_num,phoneid+1,3) && !strncmp(inner_num+3,"work",4)) {
			sprintf(sqlcmd,"DELETE from color_class \
			where prefix = '%3.3s' and class = '%s' and defaultip = '%s'",\
			phoneid+1,inner_num,vip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
			mysql_query(mysql, sqlcmd);
			strcpy(resPacket,sqlcmd);
			logCmd();
		}

	}
	else return(errorReturn("Input Data Error",__FILE__,__LINE__));

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	if(!strcmp(inner_num,"XXXX")) {
		sprintf(sqlcmd, "delete from color_info where prefix='%3.3s' and class = '%3.3s' and serverip='%s'",phoneid+1,phoneid+1,vip);
	} else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
		sprintf(sqlcmd, "delete from color_info where prefix='%7.7s' and class = '%7.7s' and serverip='%s'",phoneid+1, phoneid+1,vip);
	}
	else  {
		sprintf(sqlcmd, "delete from color_info where prefix='%3.3s' and class = '%s' and serverip='%s'",phoneid+1, inner_num,vip);
	}
	mysql_query(mysql, sqlcmd);


	sprintf(commandBuf,"|DCR|%s@%s|%s|%s|%s",user,domain,inner_num,phoneid,serverip);
if(PVS == 1  && MASTER == 1) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCR')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DCR|%s@%s|%s|%s|%s",user,domain,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCR')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    if(PVS != 1) {
	    sprintf(tmp, "/tmp/%s.%d.new",phoneid+1,getpid());
	    if ((fp = fopen(tmp, "w")) == NULL) {
		    sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,inner_num);
		    return 0;       
	    }
	    sprintf(tmp1, "/etc/asterisk/musiconhold.conf");

	    if ((fp1 = fopen(tmp1, "r")) == NULL) {
		    fclose(fp);
		    sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,mailbox);
		    return 0;       
	    }

		if(strlen(inner_num) < 7)
		    sprintf(compStr,"[%3.3s]",phoneid+1);
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0)
		    sprintf(compStr,"[%7.7s]",phoneid+1);
		else
		    sprintf(compStr,"[%s",inner_num);

	    while((fgets(line,sizeof(line),fp1)) != NULL) {

printf("\nline:(%s), compStr:(%s)",line, compStr);
		if(!strcmp(line,"\n"))
			continue;
		else if(*line == ';');
		else if(strstr(line,compStr)) {
printf("\n=====>line:([7m%s[0m), compStr:(%s)",line, compStr);
			fgets(line,sizeof(line),fp1);
			fgets(line,sizeof(line),fp1);
			continue;
		}
		fprintf(fp,"%s",line);
		memset(line,0,sizeof(line));
	    }
	    fclose(fp);
	    fclose(fp1);

	    sprintf(tmp, "mv -f /tmp/%s.%d.new /etc/asterisk/musiconhold.conf",phoneid+1,getpid());
	    system(tmp);
            system("touch /tmp/vms_update");
/***Dno't Delete ***
	if(!strcmp(inner_num,"XXXX")) {
	    sprintf(tmp,"\\rm -rf /home/ucmaster/%s/mohmp3/%3.3s/%3.3s",vip,phoneid+1,phoneid+1);
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) 
	    sprintf(tmp,"\\rm -rf /home/ucmaster/%s/mohmp3/%3,3s/%7.7s",vip,phoneid+1,phoneid+1);
	else
	    sprintf(tmp,"\\rm -rf /home/ucmaster/%s/mohmp3/%3.3s/%s*",vip,phoneid+1,inner_num);
	system(tmp);
*/
	printf("\n tmp : (%s)",tmp);
    }


    sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,phoneid);
    return 0;       
}


/*************************************************************************
* color ring
|DCR|nwadm1@temp4402.lgdacom.net|078work|1078078work
*************************************************************************/
int
procDC5()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,i;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],add_svc[11],class[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	tmp1[64],line[512],compStr[10],vip[20];
  FILE *fp,*fp1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(class,0,sizeof(class)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(class,argv[2]);
	else
		return(errorReturn("EInput Data",__FILE__,__LINE__));


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		strcpy(vip,serverip);

	}
	else {
		if(argv[3] && *argv[3]) 
			strcpy(prefix,argv[3]);
		if(argv[4] && *argv[4])  {
			strcpy(serverip,argv[4]);
			strcpy(vip,argv[4]);
		}
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		centerflag=1;
	}


	printf("\nphoneid : (%s)",phoneid);

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	printf("\ndate : (%s)",tmp);
	/*** number_manage ***/
VOICE_RETRY:
	/*** number_manage ***/
		if(strlen(class) > 2) {
	printf("\ndate : (%s)",tmp);
			sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'N',class = '' \
			where  (option2 = 'Z' or option2 = 'K') and domain = '%s' and class = '%s'", domain,class);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
	printf("\ndate : (%s)",tmp);
			mysql_query(mysql, sqlcmd);
		}
	printf("\ndate : (%s)",tmp);
		sprintf(sqlcmd,"DELETE from color_info \
		where prefix = '%3.3s' and class = '%s' and serverip = '%s'",\
		prefix,class,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);

		if(strstr(class,"work") || strstr(class,"week")) {
			sprintf(sqlcmd,"DELETE from color_class \
			where prefix = '%3.3s' and class = '%s' and defaultip = '%s'",\
			prefix,class,serverip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			mysql_query(mysql, sqlcmd);
		}


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	sprintf(sqlcmd, "delete from color_info where prefix='%3.3s' and class = '%s' and serverip='%s'",prefix, class,vip);
	mysql_query(mysql, sqlcmd);


	sprintf(commandBuf,"|DC5|%s@%s|%s|%s|%s",user,domain,class,prefix,serverip);
if(PVS == 1  && MASTER == 1) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DC5')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DC5|%s@%s|%s|%s|%s",user,domain,class,prefix,serverip);
		sprintf(resPacket,"|RES|DC5 userid:(%s)-(%s)",user,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DC5')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    if(PVS != 1) {
	    sprintf(tmp, "/tmp/%s.%d.new",prefix,getpid());
	    if ((fp = fopen(tmp, "w")) == NULL) {
		    sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,inner_num);
		    return 0;       
	    }
	    sprintf(tmp1, "/etc/asterisk/musiconhold.conf");

	    if ((fp1 = fopen(tmp1, "r")) == NULL) {
		    fclose(fp);
		    sprintf(resPacket,"|RES|DCR userid:(%s)-(%s)",user,mailbox);
		    return 0;       
	    }

		if(strlen(class) < 7)
		    sprintf(compStr,"[%s]",class);
		else
		    sprintf(compStr,"[%s",class);

	    while((fgets(line,sizeof(line),fp1)) != NULL) {

printf("\nline:(%s), compStr:(%s)",line, compStr);
		if(!strcmp(line,"\n"))
			continue;
		else if(*line == ';');
		else if(strstr(line,compStr)) {
printf("\n=====>line:([7m%s[0m), compStr:(%s)",line, compStr);
			fgets(line,sizeof(line),fp1);
			fgets(line,sizeof(line),fp1);
			continue;
		}
		fprintf(fp,"%s",line);
		memset(line,0,sizeof(line));
	    }
	    fclose(fp);
	    fclose(fp1);

	    sprintf(tmp, "mv -f /tmp/%s.%d.new /etc/asterisk/musiconhold.conf",prefix,getpid());
	    system(tmp);
            system("touch /tmp/vms_update");

	if(strlen(class) < 7)
	    sprintf(tmp,"\\rm -rf /home/ucmaster/%s/mohmp3/%3.3s/%s",vip,prefix,class);
	else
	    sprintf(tmp,"\\rm -rf /home/ucmaster/%s/mohmp3/%3.3s/%s*",vip,prefix,class);
	system(tmp);
	printf("\n tmp : (%s)",tmp);
	}

    sprintf(resPacket,"|RES|DC5 userid:(%s)-(%s)",user,prefix);
    return 0;       
}


/*************************************************************************
* call group
*************************************************************************/
int
procICG()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0, i;
  int   test=0, ret, row_num, centerflag=0,retry=0, loop=0;

  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	depart[65],sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(depart,0,sizeof(depart)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2]) {
		if(strlen(argv[2]) < sizeof(depart))
			strcpy(depart,argv[2]);
		else
			sprintf(depart,"%d",getpid());
	}


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(prefix,argv[3]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

			if(argv[4] && *argv[4]) 
				cpid = atoi(argv[4]);
	}

	if(PVS ==1 ) {
BBB:
		loop++;
		cpid = (time(0) + loop) % 9999;

		if(cpid == 0)
			goto BBB;

		if(cpid > 999)
			sprintf(sqlcmd, "select callgroup from sip_buddies where callgroup = '%04d' and defaultip = '%s'",cpid,serverip);
		else 
			sprintf(sqlcmd, "select callgroup from sip_buddies where callgroup = '%03d' and defaultip = '%s'",cpid,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
			}
			else {
				mysql_free_result(result);
				result = NULL;
				if(tryCnt ++ < 3)
					goto  BBB;
			}
		}
	}

	if(cpid > 999)
		sprintf(sqlcmd,"INSERT into call_group( \
			domain,prefix,code,depart) values( \
			'%s','%s','%04d','%s')",domain,prefix,cpid,depart);
	else
		sprintf(sqlcmd,"INSERT into call_group( \
			domain,prefix,code,depart) values( \
			'%s','%s','%03d','%s')",domain,prefix,cpid,depart);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|ICG|%s@%s|%s|%s|%d|",user,domain,depart,prefix,cpid);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|ICG|%s@%s|%s|%s|%d|",user,domain,depart,prefix,cpid);
		    sprintf(resPacket,"|RES|ICG userid:(%s)-(%s)-(%s)",user,domain,depart);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|ICG userid:(%s)-(%s)-(%s)",user,domain,depart);
    return 0;       
}



/*************************************************************************
* call group Update
*************************************************************************/
int
procUCG()
{
  char sqlcmd1[512];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0,groupcode,sockfd,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],inner_num[30],mailbox[64];
  char	depart[65];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(depart,0,sizeof(depart)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
        strcpy(inner_num,argv[2]);

	if(strlen(inner_num) !=4)
		strcpy(inner_num,"0000");

/****
    if(argv[3] && *argv[3] && isdigitstr(argv[3]))
		groupcode = atoi(argv[3]);
*/

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

			if(groupcode < 0 || groupcode > 9999)
				groupcode = atoi(prefix);
			

			if(groupcode < 1000)
				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%03d', pickupgroup ='%03d' \
				where substr(name,2,7) = '%3.3s%4.4s'",\
				groupcode,groupcode,prefix,inner_num);
			else if(groupcode >= 1000)
				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%04d', pickupgroup ='%04d' \
				where substr(name,2,7) = '%3.3s%4.4s'",\
				groupcode,groupcode,prefix,inner_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					;
			}

			if(groupcode < 1000)
				sprintf(tmp,"sip update 1%3.3s%4.4s %03d",prefix,inner_num,groupcode);
			else if(groupcode >= 1000)
				sprintf(tmp,"sip update 1%3.3s%4.4s %04d",prefix,inner_num,groupcode);

			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,tmp);
				if(sockfd > -1) {
					strcpy(tmp,"Action: Logoff\r\n\r\n");
					write(sockfd, tmp, strlen(tmp));
					close(sockfd);
				}
			}
	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(prefix,argv[4]);
			if(argv[5] && *argv[5]) 
				strcpy(serverip,argv[5]);

			if(groupcode < 0 || groupcode > 9999)
				groupcode = atoi(prefix);

			if(groupcode < 1000)
				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%03d', pickupgroup ='%03d' \
				where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
				groupcode,groupcode,prefix,inner_num,serverip);
			else if(groupcode >= 1000)
				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%04d', pickupgroup ='%04d' \
				where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
				groupcode,groupcode,prefix,inner_num,serverip);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					;
			}
	}


    	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(commandBuf,"|UCG|%s@%s|%s|%03d|%3.3s|%s|",user,domain,inner_num,groupcode,prefix,serverip);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UCG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UCG|%s@%s|%s|%03d|%3.3s|%s|",user,domain,inner_num,groupcode,prefix,serverip);
		sprintf(resPacket,"|RES|UCG userid:(%s)-(%s)_(%s)",user,domain,groupcode);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UCG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|UCG userid:(%s)-(%s)-(%s)",user,domain,groupcode);
	return 0;       
}


/*************************************************************************
* call group
*************************************************************************/
int
procRCG()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	depart[65],code[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(depart,0,sizeof(depart)); 
	memset(code,0,sizeof(code)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

		sprintf(sqlcmd, "select prefix,code,depart from call_group where domain = '%s'",domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error call_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(code, row[1]?row[1]:"001");
				ps_delSpace(code);
				strcpy(depart, row[2]?row[2]:"___");
				ps_delSpace(depart);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",prefix,code,depart);
			if(!((i+1)%25))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					sprintf(resPacket,"|RES");
				}
				else
				{
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}


/*************************************************************************
* messenger Info
*************************************************************************/
int
procRRQ()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65],num070[15],org_num[15],messenger_ip[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(num070,0,sizeof(num070)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

       if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);


			sprintf(sqlcmd, "select 070number,org_num,defaultip,messenger_ip from number_manage where phoneid = '0%7.7s' and defaultip='%s'",phoneid+1,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(num070, row[0]?row[0]:"07000000000");
				ps_delSpace(num070);
				strcpy(org_num, row[1]?row[1]:"00000000");
				ps_delSpace(org_num);
				strcpy(messenger_ip, row[3]?row[3]:"127.0.0.1");
				ps_delSpace(messenger_ip);
			}

			mysql_free_result(result);
			result = NULL;

			sprintf(commandBuf,"|RRQ|%s@%s|%s|%s|%s|",user,domain,num070,org_num,phoneid);
			if(ret = commandSendUc(commandBuf,"RRQ","112.222.225.123",1) < 0) {
				strncpy(resPacket,"|ERR|",5);
				printf("\nresPacket:(%s)",resPacket);
				return -1;
			}
			strncpy(resPacket,"|RES|",5);
	}
	return 0;
}



/*************************************************************************
* channelInfo
*************************************************************************/
int
procCHN()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;

				sprintf(command,"show channel_1 SIP/1%3.3s%4.4s",prefix,inner_num);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
	}
	return 0;
}


/*************************************************************************
* hangup
*************************************************************************/
int
procHNG()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65],outer_num[15],phoneid[10];
	int retOAM2=-1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(outer_num,0,sizeof(outer_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");
    if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);

    if(PVS == 1) {
        if(customInfoWithChk(domain) < 0){
		if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
                        sprintf(commandBuf,"|HNG|%s|%s|%s|",argv[1],argv[2],argv[3]);
                        if(ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS2) < 0) {
                                ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS3);
                        }
                        return ret;
/**

			if(mysql_1)
				mysql_close(mysql_1);

			sqlinit_1(OAM_RLYSERVERS_DB2);
			if(customInfo2(domain) == 0){	
                		retOAM2= procHNG2(OAM_RLYSERVERS2);
                		printf("\nOAM2 connect .. procHNG2 return (%s)(%d)\n",OAM_RLYSERVERS2,retOAM2);
			}else{
				if(mysql_1)
					mysql_close(mysql_1);

				sqlinit_1(OAM_RLYSERVERS_DB3);
				if(customInfo2(domain) == 0){	
                			retOAM2= procHNG2(OAM_RLYSERVERS3);
                			printf("\nOAM3 connect .. procHNG2 return (%s)(%d)\n",OAM_RLYSERVERS3,retOAM2);
				}
			}
                	return retOAM2;
**/
		}
        }
/***********
        if(customInfoWithChk(domain) < 0){
                retOAM2= procHNG2();
                printf("\nprocHNG2 return (%d)\n",retOAM2);
                return retOAM2;
        }
*********/
		if(strlen(outer_num) <  10) {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		}
		else  {
			sprintf(sqlcmd, "select defaultip,phoneid,domain from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(phoneid, row[1]?row[1]:"00000000");
				ps_delSpace(phoneid);
				strcpy(domain, row[2]?row[2]:"uplus.co.kr");
				ps_delSpace(domain);
			}

			mysql_free_result(result);
			result = NULL;
			strncpy(prefix,phoneid+1,3);
			strcpy(inner_num,phoneid+4);
			*phoneid = '1';
		}


		sprintf(channelname,"SIP/1%7.7s",phoneid+1);
		sprintf(command,"Channel: %s",channelname);
		sockfd = ManagerAction(serverip,"Hangup",command);
		if(sockfd > -1) {
			strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
			write(sockfd, sqlcmd, strlen(sqlcmd));
			close(sockfd);
		}

	}
	sprintf(resPacket, "|RES|HNG|%s@%s|%s|",user,domain,phoneid);
	return 0;
}


/*************************************************************************
* rcording
*************************************************************************/
int
procREC()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
	char	destP[256];
  char  sqlcmd[512],phoneid[20],mailbox[64],method[10];
  char  basedir[128];
  char	code[65], filename[64],channel[64],peerchannel[64];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;
	int	retOAM2=-1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(peerchannel,0,sizeof(peerchannel)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(method,0,sizeof(method)); 

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/****
/home/ucmaster/211.32.148.83/monitor
|REC|admin@test28.net|001/0010002/0002-0000_20091281442|SIP/10010002-b3c6||10010002|===>(rec.c)
*/

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");

//strcpy(filename,"");
	if(strlen(filename) < 20)
		    strcpy(filename,"");

    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");
	strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");

    if(argv[5] && *argv[5])
		strcpy(phoneid,argv[5]);
	else
		strcpy(phoneid,"xxxxx");

    if(argv[6] && *argv[6])
		strcpy(method,argv[6]);
	else
		strcpy(method,"");


        if(customInfoWithChk(domain) < 0){
		if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){

                        sprintf(commandBuf,"|REC|%s|%s|%s|%s|%s|%s|",argv[1],argv[2],argv[3],argv[4],argv[5],argv[6]);
                        if(ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS2) < 0) {
                                ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS3);
                        }
                        return ret;
/**

			if(mysql_1)
				mysql_close(mysql_1);

			sqlinit_1(OAM_RLYSERVERS_DB2);
			if(customInfo2(domain) == 0){	
                		retOAM2= procREC2(OAM_RLYSERVERS2);
                		printf("\nOAM2 connect .. procREC2 return (%s)(%d)\n",OAM_RLYSERVERS2,retOAM2);
			}else{
				if(mysql_1)
					mysql_close(mysql_1);

				sqlinit_1(OAM_RLYSERVERS_DB3);
				if(customInfo2(domain) == 0){	
                			retOAM2= procREC2(OAM_RLYSERVERS3);
                			printf("\nOAM3 connect .. procREC2 return (%s)(%d)\n",OAM_RLYSERVERS3,retOAM2);
				}
			}
                	return retOAM2;
**/
		}
        }
/*************
        if(customInfoWithChk(domain) < 0){
                retOAM2= procREC2();
                printf("procREC@ return (%d)\n",retOAM2);
                return retOAM2;
        }

***************/
    //if(PVS == 1 && *domain == '\0') {
	if(strlen(phoneid) == 8)
		sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"070",3))
		sprintf(sqlcmd, "select domain,defaultip from number_manage where 070number = '%s' and domain='%s'",phoneid,domain);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"0",1))
		sprintf(sqlcmd, "select domain,defaultip from number_manage where org_num = '%s' and domain='%s'",phoneid,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(domain, row[0]?row[0]:"unknown.unknown");
		ps_delSpace(domain);
		strcpy(serverip, row[1]?row[1]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	mysql_free_result(result);
	result = NULL;
//}

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

/*********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);

                        if(*filename == '\0') {
                               sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);

				sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);
			}
			else
				sprintf(basedir,"%s",filename);

  

			if(*channel == '\0' || strlen(channel) < 10) {
				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			//if(strlen(channelname) < 10 || strlen(bridgedchannelname) < 10) {
			if(strlen(channelname) < 10) {
				sprintf(resPacket, "|ERR|REC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}


printf("\n[5mMonitor start~~~!");
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
			sprintf(command,"%s","Monitor");
			sockfd=Monitor(serverip,command,basedir,channelname,*peerchannel?peerchannel:"xxxx",method);
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}
	//}
	sprintf(resPacket, "|RES|REC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}


/*************************************************************************
* rcording
*************************************************************************/
int
procRE_()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100],org_phoneid[32];
  unsigned int	tmpNumber;
  char record[10];
	char	destP[256];
	char	flag[10];
  char  sqlcmd[512],phoneid[20],mailbox[64],method[10];
  char  basedir[128];
  char	code[65], filename[64],channel[64],peerchannel[64];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;


	memset(record,0,sizeof(record));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(peerchannel,0,sizeof(peerchannel)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(method,0,sizeof(method)); 
	memset(flag,0,sizeof(flag)); 

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/****
/home/ucmaster/211.32.148.83/monitor
|REC|admin@test28.net|001/0010002/0002-0000_20091281442|SIP/10010002-b3c6||10010002|===>(rec.c)
*/

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");

//strcpy(filename,"");
	if(strlen(filename) < 20)
		    strcpy(filename,"");

    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");
	strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");

    if(argv[5] && *argv[5]) {
        strcpy(org_phoneid,argv[5]);
                if(*argv[5] == '#')
                         strcpy(phoneid,argv[5]+2);
                else
                strcpy(phoneid,org_phoneid);
    }
    else
         strcpy(phoneid,"xxxxx");


    if(argv[6] && *argv[6])
		strcpy(method,argv[6]);
	else
		strcpy(method,"");

    if(argv[7] && *argv[7])
		strcpy(flag,argv[7]);
	else
		strcpy(flag,"7");


    //if(PVS == 1 && *domain == '\0') {
	if(strlen(phoneid) == 8)
		sprintf(sqlcmd, "select domain,defaultip,record from number_manage where phoneid = '0%7.7s'",phoneid+1);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"070",3))
		sprintf(sqlcmd, "select domain,defaultip,record from number_manage where 070number = '%s'",phoneid);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"0",1))
		sprintf(sqlcmd, "select domain,defaultip,record from number_manage where org_num = '%s'",phoneid);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(domain, row[0]?row[0]:"unknown.unknown");
		ps_delSpace(domain);
		strcpy(serverip, row[1]?row[1]:"127.0.0.1");
		ps_delSpace(serverip);

		strcpy(record, row[2]?row[2]:"0");
		ps_delSpace(record);
	}
	mysql_free_result(result);
	result = NULL;

	if(*flag == '1' && *record != '1' && *record != '3') {
		sprintf(resPacket, "|ERR|%s is not aauto record....");
		logCmd();
		return(-1);
	}
		
//}

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

//if(PVS == 1 && *domain != '\0') {
/*********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);
printf("\n[5m(((%s)))[0m",serverip);

                        if(*filename == '\0') {
                               sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);

				sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);
			}
			else
				sprintf(basedir,"%s",filename);

  
/***********************
			if(*channel == '\0' || strlen(channel) < 10) {

				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			//if(strlen(channelname) < 10 || strlen(bridgedchannelname) < 10) {
			if(strlen(channelname) < 10) {
				sprintf(resPacket, "|ERR|REC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}
*/

printf("\n[5mMonitor start~~~!");
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
			if(*org_phoneid == '#')
				 sprintf(channelname,"SIP/%s",org_phoneid);
			else
				 sprintf(channelname,"SIP/1%7.7s",phoneid+1);

			sprintf(command,"%s","Monitor");
			sockfd = Monitor(serverip,command,basedir,channelname,*peerchannel?peerchannel:"xxxx",method);
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}

	//}
	sprintf(resPacket, "|RES|REC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}




/*************************************************************************
* rcording free
*************************************************************************/
int
procDEC()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],phoneid[20],mailbox[64];
  char	code[65], filename[64],channel[64],peerchannel[64];
  char	basedir[128];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;
	int retOAM2=-1;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");
    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");
    if(argv[4] && *argv[5])
		strcpy(phoneid,argv[5]);
	else
		strcpy(phoneid,"xxxxx");

        if(customInfoWithChk(domain) < 0){
		if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){

                        sprintf(commandBuf,"|DEC|%s|%s|%s|%s|%s|",argv[1],argv[2],argv[3],argv[4],argv[5]);
                        if(ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS2) < 0) {
                                ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS3);
                        }
                        return ret;
/**

			if(mysql_1)
				mysql_close(mysql_1);

			sqlinit_1(OAM_RLYSERVERS_DB2);
			if(customInfo2(domain) == 0){	
                		retOAM2= procDEC2(OAM_RLYSERVERS2);
                		printf("\nOAM2 connect .. procDEC2 return (%s)(%d)\n",OAM_RLYSERVERS2,retOAM2);
			}else{
				if(mysql_1)
					mysql_close(mysql_1);

				sqlinit_1(OAM_RLYSERVERS_DB3);
				if(customInfo2(domain) == 0){	
                			retOAM2= procDEC2(OAM_RLYSERVERS3);
                			printf("\nOAM3 connect .. procDEC2 return (%s)(%d)\n",OAM_RLYSERVERS3,retOAM2);
				}
			}
                	return retOAM2;
**/
		}
        }
/***********
        if(customInfoWithChk(domain) < 0){
                retOAM2= procDEC2();
                printf("\nprocDEC2 return (%d)\n",retOAM2);
                return retOAM2;
        }
************/

	memset(filename,0,sizeof(filename)); 
    //if(PVS == 1 && *domain == '\0') {
		//	sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s'",phoneid+1);
			sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
						
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(domain, row[0]?row[0]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
			}
			mysql_free_result(result);
			result = NULL;
	//}

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

    //if(PVS == 1 && *domain != '\0') {
/***********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);
printf("\n[5m(((%s)))[0m",serverip);

			if(*filename == '\0')
				sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);
				
			sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);

			if(*channel == '\0' || strlen(channel) < 10) {
				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			if(strlen(channelname) < 10 ) {
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}
/****
			if(*monitored == '0'){
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|2|",user,domain,phoneid,serverip);
				return -1;
			}
*/

printf("\n[5mMonitor stop~~~!");
			sprintf(command,"%s","StopMonitor");
			sockfd = Monitor(serverip,command,basedir,channelname,peerchannel,NULL);
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}

	//}
	sprintf(resPacket, "|RES|DEC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}

/*************************************************************************
* rcording free
*************************************************************************/
int
procDE_()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100],org_phoneid[32];;
  unsigned int	tmpNumber;
  char  sqlcmd[512],phoneid[20],mailbox[64];
  char	code[65], filename[64],channel[64],peerchannel[64];
  char	basedir[128];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");
    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");
    if(argv[5] && *argv[5]) {
         strcpy(org_phoneid,argv[5]);
         if(*argv[5] == '#')
                strcpy(phoneid,argv[5]+2);
         else
                strcpy(phoneid,org_phoneid);
    }
     else
            strcpy(phoneid,"xxxxx");


	memset(filename,0,sizeof(filename)); 
    //if(PVS == 1 && *domain == '\0') {
			sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s'",phoneid+1);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
						
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(domain, row[0]?row[0]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
			}
			mysql_free_result(result);
			result = NULL;
	//}

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

    //if(PVS == 1 && *domain != '\0') {
/***********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);
printf("\n[5m(((%s)))[0m",serverip);

			if(*filename == '\0')
				sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);
				
			sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);

/****
			if(*channel == '\0' || strlen(channel) < 10) {
				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			if(strlen(channelname) < 10 ) {
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}
****/
/****
			if(*monitored == '0'){
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|2|",user,domain,phoneid,serverip);
				return -1;
			}
*/

                                if(*org_phoneid == '#')
                                        sprintf(channelname,"SIP/%s",org_phoneid);
                                else
                                        sprintf(channelname,"SIP/1%7.7s",phoneid+1);

				sprintf(command,"%s","StopMonitor");
printf("\n[5mMonitor stop~~~!");
                                sockfd = Monitor(serverip,command,basedir,channelname,peerchannel,NULL);
				if(sockfd > -1) {
					strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
					write(sockfd, sqlcmd, strlen(sqlcmd));
					close(sockfd);
				}

	//}
	sprintf(resPacket, "|RES|DEC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}




/*************************************************************************
* call group
*************************************************************************/
int
procAPI()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    //if(PVS == 1) {
	if(customInfo(domain) < 0)
		return -1;

	sprintf(command,"sip show peer 1%3.3s%4.4s",prefix,inner_num);
	sockfd = Manager("127.0.0.1",command);
	if(sockfd < 0) {
		sockfd = Manager("127.0.0.1",command);
		if(sockfd < 0) {
			return 0;
		}

	}
	if(sockfd > -1) {
		strcpy(command,"Action: Logoff\r\n\r\n");
		write(sockfd, command, strlen(command));
		close(sockfd);
	}
//}
return 0;
}



/*************************************************************************
* call group
*************************************************************************/
int
procDCG()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(code,argv[2]);
/****
    if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));
*/

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[3] && *argv[3]) 
				strcpy(prefix,argv[3]);
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

			//if(isdigitstr(code)) {
				if(atoi(code) < 999)
					sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%3.3s', pickupgroup ='%3.3s' \
					where callgroup = '%s' and defaultip='%s'",\
					prefix,prefix,code,serverip);
				else if(atoi(code) >= 1000)
					sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%3.3s', pickupgroup ='%3.3s' \
					where callgroup = '%s' and defaultip='%s'",\
					prefix,prefix,code,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						;
				}
			//}
	}

	if(atoi(code) < 999)
		sprintf(sqlcmd,"SELECT number from  call_member \
			where prefix='%3.3s' and code = '%s' and defaultip='%s'",prefix,code,serverip);
	else if(atoi(code) >= 1000)
		sprintf(sqlcmd,"SELECT number from  call_member \
			where prefix='%3.3s' and code = '%s' and defaultip='%s'",prefix,code,serverip);


	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Search Error(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	result_1 = mysql_store_result( mysql );
	if(!result_1) {
		;
	}   
			
	row_num = mysql_num_rows(result_1);
	if( row_num == 0 ) {
		;
	}
/***
	else {
		sockfd = tcpConnect(serverip, 5038);
	}
*/

	for(i=0;i < row_num;i++)
	{
		row = mysql_fetch_row( result_1);
		if(row) {
			strcpy(mailbox, row[0]?row[0]:"----");
			ps_delSpace(mailbox);

			//if(isdigitstr(code)) {

				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%3.3s', pickupgroup ='%3.3s' \
				where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",prefix,prefix,\
				prefix,mailbox,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						;
				}
				sprintf(tmp,"sip update 1%3.3s%4.4s %s",prefix,mailbox,prefix);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = Manager(serverip,tmp);
					if(sockfd > -1) {
						strcpy(tmp,"Action: Logoff\r\n\r\n");
						write(sockfd, tmp, strlen(tmp));
						close(sockfd);
					}
				}

		}
	}
	mysql_free_result(result_1);
	if(sockfd > -1)
		close(sockfd);

	//if(isdigitstr(code)) {
		if(atoi(code) < 999)
			sprintf(sqlcmd,"DELETE from  call_group \
				where domain='%s' and code = '%s'",domain,code);
		else if(atoi(code) >= 1000)
			sprintf(sqlcmd,"DELETE from  call_group \
				where domain='%s' and code = '%s'",domain,code);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		if(atoi(code) < 999)
			sprintf(sqlcmd,"DELETE from  call_member \
			where prefix='%3.3s' and code = '%s' and defaultip='%s'",prefix,code,serverip);
		else if(atoi(code) >= 1000)
			sprintf(sqlcmd,"DELETE from  call_member \
			where prefix='%3.3s' and code = '%s' and defaultip='%s'",prefix,code,serverip);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
	//}


    	if(PVS == 1 && MASTER == 1) 
	{

		sprintf(commandBuf,"|DCG|%s@%s|%s|%s|%s|",user,domain,code,prefix,serverip);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCG')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DCG|%s@%s|%s|%s|%s|",user,domain,code,prefix,serverip);
		sprintf(resPacket,"|RES|DCG userid:(%s)-(%s)_(%s)",user,domain,code);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DCG userid:(%s)-(%s)-(%s)",user,domain,code);
	return 0;       
}


/*************************************************************************
* trunk ip 
*************************************************************************/
int
procITR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	ip[21],etc[21];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
		strcpy(ip,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(prefix,argv[3]);

    if(argv[4] && *argv[4])
		strcpy(etc,argv[4]);
    else
		strcpy(etc,"");
		

	sprintf(sqlcmd,"INSERT into trunk_ip( \
	ip, prefix, etc,domain) values( \
	'%s','%s','%s','%s')",ip,prefix,etc,domain);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(commandBuf,"|ITR|%s@%s|%s|%s|%s|",user,domain,ip,prefix,etc);
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ITR')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|ITR|%s@%s|%s|%s|%s|",user,domain,ip,prefix,etc);
		sprintf(resPacket,"|RES|ITR userid:(%s)-(%s)_(%s)_(%s)",user,domain,ip,prefix);

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ITR')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
/***********
				if(strcmp(row[1],"sub1")) {
					tmm_DateAddOneDay(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
*/
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|ITR userid:(%s)-(%s)_(%s)_(%s)",user,domain,ip,prefix);

    return 0;       
}


/*************************************************************************
* trunk ip 
*************************************************************************/
int
procRTR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	ip[21],etc[21];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(number,0,sizeof(number)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

		sprintf(sqlcmd, "select ip,prefix,etc from trunk_ip");
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error trunk_ip!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(ip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(ip);
				strcpy(prefix, row[1]?row[1]:"000");
				ps_delSpace(prefix);
				strcpy(etc, row[2]?row[2]:"___");
				ps_delSpace(etc);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",ip,prefix,etc);
		}
	mysql_free_result(result);
	result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}


/*************************************************************************
* trunk ip 
*************************************************************************/
int
procDTR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	ip[21],etc[21];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
/****
	if (isMailList(argv[1])		
		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
		strcpy(ip,argv[2]);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


	sprintf(sqlcmd,"DELETE from  trunk_ip \
		where ip='%s'",ip);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

    	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(commandBuf,"|DTR|%s@%s|%s|",ip);

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DTR|%s@%s|%s|",ip);

		sprintf(resPacket,"|RES|DTR userid:(%s)-(%s)_(%s)",user,domain,ip);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DTR')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
/***
				if(strcmp(row[1],"sub1")) {
					tmm_DateAddOneDay(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
*/
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|DTR userid:(%s)-(%s)-(%s)",user,domain,ip);
	return 0;       
}



/*************************************************************************
* call meber
*************************************************************************/
int
procICM()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],name[33],code[5],seq[10],sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
		strcpy(code,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(seq,argv[3]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[4] && *argv[4])
	snprintf(number,sizeof(number),"%s",argv[4]);
    else
		strcpy(number,"0");

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(strlen(number) != 4 || !isdigitstr(number))
		return(errorReturn("EInputData",__FILE__,__LINE__));
		
    if(argv[5] && *argv[5])
		strcpy(name,argv[5]);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[6] && *argv[6]) 
				strcpy(prefix,argv[6]);
			if(argv[7] && *argv[7]) 
				strcpy(serverip,argv[7]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			//if(isdigitstr(code)) {
				if(atoi(code) < 1000)
					sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%s', pickupgroup ='%s' \
					where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
					code,code,prefix,number,serverip);
				else if(atoi(code) >= 1000)
					sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%s', pickupgroup ='%s' \
					where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
					code,code,prefix,number,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						;
				}
/**********
				sprintf(tmp,"asterisk -rx 'sip update 1%3.3s%4.4s %s'",prefix,number,code);
				system(tmp);
				sprintf(tmp,"asterisk -rx 'sip update 2%3.3s%4.4s %s'",prefix,number,code);
				system(tmp);
*/
			//}
	}


	tel_string(number);
	sprintf(sqlcmd,"DELETE from call_member where prefix='%3.3s' and code = '%s' and number = '%s' and defaultip='%s'",prefix,code,number,serverip);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(atoi(code) < 1000)
		sprintf(sqlcmd,"INSERT into call_member( \
			prefix,code,seq,number,name,defaultip) values( \
			'%3.3s','%s',%s,'%s','%s','%s')",prefix,code,seq,_tmpbuf,name,serverip);
	else
		sprintf(sqlcmd,"INSERT into call_member( \
			prefix,code,seq,number,name,defaultip) values( \
			'%3.3s','%s',%s,'%s','%s','%s')",prefix,code,seq,_tmpbuf,name,serverip);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
/***
	sprintf(sqlcmd,"UPDATE number_manage  set option4 = 'Y' \
	where substr(phoneid,2,7) = '%3.3s%4.4s'",\
	prefix,number);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
			;
	}
*/

	//if(isdigitstr(code)) {
		if(atoi(code) < 1000)
			sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%s', pickupgroup ='%s' \
			where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
			code,code,prefix,number,serverip);
		else if(atoi(code) >= 1000)
			sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%s', pickupgroup ='%s' \
			where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
			code,code,prefix,number,serverip);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				;
		}
		if(PVS == 0) {
			sprintf(tmp,"sip update 1%3.3s%4.4s %s",prefix,number,code);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,tmp);
				if(sockfd > -1) {
					strcpy(tmp,"Action: Logoff\r\n\r\n");
					write(sockfd, tmp, strlen(tmp));
					close(sockfd);
				}
			}

		}
	//}

		if(PVS == 1 && MASTER == 1) 
		{
			sprintf(commandBuf,"|ICM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,code,seq,number,name,prefix,serverip);
			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1i,'ICM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql, sqlcmd);

				}
			}

		sprintf(commandBuf,"|ICM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,code,seq,number,name,prefix,serverip);
		sprintf(resPacket,"|RES|ICM userid:(%s)-(%s)_(%s)",user,domain,code);

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICM')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|ICM userid:(%s)-(%s)-(%s)-(%s)",user,domain,code,number);
    return 0;       
}


/*************************************************************************
* call group
*************************************************************************/
int
procRCM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0, row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(code,argv[2]);

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));
*/

	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);
		
		if(atoi(code) < 1000)
			sprintf(sqlcmd, "select seq,number,name from call_member where prefix = '%3.3s' and code = '%s' and defaultip = '%s' order by seq asc",prefix,code,serverip);
		else if(atoi(code) >= 1000)
			sprintf(sqlcmd, "select seq,number,name from call_member where prefix = '%3.3s' and code = '%s' and defaultip = '%s' order by seq asc",prefix,code,serverip);
		
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(number, row[1]?row[1]:"0");
				ps_delSpace(number);
				strcpy(name, row[2]?row[2]:"___");
				ps_delSpace(name);
			}
			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",seq,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",seq,number,name);
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);
	return 0;       
}




/*************************************************************************
* delete call member
*************************************************************************/
int
procDCM()
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],name[33],code[5],seq[10], sqlcmd1[512];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
/****
	if (isMailList(argv[1])		
		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
		strcpy(code,argv[2]);
    if(argv[3]&& *argv[3])
	snprintf(number,sizeof(number),"%s",argv[3]);
    else
	strcpy(number,"0");
    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    //if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code))
    if(strlen(number) < 4 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(prefix,argv[4]);
			if(argv[5] && *argv[5]) 
				strcpy(serverip,argv[5]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			//if(isdigitstr(code)) {
				sprintf(sqlcmd,"UPDATE sip_buddies set callgroup = '%3.3s', pickupgroup ='%3.3s' \
				where substr(name,2,7) = '%3.3s%4.4s' and defaultip='%s'",\
				prefix,prefix,prefix,number,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						;
				}
/***
				sprintf(tmp,"asterisk -rx 'sip update 1%3.3s%4.4s %s'",atoi(prefix),number,prefix);
				system(tmp);
				sprintf(tmp,"asterisk -rx 'sip update 2%3.3s%4.4s %s'",atoi(prefix),number,prefix);
				system(tmp);
*/
			//}
	}

	tel_string(number);

	if(atoi(code) < 1000)
		sprintf(sqlcmd,"DELETE from  call_member \
			where prefix='%3.3s' and code = '%s' and number='%s' and defaultip='%s'",prefix,code,_tmpbuf,serverip);
	else if(atoi(code) >= 1000)
		sprintf(sqlcmd,"DELETE from  call_member \
			where prefix='%3.3s' and code = '%s' and number='%s' and defaultip='%s'",prefix,code,_tmpbuf,serverip);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	//if(isdigitstr(code) && PVS == 0) {
	if(PVS == 0) {
		sprintf(tmp,"sip update 1%3.3s%4.4s %s",prefix,number,prefix);
		if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
			sockfd = Manager(serverip,tmp);
			if(sockfd > -1) {
				strcpy(tmp,"Action: Logoff\r\n\r\n");
				write(sockfd, tmp, strlen(tmp));
				close(sockfd);
			}
		}
	}

    	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(commandBuf,"|DCM|%s@%s|%s|%s|%s|%s|",user,domain,code,number,prefix,serverip);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DCM|%s@%s|%s|%s|%s|%s|",user,domain,code,number,prefix,serverip);
		sprintf(resPacket,"|RES|DCM userid:(%s)-(%s)_(%s)",user,domain,code);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10 ) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DCM')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
    sprintf(resPacket,"|RES|DCM userid:(%s)-(%s)-(%s)-(%s)",user,domain,code,number);
    return 0;       
}





/*************************************************************************
* hunting group
*************************************************************************/
int
procIHT()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(frommin,0,sizeof(frommin));
	memset(totime,0,sizeof(totime));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4]) {
		if(strlen(argv[4]) < sizeof(name))
			strcpy(name,argv[4]);
		else
			snprintf(name,"%d",getpid);
	}
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

	if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");


    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");
	if(*totime == '\0')
		strcpy(totime,"0");
		
    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");
    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");
    if(argv[27] && *argv[27])
                strcpy(break_include,argv[27]);
        else
                strcpy(break_include,"0");




	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[25] && *argv[25]) 
			strcpy(prefix,argv[25]);
		if(argv[26] && *argv[26]) 
			strcpy(serverip,argv[26]);

		if(argv[27] && *argv[27])
			strcpy(break_include,argv[27]);
		else
			strcpy(break_include,"0");
	}

	if(strlen(forward_num) > 4) {
		sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s' and domain='%s'",forward_num,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
				
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(type, row[0]?row[0]:"1");
					ps_delSpace(type);

					strcpy(arsflag, row[1]?row[1]:"N");
					ps_delSpace(type);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*type == '0') {
			sprintf(resPacket,"|ERR|착신전환 번호오류:(%s)",forward_num);
			return -1;
		}
	}

	sprintf(sqlcmd,"delete from hunting_group where number = '%s' and extension ='%s' and domain='%s'",number,extension,domain);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into hunting_group( \
		domain,prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",domain,prefix,number,extension,name,method, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|IHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],name,argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],prefix,serverip,break_include);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|IHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],name,argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],prefix,serverip,break_include);

		sprintf(resPacket,"|RES|IHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
    return 0;       
}
/*************************************************************************************************
update number_list
*************************************************************************************************/
int
procUNL()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[1];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],arsflag[10];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],status[10],forbid_prefix[128],centrex[20],org_num[14],area_code[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(type,argv[2]);
	else 
		strcpy(type,"1");

    if(argv[3] && *argv[3])
		strcpy(status,argv[3]);
	else 
		strcpy(status,"0");

    if(argv[4] && *argv[4])
		strcpy(forbid_prefix,argv[4]);
	else 
		strcpy(forbid_prefix,"");


    if(argv[5] && *argv[5])
		strcpy(centrex,argv[5]);
	else 
		strcpy(centrex,"127.0.0.1");

    if(argv[6] && *argv[6])
		strcpy(org_num,argv[6]);
	else 
		strcpy(org_num,"");

    if(argv[7] && *argv[7])
		strcpy(area_code,argv[7]);
	else 
		strcpy(area_code,"");

    if(argv[8] && *argv[8])
                snprintf(number,sizeof(number),"%s",argv[8]);
	else 
		strcpy(number,"07000000000");


	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}

	if(*type == '0')
		strcpy(arsflag,"Q");

	sprintf(sqlcmd,"update number_list set domain='%s',type=%s,status=%s,forbid_prefix = '%s',serverip='%s',org_num='%s',areacode='%s' , type=%s,arsflag = '%s' where number='%s'",domain,type,status,forbid_prefix,centrex,org_num,area_code,type,arsflag,number);


	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}


	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
	sprintf(sqlcmd,"update number_manage set numbertype = '%s',option7 = '%s' where 070number='%s'",type,arsflag,number);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s,%s)",mysql_error(mysql),sqlcmd );
		return -1;
	}


	sprintf(commandBuf,"|UNL|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8]);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNL')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UNL|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8]);
    sprintf(resPacket,"|RES|UNL userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,forbid_prefix,org_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1i,'UNL')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}



    sprintf(resPacket,"|RES|UNL userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,forbid_prefix,org_num);
    return 0;       
}



/*************************************************************************
+---------------+--------------+------+-----+-----------+----------------+
| Field         | Type         | Null | Key | Default   | Extra          |
+---------------+--------------+------+-----+-----------+----------------+
| no            | int(11)      | NO   | PRI | NULL      | auto_increment |
| domain        | varchar(64)  | NO   | UNI | asterisk  |                |
| serverip      | varchar(32)  | NO   |     | 127.0.0.1 |                |
| servername    | varchar(64)  | NO   |     | asterisk  |                |
| service       | varchar(32)  | NO   |     | GROUPWARE |                |
| billtype      | varchar(1)   | NO   |     | A         |                |
| status        | varchar(2)   | NO   |     | A         |                |
| regday        | varchar(8)   | YES  |     |           |                |
| defcontext    | varchar(30)  | YES  |     | outbound  |                |
| prefix        | varchar(3)   | YES  |     |           |                |
| manager       | varchar(32)  | YES  |     |           |                |
| passwd        | varchar(10)  | YES  |     | NULL      |                |
| manager_name  | varchar(32)  | YES  |     |           |                |
| manager_tel   | varchar(32)  | YES  |     |           |                |
| phone_type    | varchar(10)  | YES  |     |           |                |
| ipphone_num   | int(4)       | NO   |     | 0         |                |
| wifiphone_num | int(4)       | NO   |     | 0         |                |
| cpgport_num   | int(4)       | NO   |     | 0         |                |
| add_svc       | varchar(10)  | YES  |     |           |                |
| messenger_ip  | varchar(32)  | NO   |     | 127.0.0.1 |                |
| dialplan      | varchar(2)   | YES  |     | N         |                |
| proxyip       | varchar(32)  | YES  |     | 127.0.0.1 |                |
| custom_no     | varchar(20)  | YES  |     |           |                |
| billing_no    | varchar(20)  | YES  |     |           |                |
| c_history     | varchar(200) | YES  |     | NULL      |                |
| svc_kind      | varchar(10)  | YES  |     |           |                |
+---------------+--------------+------+-----+-----------+----------------+
26 rows in set (0.00 sec)

*************************************************************************/
int
procRCT()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10],org_num[20];
	
	
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);

	if(PVS == 1) 
	{
		if(*domain) {
			if(*flag == 'U')
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where domain='%s' and status = 1  and number not in (select 070number from number_manage where domain='%s' and substr(imid,1,5) <> 'tmpid' and type = '1') order by type,number asc",domain,domain);
			else
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where domain='%s' and status = 1 order by type,number asc",domain);
		}
		else
			sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where status = 1 order by type,number asc");


		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);
			strcpy(org_num, row[5]?row[5]:"");
			ps_delSpace(org_num);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:0,domain1,lastdate,org_num);
		}
		if(!((i+1)%15)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* hunting group
*************************************************************************/
int
procUUT()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[1];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"R");

	if(*flag == 'R')
		strcpy(extension,"-");


    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}

	sprintf(sqlcmd,"update number_list set type=0,arsflag = 'Q' where number='%s' and domain='%s'",number,domain);

	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
	sprintf(sqlcmd,"update number_manage set numbertype = '0',option7 = 'Q',inner_method='0' where 070number='%s' and domain='%s'",number,domain);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s,%s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|UUT|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6]);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UUT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UUT|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6]);
    sprintf(resPacket,"|RES|UUT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}



    sprintf(resPacket,"|RES|UUT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
    return 0;       
}



/*************************************************************************************************/
/*************************************************************************************************/
int
procUHT()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	break_include[10];

	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"1");
/*
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");


    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");

    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");

    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");

    if(argv[27] && *argv[27])
                strcpy(break_include,argv[27]);
        else
                strcpy(break_include,"0");



    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[25] && *argv[25]) 
			strcpy(prefix,argv[25]);
		if(argv[26] && *argv[26]) 
			strcpy(serverip,argv[26]);
		if(argv[27] && *argv[27])
			strcpy(break_include,argv[27]);
		else
			strcpy(break_include,"0");
	}

	if(*flag == 'A') {
		sprintf(sqlcmd,"UPDATE hunting_group set method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s', break_include = '%s'\
			where domain='%s' and number = '%s' and extension = '%s'",method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,domain,number,extension);
		//if(*fromtime != '0' || *safromtime != '0' || *sunfromtime != '0' || *breakfromtime != '0') {
			ret = mysql_query(mysql, sqlcmd);
			sprintf(sqlcmd,"UPDATE hunting_group set fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s' ,safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',break_include='%s' \
				where domain='%s' and number = '%s' and extension <> '-'",fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,domain,number);
		//}
	}
	else if(*flag == 'R') {
		sprintf(sqlcmd,"UPDATE hunting_group set method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s' ,breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',break_include = '%s'\
			where domain='%s' and number = '%s' and extension = '-'",method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,domain,number);
	}


	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   

	sprintf(commandBuf,"|UHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],prefix,serverip,break_include);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UHT|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],prefix,serverip);
sprintf(resPacket,"|RES|UHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UHT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


sprintf(resPacket,"|RES|UHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
return 0;       
}

/*************************************************************************
* hunting group
*************************************************************************/
int
procRHT()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	code[10],flag[2];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
	char    inner_method[10];

  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
	memset(breakfromtime,0,sizeof(breakfromtime)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktotime,0,sizeof(breaktotime)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(inner_method,0,sizeof(inner_method));

    if(argv[2] && *argv[2])
		strcpy(flag,argv[2]);
	else 
		strcpy(flag,"A");
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


		if(*flag == 'R')
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,inner_method from hunting_group where domain = '%s' and extension = '-' and number in(select number from number_list where domain='%s')",domain,domain);
		else 
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,inner_method from hunting_group where domain = '%s' and extension <> '-' and number in(select number from number_list where domain='%s')",domain,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(number, row[1]?row[1]:"001");
				ps_delSpace(number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(name, row[3]?row[3]:"___");
				ps_delSpace(name);
				strcpy(method, row[4]?row[4]:"0");
				ps_delSpace(method);
				strcpy(fromtime, row[5]?row[5]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[6]?row[6]:"0");
				ps_delSpace(totime);
				strcpy(conn_method, row[7]?row[7]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[8]?row[8]:"");
				ps_delSpace(forward_num);
				strcpy(frommin, row[9]?row[9]:"0");
				ps_delSpace(tomin);
				strcpy(tomin, row[10]?row[10]:"0");
				ps_delSpace(tomin);
				strcpy(safromtime, row[11]?row[11]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[12]?row[12]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[13]?row[13]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[14]?row[14]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[15]?row[15]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[16]?row[16]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[17]?row[17]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[18]?row[18]:"0");
				ps_delSpace(suntomin);

				strcpy(breakfromtime, row[19]?row[19]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[20]?row[20]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[21]?row[21]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[22]?row[22]:"0");
				ps_delSpace(breaktomin);
				strcpy(inner_method, row[23]?row[23]:"0");
				ps_delSpace(inner_method);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,method, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,inner_method);

                                        if(!((i+1)%9))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}

/*************************************************************************
* hunting group
*************************************************************************/
int
procRH1()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	code[10],flag[2];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];

  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20];

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(directnumber,0,sizeof(directnumber));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
	memset(breakfromtime,0,sizeof(breakfromtime)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktotime,0,sizeof(breaktotime)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

    if(argv[2] && *argv[2])
		strcpy(flag,argv[2]);
	else 
		strcpy(flag,"A");
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


		if(*flag == 'R')
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber from hunting_group where domain = '%s' and extension = '-' and number in(select number from number_list where domain='%s')",domain,domain);
		else 
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber from hunting_group where domain = '%s' and extension <> '-' and number in(select number from number_list where domain='%s')",domain,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(number, row[1]?row[1]:"001");
				ps_delSpace(number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(name, row[3]?row[3]:"___");
				ps_delSpace(name);
				strcpy(method, row[4]?row[4]:"0");
				ps_delSpace(method);
				strcpy(fromtime, row[5]?row[5]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[6]?row[6]:"0");
				ps_delSpace(totime);
				strcpy(conn_method, row[7]?row[7]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[8]?row[8]:"");
				ps_delSpace(forward_num);
				strcpy(frommin, row[9]?row[9]:"0");
				ps_delSpace(tomin);
				strcpy(tomin, row[10]?row[10]:"0");
				ps_delSpace(tomin);
				strcpy(safromtime, row[11]?row[11]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[12]?row[12]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[13]?row[13]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[14]?row[14]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[15]?row[15]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[16]?row[16]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[17]?row[17]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[18]?row[18]:"0");
				ps_delSpace(suntomin);

				strcpy(breakfromtime, row[19]?row[19]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[20]?row[20]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[21]?row[21]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[22]?row[22]:"0");
				ps_delSpace(breaktomin);
				strcpy(directnumber, row[23]?row[23]:"");
				ps_delSpace(directnumber);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,method, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber);

                                        if(!((i+1)%15))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}


/*************************************************************************
* hunting group
*************************************************************************/
int
procRH2()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[128],number[20],method[5],extension[10];
  char	code[10],flag[2];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];

  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20],break_include[10];
	char    inner_method[10];
  char	colorclass[20];

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(directnumber,0,sizeof(directnumber));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
	memset(breakfromtime,0,sizeof(breakfromtime)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktotime,0,sizeof(breaktotime)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(break_include,0,sizeof(break_include));
	memset(inner_method,0,sizeof(inner_method));
	memset(colorclass,0,sizeof(colorclass));

    if(argv[2] && *argv[2])
		strcpy(flag,argv[2]);
	else 
		strcpy(flag,"A");
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


		if(*flag == 'R')
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,colorclass from hunting_group where domain = '%s' and extension = '-' and number in(select number from number_list where domain='%s')",domain,domain);
		else 
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,colorclass from hunting_group where domain = '%s' and extension <> '-' and number in(select number from number_list where domain='%s')",domain,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}


printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);
printf("\nrow_num:([7m%d[0m)",row_num);

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(number, row[1]?row[1]:"001");
				ps_delSpace(number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(name, row[3]?row[3]:"___");
				ps_delSpace(name);
				strcpy(method, row[4]?row[4]:"0");
				ps_delSpace(method);
				strcpy(fromtime, row[5]?row[5]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[6]?row[6]:"0");
				ps_delSpace(totime);
				strcpy(conn_method, row[7]?row[7]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[8]?row[8]:"");
				ps_delSpace(forward_num);
				strcpy(frommin, row[9]?row[9]:"0");
				ps_delSpace(tomin);
				strcpy(tomin, row[10]?row[10]:"0");
				ps_delSpace(tomin);
				strcpy(safromtime, row[11]?row[11]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[12]?row[12]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[13]?row[13]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[14]?row[14]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[15]?row[15]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[16]?row[16]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[17]?row[17]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[18]?row[18]:"0");
				ps_delSpace(suntomin);

				strcpy(breakfromtime, row[19]?row[19]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[20]?row[20]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[21]?row[21]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[22]?row[22]:"0");
				ps_delSpace(breaktomin);
				strcpy(directnumber, row[23]?row[23]:"");
				ps_delSpace(directnumber);

				strcpy(break_include, row[24]?row[24]:"0");
				ps_delSpace(break_include);
				strcpy(inner_method, row[25]?row[25]:"0");
				ps_delSpace(inner_method);
				strcpy(colorclass, row[26]?row[26]:"0");
				ps_delSpace(colorclass);
			}
			if(!strncmp(name,"w6K+97vnvve6z",strlen("w6K+97vnvve6z")))
				strcpy(name,"---");
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,method, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,colorclass);
                                        if(!((i+1)%5))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
							logCmd();
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

printf("7m\n=======================================================================[0m");
printf("7m\n=======================================================================[0m");

	  return 0;       
}



/*************************************************************************
* hunting group
*************************************************************************/
int
procDHT()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];
  char	name[65],number[20],method[5],extension[10],flag[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);
    else
	strcpy(number,"0");

    if(argv[3] && *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"-");

    if(argv[4] && *argv[4])
	strcpy(flag,argv[4]);
    else
	strcpy(flag,"A");

	if(*flag == 'R')
strcpy(extension,"-");

    if(strlen(number) < 9)
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(strlen(number) > 10) {
		sprintf(sqlcmd,"DELETE from  hunting_group \
			where domain='%s' and number = '%s' and extension = '%s'",domain,number,extension);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


		if(*flag == 'R') {
			//sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s' and arsflag = 'Q'",number);
			sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s' and domain='%s'",number,domain);

			printf("\nsqlcmd : (%s)",sqlcmd);
			if( mysql_query(mysql, sqlcmd)) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}
			sprintf(sqlcmd,"update number_manage set numbertype = '1',option7 = 'X',inner_method = '0'  where 070number='%s' and domain='%s'",number,domain);

			if( mysql_query(mysql, sqlcmd)) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}

		}
	}

	sprintf(commandBuf,"|DHT|%s@%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4]);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DHT|%s@%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4]);
		sprintf(resPacket,"|RES|DHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,code,extension,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DHT')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,code,extension,number);
	return 0;       
}



/*************************************************************************
* hunting group
*************************************************************************/
int
procUIN()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];
  char	name[65],number[20],method[5],extension[10],flag[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
	else
		strcpy(number,"07000000000");
	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(strlen(number) > 10) {
		sprintf(sqlcmd,"UPDATE number_manage set inner_method = '1' \
			where 070number='%s'",number);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"UPDATE hunting_group set inner_method = '1' \
			where number='%s' and extension = '-'",number);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
	}

	sprintf(commandBuf,"|UIN|%s@%s|%s|",user,domain,number);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UIN|%s@%s|%s|",user,domain,number);
		sprintf(resPacket,"|RES|UIN userid:(%s)-(%s)-(%s)",user,domain,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UIN')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|UIN userid:(%s)-(%s)-(%s)",user,domain,number);
	return 0;       
}



/*************************************************************************
* hunting group
*************************************************************************/
int
procDIN()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];
  char	name[65],number[20],method[5],extension[10],flag[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
	else
		strcpy(number,"07000000000");

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(strlen(number) > 10) {
		sprintf(sqlcmd,"UPDATE number_manage set inner_method = '0' \
			where 070number='%s'",number);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"UPDATE hunting_group set inner_method = '0' \
			where number='%s'",number);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
	}

	sprintf(commandBuf,"|DIN|%s@%s|%s|",user,domain,number);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DIN|%s@%s|%s|",user,domain,number);
		sprintf(resPacket,"|RES|DIN userid:(%s)-(%s)-(%s)",user,domain,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIN')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DIN userid:(%s)-(%s)-(%s)",user,domain,number);
	return 0;       
}



/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procUTI()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	snprintf(number,sizeof(number),"%s",argv[3]);
    else 
	strcpy(number,"07000000000");

    if(argv[4]&& *argv[4])
	strcpy(type,argv[4]);
    else 
	strcpy(type,"0");

    if(argv[5]&& *argv[5])
	strcpy(extension,argv[5]);
    else 
	strcpy(extension,"-");

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		if(*type == '0')
			sprintf(sqlcmd,"update hunting_member set lasttime='%s' where h_number='%s' and number='%s'",today,h_number,number);
		if(*type == '1')
			sprintf(sqlcmd,"update ars_member set lasttime='%s' where h_number='%s' and number='%s' and extension = '%s'",today,h_number,number,extension);
		printf("\nsqlcmd : (%s)",sqlcmd);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}
    sprintf(resPacket,"|RES|UTI userid:(%s)-(%s)-(%s)",h_number,number,tmp);
    return 0;       
}





/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procUT1()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],firstexten[10],secondexten[10],thirdexten[10];
  char	type[11];

	memset(email,0,sizeof(email));
	memset(firstexten,0,sizeof(firstexten));
	memset(secondexten,0,sizeof(secondexten));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(thirdexten,0,sizeof(thirdexten)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	snprintf(number,sizeof(number),"%s",argv[3]);
    else 
	strcpy(number,"07000000000");

    if(argv[4]&& *argv[4])
	strcpy(firstexten,argv[4]);
    else 
	strcpy(firstexten,"-");

    if(argv[5]&& *argv[5])
	strcpy(secondexten,argv[5]);
    else 
	strcpy(secondexten,"-");

    if(argv[6]&& *argv[6])
	strcpy(thirdexten,argv[6]);
    else 
	strcpy(thirdexten,"");

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
		if(strlen(thirdexten)>0){
			sprintf(sqlcmd,"update third_ars_member set lasttime='%s' where h_number='%s' and number='%s' and first_extension = '%s' and second_extension='%s' and extension='%s'",today,h_number,number,firstexten,secondexten,thirdexten);
			printf("\nsqlcmd : (%s)",sqlcmd);
		}else{
			sprintf(sqlcmd,"update sub_ars_member set lasttime='%s' where h_number='%s' and number='%s' and first_extension = '%s' and extension='%s'",today,h_number,number,firstexten,secondexten);
			printf("\nsqlcmd : (%s)",sqlcmd);
		}

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}
    sprintf(resPacket,"|RES|UT1 userid:(%s)-(%s)-(%s)",h_number,number,tmp);
    return 0;       
}



/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procUAR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);
    else 
	strcpy(number,"07000000000");


		if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
		}
		sprintf(sqlcmd, "select type from number_list where number = '%s' and domain='%s'",number,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd,"update number_list set type=0,arsflag = 'Y' where number='%s' and domain='%s'",number,domain);
		printf("\nsqlcmd : (%s)",sqlcmd);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}
		sprintf(sqlcmd,"update number_manage set numbertype = '0',option7 = 'Y',inner_method='0' where 070number='%s' and domain='%s'",number,domain);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|UAR|%s@%s|%s|",user,domain,number);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|UAR|%s@%s|%s|",user,domain,number);
				sprintf(resPacket,"|RES|UAR userid:(%s)-(%s)-(%s)",user,domain,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAR')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	    sprintf(resPacket,"|RES|UAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}
	else {
		sprintf(sqlcmd,"mkdir /var/lib/asterisk/sounds/ars/%s/%s",domain, number);
		system(sqlcmd);
	    sprintf(resPacket,"|RES|UAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}

return(errorReturn("UAR is not permit!",__FILE__,__LINE__));

}



/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procDAR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);
    else 
	strcpy(number,"07000000000");


    if(PVS == 1) {
				sprintf(sqlcmd, "select type from number_list where number = '%s' and domain='%s'",number,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					logCmd();
					return -1;
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select proxyip,prefix from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					logCmd();
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);
				}
				mysql_free_result(result);
				result = NULL;
		}

		sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s' and domain='%s'",number,domain);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X',inner_method='0' where 070number='%s' and domain='%s'",number,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|DAR|%s@%s|%s|",user,domain,number);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DAR|%s@%s|%s|",user,domain,number);
				sprintf(resPacket,"|RES|DAR userid:(%s)-(%s)-(%s)",user,domain,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAR')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	    sprintf(resPacket,"|RES|DAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}
	else {
		sprintf(sqlcmd,"mkdir /var/lib/asterisk/sounds/ars/%s/%s",domain, number);
		system(sqlcmd);
	    sprintf(resPacket,"|RES|DAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}

return(errorReturn("DAR is not permit!",__FILE__,__LINE__));

}


/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procIAR()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);
    else 
	strcpy(number,"07000000000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}

		sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s' and domain='%s'",number,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(type, row[0]?row[0]:"1");
			ps_delSpace(type);
			strcpy(arsflag, row[1]?row[1]:"X");
			ps_delSpace(arsflag);
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd,"update number_list set type=0,arsflag = 'Y' where number='%s' and domain='%s'",number,domain);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);

		sprintf(sqlcmd,"update number_manage set numbertype = '0', option7 = 'Y',inner_method='0' where 070number='%s' and domain='%s'",number,domain);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IAR|%s@%s|%s|",user,domain,number);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IAR|%s@%s|%s|",user,domain,number);
				sprintf(resPacket,"|RES|IAR userid:(%s)-(%s)-(%s)",user,domain,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IAR')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	    sprintf(resPacket,"|RES|IAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}
	else {
		sprintf(sqlcmd,"mkdir /var/lib/asterisk/sounds/ars/%s/%s",domain, number);
		system(sqlcmd);
	    sprintf(resPacket,"|RES|IAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}

return(errorReturn("IAR is not permit!",__FILE__,__LINE__));
}


/*************************************************************************
*************************************************************************/
int
procRIS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],first_extension[10];
  char	type[11],arsflag[10];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else 
	strcpy(extension,"-");


		if(*extension == '-')
			sprintf(sqlcmd, "select h_number,extension from second_ars where domain = '%s' and h_number = '%s'",domain,h_number);
		else 
			sprintf(sqlcmd, "select h_number,extension from second_ars where domain = '%s' and h_number = '%s' and extension='%s'",domain,h_number,extension);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error second_ars!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(number, row[0]?row[0]:"-");
				ps_delSpace(number);
				strcpy(extension, row[1]?row[1]:"0");
				ps_delSpace(extension);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s",number,extension);

                                        if(!((i+1)%15))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}


/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procDIS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char  sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else 
	strcpy(extension,"0");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}

		
		sprintf(sqlcmd,"delete from second_ars where \
		domain='%s' and h_number='%s' and extension = '%s'",domain,h_number,extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|DIS|%s@%s|%s|%s|",user,domain,h_number,extension);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DIS|%s@%s|%s|%s|",user,domain,h_number,extension);
				sprintf(resPacket,"|RES|DIS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIS')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
		sprintf(resPacket,"|RES|DIS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);
	}
	    return 0;       
}



/*************************************************************************
*OFF DAY 
*************************************************************************/
int
procIOF()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0, size=0;
  char tmp[100],today[20],groupname[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],off_day[30],file[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10], first_extension[10];
  char	type[11],arsflag[10],requester[32];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(requester,0,sizeof(requester)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
			strcpy(off_day,argv[2]);
    else 
			strcpy(h_number,"00000000");

    if(argv[3]&& *argv[3])
			strcpy(file,argv[3]);
    else 
			strcpy(file,"");

    if(argv[4] && *argv[4])
			strcpy(requester,argv[4]);
    else 
			strcpy(requester,"");


    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
		}

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
		sprintf(sqlcmd,"insert into off_day(domain,off_day,recorddate,ment_file,etc) values('%s','%s','%s','%s','%s')",domain,off_day,tmp,file,requester);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}


		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IOF|%s@%s|%s|%s|%s|",user,domain,off_day,file,requester);
				sprintf(resPacket,"|RES|IOF userid:(%s)-(%s)-(%s)-(%s)",user,domain,off_day,file);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IOF|%s@%s|%s|%s|%s|",user,domain,off_day,file,requester);
				sprintf(resPacket,"|RES|IOF userid:(%s)-(%s)-(%s)-(%s)",user,domain,off_day,file);
				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					return -1;
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IOF')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}
	    sprintf(resPacket,"|RES|IOF userid:(%s)-(%s)-(%s)-(%s)",user,domain,off_day,file);
		return 0;       
}

/*************************************************************************
*************************************************************************/
int
procROF()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],off_day[30],file[64],etc[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],first_extension[10];
  char	type[11],arsflag[10];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);



		sprintf(sqlcmd, "select off_day,ment_file,etc from off_day where domain = '%s' order by off_day ASC",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error off_day!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(off_day, row[0]?row[0]:"00000000");
				ps_delSpace(off_day);
				strcpy(file, row[1]?row[1]:"");
				ps_delSpace(file);
				strcpy(etc, row[2]?row[2]:"");
				ps_delSpace(etc);
			}
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s",off_day,file,etc);

                                        if(!((i+1)%15))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}


/*************************************************************************
*offday DELETE 
*************************************************************************/
int
procDOF()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],off_day[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
			strcpy(off_day,argv[2]);
    else 
			strcpy(off_day,"00000000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
		
		sprintf(sqlcmd,"delete from off_day where \
		domain='%s' and off_day='%s'",domain,off_day);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|DOF|%s@%s|%s|",user,domain,off_day);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DOF|%s@%s|%s|",user,domain,off_day);
				sprintf(resPacket,"|RES|DOF userid:(%s)-(%s)-(%s)",user,domain,off_day);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DOF')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
		sprintf(commandBuf,"|DOF|%s@%s|%s|",user,domain,off_day);
		sprintf(resPacket,"|RES|DOF userid:(%s)-(%s)-(%s)",user,domain,off_day);
	}
	return 0;       
}






/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procIAS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0, size=0;
  char tmp[100],today[20],groupname[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10], first_extension[10];
  char	type[11],arsflag[10];
	unsigned char	*tmpP=NULL;

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(first_extension,argv[3]);
    else 
	strcpy(first_extension,"0");

    if(argv[4]&& *argv[4])
	strcpy(extension,argv[4]);
    else 
	strcpy(extension,"0");

    if(argv[5]&& *argv[5])
	strcpy(groupname,argv[5]);
    else 
	strcpy(groupname,"-");

    if(argv[6]&& *argv[6])
	strcpy(method,argv[6]);
    else 
	strcpy(method,"0");

    if(argv[7]&& *argv[7])
                snprintf(number,sizeof(number),"%s",argv[7]);
    else 
	strcpy(number,"");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}

		if(*groupname == '\0') {
			sprintf(tmp,"%s_%s",h_number,extension);
			tmpP= __base64_encode((unsigned char *)tmp, strlen(tmp), &size);
			if(tmpP) {
					strcpy(groupname,tmpP);
					free(tmpP);
			}
		}


		sprintf(sqlcmd,"delete from sub_ars where \
		domain='%s' and h_number='%s' and first_extension = '%s' and extension = '%s'",domain,h_number,first_extension,extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}
		
		sprintf(sqlcmd,"insert into sub_ars(domain,name,h_number,first_extension,extension,method,number) values \
		('%s','%s','%s','%s','%s','%s','%s')",domain,groupname,h_number,first_extension,extension,method,number);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IAS|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,extension,groupname,method,number,prefix,serverip);
				sprintf(resPacket,"|RES|IAS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension,method);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IAS|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,extension,groupname,method,number,prefix,serverip);
				sprintf(resPacket,"|RES|IAS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension,method);

				/****추가 ***/
				//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
				sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IAS')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	    sprintf(resPacket,"|RES|IAR userid:(%s)-(%s)-(%s)",user,domain,number);
	    return 0;       
	}
	else {
	    sprintf(resPacket,"|RES|IAS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,first_extension,method);
	    return 0;       
	}
}


/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procDAS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10], first_extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(first_extension,argv[3]);
    else 
	strcpy(first_extension,"");

    if(argv[4]&& *argv[4])
	strcpy(extension,argv[4]);
    else 
	strcpy(extension,"");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
		
                sprintf(sqlcmd,"delete from hunting_group where \
                domain='%s' and number='%s' and extension = '%s%s'",domain,h_number,first_extension,extension);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
		}

		sprintf(sqlcmd,"delete from sub_ars where \
		domain='%s' and h_number='%s' and first_extension = '%s' and extension = '%s'",domain,h_number,first_extension,extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|DAS|%s@%s|%s|%s|%s|",user,domain,h_number,first_extension,extension);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DAS|%s@%s|%s|%s|%s|",user,domain,h_number,first_extension,extension);
				sprintf(resPacket,"|RES|DAS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAS')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}
	sprintf(resPacket,"|RES|DAS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);
	return 0;       
}



/*************************************************************************
*************************************************************************/
int
procRAS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],today[20];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char  number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char  method[5],extension[10],first_extension[10];
  char  type[11],arsflag[10];


/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);


    if(argv[2]&& *argv[2])
        strcpy(h_number,argv[2]);
    else
        strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
        strcpy(first_extension,argv[3]);
    else
        strcpy(first_extension,"0");

    if(argv[4]&& *argv[4])
        strcpy(extension,argv[4]);
    else
        strcpy(extension,"-");

                if(*extension == '-')
                        sprintf(sqlcmd, "select name,extension,method,number from sub_ars where domain = '%s' and h_number = '%s' and first_extension='%s'",domain,h_number,first_extension);
                else
                        sprintf(sqlcmd, "select name,extension,method,number from sub_ars where domain = '%s' and h_number = '%s' and first_extension='%s' and extension = '%s'",domain,h_number,first_extension, extension);

                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket, "|ERR|mysql Search Error sub_ars!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return(-1);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
                        logCmd();
                        return -1;
                }

                sprintf(resPacket,"|RES");
                for(i=0;i < row_num;i++)
                {
                        row = mysql_fetch_row( result );
                        if(row)
                        {
                                strcpy(name, row[0]?row[0]:"-");
                                ps_delSpace(name);
                                strcpy(extension, row[1]?row[1]:"0");
                                ps_delSpace(extension);
                                strcpy(method, row[2]?row[2]:"0");
                                ps_delSpace(method);
                                strcpy(number, row[3]?row[3]:"07000000000");
                                ps_delSpace(number);
                        }
                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",name,extension,method,number);
                                if(!((i+1)%15))
                                {
                                                if((i+1) < row_num)
                                                {
                                                                strcat(resPacket,"\n");
                                                                tcpWrite(masterFd, resPacket);
                                                                sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                                mysql_free_result(result);
                                                                result = NULL;
                                                                return 0;
                                                }
                                }

                        }
                mysql_free_result(result);
                result = NULL;

          return 0;
}



/*************************************************************************
*SUBARS TREE 
10:25:20 |UAS|nwadm1@temp4402.lgdacom.net|07086119502|0|0|MTExMTExMTE=|3||nwadm1|<<<<<|RES|UAS userid:(nwadm1)-(temp44
02.lgdacom.net)-(07086119502)-(0)-(0):(164.124.107.163)
*************************************************************************/
int
procUAS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],first_extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(first_extension,argv[3]);
    else 
	strcpy(first_extension,"0");

    if(argv[4]&& *argv[4])
	strcpy(extension,argv[4]);
    else 
	strcpy(extension,"0");

    if(argv[5]&& *argv[5])
	strcpy(name,argv[5]);
    else 
	sprintf(name,"%s_%s",h_number,extension);

    if(argv[6]&& *argv[6])
	strcpy(method,argv[6]);
    else 
	strcpy(method,"0");

    if(argv[7]&& *argv[7])
                snprintf(number,sizeof(number),"%s",argv[7]);
    else  {
	strcpy(number,"0");
	memset(number,0,sizeof(number));
    }

    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
		}   

                sprintf(sqlcmd,"update sub_ars  set name = '%s',method = '%s',number = '%s' where \
                domain='%s' and h_number='%s' and first_extension='%s' and extension = '%s'",name,method,number,domain,h_number,first_extension, extension);

                printf("\nsqlcmd : (%s)",sqlcmd);
                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }

                if(PVS == 1 && MASTER == 1)
                {
                                sprintf(commandBuf,"|UAS|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,extension,name,method,number);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }

                                sprintf(commandBuf,"|UAS|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,extension,name,method,number);
                                sprintf(resPacket,"|RES|UAS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension,method);

                                /****추가 ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
                                                logCmd();
                                                exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
                                        logCmd();
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UAS')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL;
                sprintf(resPacket,"|RES|UAS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,first_extension,extension,method);
        }
        return 0;
}



/*************************************************************************
*AREA CODE
*************************************************************************/
int
procIAC()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],areacode[5];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
    else 
	strcpy(number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(areacode,argv[3]);
    else 
	strcpy(areacode,"02");

	if(!isdigitstr(number) || !isdigitstr(areacode))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;
	}

	sprintf(sqlcmd,"update number_list set areacode = '%s' where number='%s'",areacode,number);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|IAC|%s@%s|%s|%s|",user,domain,number,areacode);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IAC|%s@%s|%s|%s|",user,domain,number,areacode);
				sprintf(resPacket,"|RES|IAC userid:(%s)-(%s)-(%s)-(%s0",user,domain,number,areacode);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IAC')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
		sprintf(resPacket,"|RES|IAC userid:(%s)-(%s)-(%s)-(%s)",user,domain,number,areacode);
	}

	sprintf(resPacket,"|RES|IAC userid:(%s)-(%s)-(%s)-(%s)",user,domain,number,areacode);
	return 0;       
}



/*************************************************************************
*AREA CODE
*************************************************************************/
int
procDAC()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],areacode[5];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	snprintf(number,sizeof(number),"%s",argv[2]);
    else 
	strcpy(number,"07000000000");

	if(!isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));


	if(PVS == 1) {

		if(customInfo(domain) < 0)
			return -1;
	}

	sprintf(sqlcmd,"update number_list set areacode = '' where number='%s'",number);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DAC|%s@%s|%s|%s|",user,domain,number,areacode);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DAC|%s@%s|%s|%s|",user,domain,number);
				sprintf(resPacket,"|RES|DAC userid:(%s)-(%s)-(%s)-(%s0",user,domain,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAC')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
		sprintf(resPacket,"|RES|DAC userid:(%s)-(%s)-(%s)",user,domain,number);
	}

	sprintf(resPacket,"|RES|DAC userid:(%s)-(%s)-(%s)",user,domain,number);
	return 0;       
}




/*************************************************************************
* hunting meber
*************************************************************************/
int
procIHM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[125],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(method,0,sizeof(method)); 
	memset(num070,0,sizeof(num070)); 
	memset(number,0,sizeof(number)); 
	memset(h_number,0,sizeof(h_number)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(extension,argv[4]);
    else
		strcpy(extension,"-");

    strcpy(extension,"-");


    if(argv[5] && *argv[5])
                snprintf(number,sizeof(number),"%s",argv[5]);
    else
		strcpy(number,"0");
		
    if(argv[6] && *argv[6])
		strcpy(name,argv[6]);

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		    sprintf(sqlcmd, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix, number,serverip);

		    printf("\nsqlcmd:(%s)",sqlcmd);
		    ret = mysql_query(mysql, sqlcmd);

		    result = mysql_store_result( mysql );
		    if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(num070, row[0]?row[0]:"070000000");
				    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		    }

	}
	else  {
	    if(argv[7] && *argv[7])
			strcpy(prefix,argv[7]);
	    if(argv[8] && *argv[8])
			strcpy(serverip,argv[8]);
	    if(argv[9] && *argv[9])
			strcpy(num070,argv[9]);
	}


//07:59:00 |IHM|tmpid0888@premium_c_62584.lgdacom.net|1|07086711312|-|0888|udq8sb+1|07086711312|,(164.124.107.163)<<<<<|RES|IHM userid:(tmpid0888)-(premium_c_62584.lgdacom.net)-(-)-(0888):(164.124.107.163)

		tel_string(number);

		sprintf(sqlcmd,"DELETE from hunting_member where h_number = '%s' and number = '%s' and  prefix='%3.3s'", h_number,number, prefix);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

/****************
		sprintf(sqlcmd,"DELETE from hunting_member where prefix='%3.3s' and h_number = '%s' and number = '%s'",prefix, h_number,number);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"DELETE from hunting_member where prefix='%3.3s' and h_number = '%s' and seq = %s",prefix, h_number,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
*/
//NEWNEW
		sprintf(sqlcmd,"DELETE from hunting_member where prefix='%3.3s' and h_number = '%s' and seq >= %s",prefix, h_number,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into hunting_member( \
			prefix,seq,h_number,extension,number,name,defaultip,070number) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,extension,number,name,serverip,num070);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|IHM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],prefix,serverip,num070);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IHM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],prefix,serverip,num070);
				    sprintf(resPacket,"|RES|IHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHM')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}


    sprintf(resPacket,"|RES|IHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
    return 0;       
}


/*************************************************************************
* hunting group
*************************************************************************/
int
procRHM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
	if(argv[3]&& *argv[3])
		strcpy(extension,argv[3]);
	else
		strcpy(extension,"-");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select distinct seq,h_number,extension,number,name from hunting_member where prefix = '%3.3s' and h_number = '%s' order by seq asc",prefix,h_number);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
			}

printf("\n222222222222222222222222222222");

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);

		printf("\nsqlcmd1:(%s)",sqlcmd1);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					printf("\n[5m[7m(%s) UNKNOWN[0m[0m",number);
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",seq,h_number,extension,number,"-");

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* delete hunting member
*************************************************************************/
int
procDHM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[33],code[5],seq[10], sqlcmd1[512];
	char	extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"0");
strcpy(extension,"-");

    if(argv[4]&& *argv[4])
	snprintf(number,sizeof(number),"%s",argv[4]);
    else
	strcpy(number,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[5] && *argv[5])
			strcpy(prefix,argv[5]);
	    if(argv[6] && *argv[6])
			strcpy(serverip,argv[6]);
	}


	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);
	sprintf(sqlcmd,"DELETE from  hunting_member \
		where prefix='%3.3s' and h_number = '%s'",prefix,h_number);
		//where prefix='%3.3s' and h_number = '%s' and number='%s'",prefix,h_number,number);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DHM|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DHM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DHM|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],prefix,serverip);
				sprintf(resPacket,"|RES|DHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DHM')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|DHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
    return 0;       
}


/*************************************************************************
* ars meber
*************************************************************************/
int
procIAM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(extension,argv[4]);
    else
		strcpy(extension,"1");


    if(argv[5] && *argv[5])
	snprintf(number,sizeof(number),"%s",argv[5]);
    else
		strcpy(number,"0");
		
    if(argv[6] && *argv[6])
		strcpy(name,argv[6]);

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		sprintf(sqlcmd, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix, number,serverip);

		printf("\nsqlcmd:(%s)",sqlcmd);
		ret = mysql_query(mysql, sqlcmd);

		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(num070, row[0]?row[0]:"070000000");
				    ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		    }

		}
		else  {
		    if(argv[7] && *argv[7])
				strcpy(prefix,argv[7]);
		    if(argv[8] && *argv[8])
				strcpy(serverip,argv[8]);
		    if(argv[9] && *argv[9])
				strcpy(num070,argv[9]);
		}


		tel_string(number);
		sprintf(sqlcmd,"DELETE from ars_member where h_number = '%s' and extension = '%s' and number = '%s' and  prefix='%3.3s'",h_number,extension,number,prefix);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
/*************
		sprintf(sqlcmd,"DELETE from ars_member where prefix='%3.3s' and h_number = '%s' and extension = '%s' and number = '%s'",prefix,h_number,extension,number);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		sprintf(sqlcmd,"DELETE from ars_member where prefix='%3.3s' and h_number = '%s' and extension = '%s' and seq = %s",prefix,h_number,extension,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
*/
//NEWNEW
		sprintf(sqlcmd,"DELETE from ars_member where prefix='%3.3s' and h_number = '%s' and extension = '%s' and seq >= %s",prefix,h_number,extension,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"insert into ars_member( \
			prefix,seq,h_number,extension,number,name,defaultip,070number) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,extension,number,name,serverip,num070);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

/****
                strcpy(sqlcmd,"FLUSH PRIVILEGES");
                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                }

*/

		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IAM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],prefix,serverip,num070);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IAM')",tmp, commandBuf,serverip);
							mysql_query(mysql, sqlcmd);

						}
					}

					sprintf(commandBuf,"|IAM|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],prefix,serverip,num070);
					sprintf(resPacket,"|RES|IAM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IAM')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

    sprintf(resPacket,"|RES|AHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
    return 0;       
}


/*************************************************************************
* ars member
*************************************************************************/
int
procRAM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(extension,argv[3]);
	else
		strcpy(extension,"1");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select seq,h_number,extension,number,name from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by seq asc",prefix,h_number,extension);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(h_number, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",seq,h_number,extension,number,name);

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* delete ars member
*************************************************************************/
int
procDAM()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[64],code[5],seq[10], sqlcmd1[512];
char	extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"0");

    if(argv[4]&& *argv[4])
	snprintf(number,sizeof(number),"%s",argv[4]);
    else
	strcpy(number,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[5] && *argv[5])
			strcpy(prefix,argv[5]);
	    if(argv[6] && *argv[6])
			strcpy(serverip,argv[6]);
	}

	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);
	sprintf(sqlcmd,"DELETE from  ars_member \
		where prefix='%3.3s' and h_number = '%s' and extension = '%s'",prefix,h_number,extension);
		//where prefix='%3.3s' and h_number = '%s' and extension = '%s' and number='%s'",prefix,h_number,extension,number);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DAM|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DAM|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],prefix,serverip);
				sprintf(resPacket,"|RES|DAM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DAM')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}



    sprintf(resPacket,"|RES|DAM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
    return 0;       
}



/*************************************************************************
* hunting meber
*************************************************************************/
int
procI_M()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(method,0,sizeof(method)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(extension,argv[4]);
    else
		strcpy(extension,"-");

    strcpy(extension,"-");


    if(argv[5] && *argv[5])
	snprintf(number,sizeof(number),"%s",argv[5]);
    else
		strcpy(number,"0");
		
    if(argv[6] && *argv[6])
		strcpy(name,argv[6]);

    if(argv[7] && *argv[7])
		strcpy(method,argv[7]);
	else
		strcpy(method,"0");

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
		else  {
		    if(argv[8] && *argv[8])
				strcpy(prefix,argv[8]);
		    if(argv[8] && *argv[9])
				strcpy(serverip,argv[9]);
		}


		tel_string(number);
		sprintf(sqlcmd,"DELETE from hunting_member where prefix='%3.3s' and h_number = '%s' and number = '%s' and method='%s'",prefix,h_number,number,method);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into hunting_member( \
			prefix,seq,h_number,extension,number,name,defaultip,method) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,extension,number,name,serverip,method);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


	if(PVS == 1 && MASTER == 1) 
	{
/*************
				sprintf(commandBuf,"|I_M|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}
*/

				sprintf(commandBuf,"|I_M|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
				    sprintf(resPacket,"|RES|IHM userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);	
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'I_M')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}


    sprintf(resPacket,"|RES|I_M userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,extension,number,method);
    return 0;       
}


/*************************************************************************
* hunting group
*************************************************************************/
int
procR_M()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
	char	method[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
	if(argv[3]&& *argv[3])
		strcpy(extension,argv[3]);
	else
		strcpy(extension,"-");
/**
	if(argv[4]&& *argv[4])
		strcpy(method,argv[4]);
	else
		strcpy(method,"0");
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select distinct seq,h_number,extension,number,name,method from hunting_member where prefix = '%3.3s' and h_number = '%s' order by method,seq asc",prefix,h_number);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
				strcpy(method, row[5]?row[5]:"0");
				ps_delSpace(method);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);

		printf("\nsqlcmd1:(%s)",sqlcmd1);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					printf("\n[5m[7m(%s) UNKNOWN[0m[0m",number);
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,method);

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* delete hunting member
*************************************************************************/
int
procD_M()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[33],code[5],seq[10], sqlcmd1[512];
	char	extension[10],method[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"0");
strcpy(extension,"-");

    if(argv[4]&& *argv[4])
                snprintf(number,sizeof(number),"%s",argv[4]);
    else
			strcpy(number,"0");

    if(argv[5]&& *argv[5])
			strcpy(method,argv[5]);
    else
			strcpy(method,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
	    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}


	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);

	if(method[0]=='A' || atoi(method) > 5)
			sprintf(sqlcmd,"DELETE from  hunting_member \
				where prefix='%3.3s' and h_number = '%s' and number='%s' and method = '%s'",prefix,h_number,number,method);
	else
			sprintf(sqlcmd,"DELETE from  hunting_member \
				where prefix='%3.3s' and h_number = '%s' and number='%s'",prefix,h_number,number);

 printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|D_M|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'D_M')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|D_M|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				sprintf(resPacket,"|RES|D_M userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);
				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'D_M')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|D_M userid:(%s)-(%s)-(%s)-(%s):(%s)",user,domain,extension,number,method);
    return 0;       
}


/*************************************************************************
* ars meber
*************************************************************************/
int
procIA_()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(method,0,sizeof(method)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(extension,argv[4]);
    else
		strcpy(extension,"1");


    if(argv[5] && *argv[5])
                snprintf(number,sizeof(number),"%s",argv[5]);
    else
		strcpy(number,"0");
		
    if(argv[6] && *argv[6])
		strcpy(name,argv[6]);

    if(argv[7]&& *argv[7])
			strcpy(method,argv[7]);
    else
			strcpy(method,"0");

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
		}
		else  {
		    if(argv[8] && *argv[8])
				strcpy(prefix,argv[8]);
		    if(argv[9] && *argv[9])
				strcpy(serverip,argv[9]);
		}


		tel_string(number);
		sprintf(sqlcmd,"DELETE from ars_member where prefix='%3.3s' and h_number = '%s' and extension = '%s' and number = '%s' and method='%s'",prefix,h_number,extension,number,method);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into ars_member( \
			prefix,seq,h_number,extension,number,name,defaultip,method) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,extension,number,name,serverip,method);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IA_|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
							mysql_query(mysql, sqlcmd);

						}
					}

					sprintf(commandBuf,"|IA_|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					sprintf(resPacket,"|RES|IA_ userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IA_')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

    sprintf(resPacket,"|RES|AH_ userid:(%s)-(%s)-(%s)-(%s):%s",user,domain,extension,number,method);
    return 0;       
}


/*************************************************************************
* ars member
*************************************************************************/
int
procRA_()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10];
	char	method[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(method,0,sizeof(method)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(extension,argv[3]);
	else
		strcpy(extension,"1");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select seq,h_number,extension,number,name,method from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by method,seq asc",prefix,h_number,extension);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(h_number, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
				strcpy(method, row[5]?row[5]:"0");
				ps_delSpace(method);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,method);

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}



/*************************************************************************
* delete ars member
*************************************************************************/
int
procDA_()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[33],code[5],seq[10], sqlcmd1[512];
char	extension[10],method[5];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(method,0,sizeof(method)); 
	memset(extension,0,sizeof(extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"0");

    if(argv[4]&& *argv[4])
                snprintf(number,sizeof(number),"%s",argv[4]);
    else
			strcpy(number,"0");

    if(argv[5]&& *argv[5])
			strcpy(method,argv[5]);
    else
			strcpy(method,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
	    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}

	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);

	if(method[0]=='A' || atoi(method) > 5)
	sprintf(sqlcmd,"DELETE from  ars_member \
		where prefix='%3.3s' and h_number = '%s' and extension = '%s' and number='%s' and method = '%s'",prefix,h_number,extension,number,method);
	else
			sprintf(sqlcmd,"DELETE from  ars_member \
				where prefix='%3.3s' and h_number = '%s' and extension = '%s' and number='%s'",prefix,h_number,extension,number);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DA_|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DA_|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				sprintf(resPacket,"|RES|DA_ userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DA_')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}



    sprintf(resPacket,"|RES|DA_ userid:(%s)-(%s)-(%s)-(%s):(%s)",user,domain,extension,number,method);
    return 0;       
}



/*************************************************************************
* sub_ars meber
*************************************************************************/
int
procIA1()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],first_extension[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(first_extension,argv[4]);
    else
		strcpy(first_extension,"1");


    if(argv[5] && *argv[5])
		strcpy(extension,argv[5]);
    else
		strcpy(extension,"1");


    if(argv[6] && *argv[6])
                snprintf(number,sizeof(number),"%s",argv[2]);
    else
		strcpy(number,"0");
		
    if(argv[7] && *argv[7])
		strcpy(name,argv[7]);

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
		else  {
		    if(argv[8] && *argv[8])
				strcpy(prefix,argv[8]);
		    if(argv[9] && *argv[9])
				strcpy(serverip,argv[9]);
		}


		tel_string(number);
		sprintf(sqlcmd,"DELETE from sub_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and number = '%s'",prefix,h_number,first_extension,extension,number);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"DELETE from sub_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq = %s",prefix,h_number,first_extension,extension,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into sub_ars_member( \
			prefix,seq,h_number,first_extension,extension,number,name,defaultip) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,first_extension,extension,number,name,serverip);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IA1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
							mysql_query(mysql, sqlcmd);

						}
					}

					sprintf(commandBuf,"|IA1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					sprintf(resPacket,"|RES|IA1 userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IA1')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

    sprintf(resPacket,"|RES|IA1 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,first_extension,extension,number);
    return 0;       
}



/*************************************************************************
* sub_ars member
*************************************************************************/
int
procRA1()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0, row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10], first_extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(first_extension,argv[3]);
	else
		strcpy(first_extension,"1");
    if(argv[4]&& *argv[4])
		strcpy(extension,argv[4]);
	else
		strcpy(extension,"1");

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

		sprintf(sqlcmd, "select seq,h_number,extension,number,name from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension='%s' and extension = '%s' order by seq asc",prefix,h_number,first_extension,extension);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sub_ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(h_number, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",seq,h_number,extension,number,name);

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}




/*************************************************************************
* delete sub_ars member
*************************************************************************/
int
procDA1()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[33],code[5],seq[10], sqlcmd1[512];
char	first_extension[10],extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(first_extension,argv[3]);
    else
	strcpy(first_extension,"0");

    if(argv[4]&& *argv[4])
	strcpy(extension,argv[4]);
    else
	strcpy(extension,"0");

    if(argv[5]&& *argv[5])
                snprintf(number,sizeof(number),"%s",argv[5]);
    else
	strcpy(number,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
	    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}

	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);
	sprintf(sqlcmd,"DELETE from  sub_ars_member \
		where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and number='%s'",prefix,h_number,first_extension,extension,number);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DA1|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DA1|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				sprintf(resPacket,"|RES|DA1 userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DA1')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|DA1 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,first_extension,extension,number);
    return 0;       
}






/*********************
*       udpRead  *
*********************/
int
udpRead(sd,p)
int sd;
char    *p;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid;
        struct sockaddr_in requestaddr;
        struct timeval tv;


        FD_ZERO(&masterset);

        FD_SET(sd, &masterset);

        maxfd = sd;
        clilen = sizeof(requestaddr);

        rset = masterset;
        tv.tv_sec = 2; tv.tv_usec = 0;

        if(nsel = select(maxfd+1, &rset, NULL, NULL, &tv) == -1) {
                close(sd);
                return -1;
        }

        if (FD_ISSET(sd, &rset)) {
                        memset(reqPacket,'\0',sizeof(reqPacket));
                        len = recvfrom(sd, p,1024, 0,(struct sockaddr *)&requestaddr,(socklen_t *)&clilen);
                        if(len > 0)
                                p[len]='\0';
        }

        printf("\n(recv Data data: [5m%s[0m)",p);

        return 0;
}

/*********************
*       udpSend  *
res = udpSend(serverip,5060,4,phoneid,numstr,message);
res = udpSendSMS(serverip,5060,4,phoneid,numstr,message,cid,org_num);
*********************/
int
udpSendSMS(ip,port,kind,phoneid,vip,message,cid,org_num,num070)
char    *ip;
int     port;
int     kind;
char	*phoneid;
char	*vip;
char	*message;
char	*cid;
char	*org_num;
char	*num070;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd;
        struct sockaddr_in saddr;
	int resultsock;
	struct sockaddr_in resultaddr;

	srand(100000);

printf("\nIP:(%s),port:(%d) phoneid:(%s)========================================================",ip,port,phoneid);

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_addr.s_addr = inet_addr(ip);
        saddr.sin_port = htons(port);
        /* test */
        if(kind == 4) {
//res = udpSend(serverip,5060,4,phoneid,numstr,message);
//udpSend(ip,port,kind,phoneid,vip,message)
        sprintf(resPacket,"MESSAGE sip:72%s:%d;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Via: SIP/2.0/UDP %s:5060;branch=z9hG4bKb1e37d4ee;rport\n\
Call-ID: 897dc94%d5878f_%d_%d_%s@%s\n\
From: <sip:%s@%s:5060>;tag=941987b5134223b\n\
To: <sip:72%s@%s:5060>\n\
CSeq: 1001 MESSAGE\n\
X-Cid: %s\n\
X-Org: %s\n\
X-070: %s\n\
Contact: *\n\
User-Agent: WebIF\n\
Content-Type: text/plain; charset=euc-kr\n\
Content-Length: %d\n\
\n\
%s",vip,port,ip,getpid(),time(0),rand(),phoneid,ip,phoneid,ip,vip,ip,cid?cid:"",org_num?org_num:"",num070?num070:"",strlen(message),message);
        }

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == -1)
                return -1;

	if(kind != 3) {
		len = sendto(sd,resPacket, strlen(resPacket), 0,(struct sockaddr *)&saddr,\
		(socklen_t) sizeof(saddr));
		logCmd();
printf("\n========>(%s)",resPacket);
        printf("\nsend Data len : (%d)", len);
		udpRead(sd, resPacket);
		logCmd();
	}
	else {
		resultsock = socket(AF_INET, SOCK_DGRAM, 0);
		resultaddr.sin_family = AF_INET;
		resultaddr.sin_addr.s_addr = inet_addr(MANAGER_SERVER);
		resultaddr.sin_port = htons(3332);
		bind(resultsock, (struct sockaddr *) &resultaddr, sizeof(resultaddr));

		len = sendto(resultsock,resPacket, strlen(resPacket), 0,(struct sockaddr *)&saddr,\
		(socklen_t) sizeof(saddr));
printf("\n========>(%s)",resPacket);
		printf("\nsend Data len : (%d)", len);
		logCmd();

		udpRead(resultsock, resPacket);
printf("\n========>([7m%s[0m)",resPacket);
		//alarm(0);
		close(resultsock);
	}

	
        if(kind == 1 && strlen(resPacket) < 10) {
				close(resultsock);
                close(sd);
                return -1;
        }
        else if(kind == 2 && (strlen(resPacket) < 10 || !strstr(resPacket,"DATA"))) {
				close(resultsock);
                close(sd);
                return -1;
        }
        else if((kind == 3  || kind == 4) && !strstr(resPacket,"SIP/2.0")) {
		close(resultsock);
                close(sd);
                return -1;
		}
		close(resultsock);
        close(sd);
        return 0;
}



/*********************
*       udpSend  *
res = udpSend(serverip,5060,4,phoneid,numstr,message);
*********************/
int
udpSend(ip,port,kind,phoneid,vip,message)
char    *ip;
int     port;
int     kind;
char	*phoneid;
char	*vip;
char	*message;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd;
        struct sockaddr_in saddr;
	int resultsock;
	struct sockaddr_in resultaddr;

	srand(100000);

printf("\nIP:(%s),port:(%d) phoneid:(%s)========================================================",ip,port,phoneid);

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_addr.s_addr = inet_addr(ip);
        saddr.sin_port = htons(port);
        /* test */
        if(kind == 1) {
strcpy(resPacket,"DBTEST sip:10013833@172.20.61.145 SIP/2.0\n\
CSeq: 99 DBTEST\n\
Call-ID: 6873889207c4cb053b6be52948913b1e@211.32.148.72\n\
\n\
");
        }
        else if(kind == 2) {
        sprintf(resPacket,"PEERINFO sip:%s:%d;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Content-Length: 0\n\
Via: SIP/2.0/UDP %s:5060;branch=z9hG4bKb1e37d4ee;rport\n\
Call-ID: 897dc94cb27e2435279625e51c%d5878f2@%s\n\
From: <sip:%s@%s:5060>;tag=941987b5134223b\n\
To: <sip:%s@%s:5060>\n\
CSeq: 12 PEERINO\n\
Contact: *\n\
\n\
",vip,port,ip,getpid(),ip,phoneid,ip,phoneid,ip);
        }
        else if(kind == 3) {

        sprintf(resPacket,"PEERINFO sip:%s:%d;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Content-Length: 0\n\
Via: SIP/2.0/UDP %s:5060;branch=z9hG4bKb1e37d4ee;rport\n\
Call-ID: 897dc94cb27e2435279625e51c%d5878f2@%s\n\
From: <sip:%s@%s:5060>;tag=941987b5134223b\n\
To: <sip:%s@%s:5060>\n\
CSeq: 12 PEERINO\n\
Contact: *\n\
\n\
",ip,port,ip,getpid(),ip,phoneid,ip,phoneid,ip);
}
        else if(kind == 4) {
//res = udpSend(serverip,5060,4,phoneid,numstr,message);
//udpSend(ip,port,kind,phoneid,vip,message)
        sprintf(resPacket,"MESSAGE sip:72%s:%d;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Via: SIP/2.0/UDP %s:5060;branch=z9hG4bKb1e37d4ee;rport\n\
Call-ID: 897dc94%d5878f_%d_%d_%s@%s\n\
From: <sip:%s@%s:5060>;tag=941987b5134223b\n\
To: <sip:72%s@%s:5060>\n\
CSeq: 1001 MESSAGE\n\
Contact: *\n\
User-Agent: WebIF\n\
Content-Type: text/plain; charset=euc-kr\n\
Content-Length: %d\n\
\n\
%s",vip,port,ip,getpid(),time(0),rand(),phoneid,ip,phoneid,ip,vip,ip,strlen(message),message);
        }

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == -1)
                return -1;

	if(kind != 3) {
		len = sendto(sd,resPacket, strlen(resPacket), 0,(struct sockaddr *)&saddr,\
		(socklen_t) sizeof(saddr));
		logCmd();
printf("\n========>(%s)",resPacket);
        printf("\nsend Data len : (%d)", len);
		udpRead(sd, resPacket);
		logCmd();
	}
	else {
		resultsock = socket(AF_INET, SOCK_DGRAM, 0);
		resultaddr.sin_family = AF_INET;
		resultaddr.sin_addr.s_addr = inet_addr(MANAGER_SERVER);
		resultaddr.sin_port = htons(3332);
		bind(resultsock, (struct sockaddr *) &resultaddr, sizeof(resultaddr));

		len = sendto(resultsock,resPacket, strlen(resPacket), 0,(struct sockaddr *)&saddr,\
		(socklen_t) sizeof(saddr));
printf("\n========>(%s)",resPacket);
		printf("\nsend Data len : (%d)", len);
		logCmd();

		udpRead(resultsock, resPacket);
printf("\n========>([7m%s[0m)",resPacket);
		//alarm(0);
		close(resultsock);
	}

	
        if(kind == 1 && strlen(resPacket) < 10) {
				close(resultsock);
                close(sd);
                return -1;
        }
        else if(kind == 2 && (strlen(resPacket) < 10 || !strstr(resPacket,"DATA"))) {
				close(resultsock);
                close(sd);
                return -1;
        }
        else if((kind == 3  || kind == 4) && !strstr(resPacket,"SIP/2.0")) {
		close(resultsock);
                close(sd);
                return -1;
		}
		close(resultsock);
        close(sd);
        return 0;
}



/*************************************************************************
*************************************************************************/
int
procCHK()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0;
  char tmp[100],seq[20],today[20],add_svc[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[64],orgtotime[64],vip[20],conn_method[10];
  char	check_ip[20];
	char *tmpP;
	
	FILE *fp;

	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(orgfromtime,0,sizeof(orgfromtime)); 
	memset(orgtotime,0,sizeof(orgtotime)); 
	memset(totime,0,sizeof(totime)); 
	memset(etc,0,sizeof(etc)); 
	memset(check_ip,0,sizeof(check_ip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(check_ip,argv[2]);
	else {
		sprintf(resPacket, "|ERR|오류");
		return(-1);
	}

	udpSend(check_ip,5061,1,user,NULL,NULL);

	if(strlen(resPacket) > 10) {
		sprintf(resPacket,"|RES|OK");
	}
	else  
		sprintf(resPacket,"|ERR|UDP Checking 오류");

	return 0;

}


/*************************************************************************
* color ring
*************************************************************************/
int
procRNV()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd,intseq,minintseq;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0;
  char tmp[100],today[20],add_svc[11],seq[21],minseq[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[128],orgtotime[64],vip[20],conn_method[10];
  char	content[64];
	FILE *fp;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(customInfo(domain) < 0)
		return -1;

	strcpy(vip,serverip);


	/*************************************************************/
	sprintf(sqlcmd, "select max(abs(etc)) from color_info where prefix = '%3.3s' and serverip = '%s'",prefix,serverip);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error color_ino!(%s, %s)",mysql_error(mysql),sqlcmd );
		strcpy(seq,"0");
		intseq = 0;

		minintseq = 0;
		strcpy(minseq,"0");
	}   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			intseq = 0;
			strcpy(seq,"0");
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(seq, row[0]?row[0]:"");
			ps_delSpace(seq);
			if(*seq == '\0') {
				strcpy(seq,"0");
				intseq = 0;
			}
			else
				intseq = atoi(seq)+1;
		}
		mysql_free_result(result);
		result = NULL;
	}
	sprintf(resPacket,"|RES|%d|",intseq);
	return 0;
}



/*************************************************************************
* color ring
*************************************************************************/
int
procUCR()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd,intseq,minintseq;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0;
  char tmp[100],today[20],add_svc[11],seq[11],minseq[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[128],orgtotime[64],vip[20],conn_method[10];
  char	content[64],class[21],command[128];
	FILE *fp;

	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(orgfromtime,0,sizeof(orgfromtime)); 
	memset(orgtotime,0,sizeof(orgtotime)); 
	memset(totime,0,sizeof(totime)); 
	memset(etc,0,sizeof(etc)); 
	memset(seq,0,sizeof(seq)); 
	memset(minseq,0,sizeof(minseq)); 
	memset(class,0,sizeof(class)); 
	memset(content,0,sizeof(content)); 
	memset(command,0,sizeof(command)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
15:04:12 |UCR|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
*/

    if(argv[2] && *argv[2])
		strcpy(class,argv[2]);
    if(argv[3] && *argv[3]) {
		strcpy(fromtime,argv[3]);
		strcpy(orgfromtime,argv[3]);
	}

    if(PVS == 1) {
	    if(argv[4] && *argv[4])
			strcpy(content,argv[4]);
			if(customInfo(domain) < 0)
				return -1;

			strcpy(vip,serverip);
			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			printf("\nphoneid:(%s)",phoneid);

	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(prefix,argv[4]);
			if(argv[5] && *argv[5]) 
				strcpy(phoneid,argv[5]);
			if(argv[6] && *argv[6]) {
				strcpy(serverip,argv[6]);
				strcpy(vip,serverip);
			}
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;
	}

	

	sprintf(sqlcmd,"UPDATE color_info  set content = '%s' \
	where prefix = '%3.3s' and class='%s' and serverip='%s'",\
	content,prefix,class,serverip);

	printf("\nsqlcmd : (%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"UPDATE color_class  set content = '%s' \
	where prefix = '%3.3s' and class='%s' and defaultip='%s'",\
	content,prefix,class,serverip);
	printf("\nsqlcmd : (%s)",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	if(strstr(class,"work")) {
		if(strlen(class) >= 7) {
		char *kind=NULL,*from=NULL, *to=NULL, *frommin=NULL, *tomin = NULL, *etc=NULL;

/***
15:04:12 |UCR|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
2|nwadm1|<<<<<|RES|ICR userid:(nwadm1)-(078work)-(in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0)-(2)-():(211
.32.148.89)
*/

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			if(*fromtime) {
				kind = (char *)strtok(fromtime,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"in") && strcmp(kind,"out"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(from)
					frommin = (char *)strtok(NULL,"_");
				if(frommin)
					to = (char *)strtok(NULL,"_");
				if(to)
					tomin = (char *)strtok(NULL,"_");
				if(tomin)
					etc = (char *)strtok(NULL,"_");
				if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(to) {
					sprintf(sqlcmd,"update color_class set fromtime='%s',totime='%s',regdate='%s',frommin='%s',tomin='%s' ,content='%s' where prefix = '%3.3s' and class='%s' and defaultip='%s' and kind = 'in'",from,to,tmp,frommin,tomin,content,prefix,class,serverip);
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}

				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sain") && strcmp(kind,"saout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					sprintf(sqlcmd,"update color_class set fromtime='%s',totime='%s',regdate='%s',frommin='%s',tomin='%s' ,content='%s' where prefix = '%3.3s' and class='%s' and defaultip='%s' and kind = 'sain'",from,to,tmp,frommin,tomin,content,prefix,class,serverip);
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sunin") && strcmp(kind,"sunout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));


				if(to) {
					sprintf(sqlcmd,"update color_class set fromtime='%s',totime='%s',regdate='%s',frommin='%s',tomin='%s' ,content='%s' where prefix = '%3.3s' and class='%s' and defaultip='%s' and kind = 'sunin'",from,to,tmp,frommin,tomin,content,prefix,class,serverip);
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"break"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					sprintf(sqlcmd,"update color_class set fromtime='%s',totime='%s',regdate='%s',frommin='%s',tomin='%s' ,content='%s' where prefix = '%3.3s' and class='%s' and defaultip='%s' and kind = 'break'",from,to,tmp,frommin,tomin,content,prefix,class,serverip);
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);
				}

			} /* end of if */

		}
	}


	printf("\nphoneid : (%s)",phoneid);
	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	printf("\ndate : (%s)",tmp);

	sprintf(commandBuf,"|UCR|%s@%s|%s|%s|%s|%s|%s|",user,domain,class,orgfromtime,prefix,phoneid, serverip);
    if(PVS == 1  && MASTER == 1 ) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UCR|%s@%s|%s|%s|%s|%s|%s|",user,domain,class,orgfromtime,prefix,phoneid, serverip);
		sprintf(resPacket,"|RES|UCR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,totime,etc);


printf("\ncommandBuf:(%s)",commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip1, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip1);
				ps_delSpace(row[1]);
			}
			if(*serverip1 && strlen(serverip1) > 10 ) {
				if((ret = commandSend(commandBuf,serverip1,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UCR')",tmp, commandBuf,serverip1);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
/*****
			if(strstr(class,"work")) {
				sprintf(command,"moh add %sin",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %sout",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %ssain",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %ssaout",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %ssunin",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %ssunout",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %sbreak",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
				sprintf(command,"moh add %soff",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
			}
			else if(strstr(class,"week")) {
				int week_loop = 0;
				for(week_loop = 0; week_loop < 7; week_loop++) {
					sprintf(command,"moh add %s%d",class,week_loop);
					if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
						sockfd = Manager(serverip1,command);
						if(sockfd > -1) {
							strcpy(command,"Action: Logoff\r\n\r\n");
							write(sockfd, command, strlen(command));
							close(sockfd);
						}
					}
				}
			}
			else {
				sprintf(command,"moh add %s",class);
				if(strcmp(serverip1,"127.0.0.1") && strlen(serverip1) > 5) {
					sockfd = Manager(serverip1,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
			}
*/
		}
		mysql_free_result(result);
	}
/*
	else  {
		char command[64];
		//system("asterisk -rx 'moh reload'");
		sprintf(command,"moh reload");
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
	}
*/
	sprintf(resPacket,"|RES|UCR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
    return 0;       
}



/*************************************************************************
* color ring 
*************************************************************************/
int
procIIC()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd,intseq,minintseq,command_seq=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0;
  char tmp[100],today[20],add_svc[11],seq[11],minseq[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[128],orgtotime[64],vip[20],conn_method[10];
	char	manager_class[128],manager_file[256],manager_command[20][256];
  char	content[64];
	FILE *fp;

	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(orgfromtime,0,sizeof(orgfromtime)); 
	memset(orgtotime,0,sizeof(orgtotime)); 
	memset(totime,0,sizeof(totime)); 
	memset(etc,0,sizeof(etc)); 
	memset(seq,0,sizeof(seq)); 
	memset(minseq,0,sizeof(minseq)); 
	memset(content,0,sizeof(content)); 
	memset(manager_class,0,sizeof(manager_class)); 
	memset(manager_file,0,sizeof(manager_file)); 
	for(i=0;i < 20;i++)
		memset(manager_command[i],0,sizeof(manager_command[i])); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
15:04:12 |IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
*/

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3]) {
		strcpy(fromtime,argv[3]);
		strcpy(orgfromtime,argv[3]);
	}
/******
    if(argv[4] && *argv[4]) {
		strcpy(totime,argv[4]);
		strcpy(orgtotime,argv[4]);
	}
    if(argv[4] && *argv[4])
		strcpy(conn_method,argv[4]);
    if(argv[5] && *argv[5])
		strcpy(forward_num,argv[5]);
    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");
****/
    if(argv[4] && *argv[4]) {
		strcpy(seq,argv[4]);
		intseq = atoi(seq);
	}

    if(PVS == 1) {
	    if(argv[5] && *argv[5])
			strcpy(content,argv[5]);
				sprintf(sqlcmd, "select add_svc,proxyip,prefix from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(add_svc, row[0]?row[0]:"YYYYY");
					ps_delSpace(add_svc);
					strcpy(serverip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(vip,serverip);
					strcpy(prefix, row[2]?row[2]:"001");
					ps_delSpace(prefix);
				}
				mysql_free_result(result);
				result = NULL;
				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			printf("\nphoneid:(%s)",phoneid);
			printf("\nphoneid:(%s)",phoneid);

				/*************************************************************/
				if(*seq == '\0' || !isdigitstr(seq)) {
					sprintf(sqlcmd, "select max(abs(etc)) from color_info  prefix = '%3.3s' and defaultip = '%s'",prefix,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						strcpy(seq,"0");
						intseq = 0;

						minintseq = 0;
						strcpy(minseq,"0");
					}   
					else {
						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							intseq = 0;
							strcpy(seq,"0");
						}
						else {

							row = mysql_fetch_row( result );
							if(row) {
								strcpy(seq, row[0]?row[0]:"0");
								ps_delSpace(seq);
								intseq = atoi(seq);
							}
						}
						mysql_free_result(result);
						result = NULL;
					}
				}
	}
	else {
			if(argv[4] && *argv[4]) {
				strcpy(seq,argv[4]);
				intseq = atoi(argv[4]);
			}
			if(argv[5] && *argv[5]) 
				strcpy(prefix,argv[5]);
			if(argv[6] && *argv[6]) 
				strcpy(phoneid,argv[6]);
			if(argv[7] && *argv[7]) {
				strcpy(serverip,argv[7]);
				strcpy(vip,serverip);
			}
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;
	}

	
	/*** number_manage ***/
	/*** 회사 전체 ***/
	if(!strcmp(inner_num,"XXXX")) {
/******
		if(intseq == 0) {
			sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%3.3s','','0','0','0','%s','0','0','','','0','%s')",tmp,phoneid+1,phoneid+1,vip,content);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		}
		mysql_query(mysql, sqlcmd);
*/

		if(intseq == 0) {
			sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
			class='%3.3s' where substr(phoneid,2,3) = '%3.3s' and domain='%s' and (option2 = 'N' or option2 = '')",\
			prefix,phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}
		}
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Y' \
		,class='%7.7s' where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
		phoneid+1,phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
		}
	}
	else if(strstr(inner_num,"work") || strstr(inner_num,"week")) {
		if(intseq == 0) {
			sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
			class='%7.7s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s' and (option2 = 'N' or option2 = '')",\
			inner_num,phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}
		}

		if(strlen(inner_num) >= 7) {
		char *kind=NULL,*from=NULL, *to=NULL, *frommin=NULL, *tomin = NULL, *etc=NULL;

/***
15:04:12 |IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
2|nwadm1|<<<<<|RES|IIC userid:(nwadm1)-(078work)-(in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0)-(2)-():(211
.32.148.89)
*/

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			if(*fromtime) {
				kind = (char *)strtok(fromtime,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"in") && strcmp(kind,"out"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(from)
					frommin = (char *)strtok(NULL,"_");
				if(frommin)
					to = (char *)strtok(NULL,"_");
				if(to)
					tomin = (char *)strtok(NULL,"_");
				if(tomin)
					etc = (char *)strtok(NULL,"_");
				if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}

				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sain") && strcmp(kind,"saout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sunin") && strcmp(kind,"sunout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));


				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"break"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}

			} /* end of if */

		}
	}
	else return(errorReturn("Input Data Error",__FILE__,__LINE__));


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	if(!strcmp(inner_num,"XXXX")) {
		if(intseq ==0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%3.3s','%s','0','%s','%s')",tmp,prefix, prefix,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%d_%3.3s','%s','%d','%s','%s')",tmp,prefix, intseq,prefix,serverip,intseq,content,domain);
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		if(intseq == 0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%7.7s','%7.7s','%s','0','%s','%s')",tmp,phoneid+1, phoneid+1,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%7.7s','%d_%7.7s','%s','%d','%s','%s')",tmp,phoneid+1, intseq,phoneid+1,serverip,intseq,content,domain);
	}
	else  {
		if(intseq == 0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%s','%s','0','%s','%s')",tmp,prefix, inner_num,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%d_%s','%s','%d','%s','%s')",tmp,prefix, intseq,inner_num,serverip,intseq,content,domain);
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	mysql_query(mysql, sqlcmd);

	/*** number_manage ***/
VOICE_RETRY:

	printf("\nphoneid : (%s)",phoneid);
	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	printf("\ndate : (%s)",tmp);
/***
		strcpy(conn_method,argv[4]);
		strcpy(forward_num,argv[5]);
|IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_19_30_0_sain_09_30_13_30_0_sunin_09_01_13_01_0_break_12_30_13_30_0|nwadm1||078|1078078work|211.32.148.83|
*/
sprintf(commandBuf,"|IIC|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,orgfromtime,seq,prefix,phoneid, serverip);
    if(PVS == 1  && MASTER == 1 ) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIC')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

sprintf(commandBuf,"|IIC|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,orgfromtime,seq,prefix,phoneid, serverip);
		sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,totime,etc);


printf("\ncommandBuf:(%s)",commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip1, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip1);
				ps_delSpace(row[1]);
			}
			if(*serverip1 && strlen(serverip1) > 10 ) {
				if((ret = commandSend(commandBuf,serverip1,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip1);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    if(PVS != 1) {
	if(intseq == 0)  {
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%3.3s", vip,phoneid+1,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%7.7s", vip,phoneid+1,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else {
	printf("\n DIRECTORY Create !!!");
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sin", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssaout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssain", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssunout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssunin", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sbreak", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%soff", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
			else if(!strcmp(inner_num+3,"week")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s0", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s1", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s2", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);


				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s3", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s4", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s5", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s6", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
		}


	/********
	    sprintf(email,"cp -rf /var/lib/asterisk/mohmp3/default%d/* %s",(time(0)%5)+1,mp3dir);
	    system(email);
	*/

	/***
	[default]
	mode=files
	directory=/var/lib/asterisk/mohmp3
	*/
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"[%3.3s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%3.3s\n\n",phoneid+1,vip,phoneid+1,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%3.3s /home/ucmaster/%s/mohmp3/%3.3s/%3.3s",phoneid+1,vip,phoneid+1,phoneid+1);
				command_seq++;
				
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"[%7.7s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%7.7s\n\n", phoneid+1,vip,phoneid+1,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%7.7s /home/ucmaster/%s/mohmp3/%3.3s/%7.7s",phoneid+1,vip,phoneid+1,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else {
			matchflag = 0;
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"[%sin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sin\n\n", inner_num,vip,phoneid+1,inner_num);
				strcpy(email,"/etc/asterisk/musiconhold.conf");
				printf("\nemail:(%s)",email);

				fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
						if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
	printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
							matchflag = 1;
							break;
								
						}
					}
				}
				else  {
					printf("\n[5m file open error[0m");
					sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
					return 0;       
				}

				if(matchflag == 0) {
					sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sin /home/ucmaster/%s/mohmp3/%3.3s/%sin",inner_num,vip,phoneid+1,inner_num);
					command_seq++;
					ret=fseek(fp,0,SEEK_END);
					fprintf(fp,"%s",mp3dir);
				}
				//fclose(fp);

				ret=fseek(fp,0,SEEK_SET);
				matchflag = 0;
				sprintf(mp3dir,"[%sout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sout\n\n", inner_num,vip,phoneid+1,inner_num);
				//strcpy(email,"/etc/asterisk/musiconhold.conf");
			//printf("\nemail:(%s)",email);

				//fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sout /home/ucmaster/%s/mohmp3/%3.3s/%sout",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssunin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssunin\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssunin /home/ucmaster/%s/mohmp3/%3.3s/%ssunin",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssunout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssunout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssunout /home/ucmaster/%s/mohmp3/%3.3s/%ssunout",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssain]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssain\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssain /home/ucmaster/%s/mohmp3/%3.3s/%ssain",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssaout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssaout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssaout /home/ucmaster/%s/mohmp3/%3.3s/%ssaout",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%sbreak]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sbreak\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sbreak /home/ucmaster/%s/mohmp3/%3.3s/%sbreak",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}



			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%soff]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%soff\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%soff /home/ucmaster/%s/mohmp3/%3.3s/%soff",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			fclose(fp);

		}
		else if(!strcmp(inner_num+3,"week")) {
			matchflag = 0;
			sprintf(mp3dir,"[%s0]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s0\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s0 /home/ucmaster/%s/mohmp3/%3.3s/%s0",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s1]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s1\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s1 /home/ucmaster/%s/mohmp3/%3.3s/%s1",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);



			matchflag = 0;
			sprintf(mp3dir,"[%s2]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s2\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s2 /home/ucmaster/%s/mohmp3/%3.3s/%s2",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s3]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s3\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s3 /home/ucmaster/%s/mohmp3/%3.3s/%s3",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s4]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s4\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s4 /home/ucmaster/%s/mohmp3/%3.3s/%s4",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s5]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s5\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s5 /home/ucmaster/%s/mohmp3/%3.3s/%s5",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s6]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s6\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s6 /home/ucmaster/%s/mohmp3/%3.3s/%s6",inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);
			fclose(fp);


		}

		}
	}
	else {
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s", vip,phoneid+1,intseq,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s", vip,phoneid+1,intseq,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else {
	printf("\n DIRECTORY Create !!!");
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sin", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%soff", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
			else if(!strcmp(inner_num+3,"week")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s0", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s1", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s2", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);


				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s3", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s4", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s5", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s6", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
		}

	/********
	    sprintf(email,"cp -rf /var/lib/asterisk/mohmp3/default%d/* %s",(time(0)%5)+1,mp3dir);
	    system(email);
	*/

	/***
	[default]
	mode=files
	directory=/var/lib/asterisk/mohmp3
	*/
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"[%d_%3.3s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s\n\n",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%3.3s /home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"[%d_%7.7s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s\n\n", intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%7.7s /home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else {
			matchflag = 0;
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"[%d_%sin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sin\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				strcpy(email,"/etc/asterisk/musiconhold.conf");
				printf("\nemail:(%s)",email);

				fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
						if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
	printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
							matchflag = 1;
							break;
								
						}
					}
				}
				else  {
					printf("\n[5m file open error[0m");
					sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
					return 0;       
				}

				if(matchflag == 0) {
					sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sin /home/ucmaster/%s/mohmp3/%3.3s/%d_%sin",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
					command_seq++;
					ret=fseek(fp,0,SEEK_END);
					fprintf(fp,"%s",mp3dir);
				}
				//fclose(fp);

				ret=fseek(fp,0,SEEK_SET);
				matchflag = 0;
				sprintf(mp3dir,"[%d_%sout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				//strcpy(email,"/etc/asterisk/musiconhold.conf");
			//printf("\nemail:(%s)",email);

				//fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sout /home/ucmaster/%s/mohmp3/%3.3s/%d_%sout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssunin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssunin /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssunout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssunout /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssain]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssain /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssaout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssaout /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%sbreak]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sbreak /home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}



			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%soff]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%soff\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%soff /home/ucmaster/%s/mohmp3/%3.3s/%d_%soff",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			fclose(fp);

		}
		else if(!strcmp(inner_num+3,"week")) {
			matchflag = 0;
			sprintf(mp3dir,"[%d_%s0]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s0\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s0 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s0",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%d_%s1]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s1\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s1 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s1",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);



			matchflag = 0;
			sprintf(mp3dir,"[%d_%s2]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s2\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s2 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s2",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s3]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s3\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s3 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s3",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%d_%s4]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s4\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s4 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s4",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s5]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s5\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s5 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s5",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s6]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s6\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s6 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s6",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);
			fclose(fp);


		}

		}

	}

printf("\nmp3dir:(%s)",mp3dir);

    }
    if(PVS == 1) {
/****
		logCmd();
		if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
			sockfd = Manager(serverip,"moh reload");
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}
		}
*/
    }
	else  {
		//system("asterisk -rx 'moh reload'");

		char command[64];
		sprintf(command,"moh reload");
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
/***
		i = 0;
		while(strlen(manager_command[i]) > 0) {
			sprintf(command,"moh add %s",manager_command[i]);
			sockfd = Manager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
				sockfd = -1;
			}
			i++;
		}
*/
	}

        system("touch /tmp/vms_update");
	sprintf(resPacket,"|RES|IIC userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
    return 0;       
}


/*************************************************************************
* color ring added moh_bill
*************************************************************************/
int
procIIM()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd,intseq,minintseq;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0, command_seq = 0;
  char tmp[100],today[20],add_svc[11],seq[11],minseq[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[128],orgtotime[64],vip[20],conn_method[10];
  char	content[64],manager_command[20][256];
  char  moh_bill[5];
	FILE *fp;

	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(orgfromtime,0,sizeof(orgfromtime)); 
	memset(orgtotime,0,sizeof(orgtotime)); 
	memset(totime,0,sizeof(totime)); 
	memset(etc,0,sizeof(etc)); 
	memset(seq,0,sizeof(seq)); 
	memset(minseq,0,sizeof(minseq)); 
	memset(content,0,sizeof(content)); 
	memset(moh_bill,0,sizeof(moh_bill)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
15:04:12 |IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
*/

	for(i=0;i < 20;i++)
		memset(manager_command[i],0,sizeof(manager_command[i])); 

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

    if(argv[3] && *argv[3]) {
		strcpy(fromtime,argv[3]);
		strcpy(orgfromtime,argv[3]);
	}
/******
    if(argv[4] && *argv[4]) {
		strcpy(totime,argv[4]);
		strcpy(orgtotime,argv[4]);
	}
    if(argv[4] && *argv[4])
		strcpy(conn_method,argv[4]);
    if(argv[5] && *argv[5])
		strcpy(forward_num,argv[5]);
    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");
****/
    if(argv[4] && *argv[4]) {
		strcpy(seq,argv[4]);
		intseq = atoi(seq);
	}

    if(PVS == 1) {
	    if(argv[5] && *argv[5])
			strcpy(content,argv[5]);
				sprintf(sqlcmd, "select add_svc,proxyip,prefix,moh_bill from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(add_svc, row[0]?row[0]:"YYYYY");
					ps_delSpace(add_svc);
					strcpy(serverip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(vip,serverip);
					strcpy(prefix, row[2]?row[2]:"001");
					ps_delSpace(prefix);
					strcpy(moh_bill, row[3]?row[3]:"N");
					ps_delSpace(moh_bill);
				}
				mysql_free_result(result);
				result = NULL;
				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			printf("\nphoneid:(%s)",phoneid);
			printf("\nphoneid:(%s)",phoneid);

				/*************************************************************/
				if(*seq == '\0' || !isdigitstr(seq)) {
					sprintf(sqlcmd, "select max(abs(etc)) from color_info  prefix = '%3.3s' and defaultip = '%s'",prefix,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						strcpy(seq,"0");
						intseq = 0;

						minintseq = 0;
						strcpy(minseq,"0");
					}   
					else {
						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;
							intseq = 0;
							strcpy(seq,"0");
						}
						else {

							row = mysql_fetch_row( result );
							if(row) {
								strcpy(seq, row[0]?row[0]:"0");
								ps_delSpace(seq);
								intseq = atoi(seq);
							}
						}
						mysql_free_result(result);
						result = NULL;
					}
				}
	}
	else {
			if(argv[4] && *argv[4]) {
				strcpy(seq,argv[4]);
				intseq = atoi(argv[4]);
			}
			if(argv[5] && *argv[5]) 
				strcpy(prefix,argv[5]);
			if(argv[6] && *argv[6]) 
				strcpy(phoneid,argv[6]);
			if(argv[7] && *argv[7]) {
				strcpy(serverip,argv[7]);
				strcpy(vip,serverip);
			}
			if(argv[8] && *argv[8]) {
				strcpy(moh_bill,argv[8]);
			}
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;
	}

	
	/*** number_manage ***/
	/*** 회사 전체 ***/
	if(!strcmp(inner_num,"XXXX")) {
/******
		if(intseq == 0) {
			sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%3.3s','','0','0','0','%s','0','0','','','0','%s')",tmp,phoneid+1,phoneid+1,vip,content);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		}
		mysql_query(mysql, sqlcmd);
*/

		if(intseq == 0 && strcmp(serverip,"203.233.31.11")) {

                        if(!strcmp(moh_bill,"Y")){
                                sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
                                class='%3.3s' where substr(phoneid,2,3) = '%3.3s' and domain='%s' and (option2 = 'N' or option2 = '')",\
                                prefix,phoneid+1,domain);
                                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                        }else{
                                sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
                                class='%3.3s' where substr(phoneid,2,3) = '%3.3s' and domain='%s' and moh_bill = 'Y' and (option2 = 'N' or option2 = '')",\
                                prefix,phoneid+1,domain);
                                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                        }

			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}
		}
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		
                if(!strcmp(moh_bill,"Y")){
                        sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Y' \
                        ,class='%7.7s' where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
                        phoneid+1,phoneid+1,domain);
                        printf("\nsqlcmd : ((((%s))))",sqlcmd);
                }else{
                        sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Y' \
                        ,class='%7.7s' where substr(phoneid,2,7) = '%7.7s' and moh_bill = 'Y' and domain='%s'",\
                        phoneid+1,phoneid+1,domain);
                        printf("\nsqlcmd : ((((%s))))",sqlcmd);

                }


		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
		}
	}
	else if(strstr(inner_num,"work") || strstr(inner_num,"week")) {
		if(intseq == 0 && strcmp(serverip,"203.233.31.11")) {
                        if(!strcmp(moh_bill,"Y")){
                                sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
                                class='%7.7s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s' and (option2 = 'N' or option2 = '')",\
                                inner_num,phoneid+1,domain);
                                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                        }else{
                                sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
                                class='%7.7s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s' and moh_bill = 'Y' and (option2 = 'N' or option2 = '')",\
                                inner_num,phoneid+1,domain);
                                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                        }

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}
		}

		if(strlen(inner_num) >= 7) {
		char *kind=NULL,*from=NULL, *to=NULL, *frommin=NULL, *tomin = NULL, *etc=NULL;

/***
15:04:12 |IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
2|nwadm1|<<<<<|RES|IIC userid:(nwadm1)-(078work)-(in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0)-(2)-():(211
.32.148.89)
*/

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			if(*fromtime) {
				kind = (char *)strtok(fromtime,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"in") && strcmp(kind,"out"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(from)
					frommin = (char *)strtok(NULL,"_");
				if(frommin)
					to = (char *)strtok(NULL,"_");
				if(to)
					tomin = (char *)strtok(NULL,"_");
				if(tomin)
					etc = (char *)strtok(NULL,"_");
				if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}

				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sain") && strcmp(kind,"saout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							printf("\nerror:(%s)",resPacket);
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sunin") && strcmp(kind,"sunout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));


				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"break"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					if(intseq == 0) {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','0','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}
					}
					else {
						sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number,seq,content)  values('%s','%3.3s','%d_%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%d','%s')",tmp,phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num,intseq,content);
						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%d_%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s',seq='%d' where prefix='%3.3s' and defaultip='%s'",phoneid+1,intseq,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,intseq,phoneid+1, vip);
							printf("\nsqlcmd : ((((%s))))",sqlcmd);
							mysql_query(mysql, sqlcmd);
						}


					}
				}

			} /* end of if */

		}
	}
	else return(errorReturn("Input Data Error",__FILE__,__LINE__));


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	if(!strcmp(inner_num,"XXXX")) {
		if(intseq ==0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%3.3s','%s','0','%s','%s')",tmp,prefix, prefix,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%d_%3.3s','%s','%d','%s','%s')",tmp,prefix, intseq,prefix,serverip,intseq,content,domain);
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		if(intseq == 0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%7.7s','%7.7s','%s','0','%s','%s')",tmp,phoneid+1, phoneid+1,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%7.7s','%d_%7.7s','%s','%d','%s','%s')",tmp,phoneid+1, intseq,phoneid+1,serverip,intseq,content,domain);
	}
	else  {
		if(intseq == 0)
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%s','%s','0','%s','%s')",tmp,prefix, inner_num,serverip,content,domain);
		else
			sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,content,domain) values ('%s','%3.3s','%d_%s','%s','%d','%s','%s')",tmp,prefix, intseq,inner_num,serverip,intseq,content,domain);
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	mysql_query(mysql, sqlcmd);

	/*** number_manage ***/
VOICE_RETRY:

	printf("\nphoneid : (%s)",phoneid);
	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	printf("\ndate : (%s)",tmp);
/***
		strcpy(conn_method,argv[4]);
		strcpy(forward_num,argv[5]);
|IIC|nwadm1@temp4402.lgdacom.net|078work|in_09_30_19_30_0_sain_09_30_13_30_0_sunin_09_01_13_01_0_break_12_30_13_30_0|nwadm1||078|1078078work|211.32.148.83|
*/
sprintf(commandBuf,"|IIM|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,orgfromtime,seq,prefix,phoneid, serverip,moh_bill);
    if(PVS == 1  && MASTER == 1 ) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

sprintf(commandBuf,"|IIM|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,orgfromtime,seq,prefix,phoneid, serverip,moh_bill);
		sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,totime,etc);


printf("\ncommandBuf:(%s)",commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip1, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip1);
				ps_delSpace(row[1]);
			}
			if(*serverip1 && strlen(serverip1) > 10 ) {
				if((ret = commandSend(commandBuf,serverip1,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip1);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    if(PVS != 1) {
	if(intseq == 0)  {
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%3.3s", vip,phoneid+1,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%7.7s", vip,phoneid+1,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else {
	printf("\n DIRECTORY Create !!!");
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sin", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssaout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssain", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssunout", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssunin", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sbreak", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%soff", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
			else if(!strcmp(inner_num+3,"week")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s0", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s1", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s2", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);


				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s3", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s4", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s5", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s6", vip,phoneid+1,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
		}


	/********
	    sprintf(email,"cp -rf /var/lib/asterisk/mohmp3/default%d/* %s",(time(0)%5)+1,mp3dir);
	    system(email);
	*/

	/***
	[default]
	mode=files
	directory=/var/lib/asterisk/mohmp3
	*/
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"[%3.3s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%3.3s\n\n",phoneid+1,vip,phoneid+1,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%3.3s /home/ucmaster/%s/mohmp3/%3.3s/%3.3s",phoneid+1,vip,phoneid+1,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"[%7.7s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%7.7s\n\n", phoneid+1,vip,phoneid+1,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%7.7s /home/ucmaster/%s/mohmp3/%3.3s/%7.7s",phoneid+1,vip,phoneid+1,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else {
			matchflag = 0;
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"[%sin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sin\n\n", inner_num,vip,phoneid+1,inner_num);
				strcpy(email,"/etc/asterisk/musiconhold.conf");
				printf("\nemail:(%s)",email);

				fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
						if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
	printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
							matchflag = 1;
							break;
								
						}
					}
				}
				else  {
					printf("\n[5m file open error[0m");
					sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
					return 0;       
				}

				if(matchflag == 0) {
					sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sin /home/ucmaster/%s/mohmp3/%3.3s/%sin", inner_num,vip,phoneid+1,inner_num);
					command_seq++;
					ret=fseek(fp,0,SEEK_END);
					fprintf(fp,"%s",mp3dir);
				}
				//fclose(fp);

				ret=fseek(fp,0,SEEK_SET);
				matchflag = 0;
				sprintf(mp3dir,"[%sout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sout\n\n", inner_num,vip,phoneid+1,inner_num);
				//strcpy(email,"/etc/asterisk/musiconhold.conf");
			//printf("\nemail:(%s)",email);

				//fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sout /home/ucmaster/%s/mohmp3/%3.3s/%sout", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssunin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssunin\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssunin /home/ucmaster/%s/mohmp3/%3.3s/%ssunin", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssunout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssunout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssunout /home/ucmaster/%s/mohmp3/%3.3s/%ssunout", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssain]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssain\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssain /home/ucmaster/%s/mohmp3/%3.3s/%ssain", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssaout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssaout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%ssaout /home/ucmaster/%s/mohmp3/%3.3s/%ssaout", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%sbreak]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sbreak\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%sbreak /home/ucmaster/%s/mohmp3/%3.3s/%sbreak", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}



			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%soff]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%soff\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%soff /home/ucmaster/%s/mohmp3/%3.3s/%soff", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			fclose(fp);

		}
		else if(!strcmp(inner_num+3,"week")) {
			matchflag = 0;
			sprintf(mp3dir,"[%s0]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s0\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s0 /home/ucmaster/%s/mohmp3/%3.3s/%s0", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s1]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s1\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s1 /home/ucmaster/%s/mohmp3/%3.3s/%s1", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);



			matchflag = 0;
			sprintf(mp3dir,"[%s2]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s2\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s2 /home/ucmaster/%s/mohmp3/%3.3s/%s2", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s3]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s3\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s3 /home/ucmaster/%s/mohmp3/%3.3s/%s3", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s4]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s4\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}			}
			else  {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s2 /home/ucmaster/%s/mohmp3/%3.3s/%s2", inner_num,vip,phoneid+1,inner_num);
                                command_seq++;
printf("|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s4 /home/ucmaster/%s/mohmp3/%3.3s/%s4", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s5]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s5\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s5 /home/ucmaster/%s/mohmp3/%3.3s/%s5", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s6]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s6\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%s6 /home/ucmaster/%s/mohmp3/%3.3s/%s6", inner_num,vip,phoneid+1,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);
			fclose(fp);


		}

		}
	}
	else {
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s", vip,phoneid+1,intseq,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s", vip,phoneid+1,intseq,phoneid+1);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else {
	printf("\n DIRECTORY Create !!!");
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sin", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%soff", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
			else if(!strcmp(inner_num+3,"week")) {
				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s0", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s1", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s2", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);


				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s3", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s4", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s5", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);

				sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%d_%s6", vip,phoneid+1,intseq,inner_num);
				printf("\nmp3dir:(%s)",mp3dir);
				fi_makeDir(mp3dir,0777,NULL,NULL);
			}
		}

	/********
	    sprintf(email,"cp -rf /var/lib/asterisk/mohmp3/default%d/* %s",(time(0)%5)+1,mp3dir);
	    system(email);
	*/

	/***
	[default]
	mode=files
	directory=/var/lib/asterisk/mohmp3
	*/
		if(!strcmp(inner_num,"XXXX")) {
			sprintf(mp3dir,"[%d_%3.3s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s\n\n",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%3.3s /home/ucmaster/%s/mohmp3/%3.3s/%d_%3.3s",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
			sprintf(mp3dir,"[%d_%7.7s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s\n\n", intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
		printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
						matchflag = 1;
						fclose(fp);
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%7.7s /home/ucmaster/%s/mohmp3/%3.3s/%d_%7.7s",intseq,phoneid+1,vip,phoneid+1,intseq,phoneid+1);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			fclose(fp);
		}
		else {
			matchflag = 0;
			if(!strcmp(inner_num+3,"work")) {
				sprintf(mp3dir,"[%d_%sin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sin\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				strcpy(email,"/etc/asterisk/musiconhold.conf");
				printf("\nemail:(%s)",email);

				fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
						if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
	printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
							matchflag = 1;
							break;
								
						}
					}
				}
				else  {
					printf("\n[5m file open error[0m");
					sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
					return 0;       
				}

				if(matchflag == 0) {
					sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sin /home/ucmaster/%s/mohmp3/%3.3s/%d_%sin",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
					command_seq++;
					ret=fseek(fp,0,SEEK_END);
					fprintf(fp,"%s",mp3dir);
				}
				//fclose(fp);

				ret=fseek(fp,0,SEEK_SET);
				matchflag = 0;
				sprintf(mp3dir,"[%d_%sout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				//strcpy(email,"/etc/asterisk/musiconhold.conf");
			//printf("\nemail:(%s)",email);

				//fp=fopen(email,"r+");
				if(fp != NULL) {
					while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sout /home/ucmaster/%s/mohmp3/%3.3s/%d_%sout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssunin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssunin /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunin",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssunout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssunout /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssunout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssain]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssain /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssain",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%ssaout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%ssaout /home/ucmaster/%s/mohmp3/%3.3s/%d_%ssaout",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%d_%sbreak]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%sbreak /home/ucmaster/%s/mohmp3/%3.3s/%d_%sbreak",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}



			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%soff]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%soff\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%soff /home/ucmaster/%s/mohmp3/%3.3s/%d_%soff",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			fclose(fp);

		}
		else if(!strcmp(inner_num+3,"week")) {
			matchflag = 0;
			sprintf(mp3dir,"[%d_%s0]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s0\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s0 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s0",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%d_%s1]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s1\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s1 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s1",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);



			matchflag = 0;
			sprintf(mp3dir,"[%d_%s2]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s2\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s2 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s2",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s3]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s3\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s3 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s3",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%d_%s4]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s4\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s4 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s4",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s5]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s5\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s5 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s5",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%d_%s6]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%d_%s6\n\n", intseq,inner_num,vip,phoneid+1,intseq,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				sprintf(manager_command[command_seq]+strlen(manager_command[command_seq]),"%d_%s6 /home/ucmaster/%s/mohmp3/%3.3s/%d_%s6",intseq,inner_num,vip,phoneid+1,intseq,inner_num);
				command_seq++;
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);
			fclose(fp);


		}

		}

	}

printf("\nmp3dir:(%s)",mp3dir);

    }
    if(PVS == 1) {
/***
		logCmd();
		if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
			sockfd = Manager(serverip,"moh reload");
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}
		}
*/
    }
	else {
		//system("/usr/sbin/asterisk -rx 'moh reload'");
		char command[64];
		sprintf(command,"moh reload");
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
/**
		i = 0;
		while(strlen(manager_command[i]) > 0) {
			sprintf(command,"moh add %s",manager_command[i]);
			sockfd = Manager("127.0.0.1",command);
			if(sockfd > -1) {
				strcpy(command,"Action: Logoff\r\n\r\n");
				write(sockfd, command, strlen(command));
				close(sockfd);
				sockfd = -1;
			}
			i++;
		}
*/
	}

        system("touch /tmp/vms_update");
	sprintf(resPacket,"|RES|IIM userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
    return 0;       
}



/*************************************************************************
* color ring
*************************************************************************/
int
procICR()
{
  char mp3dir[1024];
	char	destP[256];
  char email[512],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, i, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0,matchflag=0;
  char tmp[100],seq[20],today[20],add_svc[11];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],serverip1[30];
	char	fromtime[128],totime[64],etc[10];
	char	orgfromtime[64],orgtotime[64],vip[20],conn_method[10];
	FILE *fp;

	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(add_svc,0,sizeof(add_svc)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(orgfromtime,0,sizeof(orgfromtime)); 
	memset(orgtotime,0,sizeof(orgtotime)); 
	memset(totime,0,sizeof(totime)); 
	memset(etc,0,sizeof(etc)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
15:04:12 |ICR|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
*/

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);
    if(argv[3] && *argv[3]) {
		strcpy(fromtime,argv[3]);
		strcpy(orgfromtime,argv[3]);
	}
/******
    if(argv[4] && *argv[4]) {
		strcpy(totime,argv[4]);
		strcpy(orgtotime,argv[4]);
	}
*/
    if(argv[4] && *argv[4])
		strcpy(conn_method,argv[4]);
    if(argv[5] && *argv[5])
		strcpy(forward_num,argv[5]);

/****
    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");
****/

    if(PVS == 1) {
				sprintf(sqlcmd, "select add_svc,proxyip,prefix from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(add_svc, row[0]?row[0]:"NNNNNN");
					ps_delSpace(add_svc);
					strcpy(serverip, row[1]?row[1]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(vip,serverip);
					strcpy(prefix, row[2]?row[2]:"001");
					ps_delSpace(prefix);
				}
				mysql_free_result(result);
				result = NULL;
				sprintf(phoneid,"1%s%s",prefix,inner_num);
				if(add_svc[1] != 'Y' && add_svc[1] != 'y') {
					sprintf(resPacket, "|ERR|통화연결음 정보가 없습니다.");
					return(-1);
				}

			printf("\nphoneid:(%s)",phoneid);
			printf("\nphoneid:(%s)",phoneid);

	}
	else {
			if(argv[6] && *argv[6]) 
				strcpy(prefix,argv[6]);
			if(argv[7] && *argv[7]) 
				strcpy(phoneid,argv[7]);
			if(argv[8] && *argv[8]) {
				strcpy(serverip,argv[8]);
				strcpy(vip,serverip);
			}
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			centerflag=1;
	}

	/*** number_manage ***/
	/*** 회사 전체 ***/
	if(!strcmp(inner_num,"XXXX")) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
		class='%3.3s' where substr(phoneid,2,3) = '%3.3s' and domain='%s'",\
		prefix,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}
	} else if(strlen(inner_num) == 4 && isdigitstr(inner_num)) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Y' \
		,class='%7.7s' where substr(phoneid,2,7) = '%7.7s' and domain='%s'",\
		phoneid+1,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}
	}
	else if(strstr(inner_num,"work") || strstr(inner_num,"week")) {
		sprintf(sqlcmd,"UPDATE number_manage  set option2 = 'Z', \
		class='%7.7s' where substr(phoneid,2,3) = '%3.3s' and domain = '%s'",\
		inner_num,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}

		if(strlen(inner_num) >= 7 && !strncmp(inner_num,phoneid+1,3) && !strncmp(inner_num+3,"work",4)) {
		char *kind=NULL,*from=NULL, *to=NULL, *frommin=NULL, *tomin = NULL, *etc=NULL;

/***
15:04:12 |ICR|nwadm1@temp4402.lgdacom.net|078work|in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0|2|0105099071
2|nwadm1|<<<<<|RES|ICR userid:(nwadm1)-(078work)-(in_09_30_18_30_0_sain_09_30_12_30_0_break_12_30_13_30_0)-(2)-():(211
.32.148.89)
*/

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			if(*fromtime) {
				kind = (char *)strtok(fromtime,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"in") && strcmp(kind,"out"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(from)
					frommin = (char *)strtok(NULL,"_");
				if(frommin)
					to = (char *)strtok(NULL,"_");
				if(to)
					tomin = (char *)strtok(NULL,"_");
				if(tomin)
					etc = (char *)strtok(NULL,"_");
				if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));
				if(to) {
					sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
						mysql_query(mysql, sqlcmd);
					}
				}

				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"sain") && strcmp(kind,"saout"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));




				if(to) {
					sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
						mysql_query(mysql, sqlcmd);
					}
				}
				kind = (char *)strtok(NULL,"_");
				if(kind)
					from = (char *)strtok(NULL,"_");

				if(strcmp(kind,"break"))
					return(errorReturn("Input Data Error",__FILE__,__LINE__));

                                if(from)
                                        frommin = (char *)strtok(NULL,"_");
                                if(frommin)
                                        to = (char *)strtok(NULL,"_");
                                if(to)
                                        tomin = (char *)strtok(NULL,"_");
                                if(tomin)
                                        etc = (char *)strtok(NULL,"_");
                                if(!isdigitstr(from) || !isdigitstr(to) || !isdigitstr(frommin) || !isdigitstr(tomin))
                                        return(errorReturn("Input Data Error",__FILE__,__LINE__));

				if(to) {
					sprintf(sqlcmd,"insert into color_class(regdate,prefix,class,kind,fromtime,totime,etc, defaultip,frommin,tomin,conn_method,number)  values('%s','%3.3s','%7.7s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",tmp,phoneid+1,inner_num,kind?kind:"in",from,to,etc,vip,frommin,tomin,conn_method,forward_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						sprintf(sqlcmd,"update color_class set prefix='%3.3s',class='%7.7s',kind = '%s',fromtime='%s',totime='%s',etc='%s',regdate='%s',frommin='%s',tomin='%s',conn_method='%s',number='%s' where prefix='%3.3s' and defaultip='%s'",phoneid+1,inner_num,kind?kind:"in",from,to,etc,tmp,frommin,tomin,conn_method,forward_num,phoneid+1, vip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
						mysql_query(mysql, sqlcmd);
					}
				}

			} /* end of if */

		}
	}
	else return(errorReturn("Input Data Error",__FILE__,__LINE__));


	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	if(!strcmp(inner_num,"XXXX")) {
		sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,domain) values ('%s','%3.3s','%3.3s','%s','0','%s')",tmp,prefix, prefix,serverip,domain);
	} else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
		sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,domain) values ('%s','%7.7s','%7.7s','%s','0','%s')",tmp,phoneid+1, phoneid+1,serverip,domain);
	}
	else  {
		sprintf(sqlcmd, "insert into color_info(regdate,prefix,class,serverip,etc,domain) values ('%s','%3.3s','%s','%s','0','%s')",tmp,prefix,inner_num,serverip,domain);
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

	mysql_query(mysql, sqlcmd);

	/*** number_manage ***/
VOICE_RETRY:

	printf("\nphoneid : (%s)",phoneid);
	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	printf("\ndate : (%s)",tmp);

sprintf(commandBuf,"|ICR|%s@%s|%s|%s|||%s|%s|%s|",user,domain,inner_num,orgfromtime,prefix,phoneid, serverip);
    if(PVS == 1  && MASTER == 1 ) {
		if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

sprintf(commandBuf,"|ICR|%s@%s|%s|%s|||%s|%s|%s|",user,domain,inner_num,orgfromtime,prefix,phoneid, serverip);
		sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,totime,etc);


printf("\ncommandBuf:(%s)",commandBuf);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip1, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip1);
				ps_delSpace(row[1]);
			}
			if(*serverip1 && strlen(serverip1) > 10 ) {
				if((ret = commandSend(commandBuf,serverip1,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ICR')",tmp, commandBuf,serverip1);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
    }

    if(PVS != 1) {
	if(!strcmp(inner_num,"XXXX")) {
	    sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%3.3s", vip,phoneid+1,phoneid+1);
	printf("\nmp3dir:(%s)",mp3dir);
	fi_makeDir(mp3dir,0777,NULL,NULL);
	}
	else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
	    sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%7.7s", vip,phoneid+1,phoneid+1);
	printf("\nmp3dir:(%s)",mp3dir);
	fi_makeDir(mp3dir,0777,NULL,NULL);
	}
	else {
printf("\n DIRECTORY Create !!!");
		if(!strcmp(inner_num+3,"work")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sin", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sout", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssaout", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%ssain", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%sbreak", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%soff", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
		else if(!strcmp(inner_num+3,"week")) {
			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s0", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);

			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s1", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);

			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s2", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);


			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s3", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);

			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s4", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);

			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s5", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);

			sprintf(mp3dir,"/home/ucmaster/%s/mohmp3/%3.3s/%s6", vip,phoneid+1,inner_num);
			printf("\nmp3dir:(%s)",mp3dir);
			fi_makeDir(mp3dir,0777,NULL,NULL);
		}
	}


/********
    sprintf(email,"cp -rf /var/lib/asterisk/mohmp3/default%d/* %s",(time(0)%5)+1,mp3dir);
    system(email);
*/

/***
[default]
mode=files
directory=/var/lib/asterisk/mohmp3
*/
	if(!strcmp(inner_num,"XXXX")) {
		sprintf(mp3dir,"[%3.3s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%3.3s\n\n",phoneid+1,vip,phoneid+1,phoneid+1);
		strcpy(email,"/etc/asterisk/musiconhold.conf");
	printf("\nemail:(%s)",email);

		fp=fopen(email,"r+");
		if(fp != NULL) {
			while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
				if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
					matchflag = 1;
					fclose(fp);
					break;
						
				}
			}
		}
		else  {
			sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
			return 0;       
		}

		if(matchflag == 0) {
			ret=fseek(fp,0,SEEK_END);
			fprintf(fp,"%s",mp3dir);
		}
		fclose(fp);
	}
	else if(strlen(inner_num) == 4 && atoi(inner_num) > 0) {
		sprintf(mp3dir,"[%7.7s]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%7.7s\n\n", phoneid+1,vip,phoneid+1,phoneid+1);
		strcpy(email,"/etc/asterisk/musiconhold.conf");
	printf("\nemail:(%s)",email);

		fp=fopen(email,"r+");
		if(fp != NULL) {
			while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
				if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
					matchflag = 1;
					fclose(fp);
					break;
						
				}
			}
		}
		else  {
			sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
			return 0;       
		}

		if(matchflag == 0) {
			ret=fseek(fp,0,SEEK_END);
			fprintf(fp,"%s",mp3dir);
		}
		fclose(fp);
	}
	else {
		matchflag = 0;
		if(!strcmp(inner_num+3,"work")) {
			sprintf(mp3dir,"[%sin]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sin\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				printf("\n[5m file open error[0m");
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%sout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssain]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssain\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%ssaout]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%ssaout\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}

			ret=fseek(fp,0,SEEK_SET);
			matchflag = 0;
			sprintf(mp3dir,"[%sbreak]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%sbreak\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}



			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%soff]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%soff\n\n", inner_num,vip,phoneid+1,inner_num);
			//strcpy(email,"/etc/asterisk/musiconhold.conf");
		//printf("\nemail:(%s)",email);

			//fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
							
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}


			fclose(fp);

		}
		else if(!strcmp(inner_num+3,"week")) {
			matchflag = 0;
			sprintf(mp3dir,"[%s0]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s0\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s1]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s1\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);



			matchflag = 0;
			sprintf(mp3dir,"[%s2]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s2\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s3]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s3\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s4]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s4\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);

			matchflag = 0;
			sprintf(mp3dir,"[%s5]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s5\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);


			matchflag = 0;
			sprintf(mp3dir,"[%s6]\nmode=files\ndirectory=/home/ucmaster/%s/mohmp3/%3.3s/%s6\n\n", inner_num,vip,phoneid+1,inner_num);
			strcpy(email,"/etc/asterisk/musiconhold.conf");
			printf("\nemail:(%s)",email);

			fp=fopen(email,"r+");
			if(fp != NULL) {
				while(fgets(sqlcmd1,sizeof(sqlcmd1), fp) != NULL) {
					if(strlen(sqlcmd1) > 4 && strncmp(sqlcmd1,"mode=files",10) && strstr(mp3dir,sqlcmd1)) {
printf("\nMATCH:(%s),(%s)",mp3dir,sqlcmd1);
						matchflag = 1;
						break;
					}
				}
			}
			else  {
				sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
				return 0;       
			}

			if(matchflag == 0) {
				ret=fseek(fp,0,SEEK_END);
				fprintf(fp,"%s",mp3dir);
			}
			//fclose(fp);
			ret=fseek(fp,0,SEEK_SET);
			fclose(fp);


		}

	}

printf("\nmp3dir:(%s)",mp3dir);


/***
        if((fd=open(email, O_RDWR)) == -1) {

	    sprintf(resPacket,"|RES|ICR1 userid:(%s)-(%s)",user,mailbox);
	    return 0;       
	}
	ret=lseek(fd,0,SEEK_END);

	if(ret < 0) {
		sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
	    return 0;       

	}

	if(ret=write(fd, mp3dir, strlen(mp3dir)) < 1)  {
		sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);
		return 0;       
	}
	close(fd);
*/

/***
        system("asterisk -rx 'moh reload'");
        system("asterisk -rx 'moh reload'");
*/
    }
    if(PVS == 1) {
/***
		if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
			sockfd = Manager(serverip,"moh reload");
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}
		}
*/
    }
	else {
		//system("asterisk -rx 'moh reload'");
		char command[64];
		sprintf(command,"moh reload");
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
	}

	system("touch /tmp/vms_update");
	sprintf(resPacket,"|RES|ICR userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,inner_num,orgfromtime,orgtotime,etc);

	return 0;       
}


/*************************************************************************
* forbid call - Update
전체,국내유선,이동통신호,국제호,1633:....
*************************************************************************/
int
procUFD()
{
  char passwd[256],sqlcmd1[512];
  char forbid[11];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num, i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],prefix_num[200];
  char	fromtime[10],totime[10];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
                strcpy(forbid,argv[3]);
        else
                strcpy(forbid,"----------");

    if(argv[4] && *argv[4])
        strcpy(fromtime,argv[4]);
    else
	strcpy(fromtime,"0");

    if(argv[5] && *argv[5])
        strcpy(totime,argv[5]);
    else
	strcpy(totime,"0");

    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
			if(argv[6] && *argv[6]) 
				strcpy(phoneid,argv[6]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
	}

	/*** number_manage ***/
	{
		sprintf(sqlcmd,"UPDATE number_manage set forbiden_call='%s',fromtime='%s',totime='%s' where substr(phoneid,2,7) = '%7.7s' and domain='%s'",forbid,fromtime,totime,phoneid+1,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|UFD|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],phoneid);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UFD')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|UFD|%s@%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],phoneid);
				sprintf(resPacket,"|RES|UFD userid:(%s)-(%s)-(%s)",user,forbid,phoneid);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UFD')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}


    sprintf(resPacket,"|RES|UFD userid:(%s)-(%s)-(%s)",user,forbid,phoneid);
    return 0;       
}



/*************************************************************************
* forbid call kind 조회 					     *
*************************************************************************/
int
procRFD()
{
  char 	passwd[256];
  char 	email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i;
  char 	tmp[100];
  char  sqlcmd[512],mailbox[64],forbid[11];
  char  fromtime[11],totime[11];
  unsigned int	tmpNumber;

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(forbid,0,sizeof(forbid)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");


	if(customInfo(domain) < 0)
		return -1;

	sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

	domain_string(domain);
	{
		//if(PVS == 1) {
				sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime from number_manage where substr(phoneid,2,7) = '%7.7s' and domain='%s'",phoneid+1,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s,%s, %s)",user,domain,inner_num);
					return -1;
				}

				row = mysql_fetch_row( result );
				if( row) {
					strcpy(phoneid, row[0]?row[0]:"0");
					ps_delSpace(phoneid);
					strcpy(forbid, row[1]?row[1]:"----------");
					ps_delSpace(forbid);
					strcpy(fromtime, row[2]?row[2]:"0");
					ps_delSpace(fromtime);
					strcpy(totime, row[3]?row[3]:"0");
					ps_delSpace(totime);
				}

				mysql_free_result(result);
			result = NULL;
			//}
	}
	printf("\n=========================================");
	sprintf(resPacket,"|RES|%s^%s^%s",forbid,fromtime,totime);

    return 0;       
}




/*************************************************************************
* 개통처리(from boss), Or mannual register			     *
|IRG|kjlee@gw.iyouone.com|07075993580|0003.2a08.bc0f|0(1)|forbid_prefix
*************************************************************************/
int
procIRG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32];
  char	name[21];
	unsigned char	*tmpP=NULL;


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(letter_flag,0,sizeof(letter_flag));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        else
                strcpy(outer_num,"07000000000");

	if(argv[3] && *argv[3])
                strcpy(macaddr,argv[3]);
        else
                strcpy(macaddr,"0000:0000:0000");

	if(argv[6] && *argv[6]) {
                strcpy(inner_num,argv[6]);
}
        else
	    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[4] && *argv[4])
                strcpy(number_type,argv[4]);
        else
                strcpy(number_type,"1");

	if(argv[5] && *argv[5])
                strcpy(forbid_prefix,argv[5]);
        else
                strcpy(forbid_prefix,"");

	if(argv[6] && *argv[6])
                strcpy(name,argv[6]);
        else
                strcpy(name,"");

	if(argv[7] && *argv[7])
                strcpy(tmptel,argv[7]);
        else
                strcpy(tmptel,"");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


    if(PVS == 1) {
		sprintf(sqlcmd, "select number,status,domain,type from number_list \
		where  number = '%s'",outer_num);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|Data Not Found!.(%s)",outer_num);
			printf("\nresPacket:(%s)",resPacket);
			return -1;
		}

		/*** 사용여부 Check ***/
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) {
					if(*row[1] == '1') {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  used!!! status:(%s)",outer_num,row[1]);
								return -1;
							}
							if(*row[3] == '1')
								typeflag=1;
							printf("\n[5mdomain:(%s)-[%s][0m",domain,row[2]);
							if(strlen(row[2]) > 5)
								strcpy(domain, row[2]?row[2]:"unknown.unknown");
							//strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(domain);
							ps_delSpace(number_type);
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
/****
		else {
		    if(argv[6] && *argv[6])
				strcpy(number_type,argv[6]);
		    else
				strcpy(number_type,"1");

		    if(argv[5] && *argv[5])
			strcpy(domain,argv[5]);
		    else
			strcpy(domain,"unknown.unknown");
	     }
*/
	printf("\ninner_num:(%s)",inner_num);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		if(*inner_digit == '3')
			inner_num[0] = '0';
	}
	else {
		    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
		    else
			strcpy(prefix,"001");
		    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}

/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
				/*** domain, sipuri(setdn@domain) ****/
				if( *macaddr != '\0') {
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					outer_num);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);

					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','wifi','%s')",tmp,outer_num,macaddr,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
					}
				}

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
				if( mysql_query(authmysql, sqlcmd) ){
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					printf("\n|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);


				sprintf(sqlcmd,"UPDATE number_list set \
				forbid_prefix = '%s', serverip = '%s',\
				status = 1, lastdate = '%s',domain='%s' where \
				number = '%s'", forbid_prefix, serverip,tmp,domain,outer_num);
				//number = '%s'", number_type, forbid_prefix, serverip,tmp,domain,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
				}
			if(typeflag == 1)  {
				if(*inner_digit == '4')
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname) values(1111111, '신규', 202, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s','1111',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex')",macaddr,outer_num,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp);
				else if(*inner_digit == '3')
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,cc,sipservice,ccname) values(1111111, '신규', 202, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s','1111',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex')",macaddr,outer_num,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp);
			}
			else {
				if(*inner_digit == '4')
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,servicetype,cc,sipservice,ccname) values(1111111, '신규', 202, '%s',\
					'%s,%4.4s', '%s', '1%3.3s%4.4s@%s','1111',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','represent-device'i,'uc0001','uc0001','UC-Centrex')",macaddr,outer_num,inner_num,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp);
				else if(*inner_digit == '3')
					sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
					macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
					areacode, loginid, updatetime, portnum,servicetype,cc,sipservice,ccname) values(1111111, '신규', 202, '%s',\
					'%s,%3.3s', '%s', '1%3.3s%4.4s@%s','1111',\
					'%s','1', '1%3.3s%4.4s@%s','sip', \
					'070','1%3.3s%4.4s','%s','00','represent-device'i,'uc0001','uc0001','UC-Centrex')",macaddr,outer_num,inner_num+1,outer_num, \
					prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp);
			}

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if(!authmysql)
				authinit(AUTH_SERVER);

			strcpy(resPacket,sqlcmd);
			logCmd();
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|Update DCS_PHONE_AUTH Error!(%s, %s)",mysql_error(authmysql),sqlcmd);
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
				logCmd();
				//return(-1);
			}
			sprintf(sqlcmd,"INSERT into number_history( \
			number , status , changedate ,domain, type) \
			values('%s',1,'%s','%s',%s)", \
			outer_num,tmp,domain,number_type);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}
			
		if(typeflag == 1) {
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			sprintf(user,"tmpid%s",inner_num);
			
			argv[2] = "1111";
			argv[3] = inner_num;
			argv[4] = outer_num;

			strcpy(tmpname1,name);
			string_replace(tmpname1);
			tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
			if(tmpP) {
				strcpy(tmpname,tmpP);
				free(tmpP);
			}
			argv[5] = tmpname;
			argv[6] = tmptel;
			argv[7] = outer_num;
			argv[8] = "";
			argv[9] = "";
			argv[10] = tmprid1;
			argv[11] = letter_flag;

			printf("\n(%s)",argv[1]);
			printf("\n(%s)",argv[5]);
			strcpy(sip_passwd,"1111");

			ret = procINO(0,NULL,__LINE__);

			if(ret  == 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",tmp,domain,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}

			}
		}

			if(*resPacket == '\0')
				sprintf(resPacket,"|RES|IRG userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
			return 0;       
					
		}
		else 
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));




/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|IRG userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}


/*************************************************************************
*************************************************************************/
int
procIIA()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32],num070[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_domain,0,sizeof(inner_domain));
	memset(num070,0,sizeof(num070));
	memset(prefix,0,sizeof(prefix));
	memset(inner_num,0,sizeof(inner_num));


    if(argv[1] && *argv[1] && strlen(argv[1]) == 8) {
                strncpy(prefix,argv[1]+1,3);
                strcpy(inner_num,argv[1]+4);
	}
        else
		return(errorReturn("Input parameter invalid",__FILE__,__LINE__));

	if(argv[2] && *argv[2] && strlen(argv[2]) > 5)
                strcpy(serverip,argv[2]);
        else
                strcpy(serverip,"211.32.148.82");


	if(PVS == 1) {
			sprintf(sqlcmd, "select 070number,domain from number_manage where phoneid='0%3.3s%4.4s' and defaultip= '%s'",prefix,inner_num,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(domain, row[1]?row[1]:"ipcc.com");
					ps_delSpace(domain);
				}
				mysql_free_result(result);
				result = NULL;

				if(customInfo(domain) < 0)
					return -1;

				sprintf(sqlcmd,"update hunting_member set flag='Y' where prefix='%3.3s' and number='%s' and defaultip='%s'",prefix,inner_num,serverip);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
				}
			}
	}
	else {
		if(argv[2])
			strcpy(serverip,argv[2]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd,"update number_manage set bill_type='Y' where phoneid='0%3.3s%4.4s' and defaultip = '%s'",prefix,inner_num,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	/*** domain, sipuri(setdn@domain) ****/

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	//sprintf(commandBuf,"|IIA|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
	sprintf(commandBuf,"|IIA|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIA')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|IIA|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
		sprintf(resPacket,"|RES|1%s%s|",prefix,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIA')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|%s|1%s%s|",num070,prefix,inner_num);
	return 0;
}


/*************************************************************************
*************************************************************************/
int
procDIA()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32],num070[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_domain,0,sizeof(inner_domain));
	memset(num070,0,sizeof(num070));
	memset(prefix,0,sizeof(prefix));
	memset(inner_num,0,sizeof(inner_num));


    if(argv[1] && *argv[1] && strlen(argv[1]) == 8) {
                strncpy(prefix,argv[1]+1,3);
                strcpy(inner_num,argv[1]+4);
	}
        else
		return(errorReturn("Input parameter invalid",__FILE__,__LINE__));

	if(argv[2] && *argv[2] && strlen(argv[2]) > 5)
                strcpy(serverip,argv[2]);
        else
                strcpy(serverip,"211.32.148.82");

		if(PVS == 1) {
			sprintf(sqlcmd, "select 070number,domain from number_manage where phoneid='0%3.3s%4.4s' and defaultip='%s'",prefix,inner_num, serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				printf("\nresPacket:(%s)",resPacket);
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.",sqlcmd);
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(domain, row[1]?row[1]:"ipcc.com");
					ps_delSpace(domain);
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
				}
				mysql_free_result(result);
				result = NULL;
				sprintf(sqlcmd,"update hunting_member set flag='N' where prefix='%3.3s' and number='%s' and defaultip='%s'",prefix,inner_num,serverip);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
				}
			}
		}
	else {
		if(argv[2])
			strcpy(serverip,argv[2]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd,"update number_manage set bill_type='N' where phoneid='0%3.3s%4.4s' and defaultip = '%s'",prefix,inner_num,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	/*** domain, sipuri(setdn@domain) ****/

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(commandBuf,"|DIA|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIA')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DIA|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
		sprintf(resPacket,"|RES|1%s%s|",prefix,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DIA')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|%s|1%s%s|",num070,prefix,inner_num);
	return 0;
}



/*************************************************************************
*************************************************************************/
int
procII1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32],num070[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_domain,0,sizeof(inner_domain));
	memset(num070,0,sizeof(num070));
	memset(prefix,0,sizeof(prefix));
	memset(inner_num,0,sizeof(inner_num));


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(PVS == 1) {
				if(customInfo(domain) < 0)
				return -1;

				sprintf(sqlcmd,"update hunting_member set flag='Y' where prefix='%3.3s' and number='%s' and defaultip='%s'",prefix,inner_num,serverip);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}
	}
	else {
		if(argv[3])
			strcpy(prefix,argv[3]);
		if(argv[4])
			strcpy(serverip,argv[4]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd,"update number_manage set bill_type='Y' where phoneid='0%3.3s%4.4s' and defaultip = '%s'",prefix,inner_num,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	/*** domain, sipuri(setdn@domain) ****/

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	//sprintf(commandBuf,"|II1|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
	sprintf(commandBuf,"|II1|%s@%s|%s|%s|%s|",user,domain,inner_num,prefix,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIA')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|II1|%s@%s|%s|%s|%s|",user,domain,inner_num,prefix,serverip);
		sprintf(resPacket,"|RES|II1|1%s%s|",prefix,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'II1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

		sprintf(resPacket,"|RES|II1|1%s%s|",prefix,inner_num);
	return 0;
}



/*************************************************************************
*************************************************************************/
int
procDI1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32],num070[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_domain,0,sizeof(inner_domain));
	memset(num070,0,sizeof(num070));
	memset(prefix,0,sizeof(prefix));
	memset(inner_num,0,sizeof(inner_num));


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;

			sprintf(sqlcmd,"update hunting_member set flag='N' where prefix='%3.3s' and number='%s' and defaultip='%s'",prefix,inner_num,serverip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}
	}
	else {
		if(argv[3])
			strcpy(prefix,argv[3]);

		if(argv[4])
			strcpy(serverip,argv[4]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	sprintf(sqlcmd,"update number_manage set bill_type='N' where phoneid='0%3.3s%4.4s' and defaultip = '%s'",prefix,inner_num,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	/*** domain, sipuri(setdn@domain) ****/

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	//sprintf(commandBuf,"|II1|1%3.3s%4.4s|%s|",prefix,inner_num,serverip);
	sprintf(commandBuf,"|DI1|%s@%s|%s|%s|%s|",user,domain,inner_num,prefix,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIA')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|DI1|%s@%s|%s|%s|%s|",user,domain,inner_num,prefix,serverip);
		sprintf(resPacket,"|RES|DI1|1%s%s|",prefix,inner_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DI1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

		sprintf(resPacket,"|RES|DI1|1%s%s|",prefix,inner_num);
	return 0;
}


/*************************************************************************
*************************************************************************/
int
procRIA()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],fromtime[128],inner_domain[32],num070[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32], bill_type[2];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(bill_type,0,sizeof(bill_type));
	memset(fromtime,0,sizeof(fromtime));
	memset(num070,0,sizeof(num070));


    if(argv[1] && *argv[1] && strlen(argv[1]) == 8) {
                strncpy(prefix,argv[1]+1,3);
                strcpy(inner_num,argv[1]+4);
	}
        else
		return(errorReturn("Input parameter invalid",__FILE__,__LINE__));

	if(argv[2] && *argv[2] && strlen(argv[2]) > 5)
                strcpy(serverip,argv[2]);
        else
                strcpy(serverip,"211.32.148.82");


				sprintf(sqlcmd, "select bill_type,messenger_ip,070number from number_manage where phoneid = '0%s%s' and defaultip='%s'",prefix,inner_num, serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(bill_type, row[0]?row[0]:"N");
					ps_delSpace(bill_type);
					strcpy(fromtime, row[1]?row[1]:"0");
					ps_delSpace(fromtime);
					strcpy(num070, row[2]?row[2]:"00000000000");
					ps_delSpace(num070);
				}
				mysql_free_result(result);
				result = NULL;
	sprintf(resPacket,"|RES|%s|1%s%s|%s|%s|",num070,prefix,inner_num,bill_type,fromtime);
	return 0;
}


/*************************************************************************
*************************************************************************/
int
procRI1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200], fromtime[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32], bill_type[2];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(bill_type,0,sizeof(bill_type));
	memset(fromtime,0,sizeof(fromtime));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

			if(customInfo(domain) < 0)
				return -1;


				sprintf(sqlcmd, "select bill_type,messenger_ip from number_manage where phoneid = '0%s%s' and defaultip='%s'",prefix,inner_num, serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(bill_type, row[0]?row[0]:"N");
					ps_delSpace(bill_type);
					strcpy(fromtime, row[1]?row[1]:"0");
					ps_delSpace(fromtime);
				}
				mysql_free_result(result);
				result = NULL;
	sprintf(resPacket,"|RES|1%s%s|%s|%s|",prefix,inner_num,bill_type,fromtime);
	return 0;
}


/*************************************************************************
* 변경처리(from boss), Or mannual register			     *
|UUG|kjlee@gw.iyouone.com|3833|lgdacom.onnet21.com|
*************************************************************************/
int
procUUG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128],inner_domain[32];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32],org_num[20],option2[5],class[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_domain,0,sizeof(inner_domain));
	memset(org_num,0,sizeof(org_num));
	memset(inner_digit,0,sizeof(inner_digit));

	strcpy(option2,"N");
	strcpy(class,"");


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(argv[3] && *argv[3])
		strcpy(inner_domain,argv[3]);
	else
		strcpy(inner_domain,"unknown.com");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		/* tmp : 시간 의미 */
		if(PVS == 1) {
				if(customInfo(domain) < 0)
					return -1;

                                printf("\ninner_domain:(%s)",inner_domain);
                                sprintf(sqlcmd, "select prefix from custom_info where domain = '%s'",inner_domain);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
                                        return(-1);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
                                        return -1;
                                }

                                row = mysql_fetch_row( result );
                                if(row) {
                                        strcpy(inner_code, row[0]?row[0]:"000");
                                        ps_delSpace(inner_code);
                                }
                                mysql_free_result(result);
                                result = NULL;



				sprintf(sqlcmd, "select name from sip_buddies where name = '1%3.3s%4.4s' and defaultip='%s'",inner_code,inner_num, serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num > 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				mysql_free_result(result);
				result = NULL;


				printf("\ninner_domain:(%s)",inner_domain);
				sprintf(sqlcmd, "select option2,class from number_manage where substr(phoneid,1,4) = '0%3.3s' and defaultip='%s'",inner_code,serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					;
				}   
						
				else {
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						;
					}
					else {
						row = mysql_fetch_row( result );
						if(row) {
							strcpy(option2, row[0]?row[0]:"N");
							ps_delSpace(option2);
							strcpy(class, row[1]?row[1]:"");
							ps_delSpace(class);
						}
					}
					mysql_free_result(result);
				}

				printf("\ninner_domain:(%s)",inner_domain);
				sprintf(sqlcmd, "select 070number,phoneid from number_manage where phoneid = '0%3.3s%4.4s' and defaultip='%s'",prefix,inner_num,serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(outer_num, row[0]?row[0]:"07000000000");
					ps_delSpace(outer_num);
					strcpy(phoneid, row[1]?row[1]:"00000000");
					ps_delSpace(phoneid);
				}
				mysql_free_result(result);

				printf("\ninner_domain:(%s)",inner_domain);
				sprintf(sqlcmd, "select org_num from number_list where number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(org_num, row[0]?row[0]:"");
					ps_delSpace(org_num);
				}
				mysql_free_result(result);


				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				if(strlen(org_num) > 5) {
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s', fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sipetc3 = 'N' where \
						setdn = '%s'",org_num,inner_num,inner_code,inner_num,inner_domain,inner_code,inner_num,inner_code,inner_num,tmp,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s', fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' ,sipetc3 = 'N' where \
						setdn = '%s'",org_num,inner_num+1,inner_code,inner_num,inner_domain,inner_code,inner_num,inner_code,inner_num,tmp,outer_num);
				}
				else {
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s', fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' ,sipetc3 = 'N' where \
						setdn = '%s'",outer_num,inner_num,inner_code,inner_num,inner_domain,inner_code,inner_num,inner_code,inner_num,tmp,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s', fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' ,sipetc3 = 'N' where \
						setdn = '%s'",outer_num,inner_num+1,inner_code,inner_num,inner_domain,inner_code,inner_num,inner_code,inner_num,tmp,outer_num);
				}

                printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					//return(-1);
				}
	}
	else  {
		    if(argv[4] && *argv[4])
				strcpy(inner_code,argv[4]);
			else
				strcpy(inner_code,"000");
		    if(argv[5] && *argv[5])
				strcpy(prefix,argv[5]);
			else
				strcpy(prefix,"000");
		    if(argv[6] && *argv[6])
				strcpy(phoneid,argv[6]);
			else
				strcpy(phoneid,"00000000");
		    if(argv[7] && *argv[7])
				strcpy(outer_num,argv[7]);
			else
				strcpy(outer_num,"00000000000");
		    if(argv[8] && *argv[8])
				strcpy(serverip,argv[8]);
	}

	sprintf(sqlcmd,"update number_list set domain='%s',admin_flag='N' where number='%s'",inner_domain,outer_num);
	mysql_query(mysql, sqlcmd);


	printf("\ninner_domain:(%s)",inner_domain);
	/*****************************************************************/

	sprintf(sqlcmd,"update number_manage set option2 = '%s',class = '%s', phoneid='0%3.3s%4.4s', extension = '%s',\
	domain='%s' where \
	070number = '%s'",option2,class,inner_code,inner_num,inner_num,inner_domain,outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

        sprintf(sqlcmd,"update sip_buddies set name='1%3.3s%4.4s',\
        username='1%3.3s%4.4s',pickupgroup = '%3.3s', callgroup = '%3.3s',setvar = 'DOMAIN=%s' where \
        callerid = '<%s>' and name = '1%7.7s'",inner_code,inner_num,inner_code,inner_num,inner_code,inner_code,inner_domain ,outer_num,phoneid+1);
        printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

        sprintf(sqlcmd,"update sip_buddies set name='2%3.3s%4.4s',\
        username='2%3.3s%4.4s',pickupgroup = '%3.3s', callgroup = '%3.3s',setvar = 'DOMAIN=%s' where \
        callerid='<%s>' and name = '2%7.7s'",inner_code,inner_num,inner_code,inner_num,inner_code,inner_code,inner_domain, outer_num,phoneid+1);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"DELETE from color_info where  \
	prefix = '%7.7s' and serverip='%s'", phoneid+1,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE forward_number set phoneid = '1%3.3s%4.4s', domain='%s' where  \
	phoneid = '1%7.7s' and (domain='%s' or domain = '')",inner_code,inner_num, inner_domain,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE forward_number set phoneid = '2%3.3s%4.4s', domain='%s' where  \
	phoneid = '2%7.7s' and (domain='%s' or domain='')",inner_code,inner_num,inner_domain, phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE voicemail_users set domain='%s',customer_id = '%3.3s%4.4s', mailbox='%3.3s%4.4s' where  \
	customer_id = '%7.7s' and domain='%s'", inner_domain,inner_code,inner_num,inner_code,inner_num,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE call_member set prefix = '%3.3s', number = '%4.4s' where  \
	prefix = '%3.3s' and number = '%4.4s' and defaultip ='%s'", inner_code,inner_num,prefix,inner_num,serverip);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE hunting_group set prefix='%3.3s',domain='%s' where  \
	number = '%s'", inner_code,inner_domain,outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}
	sprintf(sqlcmd,"UPDATE hunting_member set prefix='%3.3s' where  \
	prefix = '%3.3s' and h_number = '%s'", inner_code,prefix,outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}
	sprintf(sqlcmd,"UPDATE ars_member set prefix='%3.3s' where  \
	prefix = '%3.3s' and h_number = '%s'", inner_code,prefix,outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}


	sprintf(sqlcmd,"UPDATE  black_list set phoneid = '0%3.3s%4.4s',domain='%s' where  \
	substr(phoneid,2,7) = '%7.7s' and domain='%s'",inner_code,inner_num,inner_domain,phoneid+1,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(sqlcmd,"UPDATE  white_list set phoneid = '0%3.3s%4.4s',domain='%s' where  \
	substr(phoneid,2,7) = '%7.7s' and domain='%s'", inner_code,inner_num,inner_domain,phoneid+1,domain);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}

	sprintf(commandBuf,"|UUG|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,inner_domain,inner_code,prefix,phoneid,outer_num,serverip);
    	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UUG|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,inner_num,inner_domain,inner_code,prefix,phoneid,outer_num,serverip);
		sprintf(resPacket,"|RES|UUG userid:(%s)-(%s)_(%s)",user,domain,inner_code);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UUG')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
/****
				if(strcmp(row[1],"sub1")) {
					tmm_DateAddOneDay(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
*/
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    	sprintf(resPacket,"|RES|UUG userid:(%s)-(%s)-(%s)",user,domain,inner_code);
	return 0;
}


/*************************************************************************
* 변경처리(display), Or mannual register			     *
|UDP|kjlee@gw.iyouone.com|3833|displayname|
*************************************************************************/
int
procUDP()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname[32],num070[20];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_digit,0,sizeof(inner_digit));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
                strcpy(tmpname,argv[3]);
        else
                strcpy(tmpname,inner_num);

	memset(num070,0,sizeof(num070));
    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		/* tmp : 시간 의미 */
		if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;
				/*****************************************************************/
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

				//if(*inner_digit == '4')
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s',\
					updatetime='%s',sipetc3='N'  where \
					loginid='1%3.3s%4.4s' and sswip='%s'",tmpname,tmp,prefix,inner_num,serverip);
                    printf("\nsqlcmd : ((((%s))))",sqlcmd);

				/*** domain, sipuri(setdn@domain) ****/
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					//return(-1);
				}
			
			sprintf(resPacket,"|RES|UDP userid:(%s)-(%s)-(%s)-(%s)",user,domain,inner_num,tmpname);
			return 0;       
					
		}
		else 
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
}




/*************************************************************************
* 변경처리(from boss), Or mannual register			     *
|URG|kjlee@gw.iyouone.com|07075993580|0003.2a08.bc0f|3833|
*************************************************************************/
int
procURG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	memset(inner_digit,0,sizeof(inner_digit));


	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        else
                strcpy(outer_num,"07000000000");

    if(argv[3] && *argv[3])
                strcpy(macaddr,argv[3]);
        else
                strcpy(macaddr,"0000:0000:0000");

    if(argv[4] && *argv[4])
                strcpy(inner_num,argv[4]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");



    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
				if(customInfo(domain) < 0)
					return -1;

				/*****************************************************************/

				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				if(*inner_digit == '4')
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sipetc3='N'  where \
					macaddress = '%s'",outer_num,inner_num,outer_num,prefix,inner_num,domain,prefix,\
					inner_num,prefix,inner_num,tmp,macaddr);
				else if(*inner_digit == '3')
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sipetc3='N'  where \
					macaddress = '%s'",outer_num,inner_num+1,outer_num,prefix,inner_num,domain,prefix,\
					inner_num,prefix,inner_num,tmp,macaddr);

                printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					//return(-1);
				}
			
			sprintf(resPacket,"|RES|URG userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
			return 0;       
					
		}
		else 
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
}


/*************************************************************************
* 삭제처리(from boss), Or mannual register			     *
|DDG|kjlee@gw.iyouone.com|07075993580|0003.2a08.bc0f|
*************************************************************************/
int
procDDG()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,typeflag=0;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],forbid_prefix[128];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32];


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/



	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        else
                strcpy(outer_num,"07000000000");

    if(argv[3] && *argv[3])
                strcpy(macaddr,argv[3]);
        else
                strcpy(macaddr,"0000:0000:0000");


	if( PVS ==1) {
		if(!authmysql)
			authinit(AUTH_SERVER);

		sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where macaddress = '%s'",macaddr);

		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
			//return(-1);
		}
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
}


/****************************************************************************************
****************************************************************************************/
int
procPBO()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32];
char    first[5];
char    mid[5];
char    last[5];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    prodcd[21];
char    relprodcd[21];
//char    servicetype[21];
char    sitecode[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    protocol[11];
char    areacode[21];
char    dn[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    crm_flag[5];
char	messenger_ip[20];
int cnt=0;

	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(crm_flag,0,sizeof(crm_flag));
	memset(messenger_ip,0,sizeof(messenger_ip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(PVS == 1) {
	if(argv[2] && *argv[2])
		strcpy(timestamp,argv[2]);
	else
		strcpy(timestamp,"");
	if(argv[3] && *argv[3])
		strcpy(action,argv[3]);
	else
		strcpy(action,"");
	if(argv[4] && *argv[4])
		strcpy(status,argv[4]);
	else
		strcpy(status,"");
	if(argv[5] && *argv[5])
		strcpy(type,argv[5]);
	else
		strcpy(type,"");
	if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else
		strcpy(flag,"");
	if(argv[7] && *argv[7])
		strcpy(effectdate,argv[7]);
	else
		strcpy(effectdate,"");
	if(argv[8] && *argv[8])
		strcpy(subsno,argv[8]);
	else
		strcpy(subsno,"");
	if(argv[9] && *argv[9])
		strcpy(prodcd,argv[9]);
	else
		strcpy(prodcd,"202");
	if(argv[10] && *argv[10])
		strcpy(relprodcd,argv[10]);
	else
		strcpy(relprodcd,"202");
	if(argv[11] && *argv[11])
		strcpy(rellineno,argv[11]);
	else
		strcpy(rellineno,"");

strcpy(rellineno,"");


	if(argv[12] && *argv[12])
		strcpy(servicetype,argv[12]);
	else
		strcpy(servicetype,"");
	if(argv[13] && *argv[13]) {
		if(!strcmp(argv[13],"SI"))
			strcpy(cpetype,"ipphone");
		else
			strcpy(cpetype,"wifi");
	}
	else
		strcpy(cpetype,"");
	if(argv[14] && *argv[14])
		strcpy(macaddr,argv[14]);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(argv[15] && *argv[15])
		strcpy(ipaddress,argv[15]);
	else
		strcpy(ipaddress,"");
	if(argv[16] && *argv[16])
		strcpy(fqdn,argv[16]);
	else
		strcpy(fqdn,"unknown@unknown.unknown");
	strcpy(tmpfqdn,fqdn);


	if(argv[17] && *argv[17])
		strcpy(protocol,argv[17]);
	else
		strcpy(protocol,"");

	if(argv[18] && *argv[18])
		strcpy(areacode,argv[18]);
	else
		strcpy(areacode,"0000");


	if(argv[19] && *argv[19])
		strcpy(dn,argv[19]);
	else
		strcpy(dn,"");
/***
10:58:04 |RBO|000205110436@premium_c_6074.lgdacom.net|2009-09-15 10:57:28:897|미납해소|발신해소|장비등록|0|2009-09-15
10:57:28|1385332|202|201|1916410|Premium|유선IP폰|0011.a96f.c73c|0.0.0.0|000205110436@premium_c_6074.lgdacom.net,16|SIP|0002|000205110436|000205110436,20||128||||007086337741|007086337741||||1111|1|||||0|
<<<<<|RES|RBO userid:(000205110436)-(premium_c_6074.lgdacom.net)-(00205110436)-(update number_list set status = 1
                  where number = '00205110436'):(127.0.0.1)
****/

	memset(display,0,sizeof(display));
	memset(setcid,0,sizeof(setcid));


	if(argv[20] && *argv[20]) {

printf("\n070number:(%s)",argv[20]);
printf("\n070number:(%s)",argv[20]);
		if(strlen(argv[20])==12 && !strncmp(argv[20],"00",2)) {
			strcpy(setdn,argv[20]+1);
			strcpy(outer_num,argv[20]+1);
			strcpy(display,argv[20]+1);
		}
		else  {
			strcpy(setdn,argv[20]);
			strcpy(outer_num,argv[20]);
			strcpy(display,argv[20]);
		}
	}
	else {
		strcpy(setdn,"07000000000");
		strcpy(outer_num,"07000000000");
	}


/***
	if(strcmp(areacode,"0070")) {
printf("\nareacode:(%s)",areacode);
printf("\nareacode:(%s)",areacode);
*/
	if((argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) < 5) || (argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) > 5 && strncmp(argv[28],"00",2)))
		argv[28] = argv[27];

        //if(argv[28] && *argv[28] && strcmp(argv[20],argv[28]) && !strncmp(argv[28],"00",2)) {
	if(argv[28] && *argv[28] && strcmp(argv[20],argv[28])) {
printf("\n070number28:(%s)",argv[28]);
printf("\n070number28:(%s)",argv[28]);
printf("\n070number28:(%s)",argv[28]);
                if(strlen(argv[28])==12 && !strncmp(argv[28],"00",2)) {
                        strcpy(setdn,argv[28]+1);
                        strcpy(outer_num,argv[28]+1);
			if(argv[20] && strlen(argv[20]) > 2) {
				if(!strncmp(argv[20],"000",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
						sprintf(setcid,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
					}
					else  {
						sprintf(display,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
						sprintf(setcid,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
					}

				}
				else if(strncmp(argv[20],"0070",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
						sprintf(setcid,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
					}
					else  {
						sprintf(display,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
						sprintf(setcid,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
					}
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
                }
                else  {
			if(argv[20] && strlen(argv[20]) > 5 && !strncmp(argv[20],"0070",4)) {
				strcpy(setdn,argv[20]+1);
				strcpy(outer_num,argv[20]+1);

				if(!strncmp(argv[20],"000",3)) {
					strcpy(display,argv[20]+2);
					strcpy(setcid,argv[20]+2);
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
			else if(argv[21] && strlen(argv[21]) > 5 && !strncmp(argv[21],"0070",4)) {
				strcpy(setdn,argv[21]+1);
				strcpy(outer_num,argv[21]+1);

				if(!strncmp(argv[21],"000",3)) {
					strcpy(display,argv[21]+2);
					strcpy(setcid,argv[21]+2);
				}
				else {
					strcpy(display,argv[21]+1);
					strcpy(setcid,argv[21]+1);
				}
			}
                }
        }
/***
        else {
                strcpy(setdn,"07000000000");
                strcpy(outer_num,"07000000000");
        }
	}
*/


	if(argv[21] && *argv[21])
		strcpy(addservicelist,argv[21]);
	else
		strcpy(addservicelist,"");


	if(argv[21] && *argv[21])
		strcpy(addservicelist,argv[21]);
	else
		strcpy(addservicelist,"");
	if(argv[22] && *argv[22])
		strcpy(callrestrict,argv[22]);
	else
		strcpy(callrestrict,"");

	/*** 128 ***/
	if(argv[23] && *argv[23])
		strcpy(no_assign_comp,argv[23]);
	else
		strcpy(no_assign_comp,"");
	if(argv[24] && *argv[24])
		strcpy(before_comp,argv[24]);
	else
		strcpy(before_comp,"");
	if(argv[25] && *argv[25])
		strcpy(after_comp,argv[25]);
	else
		strcpy(after_comp,"");
	if(argv[26] && *argv[26])
		strcpy(carry_no,argv[26]);
	else
		strcpy(carry_no,"");

	if(argv[27] && *argv[27])
		strcpy(dacom_no,argv[27]);
	else
		strcpy(dacom_no,"");
	if(argv[28] && *argv[28])
		strcpy(cust_type,argv[28]);
	else
		strcpy(cust_type,"");
	if(argv[29] && *argv[29])
		strcpy(long_comp,argv[29]);
	else
		strcpy(long_comp,"");
	if(argv[30] && *argv[30])
		strcpy(olddn,argv[30]);
	else
		strcpy(olddn,"");
	if(argv[31] && *argv[31])
		strcpy(sippwd,argv[31]);
	else
		strcpy(sippwd,"");
	if(argv[32] && *argv[32])
		strcpy(equip_cnt,argv[32]);
	else
		strcpy(equip_cnt,"");
	if(argv[33] && *argv[33])
		strcpy(old_area_no,argv[33]);
	else
		strcpy(old_area_no,"");
	if(argv[34] && *argv[34])
		strcpy(sip_pkg,argv[34]);
	else
		strcpy(sip_pkg,"");
	if(argv[35] && *argv[35])
		strcpy(cust_grpno,argv[35]);
	else
		strcpy(cust_grpno,"");
	if(argv[36] && *argv[36])
		strcpy(man_job_dt,argv[36]);
	else
		strcpy(man_job_dt,"");
	if(argv[37] && *argv[37])
		strcpy(port_flag,argv[37]);
	else
		strcpy(port_flag,"");



	printf("\n[(%s)[0m",port_flag);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/

    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);


    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);


		if(PVS == 1 && MASTER == 1)  {

/*************************
			if(!strcmp(domain,"lgdacom.net")) {

				memset(tmpdomain,0,sizeof(tmpdomain));
				sprintf(sqlcmd, "select domain from number_list where number='%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}

				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 );
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(tmpdomain, row[0]?row[0]:"unknown.com");
							ps_delSpace(tmpdomain);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
				if(*tmpdomain)
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",tmpdomain);
				else 
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
			}
			else if(*domain == '\0') {
				memset(tmpdomain,0,sizeof(tmpdomain));
				sprintf(sqlcmd, "select domain from number_list where number='%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}

				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 );
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(tmpdomain, row[0]?row[0]:"unknown.com");
							ps_delSpace(tmpdomain);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
				if(*tmpdomain)
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",tmpdomain);
				else 
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);

			}
			else {
				memset(tmpdomain,0,sizeof(tmpdomain));
				sprintf(sqlcmd, "select domain from number_list where number='%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}

				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 );
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(domain, row[0]?row[0]:"unknown.com");
							ps_delSpace(domain);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}

				sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
			}

			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",domain);
					return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(prefix, row[0]?row[0]:"1");
				ps_delSpace(prefix);
				strcpy(serverip, row[1]?row[1]:"1");
				ps_delSpace(serverip);
				strcpy(inner_digit, row[2]?row[2]:"4");
				ps_delSpace(inner_digit);
			}
			mysql_free_result(result);
			result = NULL;
			sprintf(phoneid,"1%s%s",prefix,inner_num);
*********/

			sprintf(sqlcmd, "select crm_flag,messenger_ip,phoneid,defaultip,inner_digit from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
			else  {
							
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
				}
				else {
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(crm_flag, row[0]?row[0]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
						ps_delSpace(messenger_ip);


						strcpy(phoneid, row[2]?row[2]:"---");
						ps_delSpace(phoneid);
						strcpy(serverip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(serverip);
						strcpy(inner_digit, row[4]?row[4]:"4");
						ps_delSpace(inner_digit);
					}
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(prefix,"%3.3s",phoneid+1);
				*phoneid = '1';
			}
		}

	}
	else  {
	    if(argv[2] && *argv[2])
			strcpy(outer_num,argv[2]);
	    if(argv[3] && *argv[3])
			strcpy(status,argv[3]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


printf("\nmacaddr: (%s)",macaddr);
/*******************************
        sprintf(sqlcmd, "select status from number_list where number='%s'",outer_num);
        printf("\nsqlcmd:(%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }

        result = mysql_store_result( mysql );
        if(result ) {
                row_num = mysql_num_rows(result);
                if( row_num == 0 );
                else {
                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(tmp, row[0]?row[0]:"1");
                                ps_delSpace(tmp);
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
***********************************/

	if(!strcmp(status,"발신중지"))
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 6\
		where number = '%s'",outer_num);
	else if(!strcmp(status,"착신중지"))
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 7\
		where number = '%s'",outer_num);
	else
		sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 5\
		where number = '%s'",outer_num);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}


	if(PVS == 1 && MASTER == 1) {
				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,status,phoneid,crm_flag);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = 'S',flag='BOSS' where phoneid='%s' and defaultip = '%s'",phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					if(ret = commandSendUc(commandBuf,"PBO",messenger_ip, 1) < 0) {
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'PBO','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);

						printf("\nsqlcmd:(%s)",sqlcmd1);
						mysql_query(mysql, sqlcmd1);
					}
				}
				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);

				/****추가 ***/
		//nn		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'PBO')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
	return 0;       
}



/*************************************************************************
* (from boss), Or mannual register			     *
10:58:04 |RBO|000205110436@premium_c_6074.lgdacom.net|2009-09-15 10:57:28:897|미납해소|발신해소|장비등록|0|2009-09-15
10:57:28|1385332|202|201|1916410|Premium|유선IP폰|0011.a96f.c73c|0.0.0.0|000205110436@premium_c_6074.lgdacom.net|SIP|0
002|000205110436|000205110436||128||||007086337741|007086337741||||1111|1|||||0|
<<<<<|RES|RBO userid:(000205110436)-(premium_c_6074.lgdacom.net)-(00205110436)-(update number_list set status = 1
                  where number = '00205110436'):(127.0.0.1)
*************************************************************************/
int
procRBO()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i,size=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16];
  char	tmpname1[32];
char    first[5];
char    mid[5];
char    last[5];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    prodcd[21];
char    relprodcd[21];
//char    servicetype[21];
char    sitecode[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    protocol[11];
char    areacode[21];
char    dn[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    crm_flag[5];
char	messenger_ip[20];
int cnt=0;

	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(crm_flag,0,sizeof(crm_flag));
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(PVS == 1) {
	if(argv[2] && *argv[2])
		strcpy(timestamp,argv[2]);
	else
		strcpy(timestamp,"");
	if(argv[3] && *argv[3])
		strcpy(action,argv[3]);
	else
		strcpy(action,"");
	if(argv[4] && *argv[4])
		strcpy(status,argv[4]);
	else
		strcpy(status,"");
	if(argv[5] && *argv[5])
		strcpy(type,argv[5]);
	else
		strcpy(type,"");
	if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else
		strcpy(flag,"");
	if(argv[7] && *argv[7])
		strcpy(effectdate,argv[7]);
	else
		strcpy(effectdate,"");
	if(argv[8] && *argv[8])
		strcpy(subsno,argv[8]);
	else
		strcpy(subsno,"");
	if(argv[9] && *argv[9])
		strcpy(prodcd,argv[9]);
	else
		strcpy(prodcd,"202");
	if(argv[10] && *argv[10])
		strcpy(relprodcd,argv[10]);
	else
		strcpy(relprodcd,"202");
	if(argv[11] && *argv[11])
		strcpy(rellineno,argv[11]);
	else
		strcpy(rellineno,"");

strcpy(rellineno,"");


	if(argv[12] && *argv[12])
		strcpy(servicetype,argv[12]);
	else
		strcpy(servicetype,"");
	if(argv[13] && *argv[13]) {
		if(!strcmp(argv[13],"SI"))
			strcpy(cpetype,"ipphone");
		else
			strcpy(cpetype,"wifi");
	}
	else
		strcpy(cpetype,"");
	if(argv[14] && *argv[14])
		strcpy(macaddr,argv[14]);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(argv[15] && *argv[15])
		strcpy(ipaddress,argv[15]);
	else
		strcpy(ipaddress,"");
	if(argv[16] && *argv[16])
		strcpy(fqdn,argv[16]);
	else
		strcpy(fqdn,"unknown@unknown.unknown");
	strcpy(tmpfqdn,fqdn);


	if(argv[17] && *argv[17])
		strcpy(protocol,argv[17]);
	else
		strcpy(protocol,"");

	if(argv[18] && *argv[18])
		strcpy(areacode,argv[18]);
	else
		strcpy(areacode,"0000");


	if(argv[19] && *argv[19])
		strcpy(dn,argv[19]);
	else
		strcpy(dn,"");
/***
10:58:04 |RBO|000205110436@premium_c_6074.lgdacom.net|2009-09-15 10:57:28:897|미납해소|발신해소|장비등록|0|2009-09-15
10:57:28|1385332|202|201|1916410|Premium|유선IP폰|0011.a96f.c73c|0.0.0.0|000205110436@premium_c_6074.lgdacom.net,16|SIP|0002|000205110436|000205110436,20||128||||007086337741|007086337741||||1111|1|||||0|
<<<<<|RES|RBO userid:(000205110436)-(premium_c_6074.lgdacom.net)-(00205110436)-(update number_list set status = 1
                  where number = '00205110436'):(127.0.0.1)
****/

	memset(display,0,sizeof(display));
	memset(setcid,0,sizeof(setcid));


	if(argv[20] && *argv[20]) {

printf("\n[20]070number:(%s)",argv[20]);
printf("\n[20]070number:(%s)",argv[20]);
		if(strlen(argv[20])==12 && !strncmp(argv[20],"00",2)) {
			strcpy(setdn,argv[20]+1);
			strcpy(outer_num,argv[20]+1);
			strcpy(display,argv[20]+1);
		}
		else  {
			strcpy(setdn,argv[20]);
			strcpy(outer_num,argv[20]);
			strcpy(display,argv[20]);
		}
	}
	else {
		strcpy(setdn,"07000000000");
		strcpy(outer_num,"07000000000");
	}
/***
	if(strcmp(areacode,"0070")) {
*/
printf("\nareacode:(%s)",areacode);
printf("\nareacode:(%s)",areacode);

        //if(argv[28] && *argv[28] && strcmp(argv[20],argv[28]) && strncmp(argv[28],"00",2))
	if((argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) < 5) || (argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) > 5 && strncmp(argv[28],"00",2)))
		argv[28] = argv[27];

        if(argv[28] && *argv[28] && strcmp(argv[20],argv[28])) {
        //if(argv[28] && *argv[28] && strcmp(argv[20],argv[28]) && !strncmp(argv[28],"00",2)) {
printf("\n[28]070number28:(%s)",argv[28]);
printf("\n[28]070number28:(%s)",argv[28]);
printf("\n[28]070number28:(%s)",argv[28]);
                if(strlen(argv[28])==12 && !strncmp(argv[28],"00",2)) {
                        strcpy(setdn,argv[28]+1);
                        strcpy(outer_num,argv[28]+1);
			if(argv[20] && strlen(argv[20]) > 2) {
				if(!strncmp(argv[20],"000",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
						sprintf(setcid,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
					}
					else  {
						sprintf(display,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
						sprintf(setcid,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
					}

				}
				else if(strncmp(argv[20],"0070",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
						sprintf(setcid,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
					}
					else  {
						sprintf(display,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
						sprintf(setcid,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
					}
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
                }
                else  {
                        strcpy(setdn,argv[28]);
                        strcpy(outer_num,argv[28]);
			if(argv[20] && strlen(argv[20]) > 2) {
				if(!strncmp(argv[20],"000",3)) {
					strcpy(display,argv[20]+2);
					strcpy(setcid,argv[20]+2);
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
                }
        }
/***
        else {
                strcpy(setdn,"07000000000");
                strcpy(outer_num,"07000000000");
        }
	}
*/

	if(strlen(setdn) < 5 && strlen(dn) > 5) {
		if(!strncmp(dn,"00",2))
			strcpy(setdn,dn+1);
		else
			strcpy(setdn,dn);
		strcpy(outer_num,setdn);
	}

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);


	if(argv[21] && *argv[21])
		strcpy(addservicelist,argv[21]);
	else
		strcpy(addservicelist,"");
	if(argv[22] && *argv[22])
		strcpy(callrestrict,argv[22]);
	else
		strcpy(callrestrict,"");

	/*** 128 ***/
	if(argv[23] && *argv[23])
		strcpy(no_assign_comp,argv[23]);
	else
		strcpy(no_assign_comp,"");
	if(argv[24] && *argv[24])
		strcpy(before_comp,argv[24]);
	else
		strcpy(before_comp,"");
	if(argv[25] && *argv[25])
		strcpy(after_comp,argv[25]);
	else
		strcpy(after_comp,"");
	if(argv[26] && *argv[26])
		strcpy(carry_no,argv[26]);
	else
		strcpy(carry_no,"");

	if(argv[27] && *argv[27])
		strcpy(dacom_no,argv[27]);
	else
		strcpy(dacom_no,"");
	if(argv[28] && *argv[28])
		strcpy(cust_type,argv[28]);
	else
		strcpy(cust_type,"");
	if(argv[29] && *argv[29])
		strcpy(long_comp,argv[29]);
	else
		strcpy(long_comp,"");
	if(argv[30] && *argv[30])
		strcpy(olddn,argv[30]);
	else
		strcpy(olddn,"");
	if(argv[31] && *argv[31])
		strcpy(sippwd,argv[31]);
	else
		strcpy(sippwd,"");
	if(argv[32] && *argv[32])
		strcpy(equip_cnt,argv[32]);
	else
		strcpy(equip_cnt,"");
	if(argv[33] && *argv[33])
		strcpy(old_area_no,argv[33]);
	else
		strcpy(old_area_no,"");
	if(argv[34] && *argv[34])
		strcpy(sip_pkg,argv[34]);
	else
		strcpy(sip_pkg,"");
	if(argv[35] && *argv[35])
		strcpy(cust_grpno,argv[35]);
	else
		strcpy(cust_grpno,"");
	if(argv[36] && *argv[36])
		strcpy(man_job_dt,argv[36]);
	else
		strcpy(man_job_dt,"");
	if(argv[37] && *argv[37])
		strcpy(port_flag,argv[37]);
	else
		strcpy(port_flag,"");



	printf("\n[(%s)[0m",port_flag);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/

    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    if(strlen(inner_num) != 4)
                strcpy(inner_num,"0000");

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);


		if(PVS == 1 && MASTER == 1)  {
			/***********
			if(!strcmp(domain,"lgdacom.net")) {

				memset(tmpdomain,0,sizeof(tmpdomain));
				sprintf(sqlcmd, "select domain from number_list where number='%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}

				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 );
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(tmpdomain, row[0]?row[0]:"unknown.com");
							ps_delSpace(tmpdomain);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
				if(*tmpdomain)
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",tmpdomain);
				else 
					sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
			}
			else  {

				sprintf(sqlcmd, "select domain from number_list where number='%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}

				result = mysql_store_result( mysql );
				if(result ) {
					row_num = mysql_num_rows(result);
					if( row_num == 0 );
					else {
						row = mysql_fetch_row( result );
						if( row) {
							strcpy(tmpdomain, row[0]?row[0]:"unknown.com");
							ps_delSpace(tmpdomain);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}

				sprintf(sqlcmd, "select prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
			}

			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",domain);
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(prefix, row[0]?row[0]:"1");
				ps_delSpace(prefix);
				strcpy(serverip, row[1]?row[1]:"1");
				ps_delSpace(serverip);
				strcpy(inner_digit, row[2]?row[2]:"4");
				ps_delSpace(inner_digit);
			}
			mysql_free_result(result);
			result = NULL;
			sprintf(phoneid,"1%s%s",prefix,inner_num);
			********/

			sprintf(sqlcmd, "select crm_flag,messenger_ip,phoneid,defaultip,inner_digit from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
			else  {
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",outer_num);
				}
				else {
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(crm_flag, row[0]?row[0]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[1]?row[1]:"127.0.0.1");
						ps_delSpace(messenger_ip);

						strcpy(phoneid, row[2]?row[2]:"---");
						ps_delSpace(phoneid);
						strcpy(serverip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(serverip);
						strcpy(inner_digit, row[4]?row[4]:"4");
						ps_delSpace(inner_digit);
					}
				}
				mysql_free_result(result);
				result = NULL;
				
				sprintf(prefix,"%3.3s",phoneid+1);
				*phoneid = '1';
			}

		}

	}
	else  {
	    if(argv[2] && *argv[2])
			strcpy(outer_num,argv[2]);
	    if(argv[3] && *argv[3])
			strcpy(status,argv[3]);
	}


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


printf("\nmacaddr: (%s)",macaddr);

        sprintf(sqlcmd, "select status from number_list where number='%s'",outer_num);
        printf("\nsqlcmd:(%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|DB_ERR|%s|(%d,%s, %s)",MYOAM_SERVER,ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }

        result = mysql_store_result( mysql );
        if(result ) {
                row_num = mysql_num_rows(result);
                if( row_num == 0 );
                else {
                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(tmp, row[0]?row[0]:"1");
                                ps_delSpace(tmp);
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }


	if(!strcmp(status,"발신해소")) {
		if(*tmp == '5') {
			sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 7\
			where number = '%s'",outer_num);
		}
		else 
			sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 1\
			where number = '%s'",outer_num);
	}
	else if(!strcmp(status,"착신해소")) {
		if(*tmp == '5')
			sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 6\
			where number = '%s'",outer_num);
		else 
			sprintf(sqlcmd,"update number_list set lastdate=NOW(),status = 1\
			where number = '%s'",outer_num);
	}
	else
		sprintf(sqlcmd,"update number_list set status = 1\
		,lastdate=NOW() where number = '%s'",outer_num);

	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_list!14(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,status,phoneid,crm_flag);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					if(ret = commandSendUc(commandBuf,"RBO",messenger_ip, 1) < 0) {
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);

						printf("\nsqlcmd:(%s)",sqlcmd1);
						mysql_query(mysql, sqlcmd1);
					}
				}

				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'RBO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|",user,domain,outer_num,status,phoneid);
				sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'RBO')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

	sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
	return 0;       
}

/******************************************************************************************/
/******************************************************************************************/
int
procIIB()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, row_num,i,size=0,looptry=0, sd=0,ret=0, tryCnt=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],num070[20],macaddr[20],phone_type[6],phone_name[16],cust_name[64];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char	curr_time[20];
int	yy,mm,dd,hour,min,sec;
struct  tm      *tp;
long	t;

       t=time(0);
       tp = (struct tm *) localtime(&t);

        yy  = tp->tm_year+1900; mm  = tp->tm_mon+1; dd  = tp->tm_mday;
        hour= tp->tm_hour; min = tp->tm_min; sec = tp->tm_sec;

	sprintf(curr_time,"%04d-%02d-%02d %02d:%02d:%02d",yy,mm,dd,hour,min,sec);

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	memset(macaddr,0,sizeof(macaddr));

	if(argv[2] && *argv[2])
		strcpy(macaddr,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(cust_name,argv[3]);

/*
|IBO|007040063557@premium_c_30611.lgdacom.net|2010-11-02 08:51:29:424|등록|개통|장비등록|0|2010-11-02 08:51:29|
1925883|202|201|2253871|Premium|유선IP폰|0011.a98a.440e||007040063557@premium_c_30611.lgdacom.net|SIP|0070|007040063557|
007040063557||128|||||007040063557||||1111|1|||||0|A1DG346000021|(주)신우아이앤씨|007040063557@premium_c_30611.lgdacom.n
et|
*/

	sprintf(sqlcmd,"|IBO|0%s@%s|%s|등록|개통|장비등록|0|%s|%d|202|201|%d|Premium|유선폰|%s||0%s@%s|SIP|0070|0%s|0%s||128|||||0%s||||1111|1|||||0||%s||1111|",user,domain,curr_time,curr_time,time(0),time(0)+10,macaddr,user,domain,user,user,user,cust_name);
	printf("\nsqlcmd:(%s)",sqlcmd);

	sd = tcpConnect("127.0.0.1", 3341);
        if(sd > 0) {
                if((ret = tcpWrite(sd, sqlcmd,strlen(sqlcmd))) == 0) {
            printf("\nWrite data : (%s)",sqlcmd);
                        memset(sqlcmd,0,sizeof(sqlcmd));
                        while((ret= tcpRead(sd, sqlcmd)) < 0 && tryCnt ++ < 3);
                        if(ret < 0 ) {
                                close(sd);
                                printf("\nread err occured!!!(3341)");
                        }
                        printf("\nCommand Result : [5m%s, %s[0m",sqlcmd,"127.0.0.1");
                        close(sd);
                }
                close(sd);
        }
        else {
                printf("\n[7mconnect err occured!!!(%s)[0m","127.0.0.1");
        }

	sprintf(resPacket,"|RES|%s",serverip);
	return 0;
}

		

/*************************************************************************
* 개통처리(from boss), Or mannual register			     *
16:52:02 |IBO|003104390717@premium_c_4653.lgdacom.net|2009-05-26 16:51:57:943|등록|개통|장비|0|2009-05-26 16:51:57|133
0650|202|201|1858232|SIP|유선IP폰|0011.a96e.7a6a|0.0.0.0|003104390717@premium_c_4653.lgdacom.net|SIP|0031|003104390717
|003104390717||128||1-KT|1-KT|H-데이콤(인터넷)|007082149305|007082149305||||1111||||||0|
<<<<<|ERR|(03104390717) is not exist!!!:(211.32.148.90)
16:53:01 |IBO|007082774384@premium_c_4454.lgdacom.net|2009-05-26 16:52:30:966|등록|개통|장비|0|2009-05-26 16:52:30|132
7534|202|201|1855831|SIP|유선IP폰|0011.a96e.c798|0.0.0.0|007082774384@premium_c_4454.lgdacom.net|SIP|0070|007082774384
|007082774384||128||||||007082774384||||1111||||||0|
*************************************************************************/

int
procIBO()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,fields_num,cpid,number_manage_exist = 0;
  int   test=0, ret, row_num,i,size=0,looptry=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    prefix_num[200],tmpip[20];
  char    sqlcmd[512],number[20],macaddr[20],phone_type[6],phone_name[16],tmpmacaddr[20];
  char	tmpname1[32];

char    timestamp[41];
char    action[11];
char    status[11];
char    type[31];
char    flag[11];
char    failcause[51];
char    effectdate[21];
char    subsno[21];
char    prodcd[21];
char    relprodcd[21];
//char    servicetype[21];
char    sitecode[21];
char    mtamngno[21];
char    ipaddress[21];
char    fqdn[64];
char    protocol[11];
char    etc[20];
char    dn[21];
char    setdn[21];
char    addservicelist[64];
char    callrestrict[64];
char    sipid[21];
char    sippwd[21];
char    trcode[21];
char    chg_flag[5];
char    loginid[21];
char    updatetime[21];
char    no_assign_comp[31];
char    before_comp[31];
char    after_comp[31];
char    carry_no[21];
char    dacom_no[21];
char    cust_type[21];
char    long_comp[21];
char    prov_flag[11];
char    prov_failcause[31];
char    prov_updatetime[21];
char    rcp_no[31];
char    trt_seq[31];
char    man_job_yn[31];
char    man_job_dt[31];
char    olddn[31];
char    portnum[31];
char    totalportnum[31];
char    oldfqdn[64];
char    oldsipid[21];
char    oldsippwd[21];
char    oldportnum[21];
char    equip_cnt[21];
char    sswno[21];
char    old_area_no[21];
char    sip_pkg[21];
char    cust_grpno[21];
char    hunt_no[21];
char    port_flag[21];
char    first[5];
char    mid[5];
char    record[11];
char    last[5];
char    sn[64];
char    tmpsipid[64];
char    order_rid[64];
char    order_crm[64];
char	md5_passwd[64];
char	oldmessenger_ip[20];
char	oldorg_num[20];
char	oldname[64];
char	oldmanner_flag[5];
char	olddomain[64];
int cnt=0;
	unsigned char	*tmpP=NULL;


	memset(order_rid,0,sizeof(order_rid));
	memset(record,0,sizeof(record));
	memset(before_num,0,sizeof(before_num));
	memset(order_record,0,sizeof(order_record));
	memset(order_crm,0,sizeof(order_crm));
	memset(first,0,sizeof(first));
	memset(mid,0,sizeof(mid));
	memset(last,0,sizeof(last));
	memset(tmpmacaddr,0,sizeof(tmpmacaddr));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(cust_name,0,sizeof(cust_name));
	memset(sn,0,sizeof(sn));
	memset(etc,0,sizeof(etc));
	memset(letter_flag,0,sizeof(letter_flag));
	memset(old_sipdomain,0,sizeof(old_sipdomain));
	memset(old_sip070number,0,sizeof(old_sip070number));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(oldmessenger_ip,0,sizeof(oldmessenger_ip));
	memset(oldorg_num,0,sizeof(oldorg_num));
	memset(oldname,0,sizeof(oldname));
	memset(oldmanner_flag,0,sizeof(oldmanner_flag));
	memset(cpetype,0,sizeof(cpetype));
	memset(commandBuf,0,sizeof(commandBuf));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(timestamp,argv[2]);
	else
		strcpy(timestamp,"");
	if(argv[3] && *argv[3])
		strcpy(action,argv[3]);
	else
		strcpy(action,"");


	strcpy(gAction,action);
	if(argv[4] && *argv[4]) {
		strcpy(status,argv[4]);
		strcpy(req_status,argv[4]);
	}
	else
		strcpy(status,"");
	if(argv[5] && *argv[5])
		strcpy(type,argv[5]);
	else
		strcpy(type,"");
	if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else
		strcpy(flag,"");
	if(argv[7] && *argv[7])
		strcpy(effectdate,argv[7]);
	else
		strcpy(effectdate,"");
	if(argv[8] && *argv[8])
		strcpy(subsno,argv[8]);
	else
		strcpy(subsno,"");
	if(argv[9] && *argv[9])
		strcpy(prodcd,argv[9]);
	else
		strcpy(prodcd,"202");
	if(argv[10] && *argv[10])
		strcpy(relprodcd,argv[10]);
	else
		strcpy(relprodcd,"202");
	if(argv[11] && *argv[11]) {
		strcpy(rellineno,argv[11]);
		strcpy(lineno,argv[11]);
	}
	else {
		strcpy(rellineno,"");
		strcpy(lineno,"");
	}

	if(argv[12] && *argv[12])
		strcpy(servicetype,argv[12]);
	else
		strcpy(servicetype,"");
	if(argv[13] && *argv[13]) {
		strcpy(cpetype,argv[13]);
	}
	else
		strcpy(cpetype,"");
	if(argv[14] && *argv[14])
		strcpy(macaddr,argv[14]);
	else
		strcpy(macaddr,"0000.0000.0000");

	if(argv[15] && *argv[15])
		strcpy(ipaddress,argv[15]);
	else
		strcpy(ipaddress,"");
	if(argv[16] && *argv[16])
		strcpy(fqdn,argv[16]);
	else
		strcpy(fqdn,"unknown@unknown.unknown");
	if(fqdn)
			strcpy(tmpfqdn,fqdn);
	if(strchr(tmpfqdn,'@')) {
		char *tmpP;
		tmpP =(char *)strtok(tmpfqdn,"@\n;");
		if(tmpP)
				strcpy(user,tmpP);
		else {
				sprintf(resPacket, "|ERR|(%s) data format error!!!");
				return -1;
		}
printf("\ntmpP:(%s)",tmpP);
		tmpP = (char *)strtok(NULL,"@\n;");
printf("\ntmpP:(%s)",tmpP?tmpP:"~~~");
printf("\ntmpP:(%s)",tmpP?tmpP:"~~~");
printf("\ntmpP:(%s)",tmpP?tmpP:"~~~");

		if(tmpP)
				strcpy(domain,tmpP);
/***
		else {
				sprintf(resPacket, "|ERR|data format error!!!");
				return -1;
		}
*/
		if(!strcmp(domain,"premium_c_49919.lgdacom.net"))
			strcpy(domain,"premium_c_32893.lgdacom.net");
		if(!strcmp(domain,"premium_c_50145.lgdacom.net"))
			strcpy(domain,"premium_c_21334.lgdacom.net");
	}

printf("\n222222222222222222");
printf("\n222222222222222222");
	if(argv[17] && *argv[17])
		strcpy(protocol,argv[17]);
	else
		strcpy(protocol,"");

	if(argv[18] && *argv[18])
		strcpy(areacode,argv[18]);
	else
		strcpy(areacode,"0070");


	if(argv[19] && *argv[19])
		strcpy(dn,argv[19]);
	else
		strcpy(dn,"");


	strcpy(display,"");
	strcpy(setcid,"");
	if(argv[20] && *argv[20]) {

printf("\n070number:(%s)",argv[20]);
printf("\n070number:(%s)",argv[20]);
		if(strlen(argv[20])==12 && !strncmp(argv[20],"00",2)) {
			strcpy(setdn,argv[20]+1);
			strcpy(outer_num,argv[20]+1);
			strcpy(display,argv[20]+1);
		}
		else  {
			strcpy(setdn,argv[20]);
			strcpy(outer_num,argv[20]);
			strcpy(display,argv[20]);
		}
	}
	else {
		strcpy(setdn,"07000000000");
		strcpy(outer_num,"07000000000");
	}
/***
	if(strcmp(areacode,"0070")) {
printf("\nareacode:(%s)",areacode);
printf("\nareacode:(%s)",areacode);
*/
	if(argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) < 5)
		argv[28] = argv[27];

printf("\n0000000000070number28:(%s)",argv[28]);
printf("\n0000000000070number28:(%s)",argv[28]);
printf("\n0000000000070number28:(%s)",argv[28]);
	if((argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) < 5) || (argv[27] && strlen(argv[27]) > 5 && strlen(argv[28]) > 5 && strncmp(argv[28],"00",2)))
		argv[28] = argv[27];
printf("\n0000000000070number28:(%s)",argv[28]);
printf("\n0000000000070number28:(%s)",argv[28]);
printf("\n0000000000070number28:(%s)",argv[28]);

        //if(argv[28] && *argv[28] && strcmp(argv[20],argv[28]) && !strncmp(argv[28],"00",2)) {
	 if(argv[28] && *argv[28] && strcmp(argv[20],argv[28])) {
printf("\n:::::::::::::070number28:(%s)",argv[28]);
printf("\n:::::::::::::070number28:(%s)",argv[28]);
printf("\n:::::::::::::070number28:(%s)",argv[28]);
                if(strlen(argv[28])==12 && !strncmp(argv[28],"00",2)) {
                        strcpy(setdn,argv[28]+1);
                        strcpy(outer_num,argv[28]+1);
			if(argv[20] && strlen(argv[20]) > 2) {
				if(!strncmp(argv[20],"000",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
						sprintf(setcid,"%2.2s%3.3s%4.4s",argv[20]+2,mid+1,last);
					}
					else  {
						sprintf(display,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
						sprintf(setcid,"%2.2s%4.4s%4.4s",argv[20]+2,mid,last);
					}

				}
				else if(strncmp(argv[20],"0070",3)) {
					strncpy(mid,argv[20]+4,4);
					strncpy(last,argv[20]+8,4);
					if(*mid == '0') {
						sprintf(display,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
						sprintf(setcid,"%3.3s%3.3s%4.4s",argv[20]+1,mid+1,last);
					}
					else  {
						sprintf(display,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
						sprintf(setcid,"%3.3s%4.4s%4.4s",argv[20]+1,mid,last);
					}
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
                }
                else  {
printf("\n1111111111:(%s)",argv[28]);
printf("\n1111111111:(%s)",argv[28]);
printf("\n1111111111:(%s)",argv[28]);
printf("\n1111111111:(%s)",argv[28]);
printf("\n1111111111:(%s)",argv[28]);
                        strcpy(setdn,argv[28]);
                        strcpy(outer_num,argv[28]);
			if(argv[20] && strlen(argv[20]) > 2) {
				if(!strncmp(argv[20],"000",3)) {
					strcpy(display,argv[20]+2);
					strcpy(setcid,argv[20]+2);
				}
				else {
					strcpy(display,argv[20]+1);
					strcpy(setcid,argv[20]+1);
				}
			}
                }
        }
/***
        else {
                strcpy(setdn,"07000000000");
                strcpy(outer_num,"07000000000");
        }
	}
*/

	if(argv[21] && *argv[21])
		strcpy(addservicelist,argv[21]);
	else
		strcpy(addservicelist,"");

        memset(tmprid,0,sizeof(tmprid));
        memset(tmprid1,0,sizeof(tmprid1));

	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");

	if(strlen(addservicelist) >= 4) {

printf("\n[5maddservicelist:(%s)[0m",addservicelist);
printf("\n[5maddservicelist:(%s)[0m",addservicelist);
		char *tmpP=NULL, *tmpP1=NULL, *tmpP2=NULL, *tmpP3=NULL;
                tmpP=(char *) strtok(addservicelist,":;\0");
		if(tmpP) {
			do {
printf("\n[7maddservice:(%s)[0m",tmpP);
				/* letter */
				if(!strncmp(tmpP,"7076",4))
					strcpy(letter_flag,"Y");
				/* crm_flag */
				else if(!strncmp(tmpP,"7096",4)) {
					strcpy(crm_flag,"A");
				}
				else if(!strncmp(tmpP,"7097",4)) {
					strcpy(crm_flag,"B");
				}
				/* rid */
				else if(!strncmp(tmpP,"8888",4)) {
					strcpy(order_rid,tmpP);
				}
				/* record_type */
				else if(!strncmp(tmpP,"7092",4)) {
					strcpy(record_flag,"B");
				}
				else if(!strncmp(tmpP,"7093",4)) {
					strcpy(record_flag,"C");
				}
				/* 번호 변경*/
				else if(!strncmp(tmpP,"8302",4)) {
					strcpy(before_num,tmpP);
				}
			}
			while(tmpP=(char *) strtok(NULL,":;\0"));
		}
	}

/**
	if(strlen(order_record) > 4){
		char *tmpP;
		char	tmporder[20];

		memset(tmporder,0,sizeof(tmporder));
		
                strcpy(tmporder,order_record+5);
                tmpP=(char *) strtok(tmporder,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(order_record,tmpP);
	}

	if(strlen(order_crm) > 4){
		char *tmpP;
		char	tmpcrm[20];

		memset(tmpcrm,0,sizeof(tmpcrm));
		
                strcpy(tmpcrm,order_crm+5);
                tmpP=(char *) strtok(tmpcrm,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(order_crm,tmpP);
	}
	strcpy(crm_flag,"B");
*/

        if(strlen(before_num) > 4){
                char *tmpP;
                char    tmpnum[20];
		char	first[10], mod[10],last[10];

                memset(tmpnum,0,sizeof(tmpnum));
                memset(first,0,sizeof(first));
                memset(mid,0,sizeof(mid));
                memset(last,0,sizeof(last));

                strcpy(tmpnum,before_num+5);
                tmpP=(char *) strtok(tmpnum,");\0");
                if(tmpP && strlen(tmpP) > 0)
                        strcpy(before_num,tmpP);

		if(strlen(before_num) == 12) {
			strncpy(first,before_num,4);
			strncpy(mid,before_num+4,4);
			strncpy(last,before_num+8,4);

			if(!strncmp(first,"000", 3)) {
				sprintf(before_num,"%s%s%s",first+2,*mid == '0' ? mid+1: mid, last);
			}
			else {
				sprintf(before_num,"%s%s%s",first+1,*mid == '0' ? mid+1: mid, last);
			}
		}
        }


printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mletter_flag:(%s)[0m",letter_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);
printf("\n[5mcrm_flag:(%s)[0m",crm_flag);

        if(strlen(order_rid) > 10 && !strncmp(order_rid,"8888(",5)) {
		char *tmpP;
                strcpy(tmprid,order_rid+5);
                tmpP=(char *) strtok(tmprid,");\0");
                if(tmpP && strlen(tmpP) > 5) {
                        strcpy(tmprid,tmpP);

                if(strlen(tmprid)==12 && !strncmp(tmprid,"00",2)) {
                        strcpy(tmprid1,tmprid);
                                if(!strncmp(tmprid,"0000",4)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                                sprintf(tmprid1,"%3.3s%4.4s",mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                                sprintf(tmprid1,"%4.4s%4.4s",mid,last);
                                        }

                                }
                                else if(!strncmp(tmprid,"000",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                                sprintf(tmprid1,"%2.2s%3.3s%4.4s",tmprid+2,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                                sprintf(tmprid1,"%2.2s%4.4s%4.4s",tmprid+2,mid,last);
                                        }

                                }
                                else if(strncmp(tmprid,"0070",3)) {
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                                sprintf(tmprid1,"%3.3s%3.3s%4.4s",tmprid+1,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                                sprintf(tmprid1,"%3.3s%4.4s%4.4s",tmprid+1,mid,last);
                                        }
                                }
                                else {
                                        strcpy(tmprid1,tmprid+1);
                                        strcpy(tmprid1,tmprid+1);
                                }
                        }
			else if(strlen(tmprid)==12 && (!strncmp(tmprid,"0505",4) || !strncmp(tmprid,"0503",4))) {
				strcpy(tmprid1,tmprid);
                                        strncpy(mid,tmprid+4,4);
                                        strncpy(last,tmprid+8,4);
                                        if(*mid == '0') {
                                                sprintf(tmprid1,"%4.4s%3.3s%4.4s",tmprid,mid+1,last);
                                        }
                                        else  {
                                                sprintf(tmprid1,"%4.4s%4.4s%4.4s",tmprid,mid,last);
                                        }
			}
                        else
                                strcpy(tmprid1,tmprid);
                }
                else
                        strcpy(tmprid,"");
	}

	if(argv[22] && *argv[22])
		strcpy(callrestrict,argv[22]);
	else
		strcpy(callrestrict,"");
	if(argv[23] && *argv[23])
		strcpy(no_assign_comp,argv[23]);
	else
		strcpy(no_assign_comp,"");
	if(argv[24] && *argv[24])
		strcpy(before_comp,argv[24]);
	else
		strcpy(before_comp,"");
	if(argv[25] && *argv[25])
		strcpy(after_comp,argv[25]);
	else
		strcpy(after_comp,"");
	if(argv[26] && *argv[26]) 
		strcpy(carry_no,argv[26]);
	else
		strcpy(carry_no,"");

	if(argv[27] && *argv[27])
		strcpy(dacom_no,argv[27]);
	else
		strcpy(dacom_no,"");
	if(argv[28] && *argv[28])
		strcpy(cust_type,argv[28]);
	else
		strcpy(cust_type,"");
	if(argv[29] && *argv[29])
		strcpy(long_comp,argv[29]);
	else
		strcpy(long_comp,"");
	if(argv[30] && *argv[30])
		strcpy(olddn,argv[30]);
	else
		strcpy(olddn,"");
	if(argv[31] && *argv[31])
		strcpy(sippwd,argv[31]);
	else
		strcpy(sippwd,"1111");
	if(argv[32] && *argv[32])
		strcpy(equip_cnt,argv[32]);
	else
		strcpy(equip_cnt,"");
	if(argv[33] && *argv[33])
		strcpy(old_area_no,argv[33]);
	else
		strcpy(old_area_no,"");
	if(argv[34] && *argv[34])
		strcpy(sip_pkg,argv[34]);
	else
		strcpy(sip_pkg,"");
	if(argv[35] && *argv[35])
		strcpy(cust_grpno,argv[35]);
	else
		strcpy(cust_grpno,"");
	if(argv[36] && *argv[36])
		strcpy(man_job_dt,argv[36]);
	else
		strcpy(man_job_dt,"");
	if(argv[37] && *argv[37])
		strcpy(port_flag,argv[37]);
	else
		strcpy(port_flag,"");
	if(argv[38] && *argv[38])
		strcpy(sn,argv[38]);
	else
		strcpy(sn,"");

	case_lower(sn);

	if(argv[39] && *argv[39])
		strcpy(cust_name,argv[39]);
	else
		strcpy(cust_name,"");

	if(argv[40] && *argv[40])
		strcpy(tmpsipid,argv[40]);
	else
		strcpy(tmpsipid,"");

	if(strlen(tmpsipid) > 10 && strchr(tmpsipid,'@')) {
		char	oldnumber[20];
		char	*tmpP=NULL;
		
		memset(oldnumber,0,sizeof(oldnumber));
		memset(olddomain,0,sizeof(olddomain));

		tmpP = (char *) strtok(tmpsipid,"@\0");
		if(tmpP) {
			strcpy(oldnumber,tmpP);
			tmpP = (char *) strtok(NULL,"@\0");
			if(tmpP) {
					strcpy(olddomain,tmpP);
			}
		}
		if(strlen(oldnumber) > 8 && !strncmp(oldnumber,"0070",4))
			strcpy(old_sip070number,oldnumber+1);
		else
			strcpy(old_sip070number,"");

		if(strlen(olddomain) > 4)
			strcpy(old_sipdomain,olddomain);
		else
			strcpy(old_sipdomain,"");
	}

	if(*domain == '\0' && *old_sipdomain)
		strcpy(domain,old_sipdomain);

	if(!strncmp(areacode,"000",3))
		strcpy(areacode,areacode+2);
	else if(!strncmp(areacode,"00",2))
		strcpy(areacode,areacode+1);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
printf("\n[7m[5mareacode:(%s)[0m[0m",areacode);
	if(!strcmp(areacode,"070"))
		strcpy(areacode,"");

	memset(ipaddress,0,sizeof(ipaddress));
	memset(serverip,0,sizeof(serverip));

	strcpy(serverip,"127.0.0.1");

	printf("\n[(%s)[0m",port_flag);

	printf("\ndn:(%s)",dn);
	printf("\nsetdn:(%s)",setdn);
	printf("\nsetcid:(%s)",setcid);
	printf("\nouternum:(%s)",outer_num);
	if(strlen(setdn) < 5 && strlen(dn) > 5) {
		if(!strncmp(dn,"00",2))
			strcpy(setdn,dn+1);
		else
			strcpy(setdn,dn);
		strcpy(outer_num,setdn);
	}

	printf("\n============================>dn:(%s)",dn);
	printf("\n============================>setdn:(%s)",setdn);
/***
timestamp, action, status, type, flag, effectdate, subsno, pr
odcd, relprodcd, rellineno, servicetype, cpetype, macaddress, ipaddress, fqdn, protocol, areacode, d
n, setdn, addservicelist, callrestrict, no_assign_comp, before_comp, after_comp, carry_no, dacom_no,
 cust_type, long_comp, olddn, sippwd, equip_cnt, old_area_no, sip_pkg, cust_grpno, man_job_dt, port_
flag
*/
	domain_chg = 0;
	svc_chg = 0;

    //srand(getpid());
/***
    memset(sip_passwd,0,sizeof(sip_passwd));
    int_sip_passwd = 1000000+getpid() + time(0);
    int_sip_passwd  = int_sip_passwd % 1000000;
    sprintf(sip_passwd,"%06d",int_sip_passwd);
*/
    sprintf(sip_passwd,"%s",sippwd);


//시험용 번호비번은 "1111"
	if(argv[41] && !strcmp(argv[41],"1111"))
		strcpy(sip_passwd,"1111");
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);

	//strcpy(sip_passwd,"1111");

printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
printf("[5m[7m............sip_passwd : (%s)[0m[0m\n",sip_passwd);
    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	if(*setcid && strlen(setcid) > 6) {
	    strncpy(inner_num,setcid+(strlen(setcid)-4),4);
		strcpy(display,setcid);
	}

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);


	row_num= 0;
	sprintf(sqlcmd, "select phoneid,domain from number_manage \
	where  070number = '%s'",outer_num);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   
	else  {
		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		} 
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 )
				number_manage_exist = 0;
			else  {
				row = mysql_fetch_row(result);
				strcpy(olddomain, row[1]?row[1]:"~~~");
				ps_delSpace(olddomain);
				number_manage_exist = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
/***
*/


	row_num= 0;
	sprintf(sqlcmd, "select serverip,chg_flag,domain,status,org_num,svc_kind from number_list \
	where  number = '%s'",outer_num);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;

		//번호 이동 처리(자사 -> 타사)
		if(strlen(before_num) > 4 && !strcmp(argv[0],"IBO")) {
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = before_num;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
				return -1;
			}
			sprintf(resPacket,"|RES|127.0.0.1|");
		}
	}
	else {
		char	sqlcmd1[512];
		char oldphoneid[10],oldcid[20],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5];
		char	oldinner_digit[5];
		char	oldpasswd[256];
		int	row_num_1;

		/** Uplus -> 타사 */
		if(strlen(before_num) > 4 && !strcmp(argv[0],"DBO")) {
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = before_num;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
				return -1;
			}
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|127.0.0.1|");
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row(result);
			strcpy(ipaddress, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(ipaddress);
			strcpy(chg_flag, row[1]?row[1]:"0");
			ps_delSpace(chg_flag);
			strcpy(oldorg_num, row[4]?row[4]:"");
			ps_delSpace(oldorg_num);
			if(row[5] && !strncmp(row[5],"RC",2))
				strcpy(sip_passwd,"1111");
			//PC71호기[112.223.57.12]
			//if(!strcmp(ipaddress,"112.223.57.11") || !strcmp(ipaddress,"112.223.57.12") || !strcmp(ipaddress,"112.223.57.16") || !strcmp(ipaddress,"112.223.57.17") || !strcmp(ipaddress,"112.223.57.21") || !strcmp(ipaddress,"112.223.57.22") || !strcmp(ipaddress,"112.223.57.31") || !strcmp(ipaddress,"112.223.57.32")) {
			/***
			if(!strcmp(ipaddress,"112.223.57")) {
			    int_sip_passwd = 1000000+getpid() + time(0);
			    int_sip_passwd  = int_sip_passwd % 1000000;
			    sprintf(sip_passwd,"%06d",int_sip_passwd);
			}
			*/
				if(row[3] && *row[3] == '1'  &&  number_manage_exist == 0 && !strcmp(argv[0],"IBO")) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
				}


printf("\n[5m[7m (%s) (%s) (%s)-domain(%s)[0m[0m",row[1],row[2],row[3],domain);
printf("\n[5m[7m (%s) (%s) (%s)-domain(%s)[0m[0m",row[1],row[2],row[3],domain);
printf("\n[5m[7m (%s) (%s) (%s)-domain(%s)[0m[0m",row[1],row[2],row[3],domain);

				if(row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7) && strcmp(argv[0],"DBO")) {
					mysql_free_result(result);
					result = NULL;
					sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type=1,arsflag='N',admin_flag='N' where number = '%s'",outer_num);
					ret = mysql_query(mysql, sqlcmd);
					goto DOMAIN_UPDATE;
				}
				else if(!strcmp(argv[0],"IBO") && row[3] && *row[3] == '1' && row[2] && strlen(row[2]) > 3 && !strcasecmp(row[2],domain) && !strncasecmp(row[2],"premium",7)) {
				mysql_free_result(result);
				result = NULL;

				sprintf(sqlcmd, "select phoneid, cid,letter_flag,record_flag,crm_flag,defaultip,messenger_ip,inner_digit,passwd,name,manner_flag,record from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					goto BEGIN;
				}   
				else {
						result = mysql_store_result( mysql );
						if(!result ) 
						{
							goto BEGIN;
						}   
										
						else {
							row_num_1 = mysql_num_rows(result);
							if( row_num_1 == 0 ) 
							{
								mysql_free_result(result);
								result = NULL;
								goto BEGIN;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
/**
phoneid,cid,letter_flag,record_flag,crm_flag
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
*/
									strcpy(oldphoneid, row[0]?row[0]:"");
									*oldphoneid = '1';
									ps_delSpace(oldphoneid);
									strcpy(oldcid, row[1]?row[1]:"");
									ps_delSpace(oldcid);
									strcpy(oldletter_flag, row[2]?row[2]:"N");
									ps_delSpace(oldletter_flag);
									strcpy(oldrecord_flag, row[3]?row[3]:"A");
									ps_delSpace(oldrecord_flag);
									strcpy(oldcrm_flag, row[4]?row[4]:"");
									ps_delSpace(oldcrm_flag);
									strcpy(serverip, row[5]?row[5]:"");
									ps_delSpace(serverip);
									strcpy(oldmessenger_ip, row[6]?row[6]:"127.0.0.1");
									ps_delSpace(oldmessenger_ip);
									strcpy(oldinner_digit, row[7]?row[7]:"4");
									ps_delSpace(oldinner_digit);
									strcpy(oldpasswd, row[8]?row[8]:"1111");
									ps_delSpace(oldpasswd);
									strcpy(oldname, row[9]?row[9]:"");
									ps_delSpace(oldname);
									strcpy(oldmanner_flag, row[10]?row[10]:"N");
									ps_delSpace(oldmanner_flag);
									strcpy(record, row[11]?row[11]:"");
									ps_delSpace(record);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}

						//Not DCS_PHONE_AUTH
						{
							if(!authmysql)
								authinit(AUTH_SERVER);

							sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
							if( ret = mysql_query(authmysql, sqlcmd) ) {
								goto BEGIN;
							}   
							else  {
								result = mysql_store_result(authmysql);
								if(!result ) {
									goto BEGIN;
								} 
								else {
									row_num = mysql_num_rows(result);
									if( row_num == 0 )
										goto BEGIN;
									mysql_free_result(result);
									result = NULL;
								}
							}
						}

						// BMLINK 20171030 MODIFY
						//if(strcmp(tmprid1,oldcid) && strlen(tmprid1) > 5) {
						if( strcmp(tmprid1,oldcid) ) {
							printf("\n ================= procIBO check_cidlist start \n");
							int checked_cidresult=0;
							if(PVS == 1){
								checked_cidresult = check_cidlist(tmprid1,domain,prefix,outer_num,serverip, NULL,oldorg_num, "");
								printf( "\nchecked_cidresult=======>(%d)", checked_cidresult );
							}
							
							if( strlen(tmprid1) > 5 /*&& checked_cidresult == 0*/ ){
                                                                printf("\n ================= CID_LIST DELETE \n");
                                                                sprintf(sqlcmd," DELETE FROM cid_list WHERE cid = '%s' AND domain = '%s' AND user = '%s'",tmprid1,domain,outer_num);
                                                                printf("\nsqlcmd:(%s)",sqlcmd);
                                                                if( mysql_query(mysql, sqlcmd) ) {
                                                                    if(mysql)
                                                                        mysql_close(mysql);
                                                                    
                                                                    sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                                                                    logCmd();
                                                                }
								printf("\n ================= CID_LIST INSERT \n");
								sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
								'%s','%s','%3.3s','%s')",tmprid1,domain,oldphoneid+1,outer_num);
							//	'%s','%s','%3.3s','system')",tmprid1,domain,oldphoneid+1);
								printf("\nsqlcmd:(%s)",sqlcmd);
								if( mysql_query(mysql, sqlcmd) ) {
									sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
								}
							}
							printf("\n =================check_cidlist end \n");

							sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y' where 070number='%s'",tmprid1,letter_flag,record_flag,crm_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
                                                                if(mysql)
                                                                    mysql_close(mysql);
                                                                
								sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
                                                                logCmd();
							}
						}
						// BMLINK 20171030 MODIFY
						else {
							sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s' where 070number='%s'",letter_flag,record_flag,crm_flag,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd);
							if( mysql_query(mysql, sqlcmd) ) {
								sprintf(resPacket, "|ERR|inser cid_list!(%s, %s)",mysql_error(mysql),sqlcmd );
							}

						}
						
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',sn='%s',sipetc3='N' \
						where setdn = '%s'",macaddr,sn,outer_num);

						printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if(!authmysql)
							authinit(AUTH_SERVER);

						if( mysql_query(authmysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|211.32.148.91update DCS_PHONE_AUTh(%s, %s)",mysql_error(authmysql),sqlcmd );
							sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
							logCmd();
						}

						if(PVS == 1 && MASTER == 1) 
						{
							if(!strcmp(oldmessenger_ip,"127.0.0.1") || strlen(oldmessenger_ip) < 10) {
								strcpy(oldmessenger_ip,DEFAULT_MESSENGER_IP);
							}
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag !='S')) {
							//if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1")) {
								int j;
								MD5_DIGEST digest;

							if(*oldpasswd == '\0')
								strcpy(oldpasswd,"1111");

							//if(strcmp(oldpasswd,"1111")) {
							md5_digest(oldpasswd, strlen(oldpasswd), digest);
							for (j=0; j<sizeof(digest); j++) {
							    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
							}

	
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							if(*oldname == '\0') {
								strcpy(tmpname1,"tmpname");
								tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
								if(tmpP) {
									strcpy(oldname,tmpP);
									free(tmpP);
								}
							}
							sprintf(sqlcmd1, "delete from  preuse_uc where number='%s'",outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1))
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);

							sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",oldphoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) ) {
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag = 'BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd1);
							}

							sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,outer_num,oldname,"","",oldorg_num,"",oldphoneid,macaddr,"",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,order_record);
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
						if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?oldphoneid+4:oldphoneid+5,crm_flag,oldphoneid,serverip);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}

							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
								sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='BOSS' where phoneid='%s' and defaultip = '%s'",crm_flag,oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
								sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",oldphoneid,crm_flag);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && *crm_flag == '\0') {
								sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",oldphoneid,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd1);
								if( ret = mysql_query(mysql, sqlcmd1) )
									printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
							    	sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",oldphoneid+1,macaddr,oldphoneid);
								if(strcmp(oldmessenger_ip,"127.0.0.1")) {
									if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
									sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
									printf("\nsqlcmd:(%s)",sqlcmd1);
									if( ret = mysql_query(mysql, sqlcmd1) )
										printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
									}
								}
							}
							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
								if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
									tmm_currDate(YYYYMMDDHHMMSS,today);
									sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
									sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
									ret = mysql_query(mysql, sqlcmd);
									sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
									printf("\nresPacket:((((%s))))",resPacket);

								}
							}

							sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
							sprintf(resPacket,"|RES|UBU userid11:(%s)-(%s)-(%s)",user,phoneid,defaultip);

									/****추가 ***/
									sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									printf("\nsqlcmd:(%s)-(%p)",sqlcmd,mysql);
									fflush(stdout);
									if( ret = mysql_query(mysql, sqlcmd) ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										if(mysql)
											mysql_close(mysql);
										sqlinit();
										if( ret = mysql_query(mysql, sqlcmd) ) {
											tcpWrite(masterFd, resPacket);
											logCmd();
											exit(0);
										}
									}   
									result = mysql_store_result( mysql );
									if(!result ) {
										sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
										printf("\nresPacket:((((%s))))",resPacket);
										printf("\nresPacket:((((%s))))",resPacket);
										tcpWrite(masterFd, resPacket);
										exit(0);
									}
													
									row_num = mysql_num_rows(result);
									if( row_num == 0 ) {
										mysql_free_result(result);
										result = NULL;
										return 0;
									}
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);
									printf("\nrow_num: (%d)",row_num);

									for(i=0;i < row_num;i++) {
										row = mysql_fetch_row( result);
										if(row) 
										{
											strcpy(serverip, row[0]?row[0]:"127.0.0.1");
											ps_delSpace(serverip);
											ps_delSpace(row[1]);
										}
										if(*serverip && strlen(serverip) > 10) {
											if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
												tmm_currDate(YYYYMMDDHHMMSS,today);
												sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
												sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
												printf("\nsqlcmd:(%s)",sqlcmd);
												mysql_query(mysql, sqlcmd1);
											}
										}
									}
									mysql_free_result(result);
									result = NULL;
						}


					sprintf(resPacket,"|RES|%s",serverip);
					return 0;
				}
			}
			break;
		}
		mysql_free_result(result);
		result = NULL;
BEGIN:

		//번호 이동(자사 -> 자사)
		if(strlen(before_num) > 4 && !strcmp(argv[0],"IBO")) {
			sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
			argv[1] = tmpStr;
			argv[2] = outer_num;
			argv[3] = before_num;
			argv[4] = NULL;
			ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
				return -1;
			}
		}
	}
DOMAIN_UPDATE:

	if(!strcmp(type,"장비변경") || *chg_flag == '1') {
			if(row_num > 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='%s',\
				updatetime ='%s',sn='%s',sipetc3='N'  where setdn = '%s'",macaddr,tmp,sn,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|211.32.148.91update DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					return(-1);
				}

				if(!strcmp(argv[0],"DBO")) {
//UPDATE2111
                                        if(relayCheck(outer_num)) {
						sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
						,lastdate=NOW() where number = '%s'",outer_num);
						mysql_query(mysql, sqlcmd);
						printf("\nsqlcmd : (%s)",sqlcmd);

						sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
						mysql_query(mysql, sqlcmd);

						mysql_1 = NULL;
						multiSqlinit(2);
						if(mysql_1) {
							sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
							,lastdate=NOW() where number = '%s'",outer_num);
							mysql_query(mysql_1, sqlcmd);
							printf("\nsqlcmd : (%s)",sqlcmd);

							sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
							mysql_query(mysql_1, sqlcmd);

							sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
							mysql_query(mysql_1, sqlcmd);
							mysql_close(mysql_1);

							mysql_1 = NULL;
							multiSqlinit(3);
							if(mysql_1) {
								sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
								,lastdate=NOW() where number = '%s'",outer_num);
								mysql_query(mysql_1, sqlcmd);
								printf("\nsqlcmd : (%s)",sqlcmd);

								sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
								mysql_query(mysql_1, sqlcmd);

								sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
								mysql_query(mysql_1, sqlcmd);
								mysql_close(mysql_1);
							}
						}
						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
                                        }
                                        else {

						sprintf(sqlcmd,"update number_list set status=3,chg_flag='1' \
						,lastdate=NOW() where number = '%s'",outer_num);
						printf("\nsqlcmd : (%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);

						sprintf(sqlcmd,"delete from number_manage where 070number= '%s'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(sqlcmd,"delete from sip_buddies where callerid= '<%s>'",outer_num);
						mysql_query(mysql, sqlcmd);

						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
					}
				}
				if(!strcmp(argv[0],"IBO")) {
					row_num =0;
					sprintf(sqlcmd, "select 070number from number_manage where 070number='%s'",outer_num);
					printf("\nvalid sqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						logCmd();
						sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						return(-1);
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						;
					}   
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
						result = NULL;
					}
printf("\n22222222222222");
					if(row_num > 0) {
						sprintf(sqlcmd,"update number_list set status=1,chg_flag ='0' \
						,lastdate=NOW(),checkflag='0' where number = '%s'",outer_num);
						mysql_query(mysql, sqlcmd);
						printf("\nsqlcmd : (%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						sprintf(resPacket,"|RES|%s",ipaddress);
						return 0;
					}
                                }
			}
	}


printf("\nmacaddr: (%s)",macaddr);

if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {

				sprintf(sqlcmd, "select number,status,domain,type,serverip,etc from number_list \
				where  number = '%s'",outer_num);

				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) is not exist1!!!",outer_num);
					printf("\nresPacket:(%s)",resPacket);
					return -1;
				}

				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) {
						if(!strcmp(argv[0],"IBO")) {
							if(row[2] && strlen(row[2]) > 3 && strcasecmp(row[2],"lgdacom.net")) {
								if(!strcasecmp(domain,"lgdacom.net"))
									strcpy(domain, row[2]?row[2]:"");
								ps_delSpace(domain);
							}
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/*** ?????????****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);
/*?????????????????????*/
printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
printf("\n=======>[5mrellineno:((((%s)[0m",rellineno);
							strcpy(etc, row[5]?row[5]:"127.0.0.1");
							ps_delSpace(etc);

							if(*row[1] == '0' && strlen(rellineno) < 5) {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not reserved!!! status:(%s)",outer_num,row[1]);
								return -1;
							}
						}
						else {
							if(strcmp(argv[0],"SBO") && strcmp(argv[0],"UBO") && strcmp(argv[0],"PBO") && strcmp(argv[0],"DBO") && *row[1] != '1' && *row[1] != '3') {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  not normal number!!! status:(%s)",outer_num,row[1]);
								return -1;
							}
							//if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))) 
							if(row[2] && strlen(row[2]) > 3 && (!strcasecmp(domain,"lgdacom.net") )) 
								strcpy(domain, row[2]?row[2]:"unknown.unknown");
							ps_delSpace(domain);
							strcpy(number_type, row[3]?row[3]:"1");
							ps_delSpace(number_type);
/**** ???????? ****/
							strcpy(tmpip, row[4]?row[4]:"211.32.148.81");
							ps_delSpace(tmpip);


						}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else {
		    if(argv[4] && *argv[4])
				strcpy(number_type,argv[4]);
		    else
				strcpy(number_type,"1");
/****
		    if(argv[5] && *argv[5])
			strcpy(domain,argv[5]);
		    else
			strcpy(domain,"unknown.unknown");
*/
	     }


if(strcmp(cpetype,"무선AP"))
    if(PVS == 1) {
A_POINT:
printf("\n111111111111111111111111111 : (%s)",domain);
				if(domain[0] == '\0') {
					if(*rellineno != '\0' && strlen(rellineno) > 3) {
						sprintf(domain,"%s.lgdacom.net",rellineno);
					}
					else {
						sprintf(domain,"temp%d.lgdacom.net",getpid());
						ret = smsSend("Warn:domain&&lineno is null","164.124.107.28","mysqlif");
					}
				}
				if(*domain)  {
					//if(!strcasecmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
					if(!strcasecmp(domain,"lgdacom.net"))
						if(*rellineno != '\0' && strlen(rellineno) > 3) {
							sprintf(domain,"%s.lgdacom.net",rellineno);
						}
						else {
							sprintf(domain,"temp%d.lgdacom.net",getpid());
						}
					sprintf(sqlcmd, "select proxyip,prefix,proxyip,inner_digit from custom_info where domain = '%s'",domain);
					printf("\nsqlcmd:(%s)-(%d)",sqlcmd,getpid());
					if( ret = mysql_query(mysql, sqlcmd) ) {
printf("\n2222222222222222222222222222.......... : (%s)",domain);
						sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
						printf("\nresPacket:(%s)",resPacket);
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   
printf("\n3333333333333333333333333333 : (%s)",domain);

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
						printf("\nresPacket:(%s)",resPacket);
						return(-1);
					}   

					row_num = mysql_num_rows(result);

				}
				else {
					sprintf(resPacket, "|ERR|00000_Domain empty in number_list, Lineno is null",mysql_error(mysql),sqlcmd);
					printf("\nresPacket:(%s)",resPacket);
					return(-1);

				}
printf("\n3333333333333333333333333333 : (%s)",domain);


                                if( row_num == 0 ) {
                                                mysql_free_result(result);
                                                result = NULL;
						//if(strstr(outer_num,"0704367")|| strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
						//if(!strncmp(outer_num,"0704367",7)|| !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
						if(relayCheck(outer_num)) {
							sprintf(resPacket, "|ERR|00000_Domain does not in number_list, DOMAIN is null",mysql_error(mysql),sqlcmd);
							printf("\nresPacket:(%s)",resPacket);
							return(-1);
						}
						//PC80
						/***
						if(row_num == 0 && !strcmp(etc,"112.223.57.35")) {
							sprintf(resPacket, "|ERR|00000_Domain empty in number_list, Lineno is null",mysql_error(mysql),sqlcmd);
							printf("\nresPacket:(%s)",resPacket);
							return(-1);

						}
						*/

						if(domain[0] == '\0') {
							if(*rellineno != '\0' && strlen(rellineno) > 3)
								sprintf(tmpdomain,"virtual@%s.lgdacom.net",rellineno);
							else {
								sprintf(tmpdomain,"virtual@temp%d.lgdacom.net",getpid());
							}
						}
						else 
							sprintf(tmpdomain,"%s@%s",user,domain);

                                                argv[1] = tmpdomain;
                                                parseMailAddr(100);


                                                /***
                                                wifi|99|99|99|NNNNN|master|1111
                                                ***/
                                                if(cnt == 0) {
                                                        argv[1] = email;
                                                        argv[2] = "wifi";
                                                        argv[3] = "0";
                                                        argv[4] = "0";
                                                        argv[5] = "0";
                                                        argv[6] = "YYYY";
                                                        argv[7] = "master";
                                                        argv[8] = "1111";
                                                        argv[9] = cust_name;
printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
printf("\n[7m[0mPROXY IP: (%s)[0m[0m",tmpip);
                                                        if((ret = procIIP(tmpip)) == 0) {
                                                                cnt++;
								sleep(1);
                                                                goto A_POINT;
                                                        }
							sprintf(resPacket, "|ERR|00000_(%s) custom_info is exist",domain);
                                                }

                                                return -1;
                                }

						
				row = mysql_fetch_row( result );
				// serverip:custom_info
				if(row) {
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
printf("\n[7m%s[0m",sqlcmd);
printf("\n[7mserverip:((%s)),domain:(%s)[0m",serverip,domain);
printf("\n[7mserverip:((%s)),domain:(%s)[0m",serverip,domain);
printf("\n[7mserverip:((%s)),domain:(%s)[0m",serverip,domain);

					ps_delSpace(serverip);
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && !strstr(outer_num,"0704367")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && !relayCheck(outer_num)) {

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
/*********************
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && !strstr(outer_num,"0704659")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && strncmp(outer_num,"0704659",7)) {

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && !strstr(outer_num,"0704808")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && strncmp(outer_num,"0704808",7)) {

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
					//if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && !strstr(outer_num,"0704880")) {
					if(strcmp(tmpip,"127.0.0.1") && strcmp(tmpip,serverip) && !strcmp(argv[0],"IBO") && strlen(tmpip) > 5 && strncmp(outer_num,"0704880",7)) {

						sprintf(sqlcmd, "update custom_info set proxyip = '%s' where domain = '%s'",tmpip, domain);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd);
						strcpy(serverip,tmpip);
					}
*/
					if((!strcmp(tmpip,"127.0.0.1") || strlen(tmpip) < 5)  && !strcmp(argv[0],"IBO") && strlen(serverip) > 5) {

						sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW()  where number = '%s'",serverip, outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);

						mysql_query(mysql, sqlcmd);
						strcpy(tmpip,serverip);
					}
/***
					if(!strcmp(tmpip,"127.0.0.1") && strstr(outer_num,"0704367")) {
						mysql_free_result(result);
						result = NULL;
						return -1;
					}
*/

					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);

					strcpy(ipaddress, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(prefix);
					strcpy(inner_digit, row[3]?row[3]:"4");
					ps_delSpace(inner_digit);
				}
				mysql_free_result(result);
			result = NULL;
	}
	else {
		    if(argv[5] && *argv[5])
			strcpy(prefix,argv[5]);
		    else
			strcpy(prefix,"001");
	}

	//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
	//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
	if(relayCheck(outer_num)) {
		relayFlag = 1;
		sprintf(sqlcmd, "update number_list set serverip = '%s',lastdate=NOW()  where number = '%s'",serverip, outer_num);

		strcpy(tmpip,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		mysql_query(mysql, sqlcmd);
	}
	else
		relayFlag = 0;

	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);
	printf("\nSSW_IP : outer_num:(%s)(((((%s)))),serverip:(((%s))),tmpip:(%s), domain:(%s)",outer_num,etc,serverip,tmpip,domain);


/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
/**
                if(!strcmp(argv[0],"IBO")) {
                        strcpy(cmd,"IBO");
                }
                else if(!strcmp(argv[0],"삭제"))
                        strcpy(cmd,"DBO");
                else if(!strcmp(argv[0],"일시중지"))
                        strcpy(cmd,"SBO");
                else if(!strcmp(argv[0],"미납중지"))
                        strcpy(cmd,"PBO");
                else if(!strstr(argv[0],"해소"))
                        strcpy(cmd,"RBO");
                else if(!strcmp(argv[0],"변경"))
                        strcpy(cmd,"UBO");
***/
		if(!strcmp(argv[0],"IBO")) {
				/*** domain, sipuri(setdn@domain) ****/
				if(*macaddr != '\0') {
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);


					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|insert phone_info_0!(%s, %s)",mysql_error(mysql),sqlcmd );
							logCmd();
							//return(-1);
					}
				}

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where MACADDRESS = '%s'",macaddr);	

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91delete DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					return -1;
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				//if(!strcmp(areacode,"0070"))
				if(strcmp(cpetype,"무선AP")) {
					char	xx[2];

					sprintf(sqlcmd, "select number from number_list where domain = '%s' and admin_flag = 'Y'",domain);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) )
					{
						;
					}
					result = mysql_store_result( mysql );
					if(!result )
					{
						;
					}
					else {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
					}
					result = NULL;

					if(row_num > 0)
						strcpy(xx,"Z");
					else
						strcpy(xx,"N");

					if(!strcmp(etc,"112.223.57.35") && strlen(serverip) < 10) {
						sprintf(resPacket, "|ERR|DB_ERR|proxy_ip error!!!!");
						logCmd();
						return -1;
					}

					if(*setcid == '\0') {
						//PC80
						/****
						if(!strcmp(etc,"112.223.57.35")) {
							sprintf(sqlcmd,"UPDATE number_list set serverip='%s',\
							domain='%s',status = 1, lastdate = NOW(),subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", serverip,domain,rellineno,areacode,xx,cust_name, outer_num);

						}
						else {
						*/
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,rellineno,areacode,xx,cust_name, outer_num);
						//}
					}
					else {
						/****
						if(!strcmp(etc,"112.223.57.35")) {
							sprintf(sqlcmd,"UPDATE number_list set serverip='%s',\
							domain='%s',status = 1, lastdate = NOW(),org_num = '%s',subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", serverip,domain,setcid,rellineno,areacode,xx, cust_name, outer_num);

						}
						else {
						*/
							sprintf(sqlcmd,"UPDATE number_list set \
							domain='%s',status = 1, lastdate = NOW(),org_num = '%s',subsno='%s',areacode='%s',admin_flag = '%s',cust_name='%s',checkflag='0' where \
							number = '%s'", domain,setcid,rellineno,areacode,xx, cust_name, outer_num);
			
						//}
					}

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_list!15(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						return(-1);
					}
				}

		if(*display == '\0')
			strcpy(display,outer_num);

		if(*inner_digit == '3')
			inner_num[0] = '0';
/***************/
		if(!authmysql)
			authinit(AUTH_SERVER);

		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') { 
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
				'%s', '%s', '1%3.3s%4.4s@%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
				prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else 
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
				'%s,%4.4s', '%s', '1%3.3s%4.4s@%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
				prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
				'%s', '%s', '1%3.3s%4.4s@%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,outer_num, \
				prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
			else
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,sn, sippwd,cpetype) values('%s', '신규', %s, '%s',\
				'%s,%3.3s', '%s', '1%3.3s%4.4s@%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s','%s','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
				prefix,inner_num,serverip,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,sn,sip_passwd,cpetype);
		}

		strcpy(resPacket,sqlcmd);
		logCmd();
		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|DB_ERR|211.32.148.91(insert DCS_PHONE_AUTH(%s, %s)",mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
			return(-1);
		}
		printf("\nsqlcmd:(%s)",sqlcmd);
		sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
		where number = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!16(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}

		if(!strcmp(cpetype,"무선AP")) {
			sprintf(resPacket,"|RES|%s",ipaddress);
			return 0;
		}

		sprintf(sqlcmd,"INSERT into number_history( \
		number , status , changedate ,domain, type) \
		values('%s',1,'%s','%s',1)", \
		outer_num,tmp,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
		sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
		argv[1] = tmpStr;
		sprintf(user,"tmpid%s",inner_num);
		
		argv[2] = "1111";
		argv[3] = inner_num;
		argv[4] = outer_num;

		strcpy(tmpname1,"tmpname");
		tmpP =__base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
		if(tmpP) {
				strcpy(tmpname,tmpP);
				free(tmpP);
		}
		argv[5] = tmpname;
		argv[6] = number_type;
		argv[7] = display;
		argv[8] = setcid;
		argv[9] = lineno;
		argv[10] = tmprid1;
		argv[11] = letter_flag;

		printf("\nargv[1]:(%s)",argv[1]);
		printf("\nargv[2]:(%s)",argv[5]);
		printf("\ntmpip:(%s)",tmpip);
		printf("\ntmpip:(%s)",tmpip);
		printf("\ntmpip:(%s)",tmpip);
		printf("\ntmpip:(%s)",tmpip);
		printf("\ntmpip:(%s)",tmpip);

		ret = procINO(0,tmpip,__LINE__);

		if(ret  == 0) {
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",tmp,domain,outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
		}

		    sprintf(resPacket,"|RES|%s",ipaddress);
		    return 0;       
		}
		else if(!strcmp(argv[0],"DBO")) {
			int 	admin_flag = 0;


			if(*inner_digit == '3')
				inner_num[0] = '0';

		if(!authmysql)
			authinit(AUTH_SERVER);

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '해지',SSWIP='127.0.0.1',setdn='000000000000',\
			updatetime ='%s',macaddress='%d_%d_%d' where macaddress = '%s'",tmp,time(0),getpid(),rand(),macaddr);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!23(%d)(%s, %s)",__LINE__,mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
				logCmd();
				//return(-1);
			}
/****
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set macaddress='0000.0000.0000' \
			where setdn = '%s'",tmp,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!(%s, %s)",mysql_error(authmysql),sqlcmd );
				logCmd();
				//return(-1);
			}
*/
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
printf("\n[7mDOMAIN:(%s)[0m",domain);
			row_num = 0;
			sprintf(sqlcmd, "select domain,admin_flag from number_list where number='%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				;
			}
			result = mysql_store_result( mysql );
			if(!result )
			{
				;
			}
			else {
				row_num = mysql_num_rows(result);
				if(row_num > 0) {
					row = mysql_fetch_row( result );
					if(row) {
						//if(domain == '\0' || !strcmp(domain,"lgdacom.net") || !strncasecmp(domain,"centrex_c",9))
						if(domain == '\0' || !strcmp(domain,"lgdacom.net"))
							strcpy(domain, row[0]?row[0]:"unknown.unknown");
						ps_delSpace(domain);
						if(row[1] && *row[1] == 'Y')
							admin_flag = 1;
					}

				}
				mysql_free_result(result);
				result = NULL;
			}

			if(admin_flag == 1) {
				sprintf(sqlcmd,"UPDATE number_list set \
				admin_flag = 'N' where \
				domain = '%s'", domain);
				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
				sprintf(sqlcmd,"DELETE from superadmin \
				where admin_id = '%s'",outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				}
			}
printf("\n[7mDOMAIN:(%s)[0m(%s)",domain,serverip);
printf("\n[7mDOMAIN:(%s)[0m(%s)",domain,serverip);
printf("\n[7mDOMAIN:(%s)[0m(%s)",domain,serverip);
printf("\n[7mDOMAIN:(%s)[0m(%s)",domain,serverip);
printf("\n[7mDOMAIN:(%s)[0m(%s)",domain,serverip);

			argv[2] = outer_num;
			argv[3] = number_type;
			argv[4] = "00,070";
			argv[5] = "3";
			argv[6] = "";

			if(!authmysql)
					authinit(AUTH_SERVER);

			if(!strcmp(cpetype,"무선AP")) {
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where MACADDRESS = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
				return 0;       
			}

			ret = procDU7();

			if(ret == 0 ) {

				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'DD7'",tmp,domain,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);

				}
			}
			if(*resPacket == '\0')
				sprintf(resPacket,"|RES|DBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
			return 0;       

		}
		else if(!strcmp(argv[0],"PBO")) {
			if(*inner_digit == '3')
				inner_num[0] = '0';

			if(!strcmp(status,"발신중지"))
				sprintf(sqlcmd,"update number_list set status = 6\
				,lastdate=NOW() where number = '%s'",outer_num);
			else if(!strcmp(status,"착신중지"))
				sprintf(sqlcmd,"update number_list set status = 7\
				,lastdate=NOW() where number = '%s'",outer_num);
			else
				sprintf(sqlcmd,"update number_list set status = 5\
				,lastdate=NOW() where number = '%s'",outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}

			sprintf(resPacket,"|RES|PBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
			return 0;       

                }
		else if(!strcmp(argv[0],"SBO")) {

			if(*inner_digit == '3')
				inner_num[0] = '0';
                        if(!strcmp(status,"발신중지"))
                                sprintf(sqlcmd,"update number_list set status = 6\
                                ,lastdate=NOW() where number = '%s'",outer_num);
                        else if(!strcmp(status,"착신중지"))
                                sprintf(sqlcmd,"update number_list set status = 7\
                                ,lastdate=NOW() where number = '%s'",outer_num);
                        else
                                sprintf(sqlcmd,"update number_list set status = 5\
                                ,lastdate=NOW() where number = '%s'",outer_num);
/***
			sprintf(sqlcmd,"update DCS_PHONE_AUTH set subsstatus = '중지',\
			updatetime ='%s' where macaddress = '%s'",tmp,macaddr);
*/

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|DB_ERR|%s|(%s, %s)",MYOAM_SERVER,mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}


			/***
			|UFD|p3146@onnet21.com|3833|YYYYY-|00|00
			*/
/****
                        argv[2] = inner_num;
                        argv[3] = "NNNNNN";
                        argv[4] = "00";
                        argv[5] = "00";
                        argv[6] = "";

                        ret = procUFD();
*/
			sprintf(resPacket,"|RES|SBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
			return 0;       

                }
		else if(!strcmp(argv[0],"RBO")) {

			sprintf(sqlcmd,"update number_list set status = 1,lastdate=NOW(),checkflag='0' \
			where number = '%s'",outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_list!17(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
			}

			sprintf(resPacket,"|RES|RBO userid:(%s)-(%s)-(%s)",user,domain,outer_num);
			return 0;       
                 }
		 else if(!strcmp(argv[0],"UBO")) {
			if(*inner_digit == '3')
				inner_num[0] = '0';

				/*** domain, sipuri(setdn@domain) ****/
				if(*macaddr != '\0') {
					sprintf(sqlcmd,"delete from  phone_info where macaddr = '%s'",\
					macaddr);	
					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					mysql_query(mysql, sqlcmd);

					sprintf(sqlcmd,"insert into  phone_info\
					(regdate,status,number,macaddr,phone_type,etc) values( \
					'%s',1,'%s','%s','%s','%s')",tmp,outer_num,macaddr,cpetype,domain);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);

					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|insert phone_info_1!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
					}
				}

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where \
				MACADDRESS = '%s'",macaddr);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where \
				setdn = '%s'",outer_num);	
				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if(!strcmp(status,"해지") && !strcmp(type,"장비등록") && strlen(carry_no) > 5) {
					sprintf(sqlcmd,"UPDATE number_list set \
					status = 9, lastdate = '%s' where \
						number = '%s'",tmp,outer_num);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd);

					if(!strncmp(carry_no,"00",2))
						strcpy(before_num,carry_no+1);
					else
						strcpy(before_num,carry_no+1);

					printf("\nbefore_num:[7m%s[0m",before_num);


					//번호 이동 처리(자사 -> 타사)
					if(strlen(before_num) > 4) {
						sprintf(tmpStr,"tmpid@%s",domain);

						argv[1] = tmpStr;
						argv[2] = outer_num;
						argv[3] = before_num;
						argv[4] = NULL;
						ret = procICH();
			if(ret == -1){ 
				sprintf(errorCause,"ICH ERR outernum:(%s),before_num:(%s)(%d)",outer_num,before_num,__LINE__);
				return -1;
			}

						sprintf(resPacket,"|RES|127.0.0.1|");
						return 0;
					}
				}

				//if(!strcmp(areacode,"0070"))
				if(*setcid == '\0')
					sprintf(sqlcmd,"UPDATE number_list set \
					status = 1, lastdate = '%s',subsno='%s',areacode='%s',lastdate=NOW(),checkflag='0'  where \
					number = '%s'", tmp,rellineno,areacode,outer_num);
				else 
					sprintf(sqlcmd,"UPDATE number_list set \
					status = 1, lastdate = '%s',org_num = '%s',subsno='%s',areacode='%s' ,lastdate=NOW(),checkflag='0' where \
					number = '%s'", tmp,setcid,rellineno,areacode,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update number_list!18(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					return(-1);
				}
/***
|UBO|007086664640@premium_c_15550.lgdacom.net|2010-06-17 11:05:27:471|변경|해지|장비등록|0|2010-06-1
7 11:05:27|1608831|202|201|2185115|Premium|유선IP폰|0011.a96f.c252,14|0.0.0.0|007086664640@premium_c_15550.lgdacom.net|SIP|0070|007086664640|007086664640|21|22|23|24|25|007088584640|007086664640||||1111|1|||||0|A1NF232002143|주식회사파이스디엔지|0070
86664640@premium_c_15550.lgdacom.net|
*/
		if(!authmysql)
			authinit(AUTH_SERVER);

		sprintf(sqlcmd,"delete from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if(mysql_query(authmysql, sqlcmd)) {
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
				'%s', '%s', '1%3.3s%4.4s@%s','%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,outer_num, \
				prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
			else
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
				'%s,%4.4s', '%s', '1%3.3s%4.4s@%s','%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,inner_num,outer_num, \
				prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
				'%s', '%s', '1%3.3s%4.4s@%s','%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,outer_num, \
				prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
			else
				sprintf(sqlcmd,"insert into DCS_PHONE_AUTH (subsno, subsstatus, prodcd,\
				macaddress, dn, setdn, sipid, sippwd, sswip, sswipflag, fqdn, protocol,\
				areacode, loginid, updatetime, portnum,cc,sipservice,ccname,cpetype) values('%s', '신규', %s, '%s',\
				'%s,%3.3s', '%s', '1%3.3s%4.4s@%s','%s',\
				'%s','1', '1%3.3s%4.4s@%s','sip', \
				'070','1%3.3s%4.4s','%s','00','uc0001','uc0001','UC-Centrex','%s')",subsno,"202",macaddr,display,inner_num+1,outer_num, \
				prefix,inner_num,serverip,sip_passwd,serverip,prefix,inner_num,domain,prefix,inner_num,tmp,cpetype);
		}


		strcpy(resPacket,sqlcmd);
		logCmd();
		if( mysql_query(authmysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert DCS_PHONE_AUTH!(%d)(%s, %s)",__LINE__,mysql_error(authmysql),sqlcmd );
				sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
				logCmd();
				//return(-1);
		}
		printf("\nsqlcmd:(%s)",sqlcmd);


		if(*tmprid1 != '\0') {
			sprintf(sqlcmd, "select phoneid,domain from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|Data Not Found!.(%s)",outer_num);
					return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(domain, row[1]?row[1]:"unknown.unknown");
				ps_delSpace(domain);
			}
			mysql_free_result(result);
			result = NULL;


			if(strcmp(dacom_no,carry_no) && strlen(dacom_no) > 5 && strlen(carry_no) > 5) {
				if(*carry_no == '0')
					strcpy(carryno1,carry_no+1);
				else
					strcpy(carryno1,carry_no);
			}
			else {
				memset(carryno1,'\0',sizeof(carryno1));

			}

			sprintf(tmpStr,"admin@%s",domain);
			argv[1] = tmpStr;
			sprintf(tmpStr1,"%4.4s",phoneid+4);
			
			argv[2] = tmpStr1;
			argv[3] = tmprid1;
			argv[4] = carryno1;
			procIID();
		}


		ret = 0;
		if(ret  == 0) {
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd,"UPDATE numrequest_pool set status = '3',recorddate='%s' where domain = '%s' and number = '%s' and cmd = 'II7'",tmp,domain,outer_num);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|update numrequest_pool!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
					//return(-1);
			}
		}


		if(*resPacket == '\0')
		    sprintf(resPacket,"|RES|UBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
		    return 0;       
		 }

		}
		else 
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));


/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|IBO userid:(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,macaddr);
    return 0;       
}


/*************************************************************************
BUGA UPDATE
,user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,serverip
	strcpy(letter_flag,"N");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"");
sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,tmprid1,letter_flag,record_flag,crm_flag,outer_num,serverip);


|UBU|aaa@test49.net|||Y|B|A|07040473997|
*************************************************************************/
int
procUBU()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0,sockfd=-1;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
char phoneid[10],cid[20],letter_flag[5],record_flag[5],crm_flag[5],manner_flag[5];
char oldphoneid[10],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5],oldmanner_flag[5];
char	oldinner_digit[5];
char	oldpasswd[256],oldmessenger_ip[20],oldorg_num[20],oldcid[20];
char	md5_passwd[64];
char	oldname[64];
char	*tmpP=NULL;
int size=0;
char cmd[120],record[10];
int count=0;

  char    sqlcmd[512],prefix_num[200],outer_num[15];

	memset(email,0,sizeof(email));
	memset(record,0,sizeof(record));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(tmprid1,0,sizeof(tmprid1)); 
	memset(oldorg_num,0,sizeof(oldorg_num)); 
	memset(oldname,0,sizeof(oldname)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(oldmanner_flag,0,sizeof(oldmanner_flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2] && *argv[2])
		strcpy(phoneid,argv[2]);
	else 
		strcpy(phoneid,"asterisk");

    if(argv[3] && *argv[3])
		strcpy(cid,argv[3]);
	else
		strcpy(cid,"");

    if(argv[4] && *argv[4])
		strcpy(letter_flag,argv[4]);
	else
		strcpy(letter_flag,"N");

    if(argv[5] && *argv[5])
		strcpy(record_flag,argv[5]);
	else
		strcpy(record_flag,"A");

    if(argv[6] && *argv[6])
		strcpy(crm_flag,argv[6]);
	else
		strcpy(crm_flag,"");

    if(argv[7] && *argv[7] && ( *argv[7] == 'N' ||  *argv[7] =='Y'))
		strcpy(manner_flag,argv[7]);
	else
		strcpy(manner_flag,"N");

    if(argv[8] && *argv[8])
		strcpy(outer_num,argv[8]);
	else
		strcpy(outer_num,"");

    if(argv[9] && *argv[9])
		strcpy(serverip,argv[9]);
	else
		strcpy(serverip,"");

    if(argv[10] && *argv[10])
		strcpy(ipcc_application,argv[10]);
	else
		strcpy(ipcc_application,"N");

    if(argv[11] && *argv[11])
		strcpy(ipcc_record,argv[11]);
	else
		strcpy(ipcc_record,"N");

    if(argv[12] && *argv[12])
		strcpy(moh_bill,argv[12]);
	else
		strcpy(moh_bill,"N");

    if(argv[13] && *argv[13])
		strcpy(ipcc_ivr,argv[13]);
	else
		strcpy(ipcc_ivr,"N");

    if(argv[14] && *argv[14])
                strcpy(console_bill,argv[14]);
        else
                strcpy(console_bill,"N");

    if(argv[15] && *argv[15])
                strcpy(autorec_bill,argv[15]);
        else
                strcpy(autorec_bill,"N");

    if(argv[16] && *argv[16])
                strcpy(blf_on,argv[16]);
        else
                strcpy(blf_on,"N");

    if(argv[17] && *argv[17])
                strcpy(bizskype,argv[17]);
        else
                strcpy(bizskype,"N");
/**
  aaa@test49.net||Y|B|A|07040473997|
|UBU|aaa@test49.net|||Y|B|A|07040473997|
*/

printf("\nouter_num : (%s)",outer_num);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
printf("\nouter_num : (%s)",outer_num);
printf("\nouter_num : (%s)",outer_num);
		sprintf(sqlcmd, "select phoneid, letter_flag,record_flag,crm_flag,messenger_ip,inner_digit,passwd,org_num,cid,defaultip,name,manner_flag,record,autorec_bill,moh_bill from number_manage where 070number = '%s'",outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",outer_num);
			return -1;
		}

/***
letter_flag,record_flag,crm_flag,messenger_ip,inner_dig
it,passwd
***/

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(phoneid, row[0]?row[0]:"00000000");
			ps_delSpace(phoneid);

			strcpy(oldletter_flag, row[1]?row[1]:"N");
			ps_delSpace(oldletter_flag);
			strcpy(oldrecord_flag, row[2]?row[2]:"A");
			ps_delSpace(oldrecord_flag);
			strcpy(oldcrm_flag, row[3]?row[3]:"");
			ps_delSpace(oldcrm_flag);
			strcpy(oldmessenger_ip, row[4]?row[4]:"127.0.0.1");
			ps_delSpace(oldmessenger_ip);

			strcpy(oldinner_digit, row[5]?row[5]:"4");
			ps_delSpace(oldinner_digit);
			strcpy(oldpasswd, row[6]?row[6]:"1111");
			ps_delSpace(oldpasswd);
			strcpy(oldorg_num, row[7]?row[7]:"");
			ps_delSpace(oldorg_num);
			strcpy(oldcid, row[8]?row[8]:"");
			ps_delSpace(oldcid);
			strcpy(serverip, row[9]?row[9]:"127.0.0.1");
			ps_delSpace(serverip);
			strcpy(oldname, row[10]?row[10]:"");
			ps_delSpace(oldname);
			strcpy(oldmanner_flag, row[11]?row[11]:"N");
			ps_delSpace(oldmanner_flag);
			strcpy(record, row[12]?row[12]:"");
			ps_delSpace(record);
			
			if( !(argv[15] && *argv[15])) {
				strcpy(autorec_bill, (row[13])?row[13]:autorec_bill);
				ps_delSpace(autorec_bill);
			}
			if( !(argv[12] && *argv[12])) {
				strcpy(moh_bill, (row[14])?row[14]:moh_bill);
				ps_delSpace(moh_bill);
			}
		}
		mysql_free_result(result);
		result = NULL;
// add s
    	if(!(argv[17] && *argv[17])){
		sprintf(sqlcmd, "select bizskype from sip_buddies where callerid='<%s>'",outer_num);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
//				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sip_buddies !(%s, %s)",mysql_error(mysql),sqlcmd );
		}else{
			row = mysql_fetch_row( result );
			if(row) {
				strcpy(bizskype, row[0]?row[0]:"N");
				ps_delSpace(bizskype);
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
printf("\nsip_buddies BIZSKYPE: (%s)\n",bizskype);
// end 

	*phoneid='1';
	strncpy(prefix,phoneid+1,3);
				

	if(strcmp(cid,oldcid) && strlen(cid) > 5) 
		sprintf(sqlcmd,"update number_manage set cid='%s',letter_flag='%s',record_flag='%s',crm_flag='%s',option5='Y',manner_flag='%s' ,ipcc_application = '%s' ,ipcc_record = '%s' , moh_bill = '%s' , ipcc_ivr = '%s' , console_bill ='%s' , autorec_bill = '%s' ,blf_on = '%s'  where 070number='%s'",cid,letter_flag,record_flag,crm_flag,manner_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);
	else 
		sprintf(sqlcmd,"update number_manage set letter_flag='%s',record_flag='%s',crm_flag='%s',manner_flag = '%s',ipcc_application = '%s' ,ipcc_record = '%s' , moh_bill = '%s', ipcc_ivr = '%s' , console_bill ='%s' , autorec_bill = '%s' ,blf_on = '%s' where 070number='%s'",letter_flag,record_flag,crm_flag,manner_flag,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,outer_num);

	printf("\n.... UBU sqlcmd : (%s)",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|UPATE number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
	}
/* 2,3호기 없음  2017 12 08
*/
	if(*moh_bill == 'Y') {
		sprintf(sqlcmd, "update custom_info set moh_bill='Y' where domain='%s'", domain);
		mysql_query(mysql, sqlcmd);
	}
/*
*/

	//IPCC IVR-웹호출은해당안됨. OAM반영하는경우는없음
	if(!strncmp(outer_num,"070",3) && atoi(ipcc_ivr) > 0) {
		//sprintf(sqlcmd, "update sip_buddies set incominglimit = '%s' where callerid='<%s>'",ipcc_ivr,outer_num);
		sprintf(sqlcmd, "update sip_buddies set incominglimit = '%s' ,bizskype='%s' where callerid='<%s>'",ipcc_ivr,bizskype,outer_num);
		printf("\n.... CALL_LIMIT sqlcmd : (%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			printf("\n1. |ERR|mysql_update error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}
		if(count = mysql_affected_rows(mysql)) {
			printf("\nCall Limit Set Success : (%s) -> (%s) call\n",outer_num,ipcc_ivr);

			sprintf(cmd,"sip prune realtime peer %s",outer_num);
			sockfd = Manager("127.0.0.1",cmd);
			if(sockfd > -1) {
				strcpy(cmd,"Action: Logoff\r\n\r\n");
				write(sockfd, cmd, strlen(cmd));
				close(sockfd);
			}
		}
		else
			printf("\n(%s) (%s) is  mysql_affected_rows is 0 in sip_buddies...\n",outer_num,sqlcmd);
	}else{
		sprintf(sqlcmd, "update sip_buddies set bizskype='%s' where callerid='<%s>'",bizskype,outer_num);
		printf("\n.... CALL_LIMIT sqlcmd : (%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			printf("\n1. |ERR|mysql_update error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}
		if(count = mysql_affected_rows(mysql)) {
			printf("\nCall Limit Set Success : (%s) -> (%s) call\n",outer_num,ipcc_ivr);

			sprintf(cmd,"bizskype reload peer %s",outer_num);
			sockfd = Manager("127.0.0.1",cmd);
			if(sockfd > -1) {
				strcpy(cmd,"Action: Logoff\r\n\r\n");
				write(sockfd, cmd, strlen(cmd));
				close(sockfd);
			}
		}
		else
			printf("\n(%s) (%s) is  mysql_affected_rows is 0 in sip_buddies...\n",outer_num,sqlcmd);
	}

        if(PVS == 1 && MASTER == 1)
        {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag != 'S')) {
					int j;
					MD5_DIGEST digest;

				if(*oldpasswd == '\0')
					strcpy(oldpasswd,"1111");

				md5_digest(oldpasswd, strlen(oldpasswd), digest);
				for (j=0; j< sizeof(digest); j++) {
				    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
				}

				if(*oldname == '\0') {
					strcpy(tmpname1,"tmpname");
					tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
					if(tmpP) {
						strcpy(oldname,tmpP);
						free(tmpP);
					}
				}
/***
DROP TABLE IF EXISTS `messenger_id`;
CREATE TABLE `messenger_id` (
  `recorddate` datetime NOT NULL default '0000-00-00 00:00:00',
  `phoneid` varchar(8) NOT NULL default '',
  `crm_flag` varchar(2) default NULL,
  `domain` varchar(64) default NULL,
  `number` varchar(20) NOT NULL default '',
  `defaultip` varchar(32) default NULL,
  UNIQUE KEY `messenger_id_ndx` (`phoneid`,`defaultip`),
  UNIQUE KEY `messenger_id_ndx1` (`number`)
) ENGINE=MyISAM DEFAULT CHARSET=euckr;
***/
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','INNER')",phoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				if( ret = mysql_query(mysql, sqlcmd1) ) {
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
				}

				sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?phoneid+4:phoneid+5,outer_num,oldname,"","",oldorg_num,"",phoneid,"","",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",letter_flag,"","N",record_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
			if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				if( ret = mysql_query(mysql, sqlcmd1) )
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
			}
				}
				else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag== 'B')) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='INNER' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(commandBuf,"|I_C|%s@%s|%s|%s|%s|%s|",user,domain,*oldinner_digit=='4'?phoneid+4:phoneid+5,crm_flag,phoneid,serverip);
					if(strcmp(oldmessenger_ip,"127.0.0.1")) {
						if(ret = commandSendUc(commandBuf,"I_C",oldmessenger_ip, 1) < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'I_C','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
							printf("\nsqlcmd:(%s)",sqlcmd1);
							if( ret = mysql_query(mysql, sqlcmd1) )
								printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
					}

				}
				else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'S')) {
					sprintf(commandBuf,"|PBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"중지",phoneid,oldcrm_flag);
					if((*oldcrm_flag == 'A' || *oldcrm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1")) {
						sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = 'S',flag='INNER' where phoneid='%s' and defaultip = '%s'",phoneid,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd1);
						if( ret = mysql_query(mysql, sqlcmd1) )
							printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						if(ret = commandSendUc(commandBuf,"PBO",oldmessenger_ip, 1) < 0) {
							sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'PBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);

							printf("\nsqlcmd:(%s)",sqlcmd1);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'S') && (*crm_flag != *oldcrm_flag) && (*crm_flag == 'A' || *crm_flag == 'B')) {
					sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s',flag='INNER' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(commandBuf,"|RBO|%s@%s|%s|%s|%s|%s|",user,domain,outer_num,"해소",phoneid,crm_flag);
					if(strcmp(oldmessenger_ip,"127.0.0.1")) {
						if(ret = commandSendUc(commandBuf,"RBO",oldmessenger_ip, 1) < 0) {
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'RBO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd1);
						if( ret = mysql_query(mysql, sqlcmd1) )
							printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
					}
				}
				else if(strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag == 'A' || *oldcrm_flag == 'B' ||  *oldcrm_flag == 'S') && (*crm_flag == '\0' || *crm_flag == 'N')) {
					sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd1);
					if( ret = mysql_query(mysql, sqlcmd1) )
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
					sprintf(commandBuf,"|D07|%s@%s|%s|%s|%3.3s|%s|%s|",user,domain,outer_num,"1",phoneid+1,"",phoneid);
					if(strcmp(oldmessenger_ip,"127.0.0.1")) {
						if(ret = commandSendUc(commandBuf,"D07",oldmessenger_ip, 1) < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd1);
						if( ret = mysql_query(mysql, sqlcmd1) )
							printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
						}
					}
				}
				sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,cid,letter_flag,record_flag,crm_flag,manner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,record);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }
				sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,cid,letter_flag,record_flag,crm_flag,manner_flag,outer_num,serverip,ipcc_application,ipcc_record,moh_bill,ipcc_ivr,console_bill,autorec_bill,blf_on,record);
                                    sprintf(resPacket,"|RES|UBU userid:(%s)-(%s)",user,domain);

                                /****추가 ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL;
        }

	
    sprintf(resPacket,"|RES|UBU userid:(%s)-(%s)",user,domain);
    return 0;       
}


/******************
mysql> CREATE TABLE `preuse_uc` (
    ->   `no` int(11) NOT NULL auto_increment,
    ->   `phoneid` varchar(20) default NULL,
    ->   `domain` varchar(64) default '',
    ->   `recorddate` datetime NOT NULL default '0000-00-00 00:00:00',
    ->   `number` varchar(20) NOT NULL default '',
    ->   `deletedate` datetime NOT NULL default '0000-00-00 00:00:00',
    ->   `defaultip` varchar(15) default '',
    ->   `status` char(1) default NULL,
    ->   `etc` varchar(32) default NULL,
    ->   PRIMARY KEY  (`no`),
    ->   KEY `number` (`number`),
    ->   UNIQUE KEY `phoneid_status` (`phoneid`,`status`)
    -> ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=euckr;

Query OK, 0 rows affected (0.04 sec)
********************************/

int
procPMS()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
char phoneid[10],cid[20],letter_flag[5],record_flag[5],crm_flag[5],manner_flag[5];
char oldphoneid[10],oldletter_flag[5],oldrecord_flag[5],oldcrm_flag[5],oldmanner_flag[5];
char	oldinner_digit[5];
char	oldpasswd[256],oldmessenger_ip[20],oldorg_num[20],oldcid[20];
char	md5_passwd[64];
char	oldname[64];
char	*tmpP=NULL;
char	record[10];
int size=0;

  char    sqlcmd[512],prefix_num[200],outer_num[15];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(tmprid1,0,sizeof(tmprid1)); 
	memset(oldorg_num,0,sizeof(oldorg_num)); 
	memset(oldname,0,sizeof(oldname)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(oldmanner_flag,0,sizeof(oldmanner_flag)); 
	memset(oldletter_flag,0,sizeof(oldletter_flag)); 
	memset(record,0,sizeof(record)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2] && *argv[2])
		strcpy(phoneid,argv[2]);
	else 
		strcpy(phoneid,"asterisk");


    if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);
	else
		strcpy(outer_num,"");

	strcpy(serverip,"");
	strcpy(record_flag,"A");
	strcpy(crm_flag,"B");
	strcpy(manner_flag,"N");

/**
  aaa@test49.net||Y|B|A|07040473997|
|UBU|aaa@test49.net|||Y|B|A|07040473997|
*/

printf("\nouter_num : (%s)",outer_num);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
printf("\nouter_num : (%s)",outer_num);
printf("\nouter_num : (%s)",outer_num);
		sprintf(sqlcmd, "select phoneid, letter_flag,record_flag,crm_flag,messenger_ip,inner_digit,passwd,org_num,cid,defaultip,name,manner_flag,record from number_manage where 070number = '%s'",outer_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql), sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",outer_num);
			return -1;
		}

/***
letter_flag,record_flag,crm_flag,messenger_ip,inner_dig
it,passwd
***/

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(phoneid, row[0]?row[0]:"00000000");
			ps_delSpace(phoneid);

			strcpy(oldletter_flag, row[1]?row[1]:"N");
			ps_delSpace(oldletter_flag);
			strcpy(oldrecord_flag, row[2]?row[2]:"A");
			ps_delSpace(oldrecord_flag);
			strcpy(oldcrm_flag, row[3]?row[3]:"");
			ps_delSpace(oldcrm_flag);
			strcpy(oldmessenger_ip, row[4]?row[4]:"127.0.0.1");
			ps_delSpace(oldmessenger_ip);

			strcpy(oldinner_digit, row[5]?row[5]:"4");
			ps_delSpace(oldinner_digit);
			strcpy(oldpasswd, row[6]?row[6]:"1111");
			ps_delSpace(oldpasswd);
			strcpy(oldorg_num, row[7]?row[7]:"");
			ps_delSpace(oldorg_num);
			strcpy(oldcid, row[8]?row[8]:"");
			ps_delSpace(oldcid);
			strcpy(serverip, row[9]?row[9]:"127.0.0.1");
			ps_delSpace(serverip);
			strcpy(oldname, row[10]?row[10]:"");
			ps_delSpace(oldname);
			strcpy(oldmanner_flag, row[11]?row[11]:"N");
			ps_delSpace(oldmanner_flag);
			strcpy(record, row[12]?row[12]:"");
			ps_delSpace(record);
		}
		mysql_free_result(result);
		result = NULL;

	*phoneid='1';
	strncpy(prefix,phoneid+1,3);
				

        if(PVS == 1 && MASTER == 1)
        {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(oldmessenger_ip,"127.0.0.1") && (*oldcrm_flag != 'A' && *oldcrm_flag != 'B' && *oldcrm_flag != 'S')) {
					int j;
					MD5_DIGEST digest;

				if(*oldpasswd == '\0')
					strcpy(oldpasswd,"1111");

				md5_digest(oldpasswd, strlen(oldpasswd), digest);
				for (j=0; j< sizeof(digest); j++) {
				    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
				}

				if(*oldname == '\0') {
					strcpy(tmpname1,"tmpname");
					tmpP =  __base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size);
					if(tmpP) {
						strcpy(oldname,tmpP);
						free(tmpP);
					}
				}
/***
DROP TABLE IF EXISTS `messenger_id`;
CREATE TABLE `messenger_id` (
  `recorddate` datetime NOT NULL default '0000-00-00 00:00:00',
  `phoneid` varchar(8) NOT NULL default '',
  `crm_flag` varchar(2) default NULL,
  `domain` varchar(64) default NULL,
  `number` varchar(20) NOT NULL default '',
  `defaultip` varchar(32) default NULL,
  UNIQUE KEY `messenger_id_ndx` (`phoneid`,`defaultip`),
  UNIQUE KEY `messenger_id_ndx1` (`number`)
) ENGINE=MyISAM DEFAULT CHARSET=euckr;

mysql> CREATE TABLE `preuse_uc` (
    ->   `no` int(11) NOT NULL auto_increment,
    ->   `phoneid` varchar(20) default NULL,
    ->   `domain` varchar(64) default '',
    ->   `recorddate` datetime NOT NULL default '0000-00-00 00:00:00',
    ->   `number` varchar(20) NOT NULL default '',
    ->   `deletedate` datetime NOT NULL default '0000-00-00 00:00:00',
    ->   `defaultip` varchar(15) default '',
    ->   `status` char(1) default NULL,
    ->   `etc` varchar(32) default NULL,
    ->   PRIMARY KEY  (`no`),
    ->   KEY `number` (`number`),
    ->   UNIQUE KEY `phoneid_status` (`phoneid`,`status`)
    -> ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=euckr;

Query OK, 0 rows affected (0.04 sec)
***/
				sprintf(sqlcmd,"update number_manage set record_flag='%s',crm_flag='%s',manner_flag = '%s' where 070number='%s'",record_flag,crm_flag,manner_flag,outer_num);

				printf("\nsqlcmd : (%s)",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|UPATE number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
					return -1;
				}

				sprintf(sqlcmd, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','PREE')",phoneid, crm_flag,domain,outer_num,serverip,oldmessenger_ip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd);
					sprintf(sqlcmd, "update messenger_id set recorddate=NOW(), crm_flag = '%s' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd))
						printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
				}

				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd1, "insert into preuse_uc(phoneid,domain,recorddate,number,defaultip,status) values ('%s','%s',NOW(),'%s','%s','1')",phoneid,domain,outer_num,serverip);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				if( ret = mysql_query(mysql, sqlcmd1) ) {
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
				}

				sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,*oldinner_digit=='4'?phoneid+4:phoneid+5,outer_num,oldname,"","",oldorg_num,"",phoneid,"","",serverip,"",serverip,"","","",oldorg_num,oldinner_digit,"","","","","","",record,"",oldletter_flag,"","N",oldrecord_flag,crm_flag,"");
printf("\n[7m2.crm_flag:(%s), oldcrm_flag:(%s),oldmessenger_ip:(%s)[0m",crm_flag,oldcrm_flag,oldmessenger_ip);
printf("\ncommandBuf:(%s)",commandBuf);
			if(ret = commandSendUc(commandBuf,"INO",oldmessenger_ip, 1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,oldmessenger_ip,outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				if( ret = mysql_query(mysql, sqlcmd1) )
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
			}
				}

/**********/

				sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,BACKUP_SERVER,"sub2");
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }
				sprintf(commandBuf,"|UBU|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,phoneid,oldcid,oldletter_flag,oldrecord_flag,crm_flag,oldmanner_flag,outer_num,serverip,record);
                                    sprintf(resPacket,"|RES|UBU userid:(%s)-(%s)",user,domain);

                                /****추가 ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UBU')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL;
        }

	
    sprintf(resPacket,"|RES|UBU userid:(%s)-(%s)",user,domain);
    return 0;       
}


/*************************************************************************************************/
/*************************************************************************************************/
int
procDLC()
{   
  char passwd[256];
  char email[256],sqlcmd1[512],phoneid[10];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int  tmpNumber;
  char    sqlcmd[512],prefix_num[200];


        memset(email,0,sizeof(email));
        memset(passwd,0,sizeof(passwd)); 
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(phoneid,0,sizeof(phoneid));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);
        
        
        if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        else
                strcpy(outer_num,"asterisk");
        if(argv[3] && *argv[3])
                strcpy(phoneid,argv[3]);
        else
                return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));


	tmm_currDate(YYYYMMDDHHMMSS,today);
        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
        /*** number_list ***/
        {
                sprintf(sqlcmd, "delete from number_manage where 070number='%s' and phoneid='0%s'",outer_num,phoneid+1);
                printf("\nsqlcmd : [%s].....",sqlcmd);
                ret = mysql_query(mysql, sqlcmd);

                sprintf(sqlcmd, "delete from sip_buddies where name='%s' and callerid='<%s>'",phoneid,outer_num);
                printf("\nsqlcmd : [%s].....",sqlcmd);
                ret = mysql_query(mysql, sqlcmd);

                if(relayCheck(outer_num))
                        sprintf(sqlcmd, "delete from number_list  where number = '%s'",outer_num);
                else
                        sprintf(sqlcmd, "update number_list set status = 4,domain='',cust_name='',org_num='',type='1' where number = '%s'",outer_num);

                printf("\nsqlcmd : [%s].....",sqlcmd);
                ret = mysql_query(mysql, sqlcmd);

		if(!authmysql)
			authinit(AUTH_SERVER);

		sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where setdn = '%s' and loginid='%s'",outer_num,phoneid);
                printf("\nsqlcmd : [%s].....",sqlcmd);
		
		if( ret = mysql_query(authmysql, sqlcmd) ) {
			return -1;
		}   
        }

	sprintf(resPacket,"|RES|DLC userid:(%s)-(%s)",user,outer_num);
	return 0;
}



/*************************************************************************************************/
/*************************************************************************************************/
int
procDDC()
{
  char passwd[256];
  char email[256],sqlcmd1[512],phoneid[10];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int  tmpNumber;
  char    sqlcmd[512],prefix_num[200];


        memset(email,0,sizeof(email));
        memset(passwd,0,sizeof(passwd));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(phoneid,0,sizeof(phoneid));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

        if(argv[2] && *argv[2])
                strcpy(domain,argv[2]);
        else
                strcpy(domain,"asterisk");


        tmm_currDate(YYYYMMDDHHMMSS,today);
        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

        sprintf(sqlcmd, "select 070number,numbertype from number_manage where domain='%s'",domain);
        printf("\nsqlcmd:(%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                if(mysql)
                        mysql_close(mysql);
                sqlinit(LOCAL_SERVER);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        exit(0);
                }       
        }
                
        result = mysql_store_result( mysql );
        if(!result ) {
                        sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        //return(-1);
        }   
        else {
                row_num = mysql_num_rows(result);
                if( row_num > 0 ) {
                        mysql_free_result(result);
                        return(-1);
                }
                mysql_free_result(result);
                result = NULL;
        }
        sprintf(sqlcmd, "delete from custom_info where  domain='%s'",domain);
        ret = mysql_query(mysql, sqlcmd);
  
  
	sprintf(resPacket,"|RES|DDC userid:(%s)-(%s)",user,domain);
	return 0;       
}




/*************************************************************************
* AI-CALL Insert
*************************************************************************/
int
procIAI()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int  tmpNumber;
  char    sqlcmd[512],prefix_num[200];


        memset(email,0,sizeof(email));
        memset(passwd,0,sizeof(passwd));
        memset(sqlcmd,0,sizeof(sqlcmd));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);


    if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        else
                strcpy(outer_num,"asterisk");


    tmm_currDate(YYYYMMDDHHMMSS,today);
        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
                if(customInfo(domain) < 0)
                        return -1;
    }
    else {
                if(argv[3] && *argv[3])
                        strcpy(serverip,argv[3]);
                else
                        return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
   }


        /*** number_list ***/
        {
                sprintf(sqlcmd,"INSERT into aicall_info(reg_date,number,domain,defaultip) values \
                ('%s','%s','%s','%s')",tmp,outer_num,domain,serverip);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|INSERT aicall_info!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                                //return(-1);
                }
        }
        if(PVS == 1 && MASTER == 1)
        {
                                sprintf(commandBuf,"|IAI|%s@%s|%s|%s|",user,domain,outer_num,serverip);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER);
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }

                                sprintf(commandBuf,"|IAI|%s@%s|%s|%s|",user,domain,outer_num,serverip);
				sprintf(resPacket,"|RES|IAI userid:(%s)-(%s)-(%s)",user,outer_num,serverip);

                                /****추가 ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) )
                                {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                                                tcpWrite(masterFd, resPacket);
                                                exit(0);
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                                        tcpWrite(masterFd, resPacket);
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFX')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL; 
        }                               
                                                
    sprintf(resPacket,"|RES|IAI userid:(%s)-(%s)",user,outer_num);
    return 0;                                   
}                                               

                                        
                                
/*************************************************************************
* AI-CALL Delete                
*************************************************************************/
int
procDAI()                       
{               
  char passwd[256];
  char email[256],sqlcmd1[512]; 
  int   qid,returncode,fields_num,cpid; 
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];      
  unsigned int  tmpNumber;                      
  char    sqlcmd[512],prefix_num[200];          
                                

        memset(email,0,sizeof(email)); 
        memset(passwd,0,sizeof(passwd)); 
        memset(sqlcmd,0,sizeof(sqlcmd)); 
/****                                   
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/                              

        strcat(email, user);    
        strcat(email, "@");     
        strcat(email, domain);          
                                        
                                        
    if(argv[2] && *argv[2])     
                strcpy(outer_num,argv[2]);
        else                    
                strcpy(outer_num,"asterisk"); 
                                        
                                        
    tmm_currDate(YYYYMMDDHHMMSS,today);         
        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                
    if(PVS == 1 && MASTER == 1) {       
                if(customInfo(domain) < 0)
                        return -1;
    }
    else {
                if(argv[3] && *argv[3])
                        strcpy(serverip,argv[3]);
                else
                        return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
   }


        /*** number_list ***/
        {
                sprintf(sqlcmd,"DELETE from aicall_info where number = '%s'",outer_num);

                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|delete aicall_info!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                                //return(-1);
                }
        }
        if(PVS == 1 && MASTER == 1)
        {
                                sprintf(commandBuf,"|DAI|%s@%s|%s|%s|",user,domain,outer_num,serverip);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 10) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER) < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER);
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }

                                sprintf(commandBuf,"|DAI|%s@%s|%s|%s|",user,domain,outer_num,serverip);
                                sprintf(resPacket,"|RES|DAI userid:(%s)-(%s)",user,outer_num);

                                /****추가 ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) )
                                {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                                                tcpWrite(masterFd, resPacket);
                                                exit(0);
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                                        tcpWrite(masterFd, resPacket);
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }
                        
                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFX')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL; 
        }                               
                                                
    sprintf(resPacket,"|RES|DAI userid:(%s)-(%s)",user,outer_num);
    return 0;                                   
} 


/************************************************************************************/
/************************************************************************************/
int
procRAI()
{
  char passwd[256];
  char email[256];
  int   qid,returncode, count=0;
  int   test=0,ret,i,row_num=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],status[20],searchnum[11];


    memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(searchnum,0,sizeof(searchnum)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] == NULL)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(PVS == 1) {
		sprintf(sqlcmd, "select number from aicall_info where number = '%s' and domain='%s'",argv[2],domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
						
		mysql_free_result(result);
		result = NULL;
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

	sprintf(resPacket,"|RES|Y|Y|");
        
	return 0;       
}


/*************************************************************************
* 프리픽스							     *
*************************************************************************/
int
procIFX()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid;
  int   test=0, ret, row_num,i=0;
  char tmp[100],seq[20],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],prefix_num[200];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	else 
		strcpy(outer_num,"asterisk");

    if(argv[3] && *argv[3])
		strcpy(prefix_num,argv[3]);
	else
		strcpy(prefix_num,"");



    tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1 && MASTER == 1) {
		if(customInfo(domain) < 0)
			return -1;
    }
    else {
			if(argv[4] && *argv[4]) 
				strcpy(serverip,argv[4]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
   }


	/*** number_list ***/
	{
		sprintf(sqlcmd,"UPDATE number_list set forbid_prefix='%s'\
		where number = '%s' and domain = '%s'",prefix_num,outer_num,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_list!19(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
		}
	}
	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|IFX|%s@%s|%s|%s|%s|",user,domain,argv[2],argv[3],serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IFX|%s@%s|%s|%s|%s|",user,domain,argv[2],argv[3],serverip);
			    sprintf(resPacket,"|RES|IFX userid:(%s)-(%s)",user,prefix_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFX')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}


/***
|IFX|zermin1@naonsoft.com|01194916811
*/
    sprintf(resPacket,"|RES|IFX userid:(%s)-(%s)",user,prefix_num);
    return 0;       
}



/*************************************************************************
* 포워팅 정보 등록						     *
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
11:26:03 |IFW|knnw@premium_c_7965.lgdacom.net|6136|0220891934|0|0|18|9|0|knnw|<<<<<|RES|IFW userid:(knnw)-(premium_c_7
965.lgdacom.net)-(0220891934):(164.124.107.163)
11:26:43 |IFW|knnw@premium_c_7965.lgdacom.net|6136|07082248556|0|0|18|9|0|knnw|<<<<<|ERR|INPUT DATA  Error!(Forward nu
mber is represent Number)(proc.c, 29202):(164.124.107.163)
*************************************************************************/
int
procIF1()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, retry=0,i=0;
  int   test=0, ret, row_num;
  char tmp[100],seq[20],today[15],delphoneid[20],message[128];
  unsigned int	tmpNumber;
  int	yy,mm,dd,index = 0;
  struct  tm      *tp, time_str;
  time_t  t;
  char	yystr[5],mmstr[3],ddstr[3];

  char    sqlcmd[512],forward_num[30];
  char	fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
	char	num070[20], numbertype[11];
	char	inner_forward[128];
	char	frommin[5],tomin[5];
	char	tmpphoneid[10],tmp070num[15],tmpoption1[5],forward070num[15];
	char	tmpforward_num[15];


	memset(email,0,sizeof(email));
	memset(numbertype,0,sizeof(numbertype));
	memset(delphoneid,0,sizeof(delphoneid));
	memset(yystr,0,sizeof(yystr));
	memset(mmstr,0,sizeof(mmstr));
	memset(ddstr,0,sizeof(ddstr));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(_tmpbuf,0,sizeof(_tmpbuf)); 
	memset(forward_num,0,sizeof(forward_num)); 
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(tmpphoneid,0,sizeof(tmpphoneid)); 
	memset(tmp070num,0,sizeof(tmp070num)); 
	memset(tmpoption1,0,sizeof(tmpoption1)); 
	memset(forward070num,0,sizeof(forward070num)); 
	memset(tmpforward_num,0,sizeof(tmpforward_num)); 
	//|IF1|tmpid4997@rec11.net|4997||20140313|20140313|0|0|-|00|00|4998$01080807259|superadmin|,(164.124.107.163)<<<<<|ERR|INPUT DATA  Error!(Forward number is represent Number)(proc.c, 68870)
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(forward_num,argv[3]);
		
	if(strlen(forward_num) > 3) {
			tel_string(forward_num);
			strcpy(forward_num,_tmpbuf);
	}

    if(argv[8] && *argv[8])
			strncpy(kind,argv[8],1);
    else 
			strcpy(kind,"-");

	if(*kind != '-')
			if(strlen(forward_num) != 4 && strlen(forward_num) < 9 && strncmp(forward_num,"1544",4)  && strncmp(forward_num,"1588",4) && strncmp(forward_num,"1644",4) && strncmp(forward_num,"1688",4))
		 return(errorReturn("INPUT DATA  Error!(invalid forward num!)",__FILE__,__LINE__));


	strcpy(seq,"_");

	if(*kind != '-' && !strcmp(inner_num,forward_num))
		 return(errorReturn("INPUT DATA  Error!(inner/forwardNum same!)",__FILE__,__LINE__));

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
*/

    if(argv[4] && *argv[4] && strlen(argv[4]) > 8)
			strcpy(fromday,argv[4]);
    else  if(strlen(argv[4]) == 8) {
			strncpy(yystr,argv[4],4);

			strncpy(mmstr,argv[4]+4,2);
			strncpy(ddstr,argv[4]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 0;
			time_str.tm_min = 0;
			time_str.tm_sec = 0;
			t = mktime(&time_str);
			sprintf(fromday, "%ld",t);
    }
    else
			strcpy(fromday,"0");

    if(argv[5] && *argv[5] && strlen(argv[5]) > 8)
			strcpy(totoday,argv[5]);
			else  if(strlen(argv[5]) == 8) {
			strncpy(yystr,argv[5],4);
			strncpy(mmstr,argv[5]+4,2);
			strncpy(ddstr,argv[5]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 23;
			time_str.tm_min = 59;
			time_str.tm_sec = 59;
			t = mktime(&time_str);
			sprintf(totoday, "%ld",t);
    }
    else 
			strcpy(totoday,"0");

    if(atol(fromday) > atol(totoday))
	strcpy(fromday,totoday);

    if(argv[6] && *argv[6])
	strcpy(fromtime,argv[6]);
    else 
	strcpy(fromtime,"0");

    if(argv[7] && *argv[7])
	strcpy(totime,argv[7]);
    else 
	strcpy(totime,"0");

    if(atoi(totime) > 23)
	 strcpy(totime,"24");


    if(atoi(fromtime) < 0)
	 strcpy(fromtime,"0");
    if(atoi(totime) < 0)
	 strcpy(totime,"0");
	

    if(argv[9] && *argv[9])
	strcpy(frommin,argv[9]);
    else 
	strcpy(frommin,"0");

    if(argv[10] && *argv[10])
	strcpy(tomin,argv[10]);
    else 
	strcpy(tomin,"0");




    if(argv[11] && *argv[11])
		strcpy(inner_forward,argv[11]);
	else
		strcpy(inner_forward,argv[11]);

        index = 0;
        while(hack_no[index].no != NULL) { 
                if(!strcmp(hack_no[index].no,argv[12]?argv[12]:"---") || !strcmp(hack_no[index].no,domain))
                        break;  
                index++;
        }       
        if(hack_no[index].no != NULL) { 
                sprintf(message,"Hacker Forward set %s->%s %s",argv[12]?argv[12]:"---", forward_num,domain);
                ret = smsSend(message,"164.124.107.28","engine");
		return -1;
        }       

        if(!strcmp(forward_num,"01039752521") || !strcmp(forward_num,"01048836296") || !strcmp(forward_num,"01049086733")) {
                sprintf(message,"Hacker Forward set %s->%s",argv[12]?argv[12]:"??", forward_num);
                ret = smsSend(message,"164.124.107.28","engine");
		return -1;
        }


    domain_string(domain);

   strcpy(numbertype,"1");

	if(*kind == '-' && strlen(inner_forward) < 4)
			 return(errorReturn("INPUT DATA  Error!(inner/forwardNum same!)",__FILE__,__LINE__));


	

    if(PVS == 1) {
				if(customInfo(domain) < 0)
					return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
	//frommin,tomin,phoneid,serverip,inner_digit,inner_forward)
			if(argv[12] && *argv[12]) 
				strcpy(phoneid,argv[12]);
			if(argv[13] && *argv[13]) 
				strcpy(serverip,argv[13]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[14] && *argv[14]) 
				strcpy(inner_digit,argv[14]);

			sprintf(prefix,"%3.3s",phoneid+1);
	}
/****
	sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7)='%7.7s'", phoneid+1);
	mysql_query(mysql, sqlcmd);

	sprintf(sqlcmd, "delete from voicemail_users where customer_id = '%s'",phoneid+1);
	mysql_query(mysql, sqlcmd);
*/

	{
	sprintf(sqlcmd, "select 070number,numbertype from number_manage where phoneid='0%7.7s' and defaultip='%s' and domain='%s'",phoneid+1,serverip,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(ret == CR_SERVER_GONE_ERROR || ret == CR_SERVER_LOST) {
					//_tcpWrite(masterFd, resPacket, strlen(resPacket));
					//exit(0);
					;
			}
			logCmd();
			//return -1; 
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
	}   
	else {
		row_num = mysql_num_rows(result);
		if( row_num != 0 ) {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(numbertype, row[1]?row[1]:"1");
					ps_delSpace(numbertype);
				}
		}
		mysql_free_result(result);
		result = NULL;
	}
}

	strcpy(numbertype,"1");
	//if(!strncmp(forward_num,"070",3)) {
		sprintf(sqlcmd, "select type,number from number_list where number='%s' or org_num = '%s'",forward_num,forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(ret == CR_SERVER_GONE_ERROR || ret == CR_SERVER_LOST) {
						//_tcpWrite(masterFd, resPacket, strlen(resPacket));
						//exit(0);
						;
				}
				logCmd();
				//return -1; 
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num != 0 ) {
					row = mysql_fetch_row( result );
					if(row) {
						strcpy(numbertype, row[0]?row[0]:"1");
						ps_delSpace(numbertype);
						strcpy(forward070num, row[1]?row[1]:"");
						ps_delSpace(forward070num);
					}
			}
			mysql_free_result(result);
			result = NULL;
		}

		printf("INPUT DATA  Error!(Forward number is represent Number)(%s)(%s)(%s)\n",num070,forward_num,numbertype);
		if(strlen(num070) > 1 && strlen(forward_num) > 1)
		if(!strcmp(num070,forward_num) || !strcmp(num070,forward070num) || *numbertype == '0')
			 return(errorReturn("INPUT DATA  Error!(Forward number is represent Number)",__FILE__,__LINE__));
	//}

	/**********
	if(!strncmp(forward_num,"070",3) || !strncmp(forward070num,"070",3)) {
		sprintf(sqlcmd, "select option1,phoneid from number_manage where 070number='%s or 070number='%s'",forward_num,forward070num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(ret == CR_SERVER_GONE_ERROR || ret == CR_SERVER_LOST) {
						//_tcpWrite(masterFd, resPacket, strlen(resPacket));
						//exit(0);
						;
				}
				logCmd();
				//return -1; 
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num != 0 ) {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(tmpoption1, row[0]?row[0]:"");
					ps_delSpace(tmpoption1);
					strcpy(tmpphoneid, row[1]?row[1]:"");
					ps_delSpace(tmpphoneid);
				}
				if(tmpoption1 == 'F') {
					mysql_free_result(result);
					result = NULL;

					sprintf(sqlcmd, "select number from forward_number where phoneid = '1%7.7s' and (domain='%s' or domain='')",tmpphoneid+1,domain);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
								;
					}   
					else {
						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
							;
						}
						else {
							row = mysql_fetch_row( result);
							if( row) {
									strcpy(tmpforward_num,row[0]?row[0]:"");
									ps_delSpace(tmp);
							}
						}
						mysql_free_result(result);
						result = NULL;
						if(!strcmp(num070,tmpforward_num)) {
							 return(errorReturn("INPUT DATA  Error!(Forward number is recursive Number)",__FILE__,__LINE__));


						}
					}


				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
	*/


	strcpy(seq,"0");
	if(strlen(forward_num) == 4 && *inner_digit == '3') 
		forward_num[0] = '0';

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	/*** number_manage ***/
FORWARD_RETRY:
    {
		if(strlen(forward_num) == 4) {
			sprintf(delphoneid,"1%3.3s%4.4s",prefix,forward_num);
			if(!strcmp(phoneid,delphoneid)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",phoneid,delphoneid);
				return -1;
			}

		}
		else if(strlen(forward_num) == 8) {
			sprintf(delphoneid,"%s",forward_num);
			if(!strcmp(phoneid,delphoneid)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",phoneid,delphoneid);
				return -1;
			}
		}
		else if(!strcmp(num070,forward_num)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",num070,forward_num);
				return -1;
		}

///////////////////////////
		
		sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain = '')",phoneid+1,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|RES|error!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
		}
		sprintf(resPacket, "|RES|ok!(%s, %s)",mysql_error(mysql),sqlcmd );
		printf("\nresPacket:(%s)",resPacket);
		logCmd();
	
		sprintf(sqlcmd,"INSERT into forward_number( \
		phoneid ,domain,imid,executedate , executeseq ,number,fromday,today,fromtime,totime,frommin,tomin,kind,inner_forward) \
		values('%s','%s','%s','%s',%d,'%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
		phoneid,domain,user,tmp,(*seq == '_')?0:atoi(seq)+1,forward_num,fromday,totoday,fromtime,totime, frommin,tomin,kind,inner_forward);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(PVS == 1)
					return(-1);
				else if(retry++ < 3) {
					sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7) = '%7.7s'",phoneid+1);
					mysql_query(mysql, sqlcmd);
					goto FORWARD_RETRY;

				}
		}
	}

	/*** number_manage ***/
	{
				sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'F' \
				where phoneid = '0%7.7s' and defaultip='%s'",\
				phoneid+1,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}
	}

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
|IFW|zermin1@naonsoft.com|1111|01194916811
*/
		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IF1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],frommin,tomin,inner_forward,phoneid,serverip,inner_digit);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IF1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],frommin,tomin,inner_forward,phoneid,serverip,inner_digit);
				    sprintf(resPacket,"|RES|IFW userid:(%s)-(%s)-(%s)",user,domain,forward_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IF1')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|IFW userid:(%s)-(%s)-(%s)-(%s)",user,domain,num070,forward_num);
    return 0;       
}





/*************************************************************************
* 포워팅 정보 등록						     *
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
11:26:03 |IFW|knnw@premium_c_7965.lgdacom.net|6136|0220891934|0|0|18|9|0|knnw|<<<<<|RES|IFW userid:(knnw)-(premium_c_7
965.lgdacom.net)-(0220891934):(164.124.107.163)
11:26:43 |IFW|knnw@premium_c_7965.lgdacom.net|6136|07082248556|0|0|18|9|0|knnw|<<<<<|ERR|INPUT DATA  Error!(Forward nu
mber is represent Number)(proc.c, 29202):(164.124.107.163)
*************************************************************************/
int
procIFW()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, retry=0,i=0;
  int   test=0, ret, row_num;
  char tmp[100],seq[20],today[15],delphoneid[20];
  unsigned int	tmpNumber;
  int	yy,mm,dd;
  struct  tm      *tp, time_str;
  time_t  t;
  char	yystr[5],mmstr[3],ddstr[3];

  char    sqlcmd[512],forward_num[30];
  char	fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
	char	num070[20], numbertype[11];
	char	inner_forward[128];


	memset(email,0,sizeof(email));
	memset(numbertype,0,sizeof(numbertype));
	memset(delphoneid,0,sizeof(delphoneid));
	memset(yystr,0,sizeof(yystr));
	memset(mmstr,0,sizeof(mmstr));
	memset(ddstr,0,sizeof(ddstr));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(num070,0,sizeof(num070)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(inner_forward,0,sizeof(inner_forward)); 
	memset(_tmpbuf,0,sizeof(_tmpbuf)); 
	memset(forward_num,0,sizeof(forward_num)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(argv[3] && *argv[3])
		strcpy(forward_num,argv[3]);
		
	if(strlen(forward_num) > 3) {
			tel_string(forward_num);
			strcpy(forward_num,_tmpbuf);
	}

    if(argv[8] && *argv[8])
		strncpy(kind,argv[8],1);
    else 
		strcpy(kind,"-");

	if(*kind != '-') {
			if(strlen(forward_num) != 4 && strlen(forward_num) < 9 && strncmp(forward_num,"1544",4)  && strncmp(forward_num,"1588",4) && strncmp(forward_num,"1644",4) && strncmp(forward_num,"1688",4))
		strcpy(forward_num,"");

		 //return(errorReturn("INPUT DATA  Error!(invalid forward num!)",__FILE__,__LINE__));
	}


	strcpy(seq,"_");

	if(*kind != '-' && !strcmp(inner_num,forward_num))
		 return(errorReturn("INPUT DATA  Error!(inner/forwardNum same!)",__FILE__,__LINE__));

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
*/

    if(argv[4] && *argv[4] && strlen(argv[4]) > 8)
			strcpy(fromday,argv[4]);
    else  if(strlen(argv[4]) == 8) {
			strncpy(yystr,argv[4],4);

			strncpy(mmstr,argv[4]+4,2);
			strncpy(ddstr,argv[4]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 0;
			time_str.tm_min = 0;
			time_str.tm_sec = 0;
			t = mktime(&time_str);
			sprintf(fromday, "%ld",t);
    }
    else
			strcpy(fromday,"0");

    if(argv[5] && *argv[5] && strlen(argv[5]) > 8)
			strcpy(totoday,argv[5]);
			else  if(strlen(argv[5]) == 8) {
			strncpy(yystr,argv[5],4);
			strncpy(mmstr,argv[5]+4,2);
			strncpy(ddstr,argv[5]+6,2);
			time_str.tm_year = atoi(yystr) - 1900;
			time_str.tm_mon = atoi(mmstr) - 1;
			time_str.tm_mday = atoi(ddstr);
			time_str.tm_hour = 23;
			time_str.tm_min = 59;
			time_str.tm_sec = 59;
			t = mktime(&time_str);
			sprintf(totoday, "%ld",t);
    }
    else 
			strcpy(totoday,"0");

    if(atol(fromday) > atol(totoday))
	strcpy(fromday,totoday);

    if(argv[6] && *argv[6])
	strcpy(fromtime,argv[6]);
    else 
	strcpy(fromtime,"0");

    if(argv[7] && *argv[7])
	strcpy(totime,argv[7]);
    else 
	strcpy(totime,"0");

    if(atoi(totime) > 23)
	 strcpy(totime,"24");


    if(atoi(fromtime) < 0)
	 strcpy(fromtime,"0");
    if(atoi(totime) < 0)
	 strcpy(totime,"0");
	
    if(argv[9] && *argv[9])
		strcpy(inner_forward,argv[9]);
	else
		strcpy(inner_forward,argv[9]);
    domain_string(domain);

   strcpy(numbertype,"1");

	if(*kind == '-' && strlen(inner_forward) < 4)
			 return(errorReturn("INPUT DATA  Error!(inner/forwardNum same!)",__FILE__,__LINE__));

    if(PVS == 1) {
			if(customInfo(domain) < 0)
				return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
	}
	else {
/***
			if(argv[10] && *argv[10]) 
				strcpy(phoneid,argv[10]);
			if(argv[11] && *argv[11]) 
				strcpy(serverip,argv[11]);
			if(argv[12] && *argv[12]) 
				strcpy(inner_digit,argv[12]);
*/
                        if(argv[9] && *argv[9]) {
                                strcpy(phoneid,argv[9]);
				/* *88시 사용치 않음 **/
				strcpy(inner_forward,"");
			}
                        if(argv[10] && *argv[10])
                                strcpy(serverip,argv[10]);
                        if(argv[11] && *argv[11])
                                strcpy(inner_digit,argv[11]);
			else {
				sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain = '%s'",domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
						return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) custom_info is not",domain);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) {
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(prefix, row[1]?row[1]:"001");
					ps_delSpace(prefix);
					strcpy(inner_digit, row[2]?row[2]:"4");
					ps_delSpace(inner_digit);
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
			}

			if(argv[12] && *argv[12]) 
				strcpy(inner_forward,argv[12]);

			sprintf(prefix,"%3.3s",phoneid+1);
	}
/****
	sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7)='%7.7s'", phoneid+1);
	mysql_query(mysql, sqlcmd);

	sprintf(sqlcmd, "delete from voicemail_users where customer_id = '%s'",phoneid+1);
	mysql_query(mysql, sqlcmd);
*/

	{
	sprintf(sqlcmd, "select 070number,numbertype from number_manage where phoneid='0%7.7s' and defaultip='%s' and domain='%s'",phoneid+1,serverip,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
	}   
	else {
		row_num = mysql_num_rows(result);
		if( row_num != 0 ) {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(numbertype, row[1]?row[1]:"1");
					ps_delSpace(numbertype);
				}
		}
		mysql_free_result(result);
		result = NULL;
	}
}

	strcpy(numbertype,"1");
	if(!strncmp(forward_num,"070",3)) {
		sprintf(sqlcmd, "select type from number_list where number='%s'",forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(ret == CR_SERVER_GONE_ERROR || ret == CR_SERVER_LOST) {
						//_tcpWrite(masterFd, resPacket, strlen(resPacket));
						//exit(0);
						;
				}
				logCmd();
				//return -1; 
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num != 0 ) {
					row = mysql_fetch_row( result );
					if(row) {
						strcpy(numbertype, row[0]?row[0]:"1");
						ps_delSpace(numbertype);
					}
			}
			mysql_free_result(result);
			result = NULL;
		}

		printf("INPUT DATA  Error!(Forward number is represent Number)(%s)(%s)(%s)\n",num070,forward_num,numbertype);
		if(strlen(num070) > 1 && strlen(forward_num) > 1)
		if(!strcmp(num070,forward_num) || *numbertype == '0')
			 return(errorReturn("INPUT DATA  Error!(Forward number is represent Number)",__FILE__,__LINE__));
	}


	strcpy(seq,"0");
	if(strlen(forward_num) == 4 && *inner_digit == '3') 
		forward_num[0] = '0';

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	/*** number_manage ***/
FORWARD_RETRY:
    {
		if(strlen(forward_num) == 4) {
			sprintf(delphoneid,"1%3.3s%4.4s",prefix,forward_num);
			if(!strcmp(phoneid,delphoneid)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",phoneid,delphoneid);
				return -1;
			}

		}
		else if(strlen(forward_num) == 8) {
			sprintf(delphoneid,"%s",forward_num);
			if(!strcmp(phoneid,delphoneid)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",phoneid,delphoneid);
				return -1;
			}
		}
		else if(!strcmp(num070,forward_num)) {
				sprintf(resPacket,"|ERR|IFW same:phoneid:(%s)-forward num:(%s)",num070,forward_num);
				return -1;
		}
		
		
		sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain = '')",phoneid+1,domain);

		printf("\nsqlcmd:(%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|RES|error!(%s, %s)",mysql_error(mysql),sqlcmd );
			printf("\nresPacket:(%s)",resPacket);
			logCmd();
		}
		sprintf(resPacket, "|RES|ok!(%s, %s)",mysql_error(mysql),sqlcmd );
		printf("\nresPacket:(%s)",resPacket);
		logCmd();
	
		sprintf(sqlcmd,"INSERT into forward_number( \
		phoneid ,domain,imid,executedate , executeseq ,number,fromday,today,fromtime,totime,kind,inner_forward) \
		values('%s','%s','%s','%s',%d,'%s','%s','%s','%s','%s','%s','%s')", \
		phoneid,domain,user,tmp,(*seq == '_')?0:atoi(seq)+1,forward_num,fromday,totoday,fromtime,totime, kind,inner_forward);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|insert forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
				if(PVS == 1)
					return(-1);
				else if(retry++ < 3) {
					sprintf(sqlcmd,"delete from forward_number where substr(phoneid,2,7) = '%7.7s'",phoneid+1);
					mysql_query(mysql, sqlcmd);
					goto FORWARD_RETRY;

				}
		}
	}

	/*** number_manage ***/
	{
				sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'F' \
				where phoneid = '0%7.7s' and defaultip='%s'",\
				phoneid+1,serverip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}
	}

/***
|IFW|zermin@test.onnet21.com|2564|01031112588|20080214|20080219|0|23|00)
|IFW|zermin1@naonsoft.com|1111|01194916811
*/
	if(PVS == 1 && MASTER == 1) 
	{
				//sprintf(commandBuf,"|IFW|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],phoneid,serverip,inner_digit,argv[9]);
                                sprintf(commandBuf,"|IFW|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],forward_num,argv[4],argv[5],argv[6],argv[7],argv[8],phoneid,serverip,inner_digit,argv[9]);

				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFW')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				//sprintf(commandBuf,"|IFW|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],phoneid,serverip,inner_digit,argv[9]);
                                sprintf(commandBuf,"|IFW|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],forward_num,argv[4],argv[5],argv[6],argv[7],argv[8],phoneid,serverip,inner_digit,argv[9]);
				    sprintf(resPacket,"|RES|IFW userid:(%s)-(%s)-(%s)",user,domain,forward_num);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IFW')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|IFW userid:(%s)-(%s)-(%s)-(%s)",user,domain,num070,forward_num);
    return 0;       
}




/*************************************************************************
* 트랜잭션 롤백 													* *************************************************************************/
int rollback()
{
  char    sqlcmd[512];
/***
				sprintf(sqlcmd,"DELETE  from number_manage \
				where  substr(phoneid,2,7) = '%7.7s' and defaultip='%s'", \
				phoneid+1,defaultip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|delete number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}


				sprintf(sqlcmd,"DELETE  from sip_buddies \
				where substr(name,2,7) = '%7.7s' and defaultip='%s'",phoneid+1,defaultip);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|delete sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}
*/
				return 0 ;
}





/************************************************************************* 
9779|202|201|1879172|SIP|유선IP폰|0011.a970.684e|0.0.0.0|007086330835@premium_c_5024.lgdacom.net|SIP|0070|007086330835
<<<<<|RES|DU7 domain:(premium_c_5024.lgdacom.net)-(07086330835)=(3):(211.32.148.90)
 *************************************************************************/
int
procINO(int auth_update_flag,char *tmpip,int line)
{
  char passwd[256],add_svc[11];
  char email[256],sqlcmd1[512],tmpRid[21];
  int   qid,returncode,fields_num,cpid,size,need_update = 0,sockfd = -1;
  int   test=0, ret, row_num,index=0, retry=0,i=0,row_num_1=0,j=0;
  char tmp[100],today[65],option2[10],class[20],cid[20],option5[10],option7[10],option1[10];
  unsigned int	tmpNumber;
  struct  utsname   ht;
  char    sqlcmd[1024],phone_type[2],defcontext[30],name1[30],name[60];

  char	destP[256],md5passwd[64];
  char	tel[21],option8[10], command[128];
  char	macaddr[64],tmpdisplay[20],tmpsetcid[20],tmplineno[20],svc_kind[10],tmpusername[10];
	char	oldtel[15];
	char	md5_passwd[64];
	char	ment_flag[2],timeout[5],callgroup[11];
	char	re_regi[5],record[10],old_inner[10];
	char	option3[5],option4[5],option6[5];
	char	old_domain[64];
	char	arsflag[3];
	char	manner_flag[3];
	char	sms_flag[10];
	char	messenger_ip[20];
	char	mailbox[20];
	char	ring_flag[10];
	char	relay_server[20];
	char	serverip_1[20];
	char	none_md5_secret[64];
        /* 20190207 TTS ADD */
	char	oldtts_tick[10];
        
	MD5_DIGEST digest;


	memset(email,0,sizeof(email));
	memset(md5passwd,0,sizeof(md5passwd));
	memset(arsflag,0,sizeof(arsflag));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(option1,0,sizeof(option1));
	memset(option5,0,sizeof(option5));
	memset(option7,0,sizeof(option7));
	memset(option8,0,sizeof(option8));
	memset(cid,0,sizeof(cid));
	memset(option2,0,sizeof(option2));
	memset(class,0,sizeof(class));
	memset(phoneid,0,sizeof(phoneid));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(phone_type,0,sizeof(phone_type)); 
	memset(defcontext,0,sizeof(defcontext)); 
	memset(name,0,sizeof(name)); 
	memset(name1,0,sizeof(name1)); 
	memset(macaddr,0,sizeof(macaddr)); 
	memset(tel,0,sizeof(tel)); 
	memset(resPacket,0,sizeof(resPacket)); 
	memset(tmpdisplay,0,sizeof(tmpdisplay)); 
	memset(tmpsetcid,0,sizeof(tmpsetcid)); 
	memset(tmplineno,0,sizeof(tmplineno)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(tmpusername,0,sizeof(tmpusername)); 
	memset(tmpRid,0,sizeof(tmpRid)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(timeout,0,sizeof(timeout)); 
	memset(callgroup,0,sizeof(callgroup)); 
	memset(re_regi,0,sizeof(re_regi)); 
	memset(record,0,sizeof(record)); 
	memset(old_inner,0,sizeof(old_inner)); 
	memset(option3,0,sizeof(option3)); 
	memset(option4,0,sizeof(option4)); 
	memset(option6,0,sizeof(option6)); 
	memset(old_domain,0,sizeof(old_domain)); 
	memset(command,0,sizeof(command)); 
	memset(manner_flag,0,sizeof(manner_flag)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(mailbox,0,sizeof(mailbox)); 
	memset(oldtel,0,sizeof(oldtel)); 
	memset(ring_flag,0,sizeof(ring_flag)); 
	memset(relay_server,0,sizeof(relay_server)); 
	memset(serverip_1,0,sizeof(serverip_1)); 
	memset(none_md5_secret,0,sizeof(none_md5_secret)); 
        
        /*20190207 TTS ADD*/
	memset(oldtts_tick,0,sizeof(oldtts_tick)); 
/***
	char    ipcc_record[5];
	char    ipcc_application[5];
	char    ipcc_ivr[15];
	char    moh_bill[5];
,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag
*/

	strcpy(ment_flag,"Y");
	strcpy(record,"0");
	strcpy(manner_flag,"N");
	strcpy(sms_flag,"N");
	strcpy(timeout,"30");
	strcpy(re_regi,"60");
        /* 20190207 TTS ADD */
	strcpy(oldtts_tick,"N");

	if(auth_update_flag == 1) {
		strcpy(old_sipdomain,"");
		strcpy(old_sip070number,"");
	}
		
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(strlen(user) > 20)
		user[19] = '\0';

    if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);
    else
		strcpy(passwd,"1111");

    if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(strlen(inner_num) != 4)
	return(errorReturn("PACKET Request Error!(inner num len)",__FILE__,__LINE__));

    if(argv[4] && *argv[4]) 
    {
		if(!strcasecmp(argv[4],"asterisk")) 
		{
			strcpy(outer_num,argv[4]);
			intnumber_type = 2;
		}
		else 
		{
			strcpy(outer_num,argv[4]);
		}
    }
    else {
		strcpy(outer_num,"asterisk");
		intnumber_type = 2;
    }


	/*** 기본 phone_type은 1로서 hard폰 의미 ***/
	    strcpy(phone_type,"1");

    if(argv[5] && *argv[5]) 
		strcpy(name,argv[5]);
	else
		strcpy(name,"unknown");

    if(argv[6] && *argv[6]) 
		strcpy(tel,argv[6]);
	else
		strcpy(tel,"");

    if(argv[7] && *argv[7]) 
		strcpy(tmpdisplay,argv[7]);
	else
		strcpy(tmpdisplay,"");

    if(argv[8] && *argv[8]) 
		strcpy(tmpsetcid,argv[8]);
	else
		strcpy(tmpsetcid,"");
	if(argv[9] && *argv[9])  {
		strcpy(tmplineno,argv[9]);
		if(isdigitstr(argv[9])) {
			sprintf(tmpusername,"%08.8d",atoi(argv[9]));
		}
		else 
			strcpy(tmpusername,"");
	}
	else
		strcpy(tmplineno,"");

	if(argv[10] && *argv[10])
		strcpy(tmpRid,argv[10]);
	else 
		strcpy(tmpRid,"");
/***
	if(argv[11] && *argv[11])
		strcpy(letter_flag,argv[11]);
	else 
		strcpy(letter_flag,"0");
*/

	if(*tmpRid == '\0' && *tmpsetcid != '\0')
		strcpy(tmpRid,tmpsetcid);

/***

	if(ishangul(name1))
		strcpy(name, __base64_encode((unsigned char *)name1, strlen(name1), &size)); 
	else
		strcpy(name,name1);
*/
	if(strlen(old_sip070number) < 7 )
		strcpy(old_sip070number,outer_num);

	strcpy(mailbox,"999999");
		
    domain_string(domain);
    if(PVS == 1) 
    {
		if(!authmysql)
			authinit(AUTH_SERVER);

		row_num= 0;
		sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
		if( ret = mysql_query(authmysql, sqlcmd) ) {
			return -1;
		}   
		else  {
			result = mysql_store_result(authmysql);
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
			} 
			else {
				row_num = mysql_num_rows(result);
				if( row_num == 0 )
					return -1;
				else  {
					row = mysql_fetch_row(result);
					strcpy(sip_passwd, row[0]?row[0]:"1111");
				}
				mysql_free_result(result);
				result = NULL;
			}
		}
		printf("\n[5m[7msip_passwd	==========>	(%s)[0m[0m",sip_passwd);
		printf("\n[5m[7mipcc_record	==========>	(%s)[0m[0m",ipcc_record);

                sprintf(sqlcmd, "select macaddr from phone_info where number = '%s'", outer_num);
                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				rollback();
				if(auth_update_flag == 1) {
					_tcpWrite(masterFd, resPacket, strlen(resPacket));
					logCmd();
					exit(0);
				}
				else {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}
		}

		result = mysql_store_result( mysql );
		if(result )
		{
			row_num = mysql_num_rows(result);
			if( row_num != 0 )
			{
				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(macaddr, row[0]?row[0]:"0000:0000:0000");
					ps_delSpace(macaddr);
				}
			}
			else 
					strcpy(macaddr,"0000:0000:0000");
			mysql_free_result(result);
			result = NULL;
		}

                //sprintf(sqlcmd, "select status,type,svc_kind from number_list where domain = '%s' and number='%s'  and status = 1",domain, outer_num);

		//if(strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808"))
		//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7))
		//if(!strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7) || !strncmp(outer_num,"0704880",7))
		if(relayCheck(outer_num))
			sprintf(sqlcmd, "select status,type,svc_kind,domain,arsflag,etc,serverip from number_list where (number='%s') and (status = 1 or status = 3)", outer_num);
		else
			sprintf(sqlcmd, "select status,type,svc_kind,domain,arsflag,etc,serverip from number_list where (number='%s' or number = '%s') and (status = 1 or status = 3)", outer_num, old_sip070number);

/*
sqlcmd:(select macaddr from phone_info where number = '07075857700')
sqlcmd:(select status,type from number_list where number='07075857700'  and status = 1)
sqlcmd:(select proxyip,prefix,defcontext from custom_info where domain = 'lgdacom.net')
phoneid : (19997700)
sqlcmd:(select domain from number_manage where domain = 'lgdacom.net' and extension = '7700' and 070
number = '07075857700')
*/

                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
					rollback();
					if(auth_update_flag == 1) {
						_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						exit(0);
					}
					else {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
			}
                }

                result = mysql_store_result( mysql );
                if(!result )
                {
                        sprintf(resPacket, "|ERR|mysql Search Error number!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return(-1);
                }
                row_num = mysql_num_rows(result);

                if( row_num == 0 )
                {
                        mysql_free_result(result);
			result = NULL;

			sprintf(sqlcmd, "select serverip,etc from number_list where domain = '%s' and status='1' limit 1",domain);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					if(row_num) {
						row = mysql_fetch_row(result);
						sprintf(sqlcmd, "insert into number_list(number,forbid_prefix,serverip,type,lastdate,etc,org_num,areacode,svc_kind, status,domain) values('%s','060','%s','1',SYSDATE(),'%s','','','PC','1')",outer_num,row[0]?row[0]:"",row[1]?row[1]:"",domain);
					}
				}
				mysql_free_result(result);
				result = NULL;

				mysql_query(mysql, sqlcmd);
			}
	//		printf("\nsqlcmd:(%s)\n",sqlcmd);

			if(relayCheck(outer_num))
				sprintf(sqlcmd, "select status,type,svc_kind,domain,arsflag,etc,serverip from number_list where (number='%s') and (status = 1 or status = 3)", outer_num);
			else
				sprintf(sqlcmd, "select status,type,svc_kind,domain,arsflag,etc,serverip from number_list where (number='%s' or number = '%s') and (status = 1 or status = 3)", outer_num, old_sip070number);
			ret = mysql_query(mysql, sqlcmd);

			row_num = 0;
			result = mysql_store_result( mysql);
			if(result) {
				row_num = mysql_num_rows(result);
			}

			if( row_num == 0 ) {
				sprintf(resPacket, "|ERR|(%s)-(%s) number is not Valid(not in number_lisT)",domain,outer_num);
				return -1;
			}

                }

		row = mysql_fetch_row( result );
		if(row) 
		{
			strcpy(number_type, row[1]?row[1]:"1");
			ps_delSpace(number_type);
			intnumber_type =  atoi(number_type);
			strcpy(svc_kind, row[2]?row[2]:"");
			ps_delSpace(svc_kind);
			strcpy(old_domain, row[3]?row[3]:"");
			ps_delSpace(old_domain);
			strcpy(arsflag, row[4]?row[4]:"");
			ps_delSpace(arsflag);
			strcpy(relay_server, row[5]?row[5]:"127.0.0.1");
			ps_delSpace(relay_server);
			strcpy(serverip, row[6]?row[6]:"127.0.0.1");
			ps_delSpace(serverip);

		}
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select proxyip,prefix,defcontext,add_svc,ment_flag,timeout,inner_digit,re_regi from custom_info where domain = '%s'",domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				rollback();
				if(auth_update_flag == 1) {
					_tcpWrite(masterFd, resPacket, strlen(resPacket));
					logCmd();
					exit(0);
				}
				else {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error custom info!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(!strcmp(inner_num,"0000"))
				sprintf(phoneid,"%s",outer_num);
			else 
				return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				strcpy(inner_digit,"4");

				sprintf(phoneid,"%s",outer_num);
			}
			else {
				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(prefix, row[1]?row[1]:"000");
					ps_delSpace(prefix);
					strcpy(defcontext, row[2]?row[2]:"outbound");
					ps_delSpace(defcontext);
					strcpy(add_svc, row[3]?row[3]:"NN");
					ps_delSpace(add_svc);
					strcpy(ment_flag, row[4]?row[4]:"Y");
					ps_delSpace(ment_flag);
					strcpy(timeout, row[5]?row[5]:"30");
					ps_delSpace(timeout);
					strcpy(inner_digit, row[6]?row[6]:"4");
					ps_delSpace(inner_digit);
					strcpy(re_regi, row[7]?row[7]:"60");
					ps_delSpace(re_regi);
				}
				mysql_free_result(result);
				result = NULL;
				if(*inner_digit == '3')
					inner_num[0] = '0';
				sprintf(phoneid,"%1.1s%3.3s%4.4s",phone_type,prefix,inner_num);
			}
			if(tmpip && strcmp(tmpip,serverip)) {
				strcpy(serverip,tmpip);
				sprintf(sqlcmd, "UPDATE custom_info  set proxyip = '%s'  where domain= '%s'",serverip,domain);
				mysql_query(mysql, sqlcmd);

				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd, "UPDATE DCS_PHONE_AUTH  set sswip = '%s',sipetc3='N'   where setdn= '%s'",serverip,outer_num);
				if(mysql_query(authmysql, sqlcmd)) {
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
			}
		}


			sprintf(sqlcmd, "select option2,class,letter_flag,ring_flag from number_manage where substr(phoneid,1,4) = '0%3.3s' and domain='%s' and (length(class) = 3 or length(class) = 7) limit 1",prefix, domain);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				;
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				;
			}   
			else {
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					;
				}
				else {
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(option2, row[0]?row[0]:"N");
						ps_delSpace(option2);
						strcpy(class, row[1]?row[1]:"");
						ps_delSpace(class);
/***
						if(*letter_flag == '\0' || *letter_flag == 'N' || *letter_flag == '0') {
							strcpy(letter_flag, row[2]?row[2]:"N");
							ps_delSpace(letter_flag);
						}
*/
						ps_delSpace(add_svc);
						strcpy(ring_flag, row[3]?row[3]:"0");
						ps_delSpace(ring_flag);
					}
				}
				mysql_free_result(result);
				result = NULL;
			}
	}
	else {
		memset(tmpRid,0,sizeof(tmpRid)); 
		memset(sip_passwd,0,sizeof(sip_passwd)); 

			if(argv[6] && *argv[6]) 
				strcpy(number_type,argv[6]);

			if(argv[7] && *argv[7]) 
				strcpy(tmpdisplay,argv[7]);

			if(argv[8] && *argv[8]) 
				strcpy(tmpsetcid,argv[8]);
			if(argv[9] && *argv[9]) {
				strcpy(tmplineno,argv[9]);
				if(isdigitstr(argv[9])) {
					sprintf(tmpusername,"%08.8d",atoi(argv[9]));
				}
				else
					strcpy(tmpusername,"");

			}
			else
				strcpy(tmplineno,"");

			if(argv[10] && *argv[10]) 
				strcpy(phoneid,argv[10]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			if(argv[11] && *argv[11]) 
				strcpy(macaddr,argv[11]);

			if(argv[12] && *argv[12]) 
				strcpy(add_svc,argv[12]);

			if(argv[13] && *argv[13]) 
				strcpy(serverip,argv[13]);

			if(argv[14] && *argv[14]) 
				strcpy(svc_kind,argv[14]);
			if(argv[15] && *argv[15]) 
				strcpy(serverip,argv[15]);
			if(argv[16] && *argv[16]) 
				strcpy(option2,argv[16]);
			if(argv[17] && *argv[17]) 
				strcpy(class,argv[17]);
			if(argv[18] && *argv[18]) 
				strcpy(areacode,argv[18]);
			if(argv[19] && *argv[19]) 
				strcpy(tmpRid,argv[19]);

			if(argv[20] && *argv[20]) 
				strcpy(inner_digit,argv[20]);
			if(argv[21] && *argv[21]) 
				strcpy(callgroup,argv[21]);
			if(argv[22] && *argv[22]) 
				strcpy(re_regi,argv[22]);
			else
				strcpy(re_regi,"60");

/***option4,option6,option7,option8,record ***/
			if(argv[23] && *argv[23]) 
				strcpy(option4,argv[23]);
			if(argv[24] && *argv[24]) 
				strcpy(option6,argv[24]);
			if(argv[25] && *argv[25]) 
				strcpy(option7,argv[25]);
			if(argv[26] && *argv[26]) 
				strcpy(option8,argv[26]);
			if(argv[27] && *argv[27]) 
				strcpy(record,argv[27]);
			if(argv[28] && *argv[28]) 
				strcpy(old_domain,argv[28]);
			if(argv[29] && *argv[29]) 
				strcpy(letter_flag,argv[29]);
			if(argv[30] && *argv[30]) 
				strcpy(manner_flag,argv[30]);
			if(argv[31] && *argv[31]) 
				strcpy(sms_flag,argv[31]);
			if(argv[32] && *argv[32]) 
				strcpy(record_flag,argv[32]);
			if(argv[33] && *argv[33]) 
				strcpy(crm_flag,argv[33]);
			if(argv[34] && *argv[34]) 
				strcpy(old_sip070number,argv[34]);
			if(argv[35] && *argv[35]) 
				strcpy(mailbox,argv[35]);
			if(argv[36] && *argv[36]) 
				strcpy(tel,argv[36]);
			if(argv[37] && *argv[37]) 
				strcpy(messenger_ip,argv[37]);
			if(argv[38] && *argv[38]) 
				strcpy(sip_passwd,argv[38]);
/***
,ipcc_application,ipcc_record,ipcc_ivr,moh_bill
***/
			if(argv[39] && *argv[39]) 
				strcpy(ring_flag,argv[39]);
			if(argv[40] && *argv[40]) 
				strcpy(ipcc_application,argv[40]);
			if(argv[41] && *argv[41]) 
				strcpy(ipcc_record,argv[41]);
			if(argv[42] && *argv[42]) 
				strcpy(ipcc_ivr,argv[42]);
			if(argv[43] && *argv[43]) 
				strcpy(moh_bill,argv[43]);
			if(argv[44] && *argv[44]) 
				strcpy(cust_name,argv[44]);

			if(*sip_passwd == '\0')
				strcpy(sip_passwd,"1111");
			
			sprintf(prefix,"%3.3s",phoneid+1);
			strcpy(defcontext, "outbound");
    }

    printf("\n[7m[5mphoneid : (%s)[0m[0m",phoneid);


/**
| 112.223.57.107 | sub1       | sub  |
| 112.223.57.108 | sub2       | sub  |
+----------------+------------+------
*/

	//if(relayFlag == 1 || strstr(outer_num,"0704367") || strstr(outer_num,"0704659") || strstr(outer_num,"0704808")) {
	//if(relayFlag == 1 || !strncmp(outer_num,"0704367",7) || !strncmp(outer_num,"0704659",7) || !strncmp(outer_num,"0704808",7)) {
	if(relayFlag == 1 || relayCheck(outer_num)) {
		sprintf(commandBuf,"|UCL|%s@%s|%s|%s|%s|",user,domain,outer_num,tmpip,"1");
		printf("\ncommandBuf:(%s)",commandBuf);

		if(strcmp(relay_server,"127.0.0.1") && strcmp(tmpip,"127.0.0.1")) {

			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",relay_server);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				//return 0;
				return -1;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip_1, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip_1);
					ps_delSpace(row[1]);
				}
				if(*serverip_1 && strlen(serverip_1) > 10 ) {
					if((ret = commandSend(commandBuf,serverip_1,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UCL')",tmp, commandBuf,serverip_1);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;

		}
	}


    if(PVS == 1) 
    {
	char	tmpnumber[20];
	char	tmpextension[10];
	int 	band_check = 0;
			
		memset(tmpnumber,0,sizeof(tmpnumber));
		memset(tmpextension,0,sizeof(tmpextension));
	
DO_CHECK:
		band_check = 0;
		if(strncasecmp(domain,"samchully",9))  {
			sprintf(sqlcmd, "select extension from ban_ext where extension='%s'",phoneid+4);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
			else {
				band_check = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
			}
		}

		row_num = 0;
		sprintf(sqlcmd, "select 070number,extension from number_manage where phoneid='0%7.7s' and defaultip='%s'",phoneid+1,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
	printf("\nnumber_type:<<<<<<<<<<<<<(%s)))))))(%d)",number_type,row_num);
			if( row_num == 0 ) 
			{
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(tmpnumber, row[0]?row[0]:"07000000000");
					ps_delSpace(tmpnumber);
					strcpy(tmpextension, row[0]?row[0]:"0000");
					ps_delSpace(tmpextension);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		if(row_num > 0 || band_check > 0) {
			if(!strcmp(tmpnumber,outer_num) && (band_check == 0)) {
				;
			}
			else {
				if(*inner_digit == '4')
					sprintf(phoneid+4,"%04d",(atoi(inner_num)+getpid())%10000);
				else if(*inner_digit == '3')
					sprintf(phoneid+4,"0%03d",(atoi(inner_num)+getpid())%1000);
				
				strcpy(inner_num,phoneid+4);
				need_update = 1;
				goto DO_CHECK;
			}
		}
		if(*inner_digit == '3' && (inner_num[1] == '0' || inner_num[1] == '1')) {
			phoneid[5] = '2';
				strcpy(inner_num,phoneid+4);
				need_update = 1;
				goto DO_CHECK;
		}
	}
	else  {
		sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s'",outer_num);
		mysql_query(mysql, sqlcmd);
		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);

		rollback();
	}


printf("\n[auth_update_flag:(%d),doamin:(%s),line:(%d)[0m\n",auth_update_flag,domain,line);
printf("\n[auth_update_flag:(%d),doamin:(%s),line:(%d)[0m\n",auth_update_flag,domain,line);

	if(PVS == 1) {
	if(auth_update_flag == 0)
	{
		if(line != 1){
                        // 20190207 TTS 수정
			//sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,tel,ring_flag from number_manage where (070number='%s' or 070number='%s') and domain = '%s'",outer_num,old_sip070number,domain);

                        if(old_sipdomain && strlen(old_sipdomain) > 10 &&  strcmp(domain,old_sipdomain)){
                            sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,tel,ring_flag,tts_tick from number_manage where (070number='%s' or 070number='%s') and (domain = '%s' OR domain='%s')",outer_num,old_sip070number,domain,old_sipdomain);
                        }else{
                            sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,tel,ring_flag,tts_tick from number_manage where (070number='%s' or 070number='%s') and domain = '%s'",outer_num,old_sip070number,domain);
                        }
                } else {
                        // 20190207 TTS 수정
			//sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,tel,ring_flag from number_manage where (070number='%s')",outer_num);
			sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,tel,ring_flag,tts_tick from number_manage where (070number='%s')",outer_num);
                }
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
		}   
		else {
				result = mysql_store_result( mysql );
				if(!result ) 
				{
					;
				}   
								
				else {
					row_num_1 = mysql_num_rows(result);
					if( row_num_1 == 0 ) 
					{
						;
					}
					else {
						row = mysql_fetch_row( result );
						if(row) 
						{
							strcpy(option1, row[0]?row[0]:"N");
							ps_delSpace(option1);
							strcpy(option2, row[1]?row[1]:"");
							ps_delSpace(option2);
							strcpy(option3, row[2]?row[2]:"");
							ps_delSpace(option3);
							strcpy(option4, row[3]?row[3]:"");
							ps_delSpace(option4);
							strcpy(option5, row[4]?row[4]:"");
							ps_delSpace(option5);
							strcpy(option6, row[5]?row[5]:"");
							ps_delSpace(option6);
							strcpy(option7, row[6]?row[6]:"");
							ps_delSpace(option7);
							strcpy(option8, row[7]?row[7]:"");
							ps_delSpace(option8);
							strcpy(cid, row[8]?row[8]:"");
							ps_delSpace(cid);
							strcpy(old_inner, row[9]?row[9]:"");
							ps_delSpace(old_inner);
		/***
		option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,
		ment_flag,timeout,inner_digit,re_regi,record
							if(*cid)
								strcpy(tmpsetcid,cid);
		*/
							if(strcmp(inner_num,old_inner)) {
							printf("\n>>> inner_num(%s)",inner_num);
							printf("\n>>> old_inner(%s)",old_inner);
								strcpy(inner_num,old_inner);
								sprintf(phoneid+4,"%s",inner_num);
							printf("\n>>> phoneid(%s)",phoneid);
							}
							strcpy(class, row[10]?row[10]:"");
							ps_delSpace(class);
							strcpy(ment_flag, row[11]?row[11]:"");
							ps_delSpace(ment_flag);
							strcpy(timeout, row[12]?row[12]:"30");
							ps_delSpace(timeout);
/***
							strcpy(inner_digit, row[13]?row[13]:"4");
							ps_delSpace(inner_digit);
*/
							strcpy(record, row[14]?row[14]:"");
							ps_delSpace(record);
/***
							strcpy(letter_flag, row[15]?row[15]:"N");
							ps_delSpace(letter_flag);
*/
							strcpy(tel, row[16]?row[16]:"");
							ps_delSpace(tel);
							strcpy(ring_flag, row[17]?row[17]:"0");
							ps_delSpace(ring_flag);

                                                        /* 20190207 TTS ADD */
                                                        strcpy(oldtts_tick, row[18]?row[18]:"N");
                                                        ps_delSpace(oldtts_tick);
						need_update = 1;
						}

					}
					mysql_free_result(result);
					result = NULL;
				}
		}

		if(need_update == 1) {
				sprintf(sqlcmd, "select callgroup from sip_buddies where callerid='<%s>' ",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					;	
				}   
				result = mysql_store_result( mysql );
				if(!result ) 
				{
					;
				}   
								
				else {
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) 
					{
						;
					}
					else {
						row = mysql_fetch_row( result );
						if(row) 
						{
							strcpy(callgroup, row[0]?row[0]:"");
							ps_delSpace(callgroup);
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
		}
	}
/**
	char    ipcc_record[5];
	char    ipcc_application[5];
	char    ipcc_ivr[15];
	char    moh_bill[5];
*/

        //number_manage에 없는경우 && dup check 안한 경우
        if(row_num_1 == 0 && need_update == 0) {
		sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,messenger_ip,tel,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill from number_manage_bak where (070number='%s' or 070number='%s') and domain = '%s'",outer_num,old_sip070number,domain);
		sprintf(sqlcmd, "select option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,ment_flag,timeout,inner_digit,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,messenger_ip,tel,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill from number_manage_bak where (070number='%s' or 070number='%s') and domain='%s'",outer_num,old_sip070number,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|select!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
		}   
		else {
				result = mysql_store_result( mysql );
				if(!result ) 
				{
					;
				}   
								
				else {
					row_num_1 = mysql_num_rows(result);
					if( row_num_1 == 0 ) 
					{
						;
					}
					else {
						row = mysql_fetch_row( result );
						if(row) 
						{
							strcpy(option1, row[0]?row[0]:"N");
							ps_delSpace(option1);
							strcpy(option2, row[1]?row[1]:"");
							ps_delSpace(option2);
							strcpy(option3, row[2]?row[2]:"");
							ps_delSpace(option3);
							strcpy(option4, row[3]?row[3]:"");
							ps_delSpace(option4);
							strcpy(option5, row[4]?row[4]:"");
							ps_delSpace(option5);
							strcpy(option6, row[5]?row[5]:"");
							ps_delSpace(option6);
							strcpy(option7, row[6]?row[6]:"");
							ps_delSpace(option7);
							strcpy(option8, row[7]?row[7]:"");
							ps_delSpace(option8);
							if(*cid == '\0') {
								strcpy(cid, row[8]?row[8]:"");
								ps_delSpace(cid);
							}
							strcpy(old_inner, row[9]?row[9]:"");
							ps_delSpace(old_inner);
							strcpy(record, row[14]?row[14]:"0");
							ps_delSpace(record);

/***
pcc_application,ipcc_record,ipcc_ivr,moh_bill
*/
		/***
		option1,option2,option3,option4,option5,option6,option7,option8,cid,substr(phoneid,5,8),class,
		ment_flag,timeout,inner_digit,re_regi,record
							if(*cid)
								strcpy(tmpsetcid,cid);
		*/
							if(strcmp(inner_num,old_inner)) {
							printf("\n>>> inner_num(%s)",inner_num);
							printf("\n>>> old_inner(%s)",old_inner);
								strcpy(inner_num,old_inner);
								sprintf(phoneid+4,"%s",inner_num);
							printf("\n>>> phoneid(%s)",phoneid);
							}
							strcpy(class, row[10]?row[10]:"");
							ps_delSpace(class);
							strcpy(ment_flag, row[11]?row[11]:"");
							ps_delSpace(ment_flag);
							strcpy(timeout, row[12]?row[12]:"30");
							ps_delSpace(timeout);
/***
							strcpy(inner_digit, row[13]?row[13]:"4");
							ps_delSpace(inner_digit);
*/
							strcpy(record, row[14]?row[14]:"");
							ps_delSpace(record);
/****
							if(*letter_flag == '\0' || *letter_flag == 'N' || *letter_flag == '0') {
								strcpy(letter_flag, row[15]?row[15]:"N");
								ps_delSpace(letter_flag);
							}
*/
							strcpy(manner_flag, row[16]?row[16]:"N");
							ps_delSpace(manner_flag);
							strcpy(sms_flag, row[17]?row[17]:"N");
							ps_delSpace(sms_flag);
/***
							if(*record_flag == '\0') {
								strcpy(record_flag, row[18]?row[18]:"");
								ps_delSpace(record_flag);
							}
							if(*crm_flag == '\0') {
								strcpy(crm_flag, row[19]?row[19]:"");
								ps_delSpace(crm_flag);
							}
***/
							strcpy(messenger_ip, row[20]?row[20]:"127.0.0.1");
							ps_delSpace(messenger_ip);
							strcpy(tel, row[21]?row[21]:"");
							ps_delSpace(tel);
							strcpy(ring_flag, row[22]?row[22]:"0");
							ps_delSpace(ring_flag);

/***
ipcc_application,ipcc_record,ipcc_ivr,moh_bill
							strcpy(ipcc_application, row[23]?row[23]:"N");
							ps_delSpace(ipcc_application);
							strcpy(ipcc_record, row[24]?row[24]:"N");
							ps_delSpace(ipcc_application);
							strcpy(ipcc_ivr, row[25]?row[25]:"0");
							ps_delSpace(ipcc_ivr);
							strcpy(moh_bill, row[26]?row[26]:"N");
							ps_delSpace(moh_bill);
*/
						need_update = 1;
						}
					}
					mysql_free_result(result);
					result = NULL;
				}
				if(need_update == 1) {
						sprintf(sqlcmd, "select callgroup,mailbox from sip_buddies_bak where callerid='<%s>'",outer_num);
						printf("\nsqlcmd:(%s)",sqlcmd);
						if( ret = mysql_query(mysql, sqlcmd) ) 
						{
							;	
						}   

						result = mysql_store_result( mysql );
						if(!result ) 
						{
							;
						}   
						else {
							row_num = mysql_num_rows(result);
							if( row_num == 0 ) 
							{
								;
							}
							else {
								row = mysql_fetch_row( result );
								if(row) 
								{
									strcpy(callgroup, row[0]?row[0]:"");
									ps_delSpace(callgroup);
									strcpy(mailbox, row[1]?row[1]:"20");
									ps_delSpace(mailbox);
								}
							}
							mysql_free_result(result);
							result = NULL;
						}
				}
			//dup check 후 현재 block skip 하기 위해 need_update =1
                        need_update = 1;
                        goto DO_CHECK;
		}
		}
		if(strlen(messenger_ip) < 10) {
			sprintf(sqlcmd, "select ip from messenger_ip where pc_ip = '%s'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
			    sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			    logCmd();
			}
			else {
				result = mysql_store_result( mysql );
				if(!result )
				{
				    sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd);
				}

				else {
					row_num = mysql_num_rows(result);
					if( row_num == 0 )
					{
					    ;
					}
					else {
						row = mysql_fetch_row( result );
						if(row)
						{
						    strcpy(messenger_ip, row[0]?row[0]:"127.0.0.1");
						}
					}
				}
			    mysql_free_result(result);
			    result = NULL;
			}

		}
	}

	if(!strcmp(messenger_ip,"127.0.0.1") || strlen(messenger_ip) < 10) {
		strcpy(messenger_ip,DEFAULT_MESSENGER_IP);
	}

	if(PVS == 1 && (need_update || auth_update_flag == 1)) {
		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		if(*inner_digit == '4') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s',sippwd='%s', updatetime='%s',sipetc3='N'  where \
					setdn = '%s'",tmpdisplay,prefix,phoneid+4,domain,prefix,\
					phoneid+4,prefix,phoneid+4,sip_passwd,tmp,outer_num);
			else
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s',sippwd='%s', updatetime='%s',sipetc3='N'  where \
					setdn = '%s'",tmpdisplay,phoneid+4,prefix,phoneid+4,domain,prefix,\
					phoneid+4,prefix,phoneid+4,sip_passwd,tmp,outer_num);
		}
		else if(*inner_digit == '3') {
			if(!strncmp(cpetype,"CPG",3) || !strncmp(servicetype,"IPCC",4))
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', sippwd='%s',updatetime='%s',sipetc3='N'  where \
					setdn = '%s'",tmpdisplay,prefix,phoneid+4,domain,prefix,\
					phoneid+4,prefix,phoneid+4,sip_passwd,tmp,outer_num);
			else
					sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
					sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', sippwd='%s',updatetime='%s',sipetc3='N'  where \
					setdn = '%s'",tmpdisplay,phoneid+5,prefix,phoneid+4,domain,prefix,\
					phoneid+4,prefix,phoneid+4,sip_passwd,tmp,outer_num);
		}

		printf("\nsqlcmd:(%s)",sqlcmd);

		if(!authmysql)
			authinit(AUTH_SERVER);

		if( mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update DCS_PHONE_AUTH!(%d)(%s, %s)",__LINE__,mysql_error(authmysql),sqlcmd );
			sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
			logCmd();
		}
	}

	if(*number_type == '0') {
			sprintf(sqlcmd,"update hunting_group set domain='%s',prefix='%s' \
			where number = '%s'",domain,prefix,outer_num);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}

			sprintf(sqlcmd,"update hunting_member set prefix='%s' \
			where h_number = '%s'",prefix,outer_num);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}

			sprintf(sqlcmd,"update ars_member set prefix='%s' \
			where h_number = '%s'",prefix,outer_num);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}



			if(PVS != 1 && *number_type == '0') {
					sprintf(command,"/var/lib/asterisk/sounds/ars/%s /var/lib/asterisk/sounds/ars/%s",old_domain,domain);
					system(command);
			}
	}
	else {
/****
			sprintf(sqlcmd,"update hunting_group set domain='%s',prefix='%s' \
			where number = '%s'",domain,prefix,outer_num);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
			}

			sprintf(sqlcmd,"update hunting_member set prefix='%s' \
			where h_number = '%s'",prefix,outer_num);
*/

            if(strcmp(old_sipdomain,domain) && strlen(old_sipdomain) > 5) {
                char    oldprefix[5];
                char    olddefaultip[20];
                int old_row_num=0;

                memset(olddefaultip,0,sizeof(olddefaultip));
                memset(oldprefix,0,sizeof(oldprefix));

                sprintf(sqlcmd, "select proxyip,prefix from custom_info where domain = '%s'",old_sipdomain);
                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }
                else {

                        result = mysql_store_result( mysql );
                        if(!result )
                        {
                            sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd);
                        }

                        else {
                                old_row_num = mysql_num_rows(result);
                                if( old_row_num == 0 )
                                {
                                    ;
                                }
                                else {
                                        row = mysql_fetch_row( result );
                                        if(row)
                                        {
                                            strcpy(olddefaultip, row[0]?row[0]:"");
                                            ps_delSpace(olddefaultip);
                                            strcpy(oldprefix, row[1]?row[1]:"001");
                                            ps_delSpace(oldprefix);
                                        }
                                }
                            mysql_free_result(result);
                            result = NULL;
			}
                }

                if(*olddefaultip && *oldprefix) {
                            sprintf(sqlcmd,"update hunting_member set prefix='%s',defaultip='%s' \
                            where 070number = '%s'",prefix,serverip,outer_num);

                            if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|update hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                            }

                            sprintf(sqlcmd,"update ars_member set prefix='%s',defaultip='%s' \
                            where 070number = '%s'",prefix,serverip,outer_num);

                            if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|update hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                            }
                }
            }

            if(strcmp(old_sip070number,outer_num) && strlen(old_sip070number) > 5) {

                            sprintf(sqlcmd,"update hunting_member set 070number='%s' \
                            where 070number = '%s'",outer_num, old_sip070number);

                            if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|update hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                            }

                            sprintf(sqlcmd,"update ars_member set 070number='%s' \
                            where 070number = '%s'",outer_num, old_sip070number);

                            if( mysql_query(mysql, sqlcmd) ) {
                                sprintf(resPacket, "|ERR|update ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                            }
            }

	}


	/*** 내선 번호가 ???인 넘들 삭제 처리 ***/
	if(*number_type == '1')
		sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s'",outer_num);
	else
		sprintf(sqlcmd,"DELETE from  number_manage  where\
		substr(phoneid,2,7) = '%s' and defaultip='%s'", phoneid+1,serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);

	if( mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|delete number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		//return(-1);
	}
 
 	// BMLINK 20171030 MODIFY
	int checked_cidresult=0;
	printf("\n procINO =================check_cidlist start \n");
	if(PVS == 1){
            printf("\n procINO =================tmpRid(%s) \n",tmpRid);
            printf("\n procINO =================old_sip070number(%s) \n",old_sip070number);
            printf("\n procINO =================domain(%s) \n",domain);
            printf("\n procINO =================old_sipdomain(%s) \n",old_sipdomain);
            printf("\n procINO =================old_domain(%s) \n",old_domain);
            printf("\n procINO =================setcid(%s) \n",setcid);

            //checked_cidresult = check_cidlist(tmpRid,domain,prefix,old_sip070number,serverip, outer_num,setcid);
            checked_cidresult = check_cidlist( ( ( setcid && strlen(setcid) > 5 ) ? setcid : tmpRid ),domain,prefix,old_sip070number,serverip, outer_num,setcid, tmpRid);
           /* 
            if(setcid && strlen(setcid) > 5 &&  old_sipdomain && strlen(old_sipdomain) > 20 && strcmp(domain,old_sipdomain))
            {
                printf("\n[1;41m procINO =================도메인변경에 대한 ORG번호 처리 (%s) [0m\n",setcid);
            	int checked_cidresult1=check_cidlist( "" ,old_sipdomain,prefix,outer_num,serverip, old_sip070number,"", "");
                printf("\n[1;41m procINO =====도메인변경에 대한 ORG번호 처리 ret=(%d/%d) [0m\n",checked_cidresult,checked_cidresult1);
		if(!strncmp(setcid,"070",3) && checked_cidresult1 == 0 && checked_cidresult == 1){
                    //VV에서 도메인변경시 원번호의 cid_list미추가 보완//혹시 2번 추가되는 부분 추가 확인 필요
                    checked_cidresult=0;
                }
            }
            */
	}
	//if(strlen(tmpRid) > 5 && PVS == 1) {
	if(PVS == 1) {
		if( strlen(tmpRid) > 5 /*&& checked_cidresult == 0*/){ //20170701
                    printf("\n ================= CID_LIST DELETE \n");
                    sprintf(sqlcmd," DELETE FROM cid_list WHERE cid = '%s' AND domain = '%s' AND user = '%s'",( ( setcid && strlen(setcid) > 5 ) ? setcid : tmpRid ),domain,outer_num);
                    printf("\nsqlcmd:(%s)",sqlcmd);
                    if( mysql_query(mysql, sqlcmd) ) {
                        if(mysql)
                            mysql_close(mysql);
                        
                        sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                        logCmd();
                    }
		    printf("\n procINO ================= CID_LIST INSERT \n");
        	    sprintf(sqlcmd,"INSERT into cid_list(cid,domain,prefix,user) values(\
                    '%s','%s','%3.3s','%s')",( ( setcid && strlen(setcid) > 5 ) ? setcid : tmpRid ),domain,prefix,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
                                if(mysql)
                                    mysql_close(mysql);

				sprintf(resPacket, "|ERR|update number_list!19(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return -1;
			}
		}
		printf("\n =================check_cidlist end \n");
	}
	else {
		if(*tmpsetcid == '\0')
			sprintf(sqlcmd,"UPDATE number_list set \
			domain='%s',status = 1,subsno='%s',areacode='%s',lastdate = NOW() ,cust_name='%s' where \
			number = '%s'", domain,tmplineno,auto_area,cust_name,outer_num);
		else {
			sprintf(sqlcmd,"UPDATE number_list set \
			domain='%s',status = 1,org_num = '%s',subsno='%s',areacode='%s',lastdate = NOW() ,cust_name='%s' where \
			number = '%s'", domain,tmpsetcid,tmplineno,auto_area,cust_name,outer_num);
		}

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_list!20(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
	}

	


	if(strcasecmp(outer_num,"asterisk"))
	{
		if(PVS == 1) 
		{
			sprintf(sqlcmd, "select type,number from number_list where number = '%s' and status = 1",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   
			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
			row_num = mysql_num_rows(result);
	printf("\nnumber_type:<<<<<<<<<<<<<(%s)))))))(%d)",number_type,row_num);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s) is not valid num",outer_num);
				return -1;
			}
	printf("\nnumber_type:<<<<<<<<<<<<<(%s)))))))",number_type);
			row = mysql_fetch_row( result );
			if(row) 
			{
				strcpy(number_type, row[0]?row[0]:"1");
				ps_delSpace(number_type);
			}
	printf("\nnumber_type:<<<<<<<<<<<<<(%s)))))))",number_type);
			mysql_free_result(result);
			result = NULL;
		}
/***
		else
			sprintf(number_type,"%d",intnumber_type);
*/

               /*** ..................... ***/
		if(PVS == 1) {
			sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,command);
				if(sockfd > -1) {
					strcpy(command,"Action: Logoff\r\n\r\n");
					write(sockfd, command, strlen(command));
					close(sockfd);
				}
			}
		}
	}
	printf("\nnumber_type:(((((((((%s)))))))",number_type);

	/***개인번호, 070번호 있슴 ***/
	if(*number_type == '1' && strcasecmp(outer_num,"asterisk")) 
	{
		//outer_num, old_sip070number
		sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s' or 070number='%s'",outer_num,old_sip070number);
		mysql_query(mysql, sqlcmd);

		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);

		sprintf(sqlcmd, "DELETE from sip_buddies where callerid = '<%s>' or callerid='<%s>'",outer_num,old_sip070number);
		mysql_query(mysql, sqlcmd);
		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);
		
		if(PVS == 1) 
		{
			sprintf(sqlcmd, "select phoneid from number_manage where 070number = '%s' or 070number='%s'",outer_num,old_sip070number);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
						
			row_num = mysql_num_rows(result);
			if( row_num != 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|DUP inner_num2!(%s, %s, %s, %s)",user,domain,inner_num,outer_num);
				return -1;
			}
			mysql_free_result(result);
			result = NULL;
		}
		else {
			sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s'",outer_num);
			mysql_query(mysql, sqlcmd);
		}
	}

	if(*number_type == '0'&& strcasecmp(outer_num,"asterisk") && !strcmp(svc_kind,"UC"))  {
		sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s' and extension='%4.4s'",outer_num,inner_num);
		mysql_query(mysql, sqlcmd);

		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);
		mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd, "DELETE from sip_buddies where callerid = '<%s>' and substr(name,2,7) = '%3.3s%4.4s'",outer_num,prefix,inner_num);
			mysql_query(mysql, sqlcmd);
		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);
	}
	else if(*number_type == '0' && strcasecmp(outer_num,"asterisk"))  {
		sprintf(sqlcmd, "DELETE from number_manage where 070number = '%s' or 070number='%s'",outer_num,old_sip070number);

		mysql_query(mysql, sqlcmd);

		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);

//		mysql_query(mysql, sqlcmd);
//
//		sprintf(sqlcmd, "DELETE from sip_buddies where callerid = '<%s>'",outer_num);
//			mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd, "DELETE from sip_buddies where callerid = '<%s>' or callerid='<%s>'",outer_num,old_sip070number);
		mysql_query(mysql, sqlcmd);
		printf("\n[5msqlcmd:(%s)[0m",sqlcmd);
	}

	//smsSend : 회선번호,고객명,내선코드(4자리),070번호(원번호)
	if(PVS == 1 && (!strcmp(serverip,"211.32.148.82") || !strcmp(serverip,"112.222.225.91") || !strcmp(serverip,"112.222.225.207"))) {
		sprintf(commandBuf,"%s,%s,%4.4s,%s_%s",rellineno,cust_name,phoneid,outer_num,tmpsetcid);
		ret = smsSendToIRLink(commandBuf,"164.124.107.28","15440001");
	}

		/*** number_manage ***/
INO_RETY:
		{
			unsigned char src_str[10000];
			unsigned char hash_str[10000];
			unsigned char output[129];
			int src_len;

			memset(output,0,sizeof(output));
			memset(hash_str,0,sizeof(hash_str));

			strcpy(src_str,"1111");
			src_len=strlen(src_str);

			sha4( src_str, src_len, output, 0);
			hexify( hash_str, output, 64 );

			if(*moh_bill == 'N' || *moh_bill == '\0') {
				strcpy(option2,"N");
				strcpy(class,"");
			}
				
			//if(strcmp(inner_num,"0000"))
			sprintf(phoneid,"0%s%s",prefix,inner_num);
			tel_string(tel);
			if(add_svc[1] == 'Y') {
					sprintf(sqlcmd,"INSERT into number_manage(option1,option2,class,\
					phoneid , defaultip, numbertype , phonetype, domain ,imid, 070number, extension,defcontext,name,option3,messenger_ip,tel,option5,cid,subsno,svc_kind,org_num,ment_flag,timeout,inner_digit,option4,option6,option7,option8,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,passwd,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,tts_tick) \
					values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s', '%s','1','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
					option1,option2,class, phoneid,serverip, number_type,phone_type,domain,user,outer_num,inner_num,defcontext,name,messenger_ip,tel,*tmpRid?"Y":"N",tmpRid,tmplineno,svc_kind,tmpsetcid,ment_flag,timeout,inner_digit,option4,option6,option7,option8,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,hash_str,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,oldtts_tick);
			}
			else {
					sprintf(sqlcmd,"INSERT into number_manage( option1,option2,class,\
					phoneid , defaultip, numbertype , phonetype, domain ,imid, 070number, extension,defcontext,name,option3,messenger_ip,tel,option5,cid,subsno,svc_kind,org_num,ment_flag,timeout,inner_digit,option4,option6,option7,option8,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,passwd,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,tts_tick) \
					values('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s', '%s','1','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')", \
					option1,option2,class, phoneid,serverip,number_type,phone_type,domain,user,outer_num,inner_num,defcontext,name,messenger_ip,tel,*tmpRid?"Y":"N",tmpRid,tmplineno,svc_kind,tmpsetcid,ment_flag,timeout,inner_digit,option4,option6,option7,option8,record,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,hash_str,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,oldtts_tick);
			}

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|insert number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				printf("\nresPacket:(%s)",resPacket);
				logCmd();
				if(PVS == 1) {
					rollback();
					return(-1);
				}
				else if(retry++ < 3) {
					rollback();
					goto INO_RETY;
				}

			}
/***laster....
			sprintf(sqlcmd,"INSERT into voicemail_users( \
			domain,customer_id,context,mailbox,password,fullname,email,tz,saycid,sendvoicemail,stamp) \
			values('%s','%s','%s','%s','1111','%s','%s','%s','%s','%s','%s')", \
			domain,phoneid+1,"default",phoneid+1,name,"-","korea","no","yes",tmp);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				mysql_query(mysql, sqlcmd);
*/
		}

		if(strlen(svc_kind) != 2)
			strcpy(svc_kind,"00");

		if(*callgroup == '\0' || strlen(callgroup) > 4 || !isdigitstr(callgroup))
			strcpy(callgroup,prefix);

		/*** sip_buddies 등록 ***/
		retry = 0;

		if(!*sip_passwd)
			strcpy(sip_passwd,"lguplus!8");

                snprintf(none_md5_secret, sizeof(none_md5_secret), "1%7.7s:%s:%s", strlen(phoneid)==8?phoneid+1:phoneid, "centrex", *sip_passwd?sip_passwd:"lguplus!8");

                md5_digest(none_md5_secret, strlen(none_md5_secret), digest);

                for (j=0; j<sizeof(digest); j++) {
                      sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
                }
/* 2,3 호기 없음 20171208
*/
		if(*moh_bill == 'Y') {
			sprintf(sqlcmd, "update custom_info set moh_bill='Y' where domain='%s'", domain);
			mysql_query(mysql, sqlcmd);
		}
/*
*/


INO_RETY1:
		if(!strcasecmp(outer_num,"asterisk"))
		{
			//if(strcmp(inner_num,"0000"))
			sprintf(phoneid,"1%s%s",prefix,inner_num);

			tel_string(tel);
			if(strlen(tmpusername) != 8)
				strcpy(tmpusername,phoneid);
			sprintf(sqlcmd,"INSERT into sip_buddies( \
				name, accountcode, callgroup,callerid, canreinvite, context, \
				host, nat, qualify, secret, md5secret,type, username,\
				disallow,allow,pickupgroup,regexten,setvar,defaultip,mailbox,insecure) \
				values('%s','%s','%s','asterisk','no','%s','dynamic','yes','yes',\
				'%s','%s','peer','%s','all','alaw','%s','%s','DOMAIN=%s','%s','%s','%s')",\
				phoneid,user,*callgroup?callgroup:prefix,defcontext,sip_passwd,md5_passwd,phoneid,*callgroup?callgroup:prefix,phoneid+4,domain,serverip,mailbox,re_regi);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|insert sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				if(PVS == 1) {
					rollback();
					return(-1);
				}
				else if(retry++ < 3) {
					rollback();
					goto INO_RETY1;
				}
			}

			//if(strcmp(inner_num,"0000")) {}
			if(!strcasecmp(svc_kind,"UC")) {
				sprintf(phoneid,"2%s%s",prefix,inner_num);
				if(strlen(tmpusername) != 8)
					strcpy(tmpusername,phoneid);
				sprintf(sqlcmd,"INSERT into sip_buddies( \
					name, accountcode, callgroup,callerid, canreinvite, context, \
					host, nat, qualify, secret, md5secret,type, username,\
					disallow,allow,pickupgroup,regexten,setvar,defaultip,mailbox,insecure) \
					values('%s','%s','%s','asterisk','no','%s','dynamic','yes','yes',\
					'%s','%s','peer','%s','all','alaw','%s','%s','DOMAIN=%s','%s','%s','%s')",\
					phoneid,user,*callgroup?callgroup:prefix,defcontext,sip_passwd,md5_passwd,phoneid,*callgroup?callgroup:prefix,phoneid+4,domain,serverip,mailbox,re_regi);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|insert sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();
				}
			}
			//{}


			if(auth_update_flag && PVS) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			//if(strcmp(inner_num,"0000")) {}
				if(!*tmpdisplay)
					strcpy(tmpdisplay,outer_num);

				sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
				sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s',sippwd='%s', updatetime='%s',sipetc3='N'  where \
				setdn = '%s'",tmpdisplay,inner_num,outer_num,prefix,inner_num,domain,prefix,\
				//inner_num,prefix,inner_num,tmp,macaddr);
				inner_num,prefix,inner_num,sip_passwd,tmp,outer_num);
				printf("\ncqlcmd : (%s)", sqlcmd);

				if(!authmysql)
					authinit(AUTH_SERVER);

				if(mysql_query(authmysql, sqlcmd)) {
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
				}
			}

			//mysql_free_result(result);
		}
		else 
		{
			//if(strcmp(inner_num,"0000"))
			sprintf(phoneid,"1%s%s",prefix,inner_num);
			if(strlen(tmpusername) != 8)
				strcpy(tmpusername,phoneid);

			sprintf(sqlcmd,"INSERT into sip_buddies( \
			name, accountcode, callgroup,callerid, canreinvite, context, \
			host, nat, qualify, secret,md5secret, type, username,\
			disallow,allow, pickupgroup,regexten,setvar,defaultip,mailbox,insecure) \
			values('%s','%s','%s','<%s>','no','%s','dynamic','yes','yes',\
			'%s','%s','peer','%s','all','alaw','%s','%s','DOMAIN=%s','%s','%s','%s')",\
			phoneid,user,*callgroup?callgroup:prefix,outer_num, defcontext,sip_passwd,md5_passwd,phoneid,*callgroup?callgroup:prefix,phoneid+4,domain,serverip,mailbox,re_regi);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|insert sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				printf("\nresPacket:(%s)",resPacket);
				logCmd();
                                if(PVS == 1) {
                                        rollback();
                                        return(-1);
                                }
                                else if(retry++ < 3) {
                                        rollback();
                                        goto INO_RETY1;
                                }
			}

			if(!strcasecmp(svc_kind,"UC")) {
				sprintf(phoneid,"2%s%s",prefix,inner_num);
				if(strlen(tmpusername) != 8)
					strcpy(tmpusername,phoneid);
				sprintf(sqlcmd,"INSERT into sip_buddies( \
					name, accountcode, callgroup,callerid, canreinvite, context, \
					host, nat, qualify, secret,md5secret, type, username,\
					disallow,allow, pickupgroup,regexten,setvar,defaultip,mailbox,insecure) \
					values('%s','%s','%s','<%s>','no','%s','dynamic','yes','yes',\
					'%s','%s','peer','%s','all','alaw','%s', '%s','DOMAIN=%s','%s','%s','%s')",\
					phoneid,user,*callgroup?callgroup:prefix,outer_num, defcontext,sip_passwd,md5_passwd,phoneid,*callgroup?callgroup:prefix,phoneid+4,domain,serverip,mailbox,re_regi);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|insert sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
					logCmd();

					printf("\nresPacket:(%s)",resPacket);

				}
			}

			if(auth_update_flag && PVS) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				//if(strcmp(inner_num,"0000")) {}
					if(!*tmpdisplay)
						strcpy(tmpdisplay,outer_num);
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sippwd='%s',sipetc3='N'  where \
						setdn = '%s'",tmpdisplay,inner_num,outer_num,prefix,inner_num,domain,prefix,\
						inner_num,prefix,inner_num,tmp,sip_passwd,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sippwd='%s',sipetc3='N'  where \
						setdn = '%s'",tmpdisplay,inner_num+1,outer_num,prefix,inner_num,domain,prefix,\
						inner_num,prefix,inner_num,tmp,sip_passwd,outer_num);

                                printf("\nsqlcmd : ((((%s))))",sqlcmd);
						if(!authmysql)
							authinit(AUTH_SERVER);

						if( mysql_query(authmysql, sqlcmd) ) {
							sprintf(resPacket, "|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
							sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
							logCmd();
						}

			}
			else if(auth_update_flag && PVS && *number_type == '0') {
				sprintf(sqlcmd, "select phoneid from number_manage where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
				row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				if( row_num == 0 );
				else if(row_num == 1 ) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				//if(strcmp(inner_num,"0000")) {}
					if(!*tmpdisplay)
						strcpy(tmpdisplay,outer_num);
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sippwd='%s',sipetc3='N'  where \
						setdn = '%s'",tmpdisplay,inner_num,outer_num,prefix,inner_num,domain,prefix,\
						inner_num,prefix,inner_num,tmp,sip_passwd,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',setdn='%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s',sippwd='%s',sipetc3='N'  where \
						setdn = '%s'",tmpdisplay,inner_num+1,outer_num,prefix,inner_num,domain,prefix,\
						inner_num,prefix,inner_num,tmp,sip_passwd,outer_num);

					printf("\nsqlcmd : ((((%s))))",sqlcmd);
					if(!authmysql)
							authinit(AUTH_SERVER);

					if( mysql_query(authmysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
						sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
						logCmd();
						printf("\nresPacket:(%s)",resPacket);
					}
				}
			}

		}

    	uname(&ht);
    	printf("\nnodename : (%s)",ht.nodename);

printf("\nStatus 2 1111111111111111111111111111111111111111111111111111111");

	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** |INO|p3146@dacommi.com|1111|7988|07075993250|0 */
    	if(PVS == 1 && MASTER == 1) 
	{
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
			int j;
			MD5_DIGEST digest;

			memset(md5_passwd,0,sizeof(md5_passwd));
			md5_digest(passwd, strlen(passwd), digest);

			for (j=0; j<sizeof(digest); j++) {
			    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
			}
			sprintf(sqlcmd1, "insert into messenger_id(recorddate,phoneid,crm_flag,domain,number,defaultip,messenger_ip,flag) values (NOW(),'%s','%s','%s','%s','%s','%s','BOSS')",phoneid, crm_flag,domain,outer_num,serverip,messenger_ip);
			printf("\nsqlcmd:(%s)",sqlcmd1);
			if( ret = mysql_query(mysql, sqlcmd1) ) {
				printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
				sprintf(sqlcmd1, "update messenger_id set recorddate=NOW(), crm_flag = '%s' where phoneid='%s' and defaultip = '%s'",crm_flag,phoneid,serverip);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				if( ret = mysql_query(mysql, sqlcmd1) )
					printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
			}
	
			sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,inner_num,outer_num,name,number_type,tmpdisplay,tmpsetcid,tmplineno,phoneid,macaddr,add_svc,serverip,svc_kind,serverip,option2,class,auto_area,tmpRid,inner_digit,callgroup,re_regi,option4,option6,option7,option8,record,old_domain,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,old_sip070number,messenger_ip);

printf("\n([7m%s[0m)[5m[7mSEND UC : (%s)[0m[0m",messenger_ip,commandBuf);
printf("\n([7m%s[0m)[5m[7mSEND UC : (%s)[0m[0m",messenger_ip,commandBuf);

			if(ret = commandSendUc(commandBuf,"INO",messenger_ip, 1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'INO','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				mysql_query(mysql, sqlcmd1);
			}
			}

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,outer_num,name,number_type,tmpdisplay,tmpsetcid,tmplineno,phoneid,macaddr,add_svc,serverip,svc_kind,serverip,option2,class,auto_area,tmpRid,inner_digit,callgroup,re_regi,option4,option6,option7,option8,record,old_domain,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,old_sip070number,mailbox,tel,messenger_ip, sip_passwd,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,cust_name,md5_passwd);
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'INO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}
	sprintf(commandBuf,"|INO|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,outer_num,name,number_type,tmpdisplay,tmpsetcid,tmplineno,phoneid,macaddr,add_svc,serverip,svc_kind,serverip,option2,class,auto_area,tmpRid,inner_digit,callgroup,re_regi,option4,option6,option7,option8,record,old_domain,letter_flag,manner_flag,sms_flag,record_flag,crm_flag,old_sip070number,mailbox,tel,messenger_ip, sip_passwd,ring_flag,ipcc_application,ipcc_record,ipcc_ivr,moh_bill,cust_name,md5_passwd);
printf("\n[5m[7m(%s)[0m[0m",commandBuf);

		sprintf(resPacket,"|RES|INO userid:(%s)-(%s)_(%s)",user,domain,phoneid);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'INO')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
	argv[1]=tmpStr;
	argv[2]="1111";
	argv[3]=inner_num;
	printf("\nprocINO-->procUTH start\n");
	ret = procUTH();
	printf("\nprocINO-->procUTH end\n");
	if(ret==0){
    		sprintf(resPacket,"|RES|INO userid:(%s)-(%s)-(%s)-lineno:(%s),ring_flag:(%s)",user,domain,phoneid,tmplineno,ring_flag);
		return 0;       
	}else{
		return -1;       
	}

}




/*************************************************************************
* 비번/이름 변경  						     *
*************************************************************************/
int
procUNO()
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,num_row,fields_num;
  int   test=0,ret,row_num,cpid,i=0,j=0;
  char tmp[100],today[15],num070[14],md5_passwd[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],phone_type[5],d_name[32];
	char	tel[21];
	char	messenger_ip[20],old_passwd[256];
	int retOAM2=-1;


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(d_name,0,sizeof(d_name)); 
	memset(tel,0,sizeof(tel)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(old_passwd,0,sizeof(old_passwd)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2] && strlen(argv[2]) > 3 && strlen(argv[2]) < 32) {
		strcpy(passwd,argv[2]);
	}
	else 
		strcpy(passwd,"");

	if(argv[3] && *argv[3]) {
		strcpy(inner_num,argv[3]);
	}

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(strlen(inner_num) !=4)
	{
		strcpy(inner_num,"0000");
	}


	if(argv[4] && *argv[4]) {
		strcpy(d_name,argv[4]);
	}
	else
		strcpy(d_name,"");

	if(argv[5] && *argv[5] && strlen(argv[5]) > 7 && isdigitstr(argv[5])) {
		strcpy(tel,argv[5]);
	}
	else
		strcpy(tel,"");
	if(argv[6] && *argv[6])  {
		strcpy(phoneid,argv[6]);
		if(strlen(phoneid) == 8)
			strcpy(inner_num,phoneid+4);
	}

        if(customInfoWithChk(domain) < 0){
		if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){

                        sprintf(commandBuf,"|UNO|%s|%s|%s|%s|%s|%s|",argv[1],argv[2],argv[3],argv[4],argv[5],argv[6]);
                        if(ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS2) < 0) {
                                ret = commandSendOAM3332(commandBuf,OAM_RLYSERVERS3);
                        }
                        return ret;
/******
			if(mysql_1)
				mysql_close(mysql_1);

			sqlinit_1(OAM_RLYSERVERS_DB2);
			if(customInfo2(domain) == 0){	
                		retOAM2= procUNO2(OAM_RLYSERVERS2);
                		printf("\nOAM2 connect .. procUNO2 return (%s)(%d)\n",OAM_RLYSERVERS2,retOAM2);
			}else{
				if(mysql_1)
					mysql_close(mysql_1);

				sqlinit_1(OAM_RLYSERVERS_DB3);
				if(customInfo2(domain) == 0){	
                			retOAM2= procUNO2(OAM_RLYSERVERS3);
                			printf("\nOAM3 connect .. procUNO2 return (%s)(%d)\n",OAM_RLYSERVERS3,retOAM2);
				}
			}
                	return retOAM2;
**/
		}
        }


	if(strlen(tel) > 8) {
		row_num = 0;
		if(!strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(tel,"");
	}

	
	printf("\ninner_num:(%s",inner_num);
	printf("\ninner_num:(%s",inner_num);
	printf("\ninner_num:(%s",inner_num);
/***
    if(!strcmp(inner_num,"0000") && strlen(outer_num) > 7)
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	sprintf(phoneid,"%s%s%s",phone_type,prefix,inner_num);
12:04:12 |UNO|07082149387@premium_c_4740.lgdacom.net|1111|1001|v8DH/Lyx|0164010426<<<<<|RES|UNO userid:(07082149387)-(
premium_c_4740.lgdacom.net)-(1111)-(v8DH/Lyx)-(11801001):(211.32.148.89)
*/

    if(PVS == 1) 
	{
		if(customInfo(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		//sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd from number_manage where phoneid = '0%7.7s'",phoneid+1);
		sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) 
		{
			strcpy(num070, row[0]?row[0]:"07000000000");
			ps_delSpace(num070);
			strcpy(crm_flag, row[1]?row[1]:"");
			ps_delSpace(crm_flag);
			strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(messenger_ip);
			strcpy(old_passwd, row[3]?row[3]:"1111");
			ps_delSpace(old_passwd);
//20140813 add 무조건 UNO에서는 기존 비번을 호처리 패킷으로 넘김, UC메신져 정보변경시 비밀번호는 무시
			strcpy(passwd,old_passwd);
		}
		mysql_free_result(result);
		result = NULL;

	} else {
		if(argv[6] && *argv[6]) 
			strcpy(phoneid,argv[6]);
		if(argv[7] && *argv[7]) 
			strcpy(serverip,argv[7]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		sprintf(prefix,"%3.3s",phoneid+1);
	}

/** 20140813 제거 
	if(*passwd  == '\0' || strlen(passwd) == 32)
		strcpy(passwd,old_passwd);
**/
	       if(*argv[2] && strlen(argv[2]) > 3 && strlen(argv[2]) < 30 ) {
                        unsigned char src_str[10000];
                        unsigned char hash_str[10000];
                        unsigned char output[129];
                        int src_len;
                        strcpy(src_str,argv[2]);
                        src_len=strlen(src_str);
                        sha4( src_str, src_len, output, 0);
                        hexify( hash_str, output, 64 );
                        strcpy(passwd,hash_str);
                }
	//if(strlen(passwd) > 3 && strcmp(passwd,old_passwd)) {
		/*** update sip_buddies ***/
//                sprintf(sqlcmd,"UPDATE number_manage set \
//                name = '%s',tel = '%s',passwd='%s' where \
//                phoneid = '0%s' and defaultip='%s'", d_name,tel,passwd,phoneid+1,serverip);

                sprintf(sqlcmd,"UPDATE number_manage set \
                name = '%s',tel = '%s' , passwd='%s' where \
                phoneid = '0%s' and defaultip='%s'", d_name,tel,passwd,phoneid+1,serverip);
/****
	}
	else 
                sprintf(sqlcmd,"UPDATE number_manage set \
                name = '%s',tel = '%s' where \
                phoneid = '0%s' and defaultip='%s'", d_name,tel,phoneid+1,serverip);
*/

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		if(PVS == 1 && MASTER == 1) {
			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip,num070);

			if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {

				MD5_DIGEST digest;
				
				//if(strlen(passwd) > 3 && strcmp(passwd,old_passwd)) {
					md5_digest(passwd, strlen(passwd), digest);
					for (j=0; j< sizeof(digest); j++) {
					    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
					}
/****
				}
				else {
					md5_digest(old_passwd, strlen(old_passwd), digest);
					for (j=0; j< sizeof(digest); j++) {
					    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
					}
				}
*/

				sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,inner_num,d_name,tel,phoneid,serverip,num070);
				if(ret = commandSendUc(commandBuf,"UNO",messenger_ip, 1) < 0) {
					sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'UNO','%s','%s')",tmp, commandBuf,serverip,messenger_ip, num070);

					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip);
			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql, sqlcmd);

				}
			}

			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip);
			sprintf(resPacket,"|RES|UNO userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,passwd, d_name, phoneid);
			/****추가 ***/
		//	sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10 ) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNO')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
	}

/** 20140813제거 	
	sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
	argv[1]=tmpStr;
	argv[2]=passwd;
	argv[3]=inner_num;
	printf("\nprocUNO-->procUTH start\n");
	ret = procUTH();
	printf("\nprocUNO-->procUTH end\n");
*/
	if(ret==0){
		sprintf(resPacket,"|RES|UNO userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,passwd, d_name, phoneid, tel);
		return 0;       
	}else{
		return -1;       
	}
}


/*************************************************************************
* 번호 구매							     *
* 번호 변경	
* 0:대표, 1:개인						     *
|INO|p3146@dev30.onnet21.com|1111|1111|07075993580|심형식
*************************************************************************/
int
procU07()
{
  char passwd[256];
  char email[64];
  int   qid,returncode,i, size;
  int   test=0,ret=0,row_num, cpid;
  char tmp[100],today[15];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forbidprefix[256];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(forbidprefix,0,sizeof(forbidprefix)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
          strcpy(outer_num,argv[2]);
    else
          strcpy(outer_num,"00000000000");

	if(argv[3] && *argv[3]) {
		strcpy(number_type,argv[3]);
		intnumber_type = atoi(number_type);
	}
	else
		intnumber_type = 1;


    strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    if(strlen(inner_num) !=4)
                strcpy(inner_num,"0000");

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    if(argv[4] && *argv[4])
          strcpy(forbidprefix,argv[4]);
    else
          strcpy(forbidprefix,"060");
		

	domain_string(domain);
	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	if(PVS == 1) {
				sprintf(sqlcmd, "select number,status,domain from number_list where \
                number = '%s'",outer_num);

				printf("\nsqlcmd:(%s)",sqlcmd);

				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						return(-1);
				}   
						
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						sprintf(resPacket, "|ERR|(%s) is not exist!!!",outer_num);
						printf("\nresPacket:(%s)",resPacket);
						return -1;
				}

				/*** 사용여부 Check ***/
				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) {
							if(*row[1] != '0' && *row[1] != '4') {
								mysql_free_result(result);
								result = NULL;
								sprintf(resPacket, "|ERR|(%s) is  used!!!",outer_num);
								return -1;
							}
					}
				}
				mysql_free_result(result);
			result = NULL;
		}
		else 
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));

/*** number_manage ***/
		/*** 기본 prefix : 00(국제전화 호), 060 ***/
		/* tmp : 시간 의미 */
		if(PVS == 1) {
				sprintf(sqlcmd,"UPDATE number_list set \
				status = 4, lastdate = '%s', domain='%s',type = %s,forbid_prefix = '%s' where \
				number = '%s'", tmp,domain,number_type,forbidprefix,outer_num);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|update number_list!21(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}

				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
					sprintf(commandBuf,"|U07|%s@%s|%s|%s|%s",user,domain,argv[2],argv[3],argv[4]);
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'U07')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}
		}
		else 
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));


    sprintf(resPacket,"|RES|U07 userid:(%s)-(%s)-(%s)",user,domain,outer_num);
    return 0;       
}


/*************************************************************************
*************************************************************************/
int
procBND()
{
  char passwd[256],new_phoneid[10];
  char email[256],sqlcmd1[512];
	char	destP[256];
  int   qid,returncode,ret,cpid,i, sockfd;
  int   test=0, fields_num=0,row_num=0;
  char tmp[100],today[15],command[64],org_num[20], imid[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],macaddr[32],old_inner_num[5],new_inner_num[5];

	memset(email,0,sizeof(email));
	memset(imid,0,sizeof(imid));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(macaddr,0,sizeof(macaddr)); 
	memset(old_inner_num,0,sizeof(old_inner_num)); 
	memset(new_inner_num,0,sizeof(new_inner_num)); 
	memset(new_phoneid,0,sizeof(new_phoneid)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(inner_digit,0,sizeof(org_num)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(new_inner_num,argv[2]);
	if(strlen(new_inner_num) == 3)
		sprintf(new_inner_num,"0%s",new_inner_num);
	else if(strlen(new_inner_num) != 4)
		strcpy(new_inner_num,"0000");

	row_num = 0;
		sprintf(sqlcmd, "select extension from ban_ext where extension='%s'",new_inner_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			return -1;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}   
		else {
			row_num = mysql_num_rows(result);
			mysql_free_result(result);
			result = NULL;
		}


		if(row_num == 0) {
			sprintf(resPacket, "|ERR|90000  ban_ext(%s)",new_inner_num);
			return -1;
		}
	sprintf(resPacket, "|RES|%s|",new_inner_num);
	return 0;
}



/*************************************************************************
*************************************************************************/
int
procCNO()
{
  char passwd[256],new_phoneid[10];
  char email[256],sqlcmd1[512];
	char	destP[256];
  int   qid,returncode,ret,cpid,i, sockfd;
  int   test=0, fields_num=0,row_num=0;
  char tmp[100],today[15],command[64],org_num[20], imid[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],macaddr[32],old_inner_num[5],new_inner_num[5];

	memset(email,0,sizeof(email));
	memset(imid,0,sizeof(imid));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(macaddr,0,sizeof(macaddr)); 
	memset(old_inner_num,0,sizeof(old_inner_num)); 
	memset(new_inner_num,0,sizeof(new_inner_num)); 
	memset(new_phoneid,0,sizeof(new_phoneid)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(inner_digit,0,sizeof(org_num)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(new_inner_num,argv[2]);
	if(strlen(new_inner_num) == 3)
		sprintf(new_inner_num,"0%s",new_inner_num);
	else if(strlen(new_inner_num) != 4)
		strcpy(new_inner_num,"0000");

	row_num = 0;
	if(strncasecmp(domain,"samchully",9))  {
		sprintf(sqlcmd, "select extension from ban_ext where extension='%s'",new_inner_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			return -1;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		}   
		else {
			row_num = mysql_num_rows(result);
			mysql_free_result(result);
			result = NULL;
		}


		if(row_num > 0) {
			sprintf(resPacket, "|ERR|new inner num error! ban_ext(%s)",new_inner_num);
			return -1;
		}
	}

	tmm_currDate(YYYYMMDDHHMMSS,today);

	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** number_manage ***/
		if(customInfo(domain) < 0)
			return -1;

			sprintf(phoneid,"%3.3s%4.4s",prefix,old_inner_num);

			sprintf(sqlcmd, "select name from sip_buddies where name = '1%3.3s%4.4s' and defaultip='%s'",prefix,new_inner_num,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num > 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(1%3.3s%4.4s) sip_buddies is exist",prefix,new_inner_num);
				return -1;
			}

			mysql_free_result(result);
			result = NULL;

	if(*inner_digit == '3' && (new_inner_num[1] == '0' || new_inner_num[1] == '1')) {
		sprintf(resPacket, "|ERR|new inner num error! (%s)",new_inner_num);
		return -1;
	}

	sprintf(resPacket, "|RES|%4.4s|OK",new_inner_num);
	return -1;
}



/*************************************************************************
* 번호 Update							     *
NN:12:59:38 |UNN|tmpid3800@premium_c_4507.lgdacom.net|07082774309|0003|0002|07082149100|<<<<<|RES|UNN userid:(tmpid38
00)-(premium_c_4507.lgdacom.net)-(07082774309)-(0003)-(0002):(211.32.148.89)
*************************************************************************/
int
procUNN()
{
  char passwd[256],new_phoneid[10];
  char email[256],sqlcmd1[512];
	char	destP[256];
  int   qid,returncode,ret,cpid,i, sockfd;
  int   test=0, fields_num=0,row_num=0;
  char tmp[100],today[15],command[64],org_num[20], imid[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],macaddr[32],old_inner_num[5],new_inner_num[5];
	char	messenger_ip[20],sippwd[32];
	char md5_passwd[64];

	memset(email,0,sizeof(email));
	memset(md5_passwd,0,sizeof(md5_passwd));
	memset(sippwd,0,sizeof(sippwd));
	memset(imid,0,sizeof(imid));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(macaddr,0,sizeof(macaddr)); 
	memset(old_inner_num,0,sizeof(old_inner_num)); 
	memset(new_inner_num,0,sizeof(new_inner_num)); 
	memset(new_phoneid,0,sizeof(new_phoneid)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	else
		strcpy(outer_num,"00000000000");

	if(argv[3] && *argv[3])
		strcpy(old_inner_num,argv[3]);
	if(strlen(old_inner_num) == 3)
		sprintf(old_inner_num,"0%s",old_inner_num);
	else if(strlen(old_inner_num) != 4)
		strcpy(old_inner_num,"0000");

	if(argv[4] && *argv[4])
		strcpy(new_inner_num,argv[4]);
	if(strlen(new_inner_num) == 3)
		sprintf(new_inner_num,"0%s",new_inner_num);
	else if(strlen(new_inner_num) != 4)
		strcpy(new_inner_num,"0000");


	if(PVS == 1) {
		row_num = 0;
		if(strncasecmp(domain,"samchully",9))  {
			sprintf(sqlcmd, "select extension from ban_ext where extension='%s'",new_inner_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			}   
			else {
				row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
			}

			if(row_num > 0) {
				sprintf(resPacket, "|ERR|new inner num error! ban_ext(%s)",new_inner_num);
				return -1;
			}
		}
		{
			if(!authmysql)
				authinit(AUTH_SERVER);

			sprintf(sqlcmd, "select sippwd from DCS_PHONE_AUTH where setdn = '%s'",outer_num);
			if( ret = mysql_query(authmysql, sqlcmd) ) {
				;
			}   
			else  {
				result = mysql_store_result(authmysql);
				if(!result ) {
					;
				} 
				else {
					row_num = mysql_num_rows(result);
					if( row_num == 0 )
						;
					else {
						row = mysql_fetch_row( result );
						if(row) 
						{
							strcpy(sippwd, row[0]?row[0]:"");
							ps_delSpace(sippwd);
						}

					}	
					mysql_free_result(result);
					result = NULL;
				}
			}
		}

	}

	tmm_currDate(YYYYMMDDHHMMSS,today);

	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** number_manage ***/
	if(PVS == 1) {
			sprintf(sqlcmd, "select domain,type,serverip,org_num from number_list where  number='%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) )
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				return -1;

			}

			result = mysql_store_result( mysql );
			if(!result )
			{
				sprintf(resPacket, "|ERR|mysql Search Error number_list!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}
			row_num = mysql_num_rows(result);

			if( row_num == 0 )
			{
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s)-(%s) number_list is not Valid",domain,outer_num);
				return -1;
			}
			row = mysql_fetch_row( result );
			if(row) 
			{
				strcpy(domain, row[0]?row[0]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(number_type, row[1]?row[1]:"1");
				ps_delSpace(number_type);
				intnumber_type =  atoi(number_type);
                                strcpy(serverip, row[2]?row[2]:"127.0.0.1");
                                ps_delSpace(serverip);
                                strcpy(org_num, row[3]?row[3]:"");
                                ps_delSpace(org_num);

			}
			mysql_free_result(result);
			result = NULL;


			if(customInfo(domain) < 0)
				return -1;

			sprintf(phoneid,"%3.3s%4.4s",prefix,old_inner_num);

			if(*inner_digit == '3') {
				new_inner_num[0] = '0';
				if(new_inner_num[1] == '0' || new_inner_num[1] == '1') {
					sprintf(resPacket, "|ERR|new inner num error! (%s)",new_inner_num);
					return -1;
				}
			}

			sprintf(sqlcmd, "select name from sip_buddies where name = '1%3.3s%4.4s' and defaultip='%s'",prefix,new_inner_num,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num > 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s)(1%3.3s%4.4s) sip_buddies is exist",sqlcmd,prefix,new_inner_num);
				return -1;
			}

			mysql_free_result(result);
			result = NULL;

                        sprintf(sqlcmd, "select phoneid,imid,crm_flag,messenger_ip from number_manage where 070number = '%s'",outer_num);
                        printf("\nsqlcmd:(%s)",sqlcmd);
                        if( ret = mysql_query(mysql, sqlcmd) )
                        {
                                ;
                        }
                        result = mysql_store_result( mysql );
                        if(!result )
                        {
                                ;
                        }
			else  {
				row_num = mysql_num_rows(result);
				if( row_num == 0 )
				{
					mysql_free_result(result);
					result = NULL;
				}
				else  {
					row = mysql_fetch_row( result);
					if( row)
					{
						strcpy(phoneid, row[0]?row[0]:"00000000");
						ps_delSpace(phoneid);
						strcpy(imid, row[1]?row[1]:"tmpid");
						ps_delSpace(imid);
						strcpy(crm_flag, row[2]?row[2]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(messenger_ip);
						sprintf(prefix,"%3.3s",phoneid+1);
						sprintf(old_inner_num,"%4.4s",phoneid+4);
					}
				}
				mysql_free_result(result);
				result = NULL;

				if(*inner_digit == '3') {
					new_inner_num[0] = '0';
					if(new_inner_num[1] == '0' || new_inner_num[1] == '1') {
						sprintf(resPacket, "|ERR|new inner num error! (%s)",new_inner_num);
						return -1;
					}
				}
			}
	}
	else {
		if(argv[5] && *argv[5]) 
			strcpy(prefix,argv[5]);
		else
			strcpy(prefix,"001");
		if(argv[6] && *argv[6]) 
			strcpy(phoneid,argv[6]);
		else
			strcpy(phoneid,"001");
		if(argv[7] && *argv[7]) 
			strcpy(serverip,argv[7]);
		if(argv[8] && *argv[8]) 
			strcpy(imid,argv[8]);
/****
		sprintf(command,"asterisk -rx 'sip prune realtime peer 1%7.7s'",phoneid+1);
		system(command);
		sprintf(command,"asterisk -rx 'sip prune realtime peer 2%7.7s'",phoneid+1);
		system(command);
*/
	}

	if(PVS == 1 ) {
				if(!strcmp(old_inner_num,new_inner_num)) {
						sprintf(resPacket, "|ERR|Old & New same number!");
						return -1;
				}

				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				if(*org_num == '\0') {
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' , sipetc3 = 'N' where \
						setdn = '%s'",outer_num,new_inner_num,prefix,new_inner_num,domain,prefix,\
						new_inner_num,prefix,new_inner_num,tmp,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' , sipetc3 = 'N' where \
						setdn = '%s'",outer_num,new_inner_num+1,prefix,new_inner_num,domain,prefix,\
						new_inner_num,prefix,new_inner_num,tmp,outer_num);
				}
				else {
					if(*inner_digit == '4')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' , sipetc3 = 'N' where \
						setdn = '%s'",org_num,new_inner_num,prefix,new_inner_num,domain,prefix,\
						new_inner_num,prefix,new_inner_num,tmp,outer_num);
					else if(*inner_digit == '3')
						sprintf(sqlcmd,"update DCS_PHONE_AUTH set dn='%s,%s',fqdn='1%3.3s%4.4s@%s',\
						sipid=concat('1%3.3s%4.4s@',SSWIP),loginid='1%3.3s%4.4s', updatetime='%s' , sipetc3 = 'N' where \
						setdn = '%s'",org_num,new_inner_num+1,prefix,new_inner_num,domain,prefix,\
						new_inner_num,prefix,new_inner_num,tmp,outer_num);
				}

				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if(!authmysql)
					authinit(AUTH_SERVER);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(resPacket,"|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					sprintf(errorCause,"ERROR:DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					printf("\n|ERR|update DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
				}
				sprintf(resPacket,"[7m5m%s[0m[0m",sqlcmd);
				logCmd();

		}

		/**** 처리 ***/
/***
		sprintf(sqlcmd,"UPDATE number_manage set \
		070number = 'asterisk' where \
		domain = '%s' and 070number = '%s'", domain,outer_num);
*/

		if(!strncmp(imid,"tmpid",5))
			sprintf(sqlcmd,"update number_manage set  phoneid='0%3.3s%4.4s',extension = '%s',imid='tmpid%s'  where \
			070number='%s' and defaultip = '%s'",prefix,new_inner_num,new_inner_num,new_inner_num,outer_num,serverip);
		else
			sprintf(sqlcmd,"update number_manage set  phoneid='0%3.3s%4.4s',extension = '%s' where \
			070number='%s' and defaultip = '%s'",prefix,new_inner_num,new_inner_num,outer_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		if(!strncmp(imid,"tmpid",5))
			sprintf(sqlcmd,"update number_manage set  phoneid='0%3.3s%4.4s',extension = '%s',imid='tmpid%s'  where \
			070number = '%s'",prefix,new_inner_num,new_inner_num,new_inner_num,outer_num);
		else
			sprintf(sqlcmd,"update number_manage set  phoneid='0%3.3s%4.4s',extension = '%s' where \
			070number='%s'",prefix,new_inner_num,new_inner_num,outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

/*******
		sprintf(sqlcmd,"update sip_buddies set name='1%3.3s%4.4s',\
		username='1%3.3s%4.4s' where \
		name = '1%3.3s%4.4s' and defaultip='%s'",prefix,new_inner_num,prefix,new_inner_num,prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"update sip_buddies set name='2%3.3s%4.4s',\
		username='2%3.3s%4.4s' where \
		name = '2%3.3s%4.4s' and defaultip='%s'",prefix,new_inner_num,prefix,new_inner_num,prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
*/
		{
		MD5_DIGEST digest;
		int j = 0;
		char hash[64];
		
		memset(hash,0,sizeof(hash));
		memset(md5_passwd,0,sizeof( md5_passwd));

		if(strlen(sippwd) > 0) {
snprintf(hash, sizeof(hash), "1%3.3s%4.4s:centrex:%s", prefix,new_inner_num,sippwd);

md5_digest(hash, strlen(hash), digest);
for (j=0; j<sizeof(digest); j++) {
    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
}

			sprintf(sqlcmd,"update sip_buddies set name=concat(substr(name,1,1),'%3.3s%4.4s'),\
			username=concat(substr(username,1,1),'%3.3s%4.4s'),secret='%s',md5secret='%s' where \
			callerid='<%s>'",prefix,new_inner_num,prefix,new_inner_num,sippwd,md5_passwd,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}
		}
		else {
			sprintf(sqlcmd,"update sip_buddies set name=concat(substr(name,1,1),'%3.3s%4.4s'),\
			username=concat(substr(username,1,1),'%3.3s%4.4s'),md5secret='' where \
			callerid='<%s>'",prefix,new_inner_num,prefix,new_inner_num,outer_num);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}
		}

		}

		sprintf(sqlcmd,"DELETE from  color_info where  \
		prefix = '%7.7s' and serverip='%s'",phoneid+1,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE forward_number set phoneid = '1%3.3s%4.4s' where  \
		phoneid = '1%7.7s' and (domain='%s' or domain ='')",prefix,new_inner_num, phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE forward_number set phoneid = '2%3.3s%4.4s' where  \
		phoneid = '2%7.7s' and (domain='%s' or domain ='')",prefix,new_inner_num, phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE voicemail_users set customer_id = '%3.3s%4.4s', mailbox='%3.3s%4.4s' where  \
		customer_id = '%7.7s' and domain='%s'", prefix,new_inner_num,prefix,new_inner_num,phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update voicemail_users!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE call_member set number = '%4.4s' where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", new_inner_num,prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE hunting_member set number = '%4.4s' where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", new_inner_num,prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
		else {
			sprintf(resPacket, "|RES|(%s)",sqlcmd);
			logCmd();
		}
		sprintf(sqlcmd,"UPDATE ars_member set number = '%4.4s' where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", new_inner_num,prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

                sprintf(sqlcmd,"UPDATE sub_ars_member set number = '%4.4s' where  \
                prefix = '%3.3s' and number = '%4.4s' and defaultip='%s' and h_number='%s'", new_inner_num,prefix,old_inner_num,serverip,outer_num);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|update call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        //return(-1);
                }
                sprintf(sqlcmd,"UPDATE third_ars_member set number = '%4.4s' where  \
                prefix = '%3.3s' and number = '%4.4s' and defaultip='%s' and h_number='%s'", new_inner_num,prefix,old_inner_num,serverip,outer_num);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|update call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        //return(-1);
                }

		sprintf(sqlcmd,"UPDATE  black_list set phoneid = '0%3.3s%4.4s' where  \
		phoneid = '0%7.7s' and domain='%s'", prefix,new_inner_num,phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update black_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"UPDATE  white_list set phoneid = '0%3.3s%4.4s' where  \
		phoneid = '0%7.7s' and domain='%s'", prefix,new_inner_num,phoneid+1,domain);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update white_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"delete from sip_buddies where name='2%3.3s%4.4s' and defaultip='%s'",prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);


		sprintf(sqlcmd,"DELETE from  color_info where  \
		prefix = '%7.7s' and serverip='%s'",phoneid+1,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"delete from number_manage where phoneid='0%3.3s%4.4s' and domain='%s'",prefix,old_inner_num,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);
		sprintf(sqlcmd,"delete from sip_buddies where name='1%3.3s%4.4s' and defaultip='%s'",prefix,old_inner_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd,"update number_list set checkflag='0' where number = '%s'",outer_num);
		mysql_query(mysql, sqlcmd);

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(commandBuf,"|UNN|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,old_inner_num,new_inner_num,prefix,phoneid,serverip,imid,md5_passwd);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNN')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UNN|%s@%s|%s|%s|%s|%s|1%s|%s|%s|%s|",user,domain,outer_num,old_inner_num,new_inner_num,prefix,phoneid+1,serverip,imid,md5_passwd);
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
			if(ret = commandSendUc(commandBuf,"UNN",messenger_ip, 1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'UNN','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				mysql_query(mysql, sqlcmd1);
			}
			}

		sprintf(commandBuf,"|UNN|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,old_inner_num,new_inner_num,prefix,phoneid,serverip,imid,md5_passwd);
		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main' and servername <> 'sub2'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i= 0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[0]);
				}
				if(*serverip && strlen(serverip) > 10 ) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNN')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
    }
    else {
		/*** ..................... ***/
		sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
/***********
		sprintf(command,"asterisk -rx 'sip prune realtime peer 1%7.7s'",phoneid+1);
		system(command);
		sprintf(command,"asterisk -rx 'sip prune realtime peer 2%7.7s'",phoneid+1);
		system(command);
************/
}

    sprintf(resPacket,"|RES|UNN userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,outer_num,old_inner_num,new_inner_num,md5_passwd);
    return 0;       
}


/*************************************************************************
* 번호 해지							     *
*************************************************************************/
int
procD08(flag)
int flag;
{
  char passwd[256];
	char	destP[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,ret,cpid,i, sockfd;
  int   test=0, fields_num=0,row_num=0;
  char tmp[100],today[15],command[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],macaddr[32];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(macaddr,0,sizeof(macaddr)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
    else
                strcpy(outer_num,"00000000000");

    tmm_currDate(YYYYMMDDHHMMSS,today);

     sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

printf("\n[7mDOMAIN:(%s)[0m",domain);
	/*** number_manage ***/
	if(PVS == 1) {
			sprintf(sqlcmd, "select domain,type,serverip from number_list where  number='%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					rollback();
					if(flag == 1) {
						_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						exit(0);
					}
					else {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}
			}

			result = mysql_store_result( mysql );
			if(!result )
			{
				sprintf(resPacket, "|ERR|mysql Search Error custom info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}
			row_num = mysql_num_rows(result);

			if( row_num == 0 )
			{
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s)-(%s) custom info is not Valid",domain,outer_num);
				return -1;
			}
			row = mysql_fetch_row( result );
			if(row) 
			{
/****
printf("\n[7m1.DOMAIN:(%s)[0m",domain);
				if(row[0] && *row[0] != '\0' && strcmp(row[0],domain))
					strcpy(domain, row[0]?row[0]:"unknown.unknown");
printf("\n[7m2.DOMAIN:(%s)[0m",domain);
				ps_delSpace(domain);
*/
				strcpy(number_type, row[1]?row[1]:"1");
				ps_delSpace(number_type);
				intnumber_type =  atoi(number_type);
				if(row[2] && strlen(row[2]) > 5)
						strcpy(serverip, row[2]);
				ps_delSpace(serverip);

			}
			mysql_free_result(result);
			result = NULL;

printf("\n[7mDOMAIN:(%s)[0m",domain);

                        sprintf(sqlcmd, "select phoneid,domain,defaultip from number_manage where 070number = '%s'",outer_num);
                        printf("\nsqlcmd:(%s)",sqlcmd);
                        if( ret = mysql_query(mysql, sqlcmd) )
                        {
                                ;
                        }
                        result = mysql_store_result( mysql );
                        if(!result )
                        {
                                ;
                        }
			else {
                        row_num = mysql_num_rows(result);
                        if( row_num == 0 )
                        {
				//double free fix
                                //mysql_free_result(result);
                        }
                        else  {
                                row = mysql_fetch_row( result);
                                if( row)
                                {
                                        strcpy(phoneid, row[0]?row[0]:"00000000");
                                        ps_delSpace(phoneid);
					strcpy(domain, row[1]?row[1]:"unknown.unknown");
	printf("\n[7m2.DOMAIN:(%s)[0m",domain);
					ps_delSpace(domain);
					if(row[2] && strlen(row[2]) > 5)
						strcpy(serverip, row[2]);
						ps_delSpace(serverip);
					}
                        }

                        mysql_free_result(result);
                        result = NULL;
			}


                        sprintf(prefix,"%3.3s",phoneid+1);
                        sprintf(inner_num,"%4.4s",phoneid+4);
			*phoneid == '1';

			if(strlen(phoneid) == 8)
				sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			else
				sprintf(command,"sip prune realtime peer 1%7.7s",phoneid);

			if(row_num > 0) {
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = Manager(serverip,command);
					if(sockfd > -1) {
						strcpy(command,"Action: Logoff\r\n\r\n");
						write(sockfd, command, strlen(command));
						close(sockfd);
					}
				}
			   }
	}
	else {
		 if(argv[3] && *argv[3]) {
		  strcpy(number_type,argv[3]);
				intnumber_type = atoi(number_type);
		    }
		    else
				intnumber_type = 1;

		if(argv[4] && *argv[4]) 
			strcpy(prefix,argv[4]);
		else
			strcpy(prefix,"001");
		if(argv[5] && *argv[5]) 
			strcpy(macaddr,argv[5]);
		else
			strcpy(macaddr,"0000.0000.0000");
		if(argv[6] && *argv[6]) 
			strcpy(phoneid,argv[6]);
		if(argv[7] && *argv[7]) 
			strcpy(serverip,argv[7]);

		sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
	}

	if(PVS == 1) {
				sprintf(sqlcmd,"INSERT into number_history( \
				number , status , changedate ,domain, type) \
				values('%s',3,'%s','%s',%d)", \
				outer_num,tmp,domain,intnumber_type);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|insert number_history!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}
				if(!authmysql)
					authinit(AUTH_SERVER);

				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where \
				setdn = '%s'",outer_num);	
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(errorCause,"DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					printf("\n|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
					logCmd();
				}
/****
				if(*macaddr) {
					sprintf(sqlcmd,"update PHONE_INFO set status=3 where \
					number = '%s' and macaddr = '%s'",outer_num,macaddr);	
				}
				else  {
					sprintf(sqlcmd,"update PHONE_INFO set status=3 where \
					number = '%s'",outer_num);	
				}
				mysql_query(mysql, sqlcmd);
*/
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
		}
		logCmd();

		/**** 처리 ***/
		sprintf(sqlcmd,"DELETE from superadmin \
		where admin_id = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
		sprintf(sqlcmd,"delete  from number_manage_bak  where  \
		070number = '%s'", outer_num);
		mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd,"insert into number_manage_bak select * from number_manage where  \
		070number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
		sprintf(sqlcmd,"DELETE from number_manage where  \
		070number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}
		sprintf(sqlcmd,"delete from sip_buddies_bak  where  \
		callerid = '<%s>'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		mysql_query(mysql, sqlcmd);

		sprintf(sqlcmd,"insert into sip_buddies_bak select * from sip_buddies where  \
		callerid = '<%s>'", outer_num);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				printf("\nresPacket:(%s)",resPacket);
				//logCmd();
				//return(-1);
		}
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		sprintf(sqlcmd,"DELETE from sip_buddies \
		where callerid = '<%s>'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

//TEST ADD 202207
if((cpid = fork()) == 0) {
if(outer_num && strlen(outer_num) == 11 && serverip && domain && strlen(domain)> 7)
{
if(PVS == 1){
//주소록 정보 삭제
// MOD add domain
        sprintf(sqlcmd,"DELETE from address_group where domain='%s' and  user = '%s'", domain, outer_num);
        printf("\nsqlcmd : ((((%s))))",sqlcmd);
        if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }
// MOD add domain
        sprintf(sqlcmd,"DELETE from address_member where domain='%s' and user = '%s'", domain, outer_num);
        printf("\nsqlcmd : ((((%s))))",sqlcmd);
        if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//주소록 메모 정보 삭제 ???? New ADD
	sprintf(sqlcmd,"DELETE from address_memo where   user='%s' and domain='%s'", outer_num,domain);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//문자 예약발송 정보 삭제 New ADD
	sprintf(sqlcmd,"DELETE from  sms_reserve where   user='%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

}
//ARS/대표번호 정보 삭제
	sprintf(sqlcmd,"DELETE from hunting_group where  number = '%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//대표번호 종속번호 정보 삭제
	sprintf(sqlcmd,"DELETE from hunting_member where  h_number = '%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//ARS 종속번호 정보 삭제 New ADD
	sprintf(sqlcmd,"DELETE from ars_member where  h_number='%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//Second_ARS  정보 삭제 20220808 New ADD
	sprintf(sqlcmd,"DELETE from second_ars where  h_number='%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }


//번호별 휴일 정보 삭제 New ADD
	sprintf(sqlcmd,"DELETE from  off_day where domain='%s' and etc='%s'",domain, outer_num);//PRIMARY KEY  (`domain`,`off_day`,`etc`)
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }


//url callback 정보 삭제 New ADD
	sprintf(sqlcmd,"DELETE from callback_url where  number='%s'", outer_num);
	printf("\nsqlcmd : ((((%s))))",sqlcmd);
	if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

	if(phoneid && strlen(phoneid) > 6 && strlen(phoneid) < 9 ){
//ARS 그룹 종속번호
		sprintf(sqlcmd,"DELETE from ars_member where prefix = binary('%3.3s') and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//start sim
		sprintf(sqlcmd, "DELETE from sub_ars where h_number='%s' and domain='%s'",outer_num,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

                sprintf(sqlcmd, "DELETE from sub_ars_member where h_number='%s' and defaultip='%s'",outer_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }
//end of sim

//착신전환 정보 삭제 MOD phoneid
		sprintf(sqlcmd,"DELETE from forward_number where phoneid = '1%7.7s' and (domain='%s' or domain='')", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//음성사서함 정보 삭제 MOD customer_id => mailbox
		sprintf(sqlcmd,"DELETE from voicemail_users where  mailbox= '%7.7s' and domain='%s'", phoneid+1,domain);////KEY `mailbox_context` (`mailbox`,`context`)
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//그룹정보 삭제
		sprintf(sqlcmd,"DELETE from call_member where prefix = binary('%3.3s') and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }


//문자 정보 삭제
		sprintf(sqlcmd,"DELETE from sms_send where (fromstr = binary('1%7.7s') or fromstr = binary('721%7.7s') or fromstr = '%s' or fromstr = '72%s') and ip = '%s'",    phoneid+1,phoneid+1,outer_num,outer_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//문자 정보 삭제
		sprintf(sqlcmd,"DELETE from sms_count where phoneid = binary('1%7.7s') and defaultip = '%s'", phoneid+1,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

//화이트/블랙리스트 목록 삭제 MOD substr remove
		//sprintf(sqlcmd,"DELETE from black_list where   substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
		sprintf(sqlcmd,"DELETE from black_list where phoneid = '0%7.7s' and domain='%s'", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }

		//sprintf(sqlcmd,"DELETE from white_list where   substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
		sprintf(sqlcmd,"DELETE from white_list where phoneid = '0%7.7s' and domain='%s'", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) { printf(" \n FAIL \n"); }
	}
	if(PVS == 1) {
                char DelCommand[512];
                int dret=0;
                snprintf(DelCommand,sizeof(DelCommand),"/home/ucmaster%s/AICALL/%s/%s_%s", (!strncmp(serverip,"58.",3))?"":"1",serverip,domain,outer_num);
                if(access(DelCommand,0) == 0){
                        dret =unlink( DelCommand );
                        printf("ADDFile Clear(%s %s) , DELFile(%s) ret(%d)\n",domain,outer_num,DelCommand,dret);
                }
	}

}
exit(0);
}
//END 20220621
	    tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	    sprintf(commandBuf,"|D08|%s@%s|%s|%s|%s|%s|%s",user,domain,outer_num,number_type,prefix,macaddr,phoneid);
	    if(PVS == 1 && MASTER == 1) {

/****
		if(*serverip && strlen(serverip) > 10 && (cpid = fork()) == 0) {
				commandSend(commandBuf,serverip);
				exit(0);
		}
*/
		sprintf(commandBuf,"|D08|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid,serverip);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'D08')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|D08|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid,serverip);
		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i= 0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
                                if(*serverip && strlen(serverip) > 10 ) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'D08')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
    }

    sprintf(resPacket,"|RES|D08 userid:(%s)-(%s)-(%s)",user,domain,outer_num);
    return 0;       
}





/*************************************************************************
* 번호 해지							     *
*************************************************************************/
int
procD07(flag)
int flag;
{
  char passwd[256];
	char	destP[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,ret,cpid,i, sockfd;
  int   test=0, fields_num=0,row_num=0;
  char tmp[100],today[15],command[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],macaddr[32];
	char	messenger_ip[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(macaddr,0,sizeof(macaddr)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
    else
                strcpy(outer_num,"00000000000");

    tmm_currDate(YYYYMMDDHHMMSS,today);

     sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

	/*** number_manage ***/
	if(PVS == 1) {
			sprintf(sqlcmd, "select domain,type,serverip from number_list where  number='%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					rollback();
					if(flag == 1) {
						_tcpWrite(masterFd, resPacket, strlen(resPacket));
						logCmd();
						exit(0);
					}
					else {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error custom info!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}
			row_num = mysql_num_rows(result);

			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|(%s)-(%s) custom info is not Valid",domain,outer_num);
				return -1;
			}
			row = mysql_fetch_row( result );
			if(row) 
			{
				strcpy(domain, row[0]?row[0]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(number_type, row[1]?row[1]:"1");
				ps_delSpace(number_type);
				intnumber_type =  atoi(number_type);
                                strcpy(serverip, row[2]?row[2]:"127.0.0.1");
                                ps_delSpace(serverip);

			}
			mysql_free_result(result);
			result = NULL;


			if(customInfo(domain) < 0)
				return -1;

                        sprintf(sqlcmd, "select phoneid from number_manage where 070number = '%s'",outer_num);
                        printf("\nsqlcmd:(%s)",sqlcmd);
                        if( ret = mysql_query(mysql, sqlcmd) )
                        {
                                ;
                        }
                        result = mysql_store_result( mysql );
                        if(!result )
                        {
                                ;
                        }

                        row_num = mysql_num_rows(result);
                        if( row_num == 0 )
                        {
                                mysql_free_result(result);
                        }
                        else  {
                                row = mysql_fetch_row( result);
                                if( row)
                                {
                                        strcpy(phoneid, row[0]?row[0]:"00000000");
                                        ps_delSpace(phoneid);
                                }
                        }

                        mysql_free_result(result);
                        result = NULL;


			/**************************/
			if(row_num == 0) {
				strcpy(phoneid,"00000000");
				sprintf(sqlcmd, "select phoneid,crm_flag,messenger_ip from number_manage_bak where 070number = '%s'",outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) )
				{
					;
				}
				result = mysql_store_result( mysql );
				if(!result )
				{
					;
				}

				row_num = mysql_num_rows(result);
				if( row_num == 0 )
				{
					mysql_free_result(result);
				}
				else  {
					row = mysql_fetch_row( result);
					if( row)
					{
						strcpy(phoneid, row[0]?row[0]:"00000000");
						ps_delSpace(phoneid);
						strcpy(crm_flag, row[1]?row[1]:"");
						ps_delSpace(crm_flag);
						strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
						ps_delSpace(messenger_ip);
					}
				}

				mysql_free_result(result);
				result = NULL;
			}

			/*** SP를 기본으로 ... */
			sprintf(prefix,"%3.3s",phoneid+1);
			sprintf(inner_num,"%4.4s",phoneid+4);

			sprintf(sqlcmd, "select macaddr from phone_info where number = '%s'", outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
/***
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				rollback();
				if(flag == 1) {
					_tcpWrite(masterFd, resPacket, strlen(resPacket));
					logCmd();
					exit(0);
				}
				else {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
					return -1;
				}
*/
				}
			}

			result = mysql_store_result( mysql );
			if(result )
			{
				row_num = mysql_num_rows(result);
				if( row_num != 0 )
				{
					row = mysql_fetch_row( result );
					if(row) 
					{
						strcpy(macaddr, row[0]?row[0]:"0000:0000:0000");
						ps_delSpace(macaddr);
					}
				}
				mysql_free_result(result);
				result = NULL;
			}
			sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,command);
				if(sockfd > -1) {
					strcpy(command,"Action: Logoff\r\n\r\n");
					write(sockfd, command, strlen(command));
					close(sockfd);
				}
			}

	}
	else {
		 if(argv[3] && *argv[3]) {
		  strcpy(number_type,argv[3]);
				intnumber_type = atoi(number_type);
		    }
		    else
				intnumber_type = 1;

		if(argv[4] && *argv[4]) 
			strcpy(prefix,argv[4]);
		else
			strcpy(prefix,"001");
		if(argv[5] && *argv[5]) 
			strcpy(macaddr,argv[5]);
		else
			strcpy(macaddr,"0000.0000.0000");
		if(argv[6] && *argv[6]) 
			strcpy(phoneid,argv[6]);
		if(argv[7] && *argv[7]) 
			strcpy(serverip,argv[7]);

		sprintf(command,"sip prune realtime peer 1%7.7s",phoneid+1);
		sockfd = Manager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
	}

		if(PVS == 1 ) {
				sprintf(sqlcmd,"INSERT into number_history( \
				number , status , changedate ,domain, type) \
				values('%s',3,'%s','%s',%d)", \
				outer_num,tmp,domain,intnumber_type);

				printf("\nsqlcmd : ((((%s))))",sqlcmd);
				if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|insert number_history!(%s, %s)",mysql_error(mysql),sqlcmd );
						logCmd();
						//return(-1);
				}
				if(!authmysql)
					authinit(AUTH_SERVER);
				sprintf(sqlcmd,"delete from  DCS_PHONE_AUTH where \
				setdn = '%s'",outer_num);	
				printf("\nsqlcmd : ((((%s))))",sqlcmd);

				if( mysql_query(authmysql, sqlcmd) ) {
					sprintf(errorCause,"DCS_PHONE_AUTH Update error!(%s)(%d) (%s)",macaddr,__LINE__,mysql_error(authmysql));
					logCmd();
					printf("\n|ERR|delete DCS_PHONE_AUTH!(%s, %s)",mysql_error(authmysql),sqlcmd );
				}

				sprintf(sqlcmd,"delete PHONE_INFO where \
				number = '%s'",outer_num,macaddr);	

				mysql_query(mysql, sqlcmd);
				printf("\nsqlcmd : ((((%s))))",sqlcmd);
		}

		/**** 처리 ***/
/***
		sprintf(sqlcmd,"UPDATE number_manage set \
		070number = 'asterisk' where \
		domain = '%s' and 070number = '%s'", domain,outer_num);
*/
		//type=1,status = 3, lastdate = '%s',arsflag='X',admin_flag='N',domain='',org_num='',cust_name='',org_num=''  where \
		/*** 해지 마킹 ***/
		sprintf(sqlcmd,"UPDATE number_list set \
		type=1,status = 3, lastdate = '%s',arsflag='X',admin_flag='N',domain='',cust_name='' where \
		number = '%s'", tmp,outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_list!22(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
			//fields_num = mysql_affected_rows(mysql);

		sprintf(sqlcmd,"DELETE from superadmin \
		where admin_id = '%s'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from number_manage where  \
		070number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"DELETE from number_manage_bak where  \
		070number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage_bak!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"DELETE from sip_buddies_bak where  \
		callerid = '<%s>'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage_bak!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"DELETE from sip_buddies where  \
		callerid = '<%s>'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update number_manage_bak!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}


		sprintf(sqlcmd,"DELETE from color_info where  \
		prefix = '%7.7s' and serverip='%s'", phoneid+1,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"DELETE from forward_number where  \
		substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='')", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
		}

		sprintf(sqlcmd,"DELETE from voicemail_users where  \
		customer_id = '%7.7s' and domain='%s'", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete voicemail_users!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from call_member where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from hunting_group where  \
		number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from hunting_member where  \
		h_number = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from hunting_member where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from ars_member where  \
		prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from sms_send where (fromstr = '1%7.7s' or fromstr = '721%7.7s' or fromstr = '%s' or fromstr = '72%s') and ip = '%s'", \
		phoneid+1,phoneid+1,outer_num,outer_num,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from sms_count where phoneid = '1%7.7s' and defaultip = '%s'", \
		phoneid+1,serverip);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete sms_count!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}


		sprintf(sqlcmd,"DELETE from address_group where  \
		user = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete address_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from address_member where  \
		user = '%s'", outer_num);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete address_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from black_list where  \
		substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete black_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

		sprintf(sqlcmd,"DELETE from white_list where  \
		substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|delete white_list!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}
/**
		sprintf(sqlcmd,"UPDATE sip_buddies set \
		callerid = 'asterisk' where \
		callerid = '<%s>'",outer_num);
*/
		sprintf(sqlcmd,"DELETE from sip_buddies \
		where callerid = '<%s>'",outer_num);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);

		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|update number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			//return(-1);
		}

	    tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
	    sprintf(commandBuf,"|D07|%s@%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid);


	    if(PVS == 1 && MASTER == 1) {
		if((*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'S') && strcmp(messenger_ip,"127.0.0.1")) {
			sprintf(sqlcmd1, "delete from  messenger_id where phoneid='%s' and defaultip = '%s'",phoneid,serverip);
			printf("\nsqlcmd:(%s)",sqlcmd1);
			if( ret = mysql_query(mysql, sqlcmd1) )
				printf("\n(%s, %s)",mysql_error(mysql),sqlcmd );
			sprintf(commandBuf,"|D07|%s@%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid);
			if(ret = commandSendUc(commandBuf,"D07",messenger_ip, 1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'D07','%s','%s')",tmp, commandBuf,serverip,messenger_ip,outer_num);
				printf("\nsqlcmd:(%s)",sqlcmd);
				mysql_query(mysql, sqlcmd1);
			}
		}
/****
		if(*serverip && strlen(serverip) > 10 && (cpid = fork()) == 0) {
				commandSend(commandBuf,serverip);
				exit(0);
		}
*/
		sprintf(commandBuf,"|D07|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid,serverip);
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8 ) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|D07|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,outer_num,number_type,prefix,macaddr,phoneid,serverip);
		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i= 0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10 ) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'D07')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
/*****************
					if(strcmp(row[1],"sub1")) {
						tmm_DateAddOneDay(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);
					}
*/
				}
			}
			mysql_free_result(result);
			result = NULL;
    }

    sprintf(resPacket,"|RES|D07 userid:(%s)-(%s)-(%s) OK",user,domain,outer_num);
    return 0;       
}



/*************************************************************************
* 내선 번호 삭제						     *
*************************************************************************/
int
procDNO()
{
  char passwd[256],today[15];
  char email[256],sqlcmd1[512];
  int   qid,returncode, ret,i, sockfd;
  int   test=0,row_num=0,cpid;
  char tmp[100];
	char	destP[256];
  unsigned int	tmpNumber;
  char    sqlcmd[512];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
	            strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

    if(strlen(inner_num) !=4)
	return(errorReturn("PACKET Request Error!(inner num len)",__FILE__,__LINE__));

    if(argv[3] && *argv[3]) {
                strcpy(outer_num,argv[3]);
/****
			if(argv[4] && *argv[4]) {
					strcpy(number_type,argv[4]);
					intnumber_type = atoi(number_type);
			}
			else
					intnumber_type = 1;
*/
    }
    else {
        strcpy(outer_num,"00000000000");
        intnumber_type = 1;
    }

    if(!strcmp(inner_num,"0000"))
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

		/*** SP를 기본으로 .***/
		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

                        sprintf(email,"sip prune realtime peer 1%7.7s",phoneid+1);
			if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
				sockfd = Manager(serverip,email);
				if(sockfd > -1) {
					strcpy(email,"Action: Logoff\r\n\r\n");
					write(sockfd, email, strlen(email));
					close(sockfd);
				}
			}

	}
	else {
			if(argv[4] && *argv[4]) 
				strcpy(phoneid,argv[4]);
			if(argv[5] && *argv[5]) 
				strcpy(serverip,argv[5]);
			else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
			sprintf(prefix,"%3.3s",phoneid+1);
	}

/*** number_manage ***/

			/*** 내선 번호가 ???인 넘들 삭제 처리 ***/
			sprintf(sqlcmd,"DELETE from  number_manage  where\
			substr(phoneid,2,7) = '%s' and defaultip='%s'", \
			phoneid+1,serverip);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from sip_buddies where \
			substr(name,2,7) = '%s' and defaultip='%s'", \
			phoneid+1,serverip);

			printf("\nsqlcmd : ((((%s))))",sqlcmd);
			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete sip_buddies!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from color_info where  \
			prefix = '%7.7s' and serverip='%s'", phoneid+1,serverip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete color_info!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from forward_number where  \
			substr(phoneid,2,7) = '%7.7s' and (domain='%s' or domain='')", phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete forward_number!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from voicemail_users where  \
			customer_id = '%7.7s' and domain='%s'", phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete voicemail_users!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from call_member where  \
			prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete call_member!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from hunting_member where  \
			prefix = '%3.3s' and number = '%4.4s' and defaultip='%s'", phoneid+1,phoneid+4,serverip);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete hunting_member!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete address_group!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from black_list where  \
			substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete black_list!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			sprintf(sqlcmd,"DELETE from white_list where  \
			substr(phoneid,2,7) = '%7.7s' and domain='%s'", phoneid+1,domain);
			printf("\nsqlcmd : ((((%s))))",sqlcmd);

			if( mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|delete white_list!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				//return(-1);
			}

			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(commandBuf,"|DNO|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,outer_num,phoneid,serverip);
			if(PVS == 1 && MASTER == 1 && strlen(serverip) > 10 ) {

			if(MASTER==1 && strlen(BACKUP_SERVER) > 8 ) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt, cmd) values ('%s','%s','%s','0',1,'DNO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql, sqlcmd);

				}
			}

			sprintf(commandBuf,"|DNO|%s@%s|%s|%s|%s|%s|",user,domain,inner_num,outer_num,phoneid,serverip);
			sprintf(resPacket,"|RES|DNO userid:(%s)-(%s)",user,domain);
			/****추가 ***/
		//	sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i= 0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DNO')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql, sqlcmd1);

					}
				}
			}
			mysql_free_result(result);
			result = NULL;
	}
	sprintf(resPacket,"|RES|DNO userid:(%s)-(%s)-(%s)",user,domain,phoneid);
	return 0;       
}

/*************************************************************************
* 내선 번호 조회(도메인에 할당된 내선 번호 전체 조회		    *
*************************************************************************/
int
procRNN()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode, row_num1;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11],org_num[20],svc_kind[10],name[32],tel[20];
  char	pick[11],class[20];
	char timeout[11],bill_type[11],ment_flag[11],inner_digit[11],crm_flag[11],manner_flag[11],letter_flag[11],record_flag[11],moh_bill[11],console_bill[11],autorec_bill[11],callback_flag[11];
  char option1[10],option2[10],option3[10],option4[10],option5[10],option6[10],option7[10];
	char	record[10],cid[20];
	char insecure[12],incominglimit[12];


	memset(email,0,sizeof(email));
	memset(recorddate,0,sizeof(recorddate));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(name,0,sizeof(name)); 
	memset(tel,0,sizeof(tel)); 
	memset(pick,0,sizeof(pick)); 
	memset(class,0,sizeof(class)); 
	memset(timeout,0,11);
	memset(bill_type,0,11);
	memset(ment_flag,0,11);
	memset(inner_digit,0,11);
	memset(crm_flag,0,11);
	memset(manner_flag,0,11);
	memset(letter_flag,0,11);
	memset(record_flag,0,11);
	memset(moh_bill,0,11);
	memset(console_bill,0,11);
	memset(autorec_bill,0,11);
	memset(callback_flag,0,11);

	memset(record,0,10);

	memset(option1,0,10);
	memset(option2,0,10);
	memset(option3,0,10);
	memset(option4,0,10);
	memset(option5,0,10);
	memset(option6,0,10);
	memset(option7,0,10);
	memset(cid,0,20);
	memset(insecure,0,12);
	memset(incominglimit,0,12);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

/***중앙 , 로컬 구분 불필요....(양쪽 모두 sync되어야 함
	If(PVS == 1) 
	{
*/
		//sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,org_num,svc_kind,phoneid from number_manage where 070number in (select number from number_list where domain='%s' and status=1) order by numbertype,070number,extension asc",domain);
		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,org_num,svc_kind,phoneid,name,tel,class,timeout,bill_type,ment_flag,inner_digit,crm_flag,manner_flag,letter_flag,record_flag,moh_bill,console_bill,autorec_bill,ringcallback_flag,option1,option2,option3,option4,option5,option6,option7,record,cid from number_manage where domain='%s' order by numbertype,070number,extension asc",domain);

		//sprintf(sqlcmd, "select imid,numbertype,070number,distinct(extension),forbiden_call from number_manage where domain = '%s' order by numbertype,070number,extension asc",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
/***
	}
*/
        
/***
		imid,type,number,extension,phoneid
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
                        strcpy(dbhost, row[0]?row[0]:"unknown");
                        strcpy(dbuserid, row[1]?row[1]:"unknown");
                        qid =  row[2]?atoi(row[2]):1;
                        strcpy(dbdomain, row[3]?row[3]:"unknown");
                        strcpy(forbiden_call, row[4]?row[4]:"unknown");
                        strcpy(fromtime, row[5]?row[5]:"0");
                        strcpy(totime, row[6]?row[6]:"0");
                        strcpy(recorddate, row[7]?row[7]:"0");
                        strcpy(org_num, row[8]?row[8]:"");
                        strcpy(svc_kind, row[9]?row[9]:"");
                        strcpy(phoneid, row[10]?row[10]:"");
                        strcpy(name, row[11]?row[11]:"");
                        strcpy(tel, row[12]?row[12]:"");
                        strcpy(class, row[13]?row[13]:"");

			strcpy(timeout, row[14]?row[14]:"");
			strcpy(bill_type, row[15]?row[15]:"");
			strcpy(ment_flag, row[16]?row[16]:"");
			strcpy(inner_digit, row[17]?row[17]:"");
			strcpy(crm_flag, row[18]?row[18]:"");
			strcpy(manner_flag, row[19]?row[19]:"");
			strcpy(letter_flag, row[20]?row[20]:"");
			strcpy(record_flag, row[21]?row[21]:"");
			strcpy(moh_bill, row[22]?row[22]:"");
			strcpy(console_bill, row[23]?row[23]:"");
			strcpy(autorec_bill, row[24]?row[24]:"");
			strcpy(callback_flag, row[25]?row[25]:"");

			strcpy(option1, row[26]?row[26]:"");
			strcpy(option2, row[27]?row[27]:"");
			strcpy(option3, row[28]?row[28]:"");
			strcpy(option4, row[29]?row[29]:"");
			strcpy(option5, row[30]?row[30]:"");
			strcpy(option6, row[31]?row[31]:"");
			strcpy(option7, row[32]?row[32]:"");
			strcpy(record, row[33]?row[33]:"");
			strcpy(cid, row[34]?row[34]:"");

                        ps_delSpace(dbuserid);
                        ps_delSpace(dbhost);
                        ps_delSpace(dbdomain);
                        ps_delSpace(forbiden_call);
                        ps_delSpace(fromtime);
                        ps_delSpace(totime);
                        ps_delSpace(recorddate);
                        ps_delSpace(org_num);
                        ps_delSpace(svc_kind);
                        ps_delSpace(phoneid);
                        ps_delSpace(name);
                        ps_delSpace(tel);
                        ps_delSpace(class);

                        ps_delSpace(timeout);
                        ps_delSpace(bill_type);
                        ps_delSpace(ment_flag);
                        ps_delSpace(inner_digit);
                        ps_delSpace(crm_flag);
                        ps_delSpace(manner_flag);
                        ps_delSpace(letter_flag);
                        ps_delSpace(record_flag);
                        ps_delSpace(moh_bill);
                        ps_delSpace(console_bill);
                        ps_delSpace(autorec_bill);
                        ps_delSpace(callback_flag);

                        ps_delSpace(option1);
                        ps_delSpace(option2);
                        ps_delSpace(option3);
                        ps_delSpace(option4);
                        ps_delSpace(option5);
                        ps_delSpace(option6);
                        ps_delSpace(option7);
                        ps_delSpace(record);
                        ps_delSpace(cid);

			if(!mysql_1)
				sqlinit_1(LOCAL_SERVER);

			if(mysql_1) {
				sprintf(sqlcmd, "select pickupgroup,insecure,incominglimit from sip_buddies where name ='1%7.7s'",phoneid+1);

				ret = mysql_query(mysql_1, sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						    row1 = mysql_fetch_row( result_1);
						    if( row1) {
								strcpy(pick, row1[0]?row1[0]:"---");
								ps_delSpace(pick);
								strcpy(insecure, row1[1]?row1[1]:"");
								ps_delSpace(insecure);
								strcpy(incominglimit, row1[2]?row1[2]:"-");
								ps_delSpace(incominglimit);
						    }
					}
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
			if(*option1 == 'F') {
				int row_num_1 = 0;
					sprintf(sqlcmd, "select number,kind,inner_forward from forward_number where phoneid = '1%7.7s' and (domain='%s')", phoneid+1,domain) ;

					if( ret = mysql_query(mysql_1, sqlcmd) ) {
						;
					}

					result_1 = mysql_store_result( mysql_1 );
					if(!result_1 ) {
						;
					}
					else {
						row_num_1 = mysql_num_rows(result_1);
						if( row_num_1 == 0 ) {
							strcpy(option1,"N");
							if(strlen(phoneid) == 8)
								sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'N' \
								where phoneid= '0%7.7s' and domain='%s'",\
								phoneid+1,domain);
							else
								sprintf(sqlcmd,"UPDATE number_manage  set option1 = 'N' \
								where phoneid= '0%7.7s' and domain='%s'",\
								phoneid,domain);

							printf("\nsqlcmd : ((((%s))))",sqlcmd);
						}
						mysql_free_result(result_1);
						result_1 = NULL;
					}
			}


			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);


			/* OJKIM START 개인번호 가진 사람일때 대표번도 명기*/
		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate,org_num,svc_kind,name,tel,pick,phoneid,class,timeout ,bill_type ,ment_flag ,inner_digit ,crm_flag ,manner_flag ,letter_flag ,record_flag ,moh_bill ,console_bill ,autorec_bill ,callback_flag,option1,option2,option3,option4,option5,option6,option7,record,cid,insecure,incominglimit);

		    //sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate,org_num,svc_kind);
		    //sprintf(resPacket+strlen(resPacket),"|%s^%d^%s^%s^%s",dbuserid,qid,dbdomain,dbhost,forbiden_call);
/* OJKIM END*/
			
		}
printf("\n&&&&&& (%d) &&& (%d)=%d",i,row_num,((i+1)%20));
		if(!((i+1)%9)) 
		{
printf("\n=============");
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
//tcpWrite(masterFd, resPacket);
tcpWrite(masterFd, resPacket, strlen(resPacket));
printf("\n===================[5m%s[0m",resPacket);
memset(resPacket,0,sizeof(resPacket));
				sprintf(resPacket,"|RES");
			}
			else {
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
/**
**/
	printf("\n======ss=============%s",resPacket);
                		tcpWrite(masterFd, resPacket, strlen(resPacket));
				memset(resPacket,0,sizeof(resPacket));
				sprintf(resPacket,"|RES");
	result = NULL;

    return 0;       
}



/*************************************************************************
* 내선 번호 조회(도메인에 할당된 내선 번호 전체 조회			    *
*************************************************************************/
int
procRNO()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11];


	memset(email,0,sizeof(email));
	memset(recorddate,0,sizeof(recorddate));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/***중앙 , 로컬 구분 불필요....(양쪽 모두 sync되어야 함
	If(PVS == 1) 
	{
*/
		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate from number_manage where domain = '%s' order by numbertype,070number,extension asc",domain);
		//sprintf(sqlcmd, "select imid,numbertype,070number,distinct(extension),forbiden_call from number_manage where domain = '%s' order by numbertype,070number,extension asc",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
/***
	}
*/
        
/***
		imid,type,number,extension,phoneid
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
                        strcpy(dbhost, row[0]?row[0]:"unknown");
                        strcpy(dbuserid, row[1]?row[1]:"unknown");
                        qid =  row[2]?atoi(row[2]):1;
                        strcpy(dbdomain, row[3]?row[3]:"unknown");
                        strcpy(forbiden_call, row[4]?row[4]:"unknown");
                        strcpy(fromtime, row[5]?row[5]:"0");
                        strcpy(totime, row[6]?row[6]:"0");
                        strcpy(recorddate, row[7]?row[7]:"0");

                        ps_delSpace(dbuserid);
                        ps_delSpace(dbhost);
                        ps_delSpace(dbdomain);
                        ps_delSpace(forbiden_call);
                        ps_delSpace(fromtime);
                        ps_delSpace(totime);
                        ps_delSpace(recorddate);


			/* OJKIM START 개인번호 가진 사람일때 대표번도 명기*/
		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
		    //sprintf(resPacket+strlen(resPacket),"|%s^%d^%s^%s^%s",dbuserid,qid,dbdomain,dbhost,forbiden_call);
/* OJKIM END*/
			
		}


		if(!((i+1)%10)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				logCmd();
				sprintf(resPacket,"|RES");
			}
			else {
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* 내선 번호 조회(by 070번호)	 				     *
*************************************************************************/
int
procRRN()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] == NULL)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

/***중앙 , 로컬 구분 불필요....(양쪽 모두 sync되어야 함
	If(PVS == 1) 
	{
*/
		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate from number_manage where 070number = '%s' order by numbertype,070number,extension asc",argv[2]);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
/***
	}
*/
        
/***
		distinct(extension), imid,numbertype,070number,forbiden_call,fromtime,totime
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
			strcpy(dbhost, row[0]?row[0]:"unknown");
			strcpy(dbuserid, row[1]?row[1]:"unknown");
			qid =  row[2]?atoi(row[2]):1;
			strcpy(dbdomain, row[3]?row[3]:"unknown");
			strcpy(forbiden_call, row[4]?row[4]:"unknown");
			strcpy(fromtime, row[5]?row[5]:"0");
			strcpy(totime, row[6]?row[6]:"0");
			strcpy(recorddate, row[7]?row[7]:"0");

			ps_delSpace(dbuserid);
			ps_delSpace(dbhost);
			ps_delSpace(dbdomain);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(recorddate);

		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
			
		}
		if(!((i+1)%30)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else {
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}





/*************************************************************************
* 개인 내선 번호 조회							 *
*************************************************************************/
int
procRNP()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode,row_num1;
  int   test=0,ret,row_num=0,i, ires=0;
  char tmp[100],recorddate[21],tel[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11], fromtime[11], totime[11],name[64],pick[20];
	char	cid[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call));
	memset(name,0,sizeof(name));
	memset(tel,0,sizeof(tel));
	memset(pick,0,sizeof(pick));
	memset(cid,0,sizeof(cid));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
/***
	if(PVS == 1) 
	{

	imid,numbertype,070number,extension,phoneid
*/
		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,org_num,svc_kind,phoneid from number_manage where 070number in (select number from number_list where domain='%s' and status=1) order by numbertype,070number,extension asc",domain);

		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,name,tel,phoneid,cid from number_manage where domain = '%s' and imid = '%s'",domain,user);
		//sprintf(sqlcmd, "select imid,numbertype,070number,extension,forbiden_call from number_manage where  domain = '%s' order by numbertype,070number,extension asc",domain);
		printf("\n sqlcmd : (%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
/***
	}
*/
        
printf("\nrow_num:(%d)",row_num);
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if(row) 
		{
                        strcpy(dbhost, row[0]?row[0]:"unknown");
                        strcpy(dbuserid, row[1]?row[1]:"unknown");
                        qid =  row[2]?atoi(row[2]):1;
                        strcpy(dbdomain, row[3]?row[3]:"unknown");
                        strcpy(forbiden_call, row[4]?row[4]:"unknown");
                        strcpy(fromtime, row[5]?row[5]:"0");
                        strcpy(totime, row[6]?row[6]:"0");
                        strcpy(recorddate, row[7]?row[7]:"0");
                        strcpy(name, row[8]?row[8]:"unknown");
                        strcpy(tel, row[9]?row[9]:"-");
                        strcpy(phoneid, row[10]?row[10]:"");
                        strcpy(cid, row[11]?row[11]:"");

                        ps_delSpace(dbuserid);
                        ps_delSpace(dbhost);
                        ps_delSpace(dbdomain);
                        ps_delSpace(forbiden_call);
                        ps_delSpace(fromtime);
                        ps_delSpace(totime);
                        ps_delSpace(recorddate);
                        ps_delSpace(name);
                        ps_delSpace(tel);
                        ps_delSpace(phoneid);
                        ps_delSpace(cid);

			if(!mysql_1)
				sqlinit_1(LOCAL_SERVER);

			if(mysql_1) {
				sprintf(sqlcmd, "select pickupgroup from sip_buddies where name ='1%7.7s'",phoneid+1);

				ret = mysql_query(mysql_1, sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						    row1 = mysql_fetch_row( result_1);
						    if( row1) {
								strcpy(pick, row1[0]?row1[0]:"---");
								ps_delSpace(pick);
						    }
					}
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);

		     /* OJKIM START 개인번호 가진 사람일때 대표번도 명기*/
		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate,name,tel,pick,cid);
//printf("\nresPacket:(%s)",resPacket);
		    //sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",dbuserid,dbdomain,dbhost,forbiden_call);
		/* OJKIM END*/
		}

        if(!((i+1)%25))
        {
            if((i+1) < row_num)
            {
                strcat(resPacket,"\n");
                tcpWrite(masterFd, resPacket);
                sprintf(resPacket,"|RES");
            }
            else {
                mysql_free_result(result);
		result = NULL;
                return 0;
            }
        }
        selcnt++;
	}

	mysql_free_result(result);
	result = NULL;

//HEHE
		if(selcnt < 1)
		{
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

    return 0;       
}


/*************************************************************************
* 070 국번 조회						     *
*************************************************************************/
int
procRFX()
{
  char passwd[256];
  char email[256];
  int   qid,returncode, count=0;
  int   test=0,ret,i,row_num=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],status[20],searchnum[11];


    memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(searchnum,0,sizeof(searchnum)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	
*/
    	if(PVS == 1) {

	if(!*domain)
		strcpy(domain,"onnet21.com");

	if(customInfo(domain) < 0)
		return -1;


		/***사용하지 않은 070번호 자원 조회 ****/
		sprintf(sqlcmd, "select distinct substr(number,4,4) from number_list where serverip='%s' order by 1", serverip);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		printf("\nsqlcmd:(%s)",sqlcmd);

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
		sprintf(resPacket,"|RES");
		printf("\nrow_num:(%d)",row_num);
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
					strcpy(dbuserid, row[0]?row[0]:"0");
					ps_delSpace(dbuserid);
					sprintf(resPacket+strlen(resPacket),"|%s",dbuserid);
			}


			/***Multi line ***/
			if(!((i+1)%30)) {
				if((i+1) < row_num) {
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						memset(resPacket,0,sizeof(resPacket));
						sprintf(resPacket,"|RES");
				}
				else {
						mysql_free_result(result);
						result = NULL;
						return 0;       
				}
			}

			selcnt++;
		}
	mysql_free_result(result);
	result = NULL;
	return 0;       
}




/*************************************************************************
* 070 번호자원 조회						     *
*************************************************************************/
int
procR07()
{
  char passwd[256];
  char email[256];
  int   qid,returncode, count=0;
  int   test=0,ret,i,row_num=0;
  char tmp[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],status[20],searchnum[11];


    memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(searchnum,0,sizeof(searchnum)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	
*/
    if(argv[2] && *argv[2] && strlen(argv[2]) == 11) {
	sprintf(searchnum,"%s",argv[2]);
    }
    	if(PVS == 1) {

	if(!*domain)
		strcpy(domain,"onnet21.com");

	if(customInfo(domain) < 0)
		return -1;


		/***사용하지 않은 070번호 자원 조회 ****/
		if(*searchnum)
			sprintf(sqlcmd, "select number,status from number_list where number >= '%s'  and serverip='%s' order by number asc limit 500", searchnum,serverip);
		else
			sprintf(sqlcmd, "select number,status from number_list where serverip='%s' order by number asc limit 500",serverip);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   
		printf("\nsqlcmd:(%s)",sqlcmd);

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
		sprintf(resPacket,"|RES");
		printf("\nrow_num:(%d)",row_num);
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
					strcpy(dbuserid, row[0]?row[0]:"0");
					ps_delSpace(dbuserid);
					strcpy(status, row[1]?row[1]:"0");
					ps_delSpace(status);

					sprintf(resPacket+strlen(resPacket),"|%s^%s",dbuserid, status);
			}


			/***Multi line ***/
			if(!((i+1)%30)) {
				if((i+1) < row_num) {
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						memset(resPacket,0,sizeof(resPacket));
						sprintf(resPacket,"|RES");
				}
				else {
						mysql_free_result(result);
						result = NULL;
						return 0;       
				}
			}

			selcnt++;
		}
	mysql_free_result(result);
	result = NULL;
	return 0;       
}


/*************************************************************************
* 070 번호자원 조회-도메인별 사용중인....			     *
0:미사용
1:사용중
2:해지후 사용대기
4:예약(신청)
*************************************************************************/
int
procR00()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10];
	
	
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);

	if(PVS == 1) 
	{
		if(*domain) {
			if(*flag == 'U')
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate from number_list where domain='%s' and status = 1  and number not in (select 070number from number_manage where domain='%s' and substr(imid,1,5) <> 'tmpid' and type = '1') order by type,number asc",domain,domain);
			else
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate from number_list where domain='%s' and status = 1 order by type,number asc",domain);
		}
		else
			sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate from number_list where status = 1 order by type,number asc");


		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:"0",domain1,lastdate);
		}
		if(!((i+1)%15)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}

/**********************************************************************************************************/
/**********************************************************************************************************/
int
procPRV()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0,adminflag=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[14],org_num[20];
	char    macaddress[20],sipid[64],dn[20],setdn[20],prov_updatetime[42],prov_flag[10],prov_failcause[128];
	char    ext_ipaddr[20],sswip[20],fqdn[64],phoneid[10];
	char    adminnum[14],min070[14],minorg[14],cond_num[20];
	char	sippwd[20];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(adminnum,0,sizeof(adminnum)); 
	memset(min070,0,sizeof(min070)); 
	memset(minorg,0,sizeof(minorg)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(sippwd,0,sizeof(sippwd)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);
	else 	strcpy(flag,"0");

	if(argv[3] && *argv[3])			strcpy(cond_num, argv[3]);
	else 	strcpy(cond_num,"");



	if(*domain=='\0')
		strcpy(domain,"lgdacom.net");

	if(PVS == 1) {
//NEWNEW
		sprintf(sqlcmd, "select number from number_list where number = '%s' or org_num='%s'",cond_num,cond_num);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		}   

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("90000|",__FILE__,__LINE__));
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(cond_num, row[0]?row[0]:"07000000000");
					ps_delSpace(cond_num);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}   


		if(!strcmp(domain,"admin") && *flag == '0') {
			sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where   setdn = '%s'",cond_num);
		}
		else if(!strcmp(domain,"admin") && *flag == '1') {
			sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where   macaddress = '%s'",cond_num);
		}
		else if(*domain && *flag == '0') {
			if(*cond_num == '\0')
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where  substr(fqdn,10,%d)='%s'",strlen(domain),domain);
			else 
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where  substr(fqdn,10,%d)='%s' and setdn = '%s'",strlen(domain),domain,cond_num);
		}
		else if(*domain && *flag == '1') {
			if(*cond_num == '\0')
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where substr(fqdn,10,%d)='%s' order by setdn asc",strlen(domain),domain);
			else 
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),sippwd from DCS_PHONE_AUTH where macaddress = '%s' and substr(fqdn,10,%d)='%s' order by setdn asc",cond_num,strlen(domain),domain);
		}

		if(!authmysql)
			authinit(AUTH_SERVER);

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(authmysql),sqlcmd );
			if(authmysql)
				mysql_close(authmysql);
			authinit(AUTH_SERVER);

			if( ret = mysql_query(authmysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( authmysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipadd r,sswip
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
/***
dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr
***/
			strcpy(dn, row[0]?row[0]:"-");
			ps_delSpace(dn);
			strcpy(setdn, row[1]?row[1]:"-");
			ps_delSpace(setdn);
			strcpy(macaddress, row[2]?row[2]:"-");
			ps_delSpace(macaddress);
			strcpy(prov_updatetime, row[3]?row[3]:"-");
			ps_delSpace(prov_updatetime);

			strcpy(prov_flag, row[4]?row[4]:"-");
			ps_delSpace(prov_flag);
			strcpy(prov_failcause, row[5]?row[5]:"");
			ps_delSpace(prov_failcause);
			strcpy(ext_ipaddr, row[6]?row[6]:"");
			ps_delSpace(ext_ipaddr);
			strcpy(sswip, row[7]?row[7]:"");
			ps_delSpace(sswip);
			strcpy(phoneid, row[8]?row[8]:"");
			ps_delSpace(phoneid);
			strcpy(sippwd, row[9]?row[9]:"-");
			ps_delSpace(sippwd);
			
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip, phoneid,sippwd);
		}
		if(!((i+1)%15)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}


/*********************
*       udpSend  *
*********************/
int
regiRetest(id,ip)
char	*id;
char 	*ip;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd;
        struct sockaddr_in saddr;


printf("\n====================================================================");

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_port = htons(5060);
        saddr.sin_addr.s_addr = inet_addr(ip);

        sprintf(reqPacket,"REGISTER sip:%s:5060;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Content-Length: 0\n\
Via: SIP/2.0/UDP 192.168.0.11:5060;branch=z9hG4bKf34c51533;rport\n\
Call-ID: 9cfe622ad61b443c47fc14d5%d@192.168.0.11\n\
From: <sip:1%s@%s:5060>;tag=91ee57565dd9038\n\
To: <sip:1%s@%s:5060>\n\
CSeq: 37689 REGISTER\n\
Expires: 3600\n\
Authorization:Digest response='52bf6bc831a6e46a4174c56100527b2a',username='1%s',realm='centrex',nonce='regitest',uri='sip:%s:5060;transport=udp'\n\
User-Agent: Stonehenge IP255-S 1.30.291\n\
",ip,getpid(),id+1,ip,id+1,ip,id+1,ip);
/**
       ssize_t sendto(int socket, const void *message, size_t length,
              int flags, const struct sockaddr *dest_addr,
              socklen_t dest_len);
*/
        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR)
                return -1;

        len = sendto(sd,reqPacket, strlen(reqPacket), 0,(struct sockaddr *)&saddr,\
        (socklen_t) sizeof(saddr));

        printf("\n[7mlen : (%d)[0m", len);
        //udpRead(masterFd, reqPacket);
        len = recvfrom(sd, resPacket,1024, 0,(struct sockaddr *)&saddr,(socklen_t *)&clilen);
        resPacket[len]='\0';
        printf("\n[7mresPacket : (%s)[0m", resPacket);

        if(strstr(resPacket,"100 Trying")) {
                len = recvfrom(sd, resPacket,1024, 0,(struct sockaddr *)&saddr,(socklen_t *)&clilen);
                resPacket[len]='\0';
                printf("\n[7mresPacket : (%s)[0m", resPacket);
        }
        if(strstr(resPacket,"200"))
		return 0;
	else
		return -1;
}


/*********************
*       udpSend  *
*********************/
int
regiTest(id,ip)
char	*id;
char 	*ip;
{
        fd_set  rset, masterset;
        int nsel,maxfd,clilen, len,pid, sd,ret;
        struct sockaddr_in saddr;


printf("\n====================================================================");

        bzero((char *) &saddr, sizeof(saddr));
        saddr.sin_family = AF_INET;
        saddr.sin_port = htons(5060);
        saddr.sin_addr.s_addr = inet_addr(ip);

        sprintf(reqPacket,"REGISTER sip:%s:5060;transport=udp SIP/2.0\n\
Max-Forwards: 70\n\
Content-Length: 0\n\
Via: SIP/2.0/UDP 192.168.0.11:5060;branch=z9hG4bKf34c51533;rport\n\
Call-ID: 9cfe622ad61b443c47fc14d5%d@192.168.0.11\n\
From: <sip:1%s@%s:5060>;tag=91ee57565dd9038\n\
To: <sip:1%s@%s:5060>\n\
CSeq: 37688 REGISTER\n\
Expires: 3600\n\
User-Agent: Stonehenge IP255-S 1.30.291\n\
",ip,getpid(),id+1,ip,id+1,ip);
/**
       ssize_t sendto(int socket, const void *message, size_t length,
              int flags, const struct sockaddr *dest_addr,
              socklen_t dest_len);
*/

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == ERR)
                return -1;
        len = sendto(sd,reqPacket, strlen(reqPacket), 0,(struct sockaddr *)&saddr,\
        (socklen_t) sizeof(saddr));

        printf("\n[5m[7mlen : (%d)[0m[0m", len);
        //udpRead(masterFd, reqPacket);
        len = recvfrom(sd, resPacket,1024, 0,(struct sockaddr *)&saddr,(socklen_t *)&clilen);
        resPacket[len]='\0';
        printf("\n[5m[7mresPacket : (%s)[0m[0m", resPacket);

        if(strstr(resPacket,"100 Trying")) {
                len = recvfrom(sd, resPacket,1024, 0,(struct sockaddr *)&saddr,(socklen_t *)&clilen);
                resPacket[len]='\0';
                printf("\n[5m[7mresPacket : (%s)[0m[0m", resPacket);
        }
        if(strstr(resPacket,"401 Unauthorized")) {
                ret = regiRetest(id,ip);
		return ret;
	}
        else if(strstr(resPacket,"200") || strstr(resPacket,"OPTIONS"))
		return 0;
	else
		return -1;

}








/*********************************************************************************************************
|CRT|superadmin@admin|0|07086119503|10789503|07086119503|078|211.32.148.83|temp4402.lgdacom.net|1|0220893855|
*********************************************************************************************************/
int
procCRT()
{
	char passwd[256];
	int   qid,returncode, sockfd;
	int   test=0,ret,i,row_num=0,adminflag=0;
	char tmp[100],destP[1024];
	char    sqlcmd[512],sqlcmd1[256],domain1[64],lastdate[21],flag[14],org_num[20];
	char    macaddress[20],sipid[64],dn[20],setdn[20],prov_updatetime[42],prov_flag[10],prov_failcause[128];
	char    ext_ipaddr[20],sswip[20],fqdn[64],phoneid[10];
	char    adminnum[14],min070[14],minorg[14],cond_num[20];
	char    tmpdomain[64],numbertype[11],defaultip[20];
	char    prov_result[512],number_manage_result[512],sip_buddies_result[512];
	char email[256],command[64];
	char representNum[256];
	int   number_manage_cause = 0,sip_buddies_cause=0, tryCnt=0, tryCnt1=0;
	char recorddate[21],today[15];
	unsigned int	tmpNumber, frepresent=0;
	char    forbiden_call[11],fromtime[11],totime[11];
	char    num070[20], callgroup[11];
	  char	ment_flag[10],timeout[10],status[11],dbdomain[64];


	memset(email,0,sizeof(email));
	memset(defaultip,0,sizeof(defaultip));
	memset(dbdomain,0,sizeof(dbdomain));
	memset(status,0,sizeof(status));
	memset(org_num,0,sizeof(org_num));
	memset(numbertype,0,sizeof(numbertype));
	memset(callgroup,0,sizeof(callgroup));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(adminnum,0,sizeof(adminnum)); 
	memset(min070,0,sizeof(min070)); 
	memset(minorg,0,sizeof(minorg)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(sipid,0,sizeof(sipid)); 
	memset(tmpdomain,0,sizeof(tmpdomain)); 
	memset(prov_result,0,sizeof(prov_result)); 
	memset(number_manage_result,0,sizeof(number_manage_result)); 
	memset(sip_buddies_result,0,sizeof(sip_buddies_result)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(serverip,0,sizeof(serverip));
	memset(prefix,0,sizeof(prefix));
	memset(num070,0,sizeof(num070));
	memset(sip_passwd,0,sizeof(sip_passwd));
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);



	strcpy(num070,user);

	if(strncmp(num070,"070",3)) {
		sprintf(sqlcmd, "select number from number_list where org_num='%s'",num070);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("90000|",__FILE__,__LINE__));
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}   
	}

	sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where  setdn = '%s'",num070);
	printf("\n[5m(%s)[0m",sqlcmd);

	if(!authmysql)
		authinit(AUTH_SERVER);

	if( ret = mysql_query(authmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(authmysql),sqlcmd );
		if(authmysql)
			mysql_close(authmysql);
		authinit(AUTH_SERVER);
		if( ret = mysql_query(authmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( authmysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
		return(-1);
	}   
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}
	mysql_free_result(result);
	result = NULL;


	sprintf(sqlcmd, "select type,org_num,status from number_list where number='%s'",num070);
	printf("\n[5m(%s)[0m",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();

		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(result ) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
		else {
			row = mysql_fetch_row( result );
			if( row) 
			{
				strcpy(numbertype, row[0]?row[0]:"1");
				ps_delSpace(numbertype);
				strcpy(org_num, row[1]?row[1]:"");
				ps_delSpace(org_num);
				strcpy(status, row[2]?row[2]:"");
				ps_delSpace(status);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}   


	printf("\ntype :(%s), org_num:(%s)",numbertype,org_num);
	if(*status == '0' || *status == '3' || *status == '4') {
		 return(errorReturn("invalid status!!!",__FILE__,__LINE__));
	}

	sprintf(sqlcmd, "select phoneid,defaultip,domain from number_manage where 070number = '%s'",num070);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd)) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) 
	{
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
					
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}
		else {
			row = mysql_fetch_row( result);
			if( row) 
			{
				strcpy(phoneid, row[0]?row[0]:"--------");
				strcpy(defaultip, row[1]?row[1]:"127.0.0.1");
				strcpy(domain, row[2]?row[2]:"unknown.unknown");

				ps_delSpace(phoneid);
				ps_delSpace(defaultip);
				ps_delSpace(domain);
			}
			mysql_free_result(result);
			result = NULL;
		}
	}


	sprintf(command,"sip prune realtime peer 1%7.7s",dbhost+1);

	sockfd = Manager("127.0.0.1",command);
	if(sockfd > -1) {
		strcpy(command,"Action: Logoff\r\n\r\n");
		write(sockfd, command, strlen(command));
		close(sockfd);
	}


	if(!regiTest(phoneid,defaultip)) {
		sprintf(resPacket,"|RES|(%s)-(%s), regi Test OK",phoneid,defaultip);
		return 0;       
	}
	else {
		sprintf(resPacket,"|ERR|(%s)-(%s), regi Test Fail",phoneid,defaultip);
		return -1;
	}
}


/*********************************************************************************************************
|PR1|superadmin@admin|0|07086119503|10789503|07086119503|078|211.32.148.83|temp4402.lgdacom.net|1|0220893855|
|PR1|superadmin@admin|0|0011.a970.c36a|398@ippb|398|98@|115.95.157.29|.lgdacom.net|1||398rkdqnrnw0|
*********************************************************************************************************/
int
procPR1()
{
	char passwd[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0,adminflag=0,sockfd = -1;
	char tmp[100],destP[256];
	char    sqlcmd[512],sqlcmd1[256],domain1[64],lastdate[21],flag[14],org_num[20];
	char    macaddress[20],sipid[64],dn[20],setdn[20],prov_updatetime[42],prov_flag[10],prov_failcause[128];
	char    ext_ipaddr[20],sswip[20],fqdn[64],phoneid[10];
	char    adminnum[14],min070[14],minorg[14],cond_num[20];
	char    tmpdomain[64],numbertype[11],command[128];
	char    prov_result[512],number_manage_result[512],sip_buddies_result[512];
	char email[256];
	char representNum[256];
	int   number_manage_cause = 0,sip_buddies_cause=0, tryCnt=0, tryCnt1=0;
	char recorddate[21],today[15];
	unsigned int	tmpNumber, frepresent=0;
	char    forbiden_call[11],fromtime[11],totime[11];
	char    num070[20], callgroup[11];
	char	ment_flag[10],timeout[10],status[11],dbdomain[64];
	char	message[128];
	char	tmppasswd[256];
	struct  utsname   ht;


	memset(email,0,sizeof(email));
	memset(dbdomain,0,sizeof(dbdomain));
	memset(status,0,sizeof(status));
	memset(org_num,0,sizeof(org_num));
	memset(numbertype,0,sizeof(numbertype));
	memset(callgroup,0,sizeof(callgroup));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(adminnum,0,sizeof(adminnum)); 
	memset(min070,0,sizeof(min070)); 
	memset(minorg,0,sizeof(minorg)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(sipid,0,sizeof(sipid)); 
	memset(tmpdomain,0,sizeof(tmpdomain)); 
	memset(prov_result,0,sizeof(prov_result)); 
	memset(number_manage_result,0,sizeof(number_manage_result)); 
	memset(sip_buddies_result,0,sizeof(sip_buddies_result)); 
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(serverip,0,sizeof(serverip));
	memset(prefix,0,sizeof(prefix));
	memset(num070,0,sizeof(num070));
	memset(sip_passwd,0,sizeof(sip_passwd));
	memset(tmppasswd,0,sizeof(tmppasswd));
	
	uname(&ht);
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);
	else 	strcpy(flag,"0");

	if(argv[3] && *argv[3])			strcpy(cond_num, argv[3]);
	else 	strcpy(cond_num,"");

	if(*domain=='\0')
		strcpy(domain,"lgdacom.net");

	if(isdigitstr(cond_num))
		strcpy(flag,"0");

	if(PVS == 1) {
		if(!strcmp(domain,"admin") && *flag == '0') {
			if(strncmp(cond_num,"070",3)) {
				sprintf(sqlcmd, "select number from number_list where org_num='%s'",cond_num);
				printf("\n[5m(%s)[0m",sqlcmd);
				printf("\n[5m(%s)[0m",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					return(-1);
				}   
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
					mysql_free_result(result);
					result = NULL;
					return(-1);
				}
				else {
					row = mysql_fetch_row( result );
					if( row) 
					{
						strcpy(cond_num, row[0]?row[0]:"07000000000");
						ps_delSpace(cond_num);
					}
					else {
						sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
						mysql_free_result(result);
						result = NULL;
						return(-1);
					}
				}
				mysql_free_result(result);
				result = NULL;
				
				printf("\nmin 070:(%s)",min070);
				
			}
			sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where  setdn = '%s'",cond_num);
		}
		else if(!strcmp(domain,"admin") && *flag == '1') {
			sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where   macaddress = '%s'",cond_num);
		}
		else if(*domain && *flag == '0') {
			if(*cond_num == '\0')
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where  substr(fqdn,10,%d)='%s'",strlen(domain),domain);
			else 
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where  substr(fqdn,10,%d)='%s' and setdn = '%s'",strlen(domain),domain,cond_num);
		}
		else if(*domain && *flag == '1') {
			if(*cond_num == '\0')
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where substr(fqdn,10,%d)='%s' order by setdn asc",strlen(domain),domain);
			else 
				sprintf(sqlcmd, "select dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip,substr(SIPID,1,8),substr(fqdn,10,50),sswip,sippwd from DCS_PHONE_AUTH where macaddress = '%s' and substr(fqdn,10,%d)='%s' order by setdn asc",cond_num,strlen(domain),domain);
		}

		printf("\n[5m(%s)[0m",sqlcmd);
		if(!authmysql)
			authinit(AUTH_SERVER);

		if( ret = mysql_query(authmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(authmysql),sqlcmd );
			if(authmysql)
				mysql_close(authmysql);
			authinit(AUTH_SERVER);
			if( ret = mysql_query(authmysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( authmysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(authmysql),sqlcmd );
			logCmd();
			return(-1);
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
/****
				if(!strncmp(cond_num,"070",3)) {
					sprintf(sqlcmd,"update number_list set status = 0 where number = '%s'",\
					cond_num);

					printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
						logCmd();
					}

				}
*/
				strcpy(setdn, cond_num);
				//goto BBB;
				return -1;

				//return(errorReturn("90000|",__FILE__,__LINE__));
			}
			else {
				sprintf(prov_result,"|RES");
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(dn, row[0]?row[0]:"-");
					ps_delSpace(dn);
					strcpy(setdn, row[1]?row[1]:"07000000000");
					ps_delSpace(setdn);
					strcpy(macaddress, row[2]?row[2]:"-");
					ps_delSpace(macaddress);
					strcpy(prov_updatetime, row[3]?row[3]:"-");
					ps_delSpace(prov_updatetime);

					strcpy(prov_flag, row[4]?row[4]:"-");
					ps_delSpace(prov_flag);
					strcpy(prov_failcause, row[5]?row[5]:"");
					ps_delSpace(prov_failcause);
					strcpy(ext_ipaddr, row[6]?row[6]:"");
					ps_delSpace(ext_ipaddr);
					strcpy(sswip, row[7]?row[7]:"");
					ps_delSpace(sswip);
					strcpy(phoneid, row[8]?row[8]:"");
					ps_delSpace(phoneid);

					strcpy(tmpdomain, row[9]?row[9]:"unknown.unknown");
					ps_delSpace(tmpdomain);
					strcpy(serverip, row[10]?row[10]:"127.0.0.1");
					ps_delSpace(serverip);
					strcpy(sip_passwd, row[11]?row[11]:"1111");
					ps_delSpace(sip_passwd);

					sprintf(prefix,"%3.3s",phoneid+1);
					
					sprintf(prov_result+strlen(prov_result),"|%s^%s^%s^%s^%s^%s^%s^%s^%s\n",dn,setdn,macaddress,prov_updatetime,prov_flag,prov_failcause,ext_ipaddr,sswip, phoneid);
					tcpWrite(masterFd, prov_result, strlen(prov_result));
				}

			}
			mysql_free_result(result);
			result = NULL;
			printf("\nprov_result: (%s)",prov_result);
BBB:

			strcpy(numbertype,"1");
			strcpy(org_num,"");

			sprintf(sqlcmd, "select type,org_num,status,serverip from number_list where number='%s'",setdn);
			printf("\n[5m(%s)[0m",sqlcmd);
			printf("\n[5m(%s)[0m",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(result ) {
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					;
				}
				else {
					row = mysql_fetch_row( result );
					if( row) 
					{
						strcpy(numbertype, row[0]?row[0]:"1");
						ps_delSpace(numbertype);
						strcpy(org_num, row[1]?row[1]:"");
						ps_delSpace(org_num);
						strcpy(status, row[2]?row[2]:"");
						ps_delSpace(status);
						strcpy(serverip, row[3]?row[3]:"127.0.0.1");
						ps_delSpace(serverip);
					}
				}
				mysql_free_result(result);
				result = NULL;
			}   
			printf("\ntype :(%s), org_num:(%s)",numbertype,org_num);
		}
		if(*status == '0' || *status == '3' || *status == '4') {
			 return(errorReturn("invalid status!!!",__FILE__,__LINE__));
		}
	}
	else {
		if(argv[4])
			strcpy(phoneid,argv[4]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));

		if(argv[5])
			strcpy(setdn,argv[5]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
		if(argv[6])
			strcpy(prefix,argv[6]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
		if(argv[7])
			strcpy(serverip,argv[7]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
		if(argv[8])
			strcpy(tmpdomain,argv[8]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
		if(argv[9])
			strcpy(numbertype,argv[9]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
		if(argv[10])
			strcpy(org_num,argv[10]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));

		if(argv[11])
			strcpy(sip_passwd,argv[11]);
		else 
			return(errorReturn("EInputData",__FILE__,__LINE__));
	}

	if(strlen(sip_passwd) < 4)
		strcpy(sip_passwd,"1111");
        

	/******* number_manage *******/
	tryCnt = 0;
	tryCnt1 = 0;
A1:
		number_manage_cause = 0;
		memset(number_manage_result,0,sizeof(number_manage_result));
		sprintf(sqlcmd, "select phoneid,imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,domain from number_manage where 070number = '%s'",setdn);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				number_manage_cause = 1;
			}
			else {
				sprintf(number_manage_result,"|RES");
				row = mysql_fetch_row( result);
				if( row) 
				{
					strcpy(dbhost, row[0]?row[0]:"unknown");
					strcpy(dbuserid, row[1]?row[1]:"unknown");
					qid =  row[2]?atoi(row[2]):1;

					strcpy(forbiden_call, row[4]?row[4]:"unknown");
					strcpy(fromtime, row[5]?row[5]:"0");
					strcpy(totime, row[6]?row[6]:"0");
					strcpy(recorddate, row[7]?row[7]:"0");
					strcpy(dbdomain, row[8]?row[8]:"unknown.unknown");

					ps_delSpace(dbuserid);
					ps_delSpace(dbhost);
					ps_delSpace(forbiden_call);
					ps_delSpace(fromtime);
					ps_delSpace(totime);
					ps_delSpace(recorddate);
					ps_delSpace(dbdomain);
					if(strlen(phoneid) < 5) {
						strcpy(phoneid,dbhost);
						*phoneid='1';
					}

				}
				printf("\n[7m!!!!!!!!dcs phoneid:(%s), number_manage_phoneid:(%s)[0m",phoneid,dbhost);
				printf("\n[7m!!!!!!!!dcs tmpdomain:(%s), number_manage_dbdomain:(%s)[0m",tmpdomain,dbdomain);

				if(strcmp(phoneid+1,dbhost+1) || strcmp(tmpdomain,dbdomain)) {
				printf("\n[5m[7m!!!!!!!!dcs phoneid:(%s), number_manage_phoneid:(%s)[0m[0m",phoneid,dbhost);
				sprintf(sqlcmd,"update number_manage set phoneid = '0%7.7s',domain='%s' where 070number = '%s'",\
				phoneid+1,tmpdomain,setdn);

					printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
						logCmd();
					}
					if(tryCnt++ < 3) {
						mysql_free_result(result);
						result = NULL;
						goto A1;
					}
					sprintf(message,"도우미 보정:number_manage(%s)(%s)->(%s)(%s)",setdn,dbhost,phoneid,ht.nodename);
					//ret = smsSend(message,"164.124.107.28","mysqlif");
				}
			}
			mysql_free_result(result);
			result = NULL;
	}
	printf("\nnumber_manage_result: (%s)",number_manage_result);
		
B1:
	/******* sip_buddies *******/
		sip_buddies_cause = 0;
		memset(sip_buddies_result,0,sizeof(sip_buddies_result));
		sprintf(sqlcmd, "select name,callgroup,secret from sip_buddies where callerid = '<%s>'",setdn);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				sip_buddies_cause = 1;
			}
			else {
				sprintf(sip_buddies_result,"|RES");
				row = mysql_fetch_row( result);
				if( row) 
				{
					strcpy(dbhost, row[0]?row[0]:"unknown");
					ps_delSpace(dbhost);
					strcpy(callgroup, row[1]?row[1]:"0");
					ps_delSpace(callgroup);
					strcpy(tmppasswd, row[2]?row[2]:"1111");
					ps_delSpace(tmppasswd);

					if(strlen(phoneid) < 5) {
						strcpy(phoneid,dbhost);
						*phoneid='1';
					}

				    //sprintf(resPacket+strlen(sip_buddies_result),"|%s^%s^%d^%s^%s^%s^%s^%s%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate,callgroup);
				}

				printf("\n[7m!!!!!!!!dcs phoneid:(%s), sip_buddies_name:(%s)[0m",phoneid,dbhost);
				if(strcmp(phoneid+1,dbhost+1) || strcmp(sip_passwd,tmppasswd)) {
				printf("\n[5m[7m!!!!!!!!dcs phoneid:(%s), sip_buddies_name:(%s)[0m[0m",phoneid,dbhost);
				printf("\n[5m[7m!!!!!!!!dcs sip_passwd:(%s), sip_buddies_passwd:(%s)[0m[0m",sip_passwd,tmppasswd);
				if(strlen(dbhost) == 8) {
					sprintf(sqlcmd,"update sip_buddies set name = '1%7.7s',setvar='DOMAIN=%s',secret = '%s' where callerid = '<%s>' and name = '1%7.7s'",\
					phoneid+1,tmpdomain,sip_passwd,setdn,dbhost+1);

					printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
						logCmd();
					}
					sprintf(sqlcmd,"update sip_buddies set name = '2%7.7s',setvar='DOMAIN=%s',secret='%s' where callerid = '<%s>' and name = '2%7.7s'",\
					phoneid+1,tmpdomain,sip_passwd,setdn,dbhost+1);
					printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
						logCmd();
					}
					if(strcmp(phoneid+1,dbhost+1))
						sprintf(message,"도우미 보정:sip_buddies(%s)phoneid:(%s)->(%s)(%s)",setdn,phoneid,dbhost,ht.nodename);
					//ret = smsSend(message,"164.124.107.28","mysqlif");
					if(strcmp(sip_passwd,tmppasswd))
						sprintf(message,"도우미 보정:sip_buddies(%s)passwd:(%s)->(%s)(%s)",setdn,tmppasswd,sip_passwd,ht.nodename);
					//ret = smsSend(message,"164.124.107.28","mysqlif");

				}
				else {
					sprintf(sqlcmd,"update sip_buddies set name = '1%7.7s',setvar='DOMAIN=%s',secret='%s' where callerid = '<%s>' and name = '%s'",\
					phoneid+1,tmpdomain,sip_passwd,setdn,dbhost);

					printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
					if( mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
						logCmd();
					}
					if(strcmp(phoneid+1,dbhost+1))
						sprintf(message,"도우미 보정:sip_buddies(%s)phoneid:(%s)->(%s)(%s)",setdn,dbhost,phoneid,ht.nodename);
					//ret = smsSend(message,"164.124.107.28","mysqlif");
					if(strcmp(sip_passwd,tmppasswd))
						sprintf(message,"도우미 보정:sip_buddies(%s)passwd:(%s)->(%s)(%s)",setdn,tmppasswd,sip_passwd,ht.nodename);
					//ret = smsSend(message,"164.124.107.28","mysqlif");

				}

				if(strcmp(sip_passwd,tmppasswd) && PVS == 1) {
					sprintf(command,"sip prune realtime peer 1%7.7s",dbhost+1);
					if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
						sockfd = Manager(serverip,command);
						if(sockfd > -1) {
							strcpy(command,"Action: Logoff\r\n\r\n");
							write(sockfd, command, strlen(command));
							close(sockfd);
						}
					}
				}

				if(tryCnt++ < 3) {
					mysql_free_result(result);
					result = NULL;
					goto B1;
				}
				}

			}
			mysql_free_result(result);
			result = NULL;
	}
	printf("\nsip_buddies_result: (%s)",sip_buddies_result);


	strcpy(ment_flag,"Y");
	strcpy(timeout,"30");
	strcpy(inner_digit,"4");

	if(number_manage_cause == 1 || sip_buddies_cause == 1) {
		sprintf(sqlcmd, "select ment_flag,timeout,inner_digit from custom_info where domain='%s'",tmpdomain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error server_location!(%s, %s)",mysql_error(mysql),sqlcmd );
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(ment_flag, row[0]?row[0]:"Y");
					ps_delSpace(ment_flag);
					strcpy(timeout, row[1]?row[1]:"30");
					ps_delSpace(timeout);
					strcpy(inner_digit, row[2]?row[2]:"4");
					ps_delSpace(inner_digit);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
	}

	if(number_manage_cause == 1 && sip_buddies_cause == 1) {

		sprintf(sqlcmd,"INSERT into number_manage(\
		phoneid , defaultip, numbertype , domain ,imid, 070number, extension,defcontext,name,org_num,option5,cid,ment_flag,timeout,inner_digit,option3) \
		values('0%s','%s','%s','%s','tmpid%4.4s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','1')", \
		phoneid+1,serverip, numbertype,tmpdomain,phoneid+4,setdn,phoneid+4,"outbound","",org_num,*org_num?"Y":"N",org_num,ment_flag,timeout,inner_digit);

		printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
			logCmd();
		}


		sprintf(sqlcmd,"INSERT into sip_buddies( \
		name, accountcode, callgroup,callerid, canreinvite, context, \
		host, nat, qualify, secret, type, username,\
		disallow,allow, pickupgroup,regexten,setvar,defaultip,mailbox) \
		values('%s','tmpid%4.4s','%s','<%s>','no','%s','dynamic','yes','yes',\
		'%s','peer','%s','all','alaw','%s','%s','DOMAIN=%s','%s','20')",\
		phoneid,phoneid,prefix,setdn, "outbound",*sip_passwd?sip_passwd:sip_passwd,phoneid,prefix,phoneid+4,tmpdomain,serverip);

		printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|INSERT Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
			logCmd();
		}
		sprintf(message,"도우미 등록:sip_buddis(%s),number_manage(%s):(%s)(%s)",setdn,phoneid,serverip,ht.nodename);
		//ret = smsSend(message,"164.124.107.28","mysqlif");
		if(tryCnt1++ < 3) {
			goto A1;
		}
	}
	else if(number_manage_cause == 1) {
		sprintf(sqlcmd,"INSERT into number_manage(\
		phoneid , defaultip, numbertype , domain ,imid, 070number, extension,defcontext,name,org_num,option5,cid,ment_flag,timeout,inner_digit,option3) \
		values('0%s','%s','%s','%s','tmpid%4.4s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','1')", \
		phoneid+1,serverip, numbertype,tmpdomain,phoneid+4,setdn,phoneid+4,"outbound","",org_num,*org_num?"Y":"N",org_num,ment_flag,timeout,inner_digit);

		printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|INSERT Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
			logCmd();
		}
		sprintf(message,"도우미 등록:number_manage(%s):(%s)(%s)",setdn,serverip, ht.nodename);
		//ret = smsSend(message,"164.124.107.28","mysqlif");
		if(tryCnt++ < 3) {
			goto A1;
		}

	}
	else if(sip_buddies_cause == 1) {
		sprintf(sqlcmd,"INSERT into sip_buddies( \
		name, accountcode, callgroup,callerid, canreinvite, context, \
		host, nat, qualify, secret, type, username,\
		disallow,allow, pickupgroup,regexten,setvar,defaultip,mailbox) \
		values('%s','tmpid%4.4s','%s','<%s>','no','%s','dynamic','yes','yes',\
		'%s','peer','%s','all','alaw','%s','%s','DOMAIN=%s','%s','20')",\
		phoneid,phoneid,prefix,setdn, "outbound",*sip_passwd?sip_passwd:sip_passwd,phoneid,prefix,phoneid+4,tmpdomain,serverip);

		printf("\n[7m[5msqlcmd : ((((%s))))[0m[0m",sqlcmd);
		if( mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|INSERT Error!(%s)-(%s)",mysql_error(mysql),sqlcmd);
			logCmd();
		}
		sprintf(message,"도우미 등록:sip_buddies(%s):(%s)(%s)",setdn,serverip,ht.nodename);
		//ret = smsSend(message,"164.124.107.28","mysqlif");
		if(tryCnt++ < 3) {
			goto B1;
		}
	}
	sprintf(number_manage_result+strlen(number_manage_result),"|%s^%s^%d^%s^%s^%s^%s^%s^%s\n",dbhost,dbuserid,qid,setdn,forbiden_call,fromtime,totime,recorddate,callgroup);
	tcpWrite(masterFd, number_manage_result, strlen(number_manage_result));

/**
|PR1|superadmin@admin|0|07086119503|10789503|07086119503|078|211.32.148.83|temp4402.lgdacom.net|1|0220893855|
*/
		sprintf(commandBuf,"|PR1|%s@%s|0|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,cond_num,phoneid,setdn,prefix,serverip,tmpdomain,numbertype,org_num,sip_passwd);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIP')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|PR1|%s@%s|0|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,cond_num,phoneid,setdn,prefix,serverip,tmpdomain,numbertype,org_num,sip_passwd);
		sprintf(resPacket,"|RES|PR1 userid:(%s)-(%s)_(%s)_(%s)_(%s)_(%s)_(%s)",user,domain,cond_num,setdn,prefix,serverip,tmpdomain);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIP')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|PR1 userid:(%s)-(%s)_(%s)_(%s)_(%s)_(%s)_(%s)",user,domain,cond_num,setdn,prefix,serverip,tmpdomain);
	return 0;       
}




/**********************************************************************************************************/
/**********************************************************************************************************/
int
procPR2()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(argv[2] == NULL)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	/******* number_manage *******/
		sprintf(sqlcmd, "select phoneid,imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate from number_manage where 070number = '%s'",argv[2]);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("80000|1|",__FILE__,__LINE__));
			}
		}
		
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
			strcpy(dbhost, row[0]?row[0]:"unknown");
			strcpy(dbuserid, row[1]?row[1]:"unknown");
			qid =  row[2]?atoi(row[2]):1;
			strcpy(dbdomain, row[3]?row[3]:"unknown");
			strcpy(forbiden_call, row[4]?row[4]:"unknown");
			strcpy(fromtime, row[5]?row[5]:"0");
			strcpy(totime, row[6]?row[6]:"0");
			strcpy(recorddate, row[7]?row[7]:"0");

			ps_delSpace(dbuserid);
			ps_delSpace(dbhost);
			ps_delSpace(dbdomain);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(recorddate);

		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;

	if(strcmp(user+1,dbhost+1)) {
		return(errorReturn("80000|2|",__FILE__,__LINE__));
	}


	/******* sip_buddies *******/
		sprintf(sqlcmd, "select name from sip_buddies where callerid = '<%s>'",argv[2]);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("70000|1|",__FILE__,__LINE__));
			}
		}
		
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
			strcpy(dbhost, row[0]?row[0]:"unknown");
			ps_delSpace(dbhost);

		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;

	if(strcmp(user+1,dbhost+1)) {
		return(errorReturn("70000|2|",__FILE__,__LINE__));
	}


    return 0;       
}



/**********************************************************************************************************/
/**********************************************************************************************************/
int
procIPR()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11];
  char    num070[20],maincode[10],subcode[10];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(recorddate,0,sizeof(recorddate)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2])
		strcpy(num070,argv[2]);
	else
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[3])
		strcpy(maincode,argv[3]);
	else
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[4])
		strcpy(subcode,argv[4]);
	else
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));
		

	/******* number_manage *******/
		sprintf(sqlcmd, "select phoneid,imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate from number_manage where 070number = '%s'",argv[2]);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("80000|1|",__FILE__,__LINE__));
			}
		}
		
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
			strcpy(dbhost, row[0]?row[0]:"unknown");
			strcpy(dbuserid, row[1]?row[1]:"unknown");
			qid =  row[2]?atoi(row[2]):1;
			strcpy(dbdomain, row[3]?row[3]:"unknown");
			strcpy(forbiden_call, row[4]?row[4]:"unknown");
			strcpy(fromtime, row[5]?row[5]:"0");
			strcpy(totime, row[6]?row[6]:"0");
			strcpy(recorddate, row[7]?row[7]:"0");

			ps_delSpace(dbuserid);
			ps_delSpace(dbhost);
			ps_delSpace(dbdomain);
			ps_delSpace(forbiden_call);
			ps_delSpace(fromtime);
			ps_delSpace(totime);
			ps_delSpace(recorddate);

		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;

	if(strcmp(user+1,dbhost+1)) {
		return(errorReturn("80000|2|",__FILE__,__LINE__));
	}


	/******* sip_buddies *******/
		sprintf(sqlcmd, "select name from sip_buddies where callerid = '<%s>'",argv[2]);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				mysql_free_result(result);
				result = NULL;
				return(errorReturn("70000|1|",__FILE__,__LINE__));
			}
		}
		
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
			strcpy(dbhost, row[0]?row[0]:"unknown");
			ps_delSpace(dbhost);

		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%s^%s^%s^%s^%s",dbhost,dbuserid,qid,dbdomain,forbiden_call,fromtime,totime,recorddate);
			break;
		}
	}
	mysql_free_result(result);
	result = NULL;

	if(strcmp(user+1,dbhost+1)) {
		return(errorReturn("70000|2|",__FILE__,__LINE__));
	}


    return 0;       
}



/*************************************************************************
* 070 번호자원 조회-도메인별 사용중인....			     *
0:미사용
1:사용중
2:해지후 사용대기
4:예약(신청)
*************************************************************************/
int
procR01()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10],org_num[20];
	
	
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);

	if(PVS == 1) 
	{
		if(*domain) {
			if(*flag == 'U')
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where domain='%s' and status = 1  and number not in (select 070number from number_manage where domain='%s' and substr(imid,1,5) <> 'tmpid' and type = '1') order by type,number asc",domain,domain);
			else
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where domain='%s' and status = 1 order by type,number asc",domain);
		}
		else
			return(errorReturn("DOMAIN NEED|",__FILE__,__LINE__));
			//sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num from number_list where status = 1 order by type,number asc");


		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);
			strcpy(org_num, row[5]?row[5]:"");
			ps_delSpace(org_num);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:0,domain1,lastdate,org_num);
		}
		if(!((i+1)%10)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				logCmd();
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* 070 번호자원 조회-도메인별 사용중인....			     *
0:미사용
1:사용중
2:해지후 사용대기
4:예약(신청)
*************************************************************************/
int
procR02()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0,adminflag=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[20],org_num[20];
	char    etc[64],subsno[21],areacode[10],status[10];
	char    adminnum[20],min070[20],minorg[20],svc_kind[20],cond_num[20],tmpadmin[14];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(adminnum,0,sizeof(adminnum)); 
	memset(tmpadmin,0,sizeof(tmpadmin)); 
	memset(min070,0,sizeof(min070)); 
	memset(minorg,0,sizeof(minorg)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(cond_num,0,sizeof(cond_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);
	else strcpy(flag,"0");
	if(argv[3] && *argv[3])			strcpy(cond_num, argv[3]);
	else strcpy(cond_num,"");


	if(*domain=='\0')
		strcpy(domain,"lgdacom.net");

	if(PVS == 1) 
	{
		if(strcmp(domain,"admin")) {
		sprintf(sqlcmd, "select admin_id from superadmin where domain='%s' and admin_level ='3'",domain);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			;
		}
		else {
			row = mysql_fetch_row( result );
			if( row) 
			{
				strcpy(adminnum, row[0]?row[0]:"07000000000");
				ps_delSpace(adminnum);
				adminflag =1;
			}
		}
		mysql_free_result(result);
		result = NULL;

		if(adminflag == 0) {
			sprintf(sqlcmd, "select min(number) from number_list where domain='%s' and status = 1",domain);
			printf("\n[5m(%s)[0m",sqlcmd);
			printf("\n[5m(%s)[0m",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(min070, row[0]?row[0]:"07000000000");
					ps_delSpace(min070);
				}
			}
			mysql_free_result(result);
			result = NULL;
			
			printf("\nmin 070:(%s)",min070);
			printf("\nmin 070:(%s)",min070);
			printf("\nmin 070:(%s)",min070);
			sprintf(sqlcmd, "select min(org_num) from number_list where domain='%s' and org_num <> '' and status = 1",domain);
			printf("\n[5m(%s)[0m",sqlcmd);
			printf("\n[5m(%s)[0m",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(minorg, row[0]?row[0]:"0");
					ps_delSpace(minorg);
				}
			}
			mysql_free_result(result);
			result = NULL;

			printf("\n070:(%s), org : (%s)",min070,minorg);
			printf("\n070:(%s), org : (%s)",min070,minorg);

printf("\nadminnum : (%s)",adminnum);

			if(strlen(min070) > 3 && strlen(minorg) > 3) {
				if(atof(min070) > atof(minorg))
					strcpy(adminnum,minorg);
				else {
					strcpy(adminnum,min070);
				}
				//strcpy(adminnum,(atof(min070) > atof(minorg)?minorg:min070));
			}
			else if(strlen(min070) > 3 && strlen(minorg) < 3) {
				strcpy(adminnum,min070);
			}
			else if(strlen(min070) < 3 && strlen(minorg) > 3) {
				strcpy(adminnum,minorg);
			}

			}
		}

printf("\n[7mAdmin NUM : (%s)[0m",adminnum);

		adminflag = 0;

		if(*domain) {
			if(!strcmp(domain,"admin") && *flag =='0') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where number='%s'",cond_num);
				adminflag = 2;
			}
			else if(!strcmp(domain,"admin") && *flag =='1') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where org_num='%s'",cond_num);
				adminflag = 2;

			}
			else if(!strcmp(domain,"admin") && *flag =='2') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where subsno='%s' and status <> 3",cond_num);
			}
			else if(*domain && *flag == '0') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and number='%s' and status <> 3 order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
			else if(*domain && *flag == '1') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and org_num='%s' order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
			else if(*domain && *flag == '2') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind from number_list where domain = '%s' and subsno='%s'  and status <> 3 order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
		}

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);

/***
ubsno,areac
ode,etc, serverip,status
*/
			strcpy(org_num, row[5]?row[5]:"");
			ps_delSpace(org_num);
			strcpy(subsno, row[6]?row[6]:"");
			ps_delSpace(subsno);
			strcpy(areacode, row[7]?row[7]:"");
			ps_delSpace(areacode);
			strcpy(etc, row[8]?row[8]:"");
			ps_delSpace(etc);
			strcpy(serverip, row[9]?row[9]:"");
			ps_delSpace(serverip);
			strcpy(status, row[10]?row[10]:"0");
			ps_delSpace(status);
			strcpy(svc_kind, row[11]?row[11]:"PC");
			ps_delSpace(svc_kind);

			if(adminflag == 0) {
				if(!strcmp(adminnum,dbuserid) || !strcmp(adminnum,org_num)) {
					adminflag = 1;
					printf("\n[7m[5mADMIN NUM : (%s)[0m[0m",adminnum);
				}
			}
			
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:"0",domain1,lastdate,org_num,subsno,areacode,etc,serverip,status,adminflag==1?"1":"0",svc_kind);
			if(adminflag == 1)
				adminflag = 2;
		}
		if(!((i+1)%10)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* 070 번호자원 조회-도메인별 사용중인....			     *
0:미사용
1:사용중
2:해지후 사용대기
4:예약(신청)
*************************************************************************/
int
procR03()
{
	char passwd[256];
	char email[256];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[10],org_num[20],status[10];
	
	
	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);

	if(PVS == 1) 
	{
		if(*domain) {
			if(*flag == 'U')
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,status from number_list where domain='%s' and status = 1  and number not in (select 070number from number_manage where domain='%s' and substr(imid,1,5) <> 'tmpid' and type = '1') order by type,number asc",domain,domain);
			else
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,status from number_list where domain='%s' order by type,number asc",domain);
		}
		else
			sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,status from number_list where order by type,number asc");


		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);
			strcpy(org_num, row[5]?row[5]:"");
			ps_delSpace(org_num);
			strcpy(status, row[6]?row[6]:"");
			ps_delSpace(status);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:0,domain1,lastdate,org_num,status);
		}
		if(!((i+1)%10)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}



/*************************************************************************
* 070 번호자원 조회-도메인별 사용중인....			     *
0:미사용
1:사용중
2:해지후 사용대기
4:예약(신청)
*************************************************************************/
int
procR04()
{
	char passwd[256];
	char email[256];
	char ssw[20],trunk_num[30];
	int   qid,returncode;
	int   test=0,ret,i,row_num=0,adminflag=0;
	char tmp[100];
	unsigned int	tmpNumber;
	char    sqlcmd[512],domain1[64],lastdate[21],flag[20],org_num[20];
	char    etc[64],subsno[21],areacode[10],status[10];
	char    adminnum[20],min070[20],minorg[20],svc_kind[20],cond_num[20],tmpadmin[14];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(flag,0,sizeof(flag)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(adminnum,0,sizeof(adminnum)); 
	memset(tmpadmin,0,sizeof(tmpadmin)); 
	memset(min070,0,sizeof(min070)); 
	memset(minorg,0,sizeof(minorg)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(cond_num,0,sizeof(cond_num)); 
	memset(etc,0,sizeof(etc)); 
	memset(trunk_num,0,sizeof(trunk_num)); 
	
	printf("\n((((%s)",argv[1]);
	printf("\nid:(%s),(%s)",user, domain);
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));

	if(argv[1] && *argv[1]			strcpy(domain, argv[1]);
*/
	if(argv[2] && *argv[2])			strcpy(flag, argv[2]);
	else strcpy(flag,"0");
	if(argv[3] && *argv[3])			strcpy(cond_num, argv[3]);
	else strcpy(cond_num,"");


	if(*domain=='\0')
		strcpy(domain,"lgdacom.net");

	if(PVS == 1) 
	{
		if(strcmp(domain,"admin")) {
		sprintf(sqlcmd, "select admin_id from superadmin where domain='%s' and admin_level ='3'",domain);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			;
		}
		else {
			row = mysql_fetch_row( result );
			if( row) 
			{
				strcpy(adminnum, row[0]?row[0]:"07000000000");
				ps_delSpace(adminnum);
				adminflag =1;
			}
		}
		mysql_free_result(result);
		result = NULL;

		if(adminflag == 0) {
			sprintf(sqlcmd, "select min(number) from number_list where domain='%s' and status = 1",domain);
			printf("\n[5m(%s)[0m",sqlcmd);
			printf("\n[5m(%s)[0m",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(min070, row[0]?row[0]:"07000000000");
					ps_delSpace(min070);
				}
			}
			mysql_free_result(result);
			result = NULL;
			
			printf("\nmin 070:(%s)",min070);
			printf("\nmin 070:(%s)",min070);
			printf("\nmin 070:(%s)",min070);
			sprintf(sqlcmd, "select min(org_num) from number_list where domain='%s' and org_num <> '' and status = 1",domain);
			printf("\n[5m(%s)[0m",sqlcmd);
			printf("\n[5m(%s)[0m",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				return(-1);
			}   
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
				;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(minorg, row[0]?row[0]:"0");
					ps_delSpace(minorg);
				}
			}
			mysql_free_result(result);
			result = NULL;

			printf("\n070:(%s), org : (%s)",min070,minorg);
			printf("\n070:(%s), org : (%s)",min070,minorg);

printf("\nadminnum : (%s)",adminnum);

			if(strlen(min070) > 3 && strlen(minorg) > 3) {
				if(atof(min070) > atof(minorg))
					strcpy(adminnum,minorg);
				else {
					strcpy(adminnum,min070);
				}
				//strcpy(adminnum,(atof(min070) > atof(minorg)?minorg:min070));
			}
			else if(strlen(min070) > 3 && strlen(minorg) < 3) {
				strcpy(adminnum,min070);
			}
			else if(strlen(min070) < 3 && strlen(minorg) > 3) {
				strcpy(adminnum,minorg);
			}

			}
		}

printf("\n[7mAdmin NUM : (%s)[0m",adminnum);

		adminflag = 0;

		if(*domain) {
			if(!strcmp(domain,"admin") && *flag =='0') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where number='%s'",cond_num);
				adminflag = 2;
			}
			else if(!strcmp(domain,"admin") && *flag =='1') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where org_num='%s'",cond_num);
				adminflag = 2;

			}
			else if(!strcmp(domain,"admin") && *flag =='2') {
				sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where subsno='%s' and status <> 3",cond_num);
			}
			else if(*domain && *flag == '0') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and number='%s' and status <> 3 order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
			else if(*domain && *flag == '1') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and org_num='%s' and status <> 3 order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
			else if(*domain && *flag == '2') {
				if(*cond_num == '\0')
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and status <> 3 order by type,number asc",domain);
				else {
					sprintf(sqlcmd, "select number,forbid_prefix,type,domain,lastdate,org_num,subsno,areacode,cust_name, serverip,status,svc_kind,etc,trunk_num from number_list where domain = '%s' and subsno='%s'  and status <> 3 order by type,number asc",domain,cond_num);
					adminflag = 2;
				}
			}
		}

		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

	}
	else 
		return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
        
/***
		imid,type,number,extension
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result );
		if( row) 
		{
			strcpy(dbuserid, row[0]?row[0]:"0");
			ps_delSpace(dbuserid);
			strcpy(prefix, row[1]?row[1]:"");
			ps_delSpace(prefix);
			strcpy(domain1, row[3]?row[3]:"");
			ps_delSpace(domain1);
			strcpy(lastdate, row[4]?row[4]:"");
			ps_delSpace(lastdate);

/***
ubsno,areac
ode,etc, serverip,status
*/
			strcpy(org_num, row[5]?row[5]:"");
			ps_delSpace(org_num);
			strcpy(subsno, row[6]?row[6]:"");
			ps_delSpace(subsno);
			strcpy(areacode, row[7]?row[7]:"");
			ps_delSpace(areacode);
			strcpy(etc, row[8]?row[8]:"");
			ps_delSpace(etc);
			strcpy(serverip, row[9]?row[9]:"");
			ps_delSpace(serverip);
			strcpy(status, row[10]?row[10]:"0");
			ps_delSpace(status);
/**
			if(*status == '8' || *status == '9' )
				continue;
*/
			strcpy(svc_kind, row[11]?row[11]:"PC");
			ps_delSpace(svc_kind);
			strcpy(ssw, row[12]?row[12]:"-");
			ps_delSpace(ssw);
			strcpy(trunk_num, row[13]?row[13]:"-");
			ps_delSpace(trunk_num);

			if(adminflag == 0) {
				if(!strcmp(adminnum,dbuserid) || !strcmp(adminnum,org_num)) {
					adminflag = 1;
					printf("\n[7m[5mADMIN NUM : (%s)[0m[0m",adminnum);
				}
			}
			
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",dbuserid,prefix,row[2]?row[2]:"0",domain1,lastdate,org_num,subsno,areacode,etc,serverip,status,adminflag==1?"1":"0",svc_kind,ssw,trunk_num);
			if(adminflag == 1)
				adminflag = 2;
		}
		if(!((i+1)%7)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else 
			{
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}


/*************************************************************************
* 수신 이력 0:대표, 1:개인 407
*************************************************************************/
int
procCDR()
{
  int   perbill=0,j = 0, dis_flag = 0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[256],dstchannel[100];
  char	lastapp[20];
  char	calldate[20],clid1[80],clid[160],src[80],dst[80],dcontext[80],duration[10],billsec[10],disposition[20];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64];
	char	*tmpP=NULL;

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
    selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		qid = atoi(argv[2]);

	if(argv[3] && *argv[3])
		strcpy(fromtime,argv[3]);

	if(argv[4] && *argv[4])
		strcpy(totime,argv[4]);


	/** 0 : 내부 , 1 : 시내/외, 2 : 이동통신호, 3 : 국제호, 9 : ALL**/
	strcpy(call_kind,"9");
	if(argv[5] && *argv[5])
		strcpy(call_kind,argv[5]);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
/***
	if(strlen(fromtime) == 19 && strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
	else if(strlen(totime) == 19 && strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	else {
		strcpy(totime,"2020-12-31 23:59:59");
		strcpy(fromtime,"0000-12-31 23:59:59");
	}
*/
	if(argv[6] && *argv[6])
		strcpy(inner_num,argv[6]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	domain_string(domain);


        sprintf(sqlcmd, "select domain,status from number_alldp where domain = '%s' and status='Y'",domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		dis_flag = 0;
        }   
	else {
		result = mysql_store_result( mysql );
		if(!result ) {
			dis_flag = 0;
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num > 0 ) {
				dis_flag = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}


	if(qid != 0) {
        sprintf(sqlcmd, "select substr(phoneid,2,7),defaultip from number_manage where domain = '%s' and imid='%s'",domain,user);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		imid,type,number,extension
*/
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(dbuserid, row[0]?row[0]:"unknown");
			ps_delSpace(dbuserid);
			strcpy(serverip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(serverip);
			}
			mysql_free_result(result);
			result = NULL;
	}
	else {
			if(customInfo(domain) < 0)
				return -1;

			strcpy(dbuserid, prefix);
	}

		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				//sprintf(addcond,"(userfield= '%s' or userfield='') and (host = '%s' or host = '%s')",domain,CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}

	if(qid != 0)  {


			//sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext,recordfile from %s where calldate > '%s' and calldate <= '%s' and (dcontext = 'outbound' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and (substr(channel,6,3)='%3.3s' or substr(dstchannel,6,3)='%3.3s') and %s order by calldate desc",table,arr[0].phoneid, arr[0].phoneid,fromtime,totime,dbuserid,addcond);

		//sprintf(tmp,"%s-%s",user,_tmpbuf);
		if(*call_kind == '9' || *call_kind =='\0')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%7.7s%%') or dstchannel like binary('Local/1%7.7s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound')  and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%7.7s%%') or dstchannel like binary('Local/1%7.7s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and (length(src) <= 8 or substr(src,1,3) = '070') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '1')
		{
				sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%7.7s%%') or dstchannel like ('Local/1%7.7s%%'))  and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and length(src) > 8 and substr(src,1,3) <> '070' and  substr(src,1,3) <> '010' and substr(src,1,3) <> '011' and substr(src,1,3) <> '016'  and substr(src,1,3) <> '017' and substr(src,1,3) <> '018' and substr(src,1,3) <> '019' and substr(src,1,3) <> '006' and substr(src,1,5) <> '00700' and substr(src,1,5) <> '00777' and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '2')
		{
				sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%7.7s%%') or dstchannel like binary('Local/1%7.7s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound')  and  (length(src) > 8  and  (substr(src,1,3) = '010' or substr(src,1,3) = '011' or substr(src,1,3) = '016' or substr(src,1,3) = '017' or substr(src,1,3) = '018' or substr(src,1,3) = '019')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '3')
		{
				sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%7.7s%%') or dstchannel like binary('Local/1%7.7s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and  (length(src) > 8  and  (substr(src,1,3) = '001' or substr(src,1,3) = '002' or substr(src,1,3) = '005' or substr(src,1,3) = '006' or substr(src,1,5) = '00700' or substr(src,1,5) = '00777')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
	}
	/*** 해당 도메인의 착신 이력 조회 ***/
	else 
	{
		if(*call_kind == '9' || *call_kind =='\0')
		{
//                        sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and  (substr(dstchannel,1,8)='SIP/1%3.3s' or substr(dstchannel,1,10)='Local/1%3.3s') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
 
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);

		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and   (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and (length(src) <= 8 or substr(src,1,3) = '070') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '1')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and length(src) > 8 and substr(src,1,3) <> '070' and substr(src,1,3) <> '070' and  substr(src,1,3) <> '010' and substr(src,1,3) <> '011' and substr(src,1,3) <> '016'  and substr(src,1,3) <> '017' and substr(src,1,3) <> '018' and substr(src,1,3) <> '019'  and substr(src,1,3) <> '006' and substr(src,1,5) <> '00700'  and substr(src,1,5) <> '00777' and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '2')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and  (length(src) > 8  and  (substr(src,1,3) = '010' or substr(src,1,3) = '011' or substr(src,1,3) = '016'   or substr(src,1,3) = '017'  or substr(src,1,3) = '018' or substr(src,1,3) = '019')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '3')
		{
			sprintf(sqlcmd, "select calldate,clid,src,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,dstchannel from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound'  or dcontext = 'error_context_inbound') and  (length(src) > 8  and  (substr(src,1,3) = '001' or substr(src,1,3) = '002' or substr(src,1,3) = '005'  or substr(src,1,3) = '006' or substr(src,1,5) = '00700' or substr(src,1,5) = '00777')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
			printf("\nsqlcmd:(%s)",sqlcmd);

		}
	}

	/*** 1633과금 처리 할것!!!! ***/

	printf("\nsqlcmd : (%s)-(%s)",sqlcmd,cdr_server);

	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",sqlcmd,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
*/
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
					strcpy(calldate, row[0]?row[0]:"unknown");

					if(row[1]) {
					if(strchr(row[1],'<')) {
						strtok(row[1],"<");
						tmpP = (char *)strtok(NULL,">");
						if(tmpP)
							strcpy(clid1,tmpP);
						else
							strcpy(clid1,"unknown");
					}
					else  {
						strcpy(clid1,row[1]);
					}
					}
					else {
						strcpy(clid1,"unknown");
					}
					ps_delSpace(clid1);

					
					if(strlen(clid1) > 3 && dis_flag == 0)
						strcpy(clid1+strlen(clid1)-4,"****");

					if(*clid1) {
						string_replace(clid1);
/***
						if(!strcasecmp(clid1,"null"))
							strcpy(clid1,"발번보호");
*/
						tmpP = __base64_encode((unsigned char *)clid1, strlen(clid1), &size);
						if(tmpP) {
								strcpy(clid, tmpP);
								free(tmpP);
						}
					}
					else
						strcpy(clid,clid1);


					if(row[2]) {
						if(strchr(row[2],'<')) {
							strtok(row[2],"<");
							tmpP=(char *)strtok(NULL,">");
							if(tmpP)
								strcpy(src,tmpP);
							else
								strcpy(src,"unknown");
						}
						else  {
							strcpy(src,row[2]);
						}
					}
					else {
						strcpy(src,"unknown");
					}


					strcpy(dst, row[3]?row[3]:"unknown");

					strcpy(dcontext, row[4]?row[4]:"unknown");
					strcpy(duration, row[5]?row[5]:"unknown");
					strcpy(billsec, row[6]?row[6]:"unknown");
					strcpy(disposition, row[7]?row[7]:"unknown");
					strcpy(lastapp, row[8]?row[8]:"unknown");
					strcpy(recordfile, row[9]?row[9]:"");
					strcpy(dstchannel, row[10]?row[10]:"");
					ps_delSpace(calldate);
					ps_delSpace(clid);
					ps_delSpace(src);
					ps_delSpace(dst);
					ps_delSpace(dcontext);
					ps_delSpace(duration);
					ps_delSpace(billsec);
					ps_delSpace(disposition);
					ps_delSpace(lastapp);
					ps_delSpace(recordfile);
					ps_delSpace(dstchannel);


					//................
				    if(*dstchannel && strlen(dstchannel) > 11 && *dstchannel == 'S') {
					if(!strncmp(dst,dstchannel+4,8))
						continue;
				    }
				    else if(*dstchannel && strlen(dstchannel) > 11 && *dstchannel == 'L') {
					if(!strncmp(dst,dstchannel+6,8))
						continue;
				    }

					if(strlen(dst) <= 4 || !strncmp(dst,"070",3))
					{
						tmpcallkind=0;
					}
					else if(strlen(dst) > 8 && strncmp(dst,"070",3) && strncmp(dst,"010",3) && strncmp(dst,"011",3) && strncmp(dst,"016",3) && strncmp(dst,"017",3) && strncmp(dst,"018",3) && strncmp(dst,"019",3) && strncmp(dst,"001",3) && strncmp(dst,"002",3) && strncmp(dst,"005",3)  && strncmp(dst,"006",3) && strncmp(dst,"00700",5) && strncmp(dst,"00777",5)) 
					{
						tmpcallkind=1;
					}
					else if(strlen(dst) > 8 && (!strncmp(dst,"070",3) || !strncmp(dst,"010",3) || !strncmp(dst,"011",3) || !strncmp(dst,"016",3) || !strncmp(dst,"017",3) || !strncmp(dst,"018",3) || !strncmp(dst,"019",3))) 
					{
						tmpcallkind=2;
					}
					else if (strlen(dst) > 8 && !strncmp(dst,"00",2))
					{
						tmpcallkind=3;
					}

					if(!strcasecmp(disposition,"answered"))
						strcpy(disposition,"OK");
					else if(!strcasecmp(disposition,"NO ANSWER"))
						strcpy(disposition,"NO-ANS");
					else if(!strcasecmp(disposition,"BUSY"))
						strcpy(disposition,"BUSY");
/*
					else if(!strcasecmp(disposition,"cancel"))
						strcpy(disposition,"CANCEL");
*/
					else if(!strcasecmp(disposition,"failed"))
						strcpy(disposition,"FAIL");
					else
						strcpy(disposition,"FAIL");
					if(qid !=0 )
							sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%d^%d^%s",calldate,clid,dbuserid+3,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
					else {
						if(*dstchannel == 'S')
							sprintf(resPacket+strlen(resPacket),"|%s^%s^%4.4s^%s^%s^%s^%s^%d^%d^%s",calldate,clid,dstchannel+8,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
						else if(*dstchannel == 'L')
							sprintf(resPacket+strlen(resPacket),"|%s^%s^%4.4s^%s^%s^%s^%s^%d^%d^%s",calldate,clid,dstchannel+10,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
					}

					printf("\n(%d)|%s^%s^%s^%s^%s^%s^%s^%d^%d^%s",i,calldate,clid,dbuserid+3,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);

					if(!((i+1)%9)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
		}
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}



/************************************************************************
* CDS 조회							     *
* 발신 이력 0:도메인, 1:개인
*************************************************************************/
int
procCDS()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,j=0,dis_flag = 0;
  int   test=0,ret,row_num=0,i,perbill=0,totbill=0;
  int   totbill1=0,totbill2=0,totbill3=0, index = 0,size;
  float	floatbill = 0;
  char tmp[100],addcond[256],lastdata[128];
  char table[20],cdr_server[20];
  unsigned int	tmpcallkind=0;
  unsigned int	tmpNumber;
  char    sqlcmd[1000],recordfile[64];
	unsigned char	*tmpP=NULL;
	char	calldate[128],clid1[128],clid[160],channel[80],dst[128],dcontext[80],duration[10],billsec[10],disposition[20];
	char	lastapp[64];
	char	fromtime[30],totime[30],call_kind[3],defcontext[30];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(clid1,0,sizeof(clid1)); 
	memset(clid,0,sizeof(clid)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(call_kind,0,sizeof(call_kind)); 
	memset(defcontext,0,sizeof(defcontext)); 
	memset(channel,0,sizeof(channel)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		qid = atoi(argv[2]);

	if(argv[3] && *argv[3])
		strcpy(fromtime,argv[3]);

	if(argv[4] && *argv[4])
		strcpy(totime,argv[4]);


	/** 0 : 내부 , 1 : 시내/외, 2 : 이동통신호, 3 : 국제호, 9 : ALL**/
	strcpy(call_kind,"9");
	if(argv[5] && *argv[5])
		strcpy(call_kind,argv[5]);

	if(argv[6] && *argv[6])
		strcpy(inner_num,argv[6]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	domain_string(domain);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
/***
	if(strlen(fromtime) == 19 && strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
	if(strlen(totime) == 19 && strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	else {
		strcpy(totime,"2020-12-31 23:59:59");
		strcpy(fromtime,"0000-12-31 23:59:59");
	}
*/
        sprintf(sqlcmd, "select domain,status from number_alldp where domain = '%s' and status='Y'",domain);

	printf("\nsqlcmd:(%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		dis_flag = 0;
        }   
	else {
		result = mysql_store_result( mysql );
		if(!result ) {
			dis_flag = 0;
		}   
		else {
			row_num = mysql_num_rows(result);
			if( row_num > 0 ) {
				dis_flag = 1;
			}
			mysql_free_result(result);
			result = NULL;
		}
	}
        

	if(qid != 0) {
        sprintf(sqlcmd, "select substr(phoneid,2,7),defcontext,defaultip from number_manage where domain = '%s' and imid='%s'",domain,user);

	printf("\nsqlcmd:(%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
	row = mysql_fetch_row( result );
	if(row) 
	{
		strcpy(dbuserid, row[0]?row[0]:"unknown");
		ps_delSpace(dbuserid);
		strcpy(phoneid,dbuserid);
		strcpy(defcontext, row[1]?row[1]:"unknown");
		ps_delSpace(defcontext);
		strcpy(serverip, row[2]?row[2]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	else {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
	mysql_free_result(result);
	result = NULL;
	}
	else {
		if(customInfo(domain) < 0)
			return -1;	
		strcpy(dbuserid,prefix);

	}


	printf("\nserverip:(%s)",serverip);

		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				//sprintf(addcond,"(userfield ='%s' or userfield= '') and (host = '%s' or host = '%s')",domain,CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}

printf("\npheoneid : (%s),cdr_server:(%s)",defcontext,cdr_server);
printf("\npheoneid : (%s),cdr_server:(%s)",defcontext,cdr_server);

	if(*dbuserid) {
		tmpP = __base64_encode((unsigned char *)dbuserid+3, strlen(dbuserid+3), &size);
		if(tmpP) {
				strcpy(phoneid, tmpP);
				free(tmpP);
		}
	}
	else
		strcpy(phoneid,dbuserid);
//|CDS|superadmin@premium_c_44048.lgdacom.net|0|2015-03-10 00:00:00|2015-04-09 23:59:59|9|superadmin|
	/*** dbuserid == phoneid+1 ***/
	if(qid != 0)
	{
		//sprintf(tmp,"%s-%s",user,_tmpbuf);
		if(*call_kind == '9' || *call_kind =='\0')
		{
                        sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%7.7s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%7.7s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);

		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and  (length(dst) <= 8 or substr(dst,1,3) = '070') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '1')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and length(dst) > 8 and substr(dst,1,3) <> '070' and substr(dst,1,3) <> '070' and  substr(dst,1,3) <> '010' and substr(dst,1,3) <> '011' and substr(dst,1,3) <> '016' and substr(dst,1,3) <> '017' and substr(dst,1,3) <> '018'  and substr(dst,1,3) <> '019' and substr(dst,1,3) <> '001' and substr(dst,1,3) <> '002' and substr(dst,1,3) <> '005' and substr(dst,1,3) <> '006' and substr(dst,1,5) <> '00700'  and substr(dst,1,5) <> '00777'  and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '2')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s'  and ((channel like binary('SIP/1%s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and  (length(dst) > 8  and  (substr(dst,1,3) = '010' or substr(dst,1,3) = '011' or substr(dst,1,3) = '016' or substr(dst,1,3) = '017' or substr(dst,1,3) = '018'  or substr(dst,1,3) = '019')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '3')
		{
		//	sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%s%%'))) and (channel like '%%%s%%') and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and  (length(dst) > 8  and  (substr(dst,1,3) = '005' or substr(dst,1,3) = '002' or substr(dst,1,3) = '001' or substr(dst,1,5) = '00700' or  substr(dst,1,3) = '006' or substr(dst,1,5) = '00777')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);

			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and (length(dst) > 8  and  (substr(dst,1,3) = '002' or substr(dst,1,3) = '001') or substr(dst,1,3) = '005' or substr(dst,1,3) = '006' or substr(dst,1,5) = '00700' or substr(dst,1,5) = '00777') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
                        //sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and ((substr(channel,1,12)='SIP/1%s' and substr(channel,5,4) != '5060') or ((substr(channel,1,14)='Local/1%s'))) and (substr(channel,8,7)='%s'))) and  (length(dst) > 8  and  (substr(dst,1,3) = '005' or substr(dst,1,3) = '002' or substr(dst,1,3) = '001' or substr(dst,1,5) = '00700' or  substr(dst,1,3) = '006' or substr(dst,1,5) = '00777')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);

		}
	}
	else 
	{
		if(*call_kind == '9' || *call_kind =='\0')
		{
                        sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and (length(dst) <= 8 or substr(dst,1,3) = '070') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '1')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and length(dst) > 8 and substr(dst,1,3) <> '070' and substr(dst,1,3) <> '070' and  substr(dst,1,3) <> '010' and substr(dst,1,3) <> '011' and substr(dst,1,3) <> '016'  and substr(dst,1,3) <> '017' and substr(dst,1,3) <> '018' and substr(dst,1,3) <> '019'  and substr(dst,1,3) <> '001' and substr(dst,1,3) <> '002'  and substr(dst,1,3) <> '005' and substr(dst,1,3) <> '006' and substr(dst,1,5) <> '00700' and substr(dst,1,5) <> '00777' and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '2')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like ('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and  (length(dst) > 8  and  (substr(dst,1,3) = '010' or substr(dst,1,3) = '011' or substr(dst,1,3) = '016' or substr(dst,1,3) = '017' or substr(dst,1,3) = '018'  or substr(dst,1,3) = '019')) and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}
		else if(*call_kind == '3')
		{
			sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp,recordfile,channel,lastdata from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and (length(dst) > 8  and  (substr(dst,1,3) = '002' or substr(dst,1,3) = '001') or substr(dst,1,3) = '005' or substr(dst,1,3) = '006' or substr(dst,1,5) = '00700' or substr(dst,1,5) = '00777') and %s order by calldate desc",table,fromtime,totime,dbuserid,dbuserid,addcond);
		}

	}

	printf("\nsqlcmd : (%s)-[7m(%s)[0m",sqlcmd,cdr_server);


	printf("\nsqlcmd : (%s)-[7m(%s)[0m",sqlcmd,cdr_server);
	printf("\nsqlcmd : (%s)-[7m(%s)[0m",sqlcmd,cdr_server);
	printf("\nsqlcmd : (%s)-[7m(%s)[0m",sqlcmd,cdr_server);

	cdrinit(cdr_server);
	if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( cdrmysql );
	if(!result) {
		sprintf(resPacket, "|ERR|mysql Search Error2!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
		return(-1);
	}   
                
	row_num = mysql_num_rows(result);

	printf("\nrow_num :(%d)",row_num);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
		return(errorReturn("90000|",__FILE__,__LINE__));
	}
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
                                        if(row[1]) {
                                        if(strchr(row[1],'<')) {
                                                strtok((row[1],"<");
                                                tmpP = (char *)strtok(NULL,">");
                                                if(tmpP)
                                                                strcpy(clid1,tmpP);
                                                else
                                                                strcpy(clid1,"unknown");
                                        }
                                        else  {
                                                strcpy(clid1,row[1]);
                                        }
                                        }
                                        else {
                                                strcpy(clid1,"unknown");
                                        }

*/

printf("\nrow_num:(%d)",row_num);
printf("\nrow_num:(%d)",row_num);
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) 
		{
			row = mysql_fetch_row( result );
			if(row) 
			{
				perbill=0;
				floatbill = 0;
				strcpy(calldate, row[0]?row[0]:"unknown");
				if(row[1]) {
					if(strchr(row[1],'<')) {
						strtok(row[1],"<");
						tmpP = (char* )strtok(NULL,">");
						if(tmpP)
							strcpy(clid1,tmpP);
						else
							strcpy(clid1,"unknown");
					}
					else  {
						strcpy(clid1,row[1]);
					}
				}
				else {
					strcpy(clid1,"unknown");
				}

				
				//strcpy(clid1,row[1]?(strchr(row[1],'<')?(char *)strtok(row[1],"<");(char *)strtok(row[1],">") : row[1]):"unknown");
				ps_delSpace(clid1);
				if(*clid1) {
					string_replace(clid1);
					tmpP = __base64_encode((unsigned char *)clid1, strlen(clid1), &size);
					if(tmpP) {
							strcpy(clid, tmpP);
							free(tmpP);
					}
				}
				else
					strcpy(clid,clid1);

                                if(row[2]) {
					if(strchr(row[2],'<')) {
						tmpP = (char *)strtok(row[2],"<");
						tmpP = (char *)strtok(NULL,">");
						if(tmpP)
							strcpy(dst,tmpP);
						else
							strcpy(dst,"unknown");
					}
					else  {
						strcpy(dst,row[2]);
					}
				}
                                else {
                                        strcpy(dst,"unknown");
                                }


				//strcpy(dst,row[2]?(strchr(row[2],'<')?strtok(row[2],"<");strtok(row[2],">") : row[2]):"unknown");
				strcpy(dcontext, row[3]?row[3]:"unknown");
				strcpy(duration, row[4]?row[4]:"unknown");
				strcpy(billsec, row[5]?row[5]:"unknown");
				strcpy(disposition, row[6]?row[6]:"unknown");
				strcpy(lastapp, row[7]?row[7]:"unknown");
				strcpy(recordfile, row[8]?row[8]:"");
				strcpy(channel, row[9]?row[9]:"");
				strcpy(lastdata, row[10]?row[10]:"");
				ps_delSpace(calldate);
				ps_delSpace(dst);

                                if(!strcmp(dst,"11111111") && !strcasecmp(lastapp,"dial")) {
                                        char    *tmpP=NULL;
                                        tmpP=(char *) strtok(lastdata,"@");
                                        if(tmpP && strlen(tmpP) > 4) {
                                                snprintf(dst,sizeof(dst)-1,"%s",strncmp(tmpP,"SIP/",4)?tmpP:tmpP+4);
                                        }
                                }
                                else if(!strcmp(dst,"11111111") && strcasecmp(lastapp,"dial")) {
					strcpy(dst,"********");
					//continue;
				}

				ps_delSpace(dcontext);
				ps_delSpace(duration);
				ps_delSpace(billsec);
				ps_delSpace(disposition);
				ps_delSpace(lastapp);
				ps_delSpace(recordfile);
				ps_delSpace(channel);
                                if(strstr(channel,"conference")) {
                                        strcpy(dst,"회의통화");
                                        //strcpy(dst,__base64_encode((unsigned char *)tmpname1, strlen(tmpname1), &size));
                                }
				if(*channel && strlen(channel) > 11 && *channel == 'S') {
					if(!strncmp(channel+4,dst,8))
						continue;
				}
				else if(*channel && strlen(channel) > 11 && *channel == 'L') {
					if(!strncmp(channel+4,dst,8))
						continue;
				}
				else
					continue;


				//...................

				printf("\nlastapp:(%s),disposition:(%s)-(%s)",lastapp,disposition,dst);

				if(!strcasecmp(lastapp,"dial") && !strcasecmp(disposition,"answered")) 
				{
					if(strlen(dst) <= 8 || !strncmp(dst,"070",3))
					{
						perbill=0;
					}
					else if(strlen(dst) > 8 && strncmp(dst,"070",3) && strncmp(dst,"010",3) && strncmp(dst,"011",3) && strncmp(dst,"016",3) && strncmp(dst,"017",3) && strncmp(dst,"018",3) && strncmp(dst,"019",3) && strncmp(dst,"001",3) && strncmp(dst,"002",3) && strncmp(dst,"005",3) && strncmp(dst,"006",3) && strncmp(dst,"00700",5) && strncmp(dst,"00777",5)) 
					{
						perbill=38 * ((int) (atoi(billsec)/180) +1);
						totbill1 +=perbill;
					}
					else if(strlen(dst) > 8 && (!strncmp(dst,"070",3) || !strncmp(dst,"010",3) || !strncmp(dst,"011",3) || !strncmp(dst,"016",3) || !strncmp(dst,"017",3) || !strncmp(dst,"018",3) || !strncmp(dst,"019",3))) 
					{
						floatbill = 11.7 * ((int) (atoi(billsec) / 10) +1);
						perbill = (int)ceil(floatbill);
						totbill2 +=perbill;
					}
					else
						perbill=0;
				}
				else 
					perbill=0;

				//if(!strcasecmp(lastapp,"dial")) {


					if(!strcasecmp(disposition,"answered"))
						strcpy(disposition,"OK");
					else if(!strcasecmp(disposition,"NO ANSWER"))
						strcpy(disposition,"NO-ANS");
					else if(!strcasecmp(disposition,"BUSY"))
						strcpy(disposition,"BUSY");
/*
					else if(!strcasecmp(disposition,"cancel"))
						strcpy(disposition,"CANCEL");
*/
					else if(!strcasecmp(disposition,"failed"))
						strcpy(disposition,"FAIL");
					else
						strcpy(disposition,"FAIL");
/***
					sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%d^%d",calldate,clid,dst,dcontext,duration,billsec,disposition,perbill,tmpcallkind);
*/


					if(strlen(dst) <= 8 || !strncmp(dst,"070",3))
					{
						tmpcallkind=0;
						if(!strncmp(dst,"070",3) && dis_flag == 0)
							strcpy(dst+strlen(dst)-4,"****");
					}
					else if(strlen(dst) > 8 && strncmp(dst,"070",3) && strncmp(dst,"010",3) && strncmp(dst,"011",3) && strncmp(dst,"016",3) && strncmp(dst,"017",3) && strncmp(dst,"018",3) && strncmp(dst,"019",3) && strncmp(dst,"001",3) && strncmp(dst,"002",3) && strncmp(dst,"005",3)  && strncmp(dst,"006",3) && strncmp(dst,"00700",5) && strncmp(dst,"00777",5)) 
					{
						tmpcallkind=1;
						if(strlen(dst) > 3 && dis_flag == 0)
							strcpy(dst+strlen(dst)-4,"****");
					}
					else if(strlen(dst) > 8 && (!strncmp(dst,"070",3) || !strncmp(dst,"010",3) || !strncmp(dst,"011",3) || !strncmp(dst,"016",3) || !strncmp(dst,"017",3) || !strncmp(dst,"018",3) || !strncmp(dst,"019",3))) 
					{
						tmpcallkind=2;
						if(strlen(dst) > 3  && dis_flag == 0)
							strcpy(dst+strlen(dst)-4,"****");
					}
					else if (strlen(dst) > 8 && !strncmp(dst,"00",2))
					{
						tmpcallkind=3;
						if(strlen(dst) > 3 && dis_flag == 0)
							strcpy(dst+strlen(dst)-4,"****");
					}

					/*** no action ***/
			//if(strlen(dst) > 8);

					if(qid != 0 )
							sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%d^%d^%s",calldate,phoneid,dst,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
					else {
	memset(dbuserid,0,sizeof(dbuserid));
	memset(phoneid,0,sizeof(phoneid));
    if(*channel && strlen(channel) > 11 && *channel == 'S') {
        strncpy(dbuserid,channel+8,4);
		tmpP = __base64_encode((unsigned char *)dbuserid, strlen(dbuserid), &size);
		if(tmpP) {
				strcpy(phoneid, tmpP);
				free(tmpP);
		}
	}
    else if(*channel && strlen(channel) > 11 && *channel == 'L') {
        strncpy(dbuserid,channel+10,4);
		tmpP = __base64_encode((unsigned char *)dbuserid, strlen(dbuserid), &size);
		if(tmpP) {
				strcpy(phoneid, tmpP);
				free(tmpP);
		}
	}
    else
        strcpy(phoneid,dbuserid);

				sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%d^%d^%s",calldate,phoneid,dst,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);

					}

					if(!strcmp(disposition,"OK"))
						printf("\n|%s^%s^%s^%s^%s^%s^%s^%d^%d^%s",calldate,phoneid,dst,dcontext,duration,billsec,disposition,perbill,tmpcallkind,recordfile);
					//printf("\n*********** : [%s]",resPacket);

					if(!((i+1)%7)) 
					{
						if((i+1) < row_num) 
						{
							strcat(resPacket,"\n");
							tcpWrite(masterFd, resPacket);
							sprintf(resPacket,"|RES");
						}
						else 
						{
							mysql_free_result(result);
							result = NULL;
							return 0;       
						}
					}
			//}
			selcnt++;
			}
			printf("\n(%d) [5m 시내/외:(%d), 이통:(%d)   dst:(%s)[0m",i,totbill1,totbill2,dst);
		}
	mysql_free_result(result);
	result = NULL;
	mysql_close(cdrmysql);
    return 0;       
}


/************************************************************************
* CDS 조회							     *
* 발신 이력 0:도메인, 1:개인
*************************************************************************/
int
procCD1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode, tmpcnt = 0;
  int   test=0,ret,row_num=0,i,perbill=0,totbill=0;
  int   totbill1=0,totbill2=0,totbill3=0,size;
  int	cnt = 0,j=0;
unsigned	char	*tmpP=NULL;
/***
	typedef struct  {
        char    id[50];
        int    totcount;
        int    tottime;
        int    totbil;
} STAT;
*/

  STAT arr[5000];

  float	floatbill = 0;
  char tmp[100];
  char table[20],cdr_server[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024];
	char	calldate[20],clid1[80],clid[160],channel[80],tmpchannel[80],dst[80],dcontext[80],duration[10],billsec[10],disposition[20],dstchannel[80];
	char	lastapp[20],addcond[256];
	char	fromtime[30],totime[30],call_kind[3],defcontext[30];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(clid1,0,sizeof(clid1)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(dstchannel,0,sizeof(dstchannel)); 
	memset(dcontext,0,sizeof(dcontext)); 
	memset(call_kind,0,sizeof(call_kind)); 
	memset(defcontext,0,sizeof(defcontext)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		qid = atoi(argv[2]);

	if(argv[3] && *argv[3])
		strcpy(fromtime,argv[3]);

	if(argv[4] && *argv[4])
		strcpy(totime,argv[4]);


	/** 0 : 내부 , 1 : 시내/외, 2 : 이동통신호, 3 : 국제호, 9 : ALL**/
	strcpy(call_kind,"9");
	if(argv[5] && *argv[5])
		strcpy(call_kind,argv[5]);

	domain_string(domain);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
/***
	if(strlen(fromtime) == 19 && strlen(totime) < 19)
		strcpy(totime,"2020-12-31 23:59:59");
	if(strlen(totime) == 19 && strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	else {
		strcpy(totime,"2020-12-31 23:59:59");
		strcpy(fromtime,"0000-12-31 23:59:59");
	}
*/
	if(argv[6] && *argv[6])
		strcpy(inner_num,argv[6]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");
	

		sprintf(sqlcmd, "select imid,substr(phoneid,2,7),defcontext,defaultip from number_manage where domain = '%s'",domain);

		printf("\nsqlcmd :(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error1!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error2!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}

		tmpcnt = row_num;

/***
		imid,phoneid,defcontext
*/
		for(i=0;i<row_num;i++)
		{
			row = mysql_fetch_row( result );
			if( row) 
			{
/***
printf("\nimid_row : (%s), phoneid_row:(%s)",row[0], row[1]);
*/
				strcpy(arr[i].imid, row[0]?row[0]:"unknown");
				arr[i].totcount=0;
				arr[i].recvtotcount=0;
				arr[i].totbill=0;
				arr[i].tottime=0;
				ps_delSpace(arr[i].imid);
				strcpy(arr[i].phoneid, row[1]?row[1]:"unknown");
				ps_delSpace(arr[i].phoneid);
				strcpy(defcontext, row[2]?row[2]:"outbound");
				ps_delSpace(defcontext);
				strcpy(serverip, row[3]?row[3]:"127.0.0.1");
				ps_delSpace(serverip);

printf("\nimid : (%s), phoneid:(%s)",arr[i].imid,arr[i].phoneid);
			}
		}
		mysql_free_result(result);
		result = NULL;

		strcpy(arr[i].imid, "");
		strcpy(arr[i].phoneid, "");
		arr[i].totcount=0;
		arr[i].recvtotcount=0;
		arr[i].totbill=0;
		arr[i].tottime=0;

		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				//sprintf(addcond,"(userfield = '%s' or userfield = '')  and (host = '%s' or host = '%s')",domain,CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}

		if(*call_kind == '9' || *call_kind =='\0')
		{
                        sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate<= '%s' and  ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and %s",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);

		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate<= '%s' and ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and (length(dst) <= 8 or substr(dst,1,3) = '070')  and %s",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '1')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate<= '%s' and  ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and length(dst) > 8 and substr(dst,1,3) <> '070' and substr(dst,1,3) <> '070' and  substr(dst,1,3) <> '010' and substr(dst,1,3) <> '011' and substr(dst,1,3) <> '016'  and substr(dst,1,3) <> '017' and substr(dst,1,3) <> '018' and substr(dst,1,3) <> '019' and substr(dst,1,3) <> '001' and substr(dst,1,3) <> '002'  and substr(dst,1,3) <> '005'  and substr(dst,1,3) <> '006' and substr(dst,1,5) <> '00700' and substr(dst,1,5) <> '00777'  and %s",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '2')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate<= '%s' and  ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%')))  and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and  (length(dst) > 8  and  (substr(dst,1,3) = '010' or substr(dst,1,3) = '011' or substr(dst,1,3) = '016' or substr(dst,1,3) = '017' or substr(dst,1,3) = '018'  or substr(dst,1,3) = '019'))  and %s",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '3')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate<= '%s' and  ((channel like binary('SIP/1%3.3s%%') and channel not like binary('%%\/5060%%')) or (channel like binary('Local/1%3.3s%%'))) and  (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context') and (length(dst) > 8  and  (substr(dst,1,3) = '002' or substr(dst,1,3) = '001') or substr(dst,1,3) = '005'  or substr(dst,1,3) = '006' or substr(dst,1,5) = '00700' or substr(dst,1,5) = '00777')  and %s",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);

		}

		printf("\nsqlcmd : (%s)",sqlcmd);
/***
sprintf(sqlcmd,"%s","select calldate,channel,clid,dst,dcontext,duration,\
billsec,disposition,lastapp,dstchannel,\
dcontext from cdr where  \
((substr(channel,6,3)='033' and dcontext='outbound') or (substr(dstchannel,6,3)='033' and dcontext='inbound')) and calldate > \
'2008-07-01 00:00:00' and calldate <= \
'2008-07-16 23:59:59'  order by calldate asc");
*/

	cdrinit(cdr_server);
	if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Errora!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);

		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Errorb!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);

		sprintf(resPacket,"|RES");
printf("\nsqlcmd : ([5m%s[0m)",sqlcmd);
printf("\nresPacket_1 : (%s)",resPacket);
		for(i=0;i< row_num;i++) 
		{
			row = mysql_fetch_row( result );
			if(row) 
			{
				perbill=0;
				floatbill = 0;

				memset(tmpchannel,0,sizeof(tmpchannel));
				memset(defcontext,0,sizeof(defcontext));
				memset(channel,0,sizeof(channel));
				memset(dstchannel,0,sizeof(dstchannel));
			
				strcpy(calldate, row[0]?row[0]:"unknown");
				strcpy(channel, row[1]?row[1]:"unknown");
				strcpy(clid1,row[2]?row[2]:"unknown");
				ps_delSpace(clid1);
				if(*clid1) {
					string_replace(clid1);
					tmpP = __base64_encode((unsigned char *)clid1, strlen(clid1), &size);
					if(tmpP) {
							strcpy(clid, tmpP);
							free(tmpP);
					}

				}
				else
					strcpy(clid,clid1);

				strcpy(dst, row[3]?row[3]:"unknown");
				strcpy(dcontext, row[4]?row[4]:"unknown");
				strcpy(duration, row[5]?row[5]:"unknown");
				strcpy(billsec, row[6]?row[6]:"unknown");
				strcpy(disposition, row[7]?row[7]:"unknown");
				strcpy(lastapp, row[8]?row[8]:"unknown");
				strcpy(dstchannel, row[9]?row[9]:"unknown");
				strcpy(defcontext, row[10]?row[10]:"unknown");

				ps_delSpace(calldate);
				ps_delSpace(channel);
				ps_delSpace(clid);
				ps_delSpace(dst);
				ps_delSpace(dcontext);
				ps_delSpace(duration);
				ps_delSpace(billsec);
				ps_delSpace(disposition);
				ps_delSpace(lastapp);
				ps_delSpace(dstchannel);
				ps_delSpace(defcontext);

				printf("\nclid:(%s), lastapp:(%s),disposition:(%s)-(%s)-(%s)",clid,lastapp,disposition,dst,defcontext);

					if(strlen(channel) > 10) {
						if(*channel == 'S') {
							strcpy(tmpchannel,channel+5);
							if(!strncmp(channel+4,dst,8))
								continue;

						}
						else if(*channel == 'L') {
							strcpy(tmpchannel,channel+7);
							if(!strncmp(channel+6,dst,8))
								continue;
						}
						else  {
							printf("\nchannel:((((((%s)))))))",channel);
							continue;
						}
					
					}
					else {
						if(*channel == 'S') {
							strcpy(tmpchannel,channel+5);
							if(!strncmp(channel+4,dst,8))
								continue;
						}
						else if(*channel == 'L') {
							strcpy(tmpchannel,channel+7);
							if(!strncmp(channel+6,dst,8))
								continue;
						}
						else  {
							printf("\nchannel:((((((%s)))))))",channel);
							continue;
						}
					}

					for(j=0;j<tmpcnt;j++) 
					{
						if(!strncasecmp(arr[j].phoneid,tmpchannel,strlen(arr[j].phoneid))) 
						{
/***
if(!strncasecmp(arr[j].phoneid,"0339012",7))
	printf("\n[5marr[j].phoneid:(%s),tmpchannel:(%s)arr[j].totcount:(%d)[0m",arr[j].phoneid,tmpchannel,arr[j].totcount);
*/
							arr[j].totcount +=1;
	//printf("\n*****IF_1(%d):(%s)(%d)(%d)(%d)",j,arr[j].phoneid,arr[j].tottime,arr[j].totcount,arr[j].totbill);
						}
					}

			}
			selcnt++;
		}
		mysql_free_result(result);
		result = NULL;

		/*****************************************************************************************/
		/*****************************************************************************************/
		/*****************************************************************************************/

		if(*call_kind == '9' || *call_kind =='\0')
		{
                        sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate <= '%s' and  (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and %s order by calldate desc",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);

		}
		else if(*call_kind == '0')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and (length(src) <= 8 or substr(src,1,3) = '070') and %s order by calldate desc",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '1')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and length(src) > 8 and substr(src,1,3) <> '070' and substr(src,1,3) <> '070' and  substr(src,1,3) <> '010' and substr(src,1,3) <> '011' and substr(src,1,3) <> '016'  and substr(src,1,3) <> '017' and substr(src,1,3) <> '018' and substr(src,1,3) <> '019'  and substr(src,1,3) <> '006' and substr(src,1,5) <> '00700' and substr(src,1,5) <> '00777' and %s order by calldate desc",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '2')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and  (length(src) > 8  and  (substr(src,1,3) = '010' or substr(src,1,3) = '011' or substr(src,1,3) = '016'   or substr(src,1,3) = '017'  or substr(src,1,3) = '018' or substr(src,1,3) = '019')) and %s order by calldate desc",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}
		else if(*call_kind == '3')
		{
			sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext from %s where calldate > '%s' and calldate <= '%s' and (dstchannel like binary('SIP/1%3.3s%%') or dstchannel like binary('Local/1%3.3s%%')) and (dcontext = 'outbound' or dcontext = 'error_context' or dcontext = 'last_error_context' or dcontext = 'inbound' or dcontext = 'error_context_inbound') and  (length(src) > 8  and  (substr(src,1,3) = '001' or substr(src,1,3) = '002' or substr(src,1,3) = '005'  or substr(src,1,3) = '006' or substr(src,1,5) = '00700' or substr(src,1,5) = '00777')) and %s order by calldate desc",table,fromtime,totime,arr[0].phoneid,arr[0].phoneid,addcond);
		}

		printf("\nsqlcmd : (%s)",sqlcmd);
/***
sprintf(sqlcmd,"%s","select calldate,channel,clid,dst,dcontext,duration,\
billsec,disposition,lastapp,dstchannel,\
dcontext from cdr where  \
((substr(channel,6,3)='033' and dcontext='outbound') or (substr(dstchannel,6,3)='033' and dcontext='inbound')) and calldate > \
'2008-07-01 00:00:00' and calldate <= \
'2008-07-16 23:59:59'  order by calldate asc");
*/

	printf("\n~~~~~~~~~~~~(%d)",errno);
	printf("\n~~~~~~~~~~~~");


	if( ret = mysql_query(cdrmysql, sqlcmd) ) {
	printf("\n------------");
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
		printf("\nresPacket:(%s)",resPacket);
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

	printf("\n~~~~~~~~~~~~");
        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
	printf("\n~~~~~~~~~~~~");
        row_num = mysql_num_rows(result);

		sprintf(resPacket,"|RES");
printf("\nsqlcmd : ([5m%s[0m)",sqlcmd);
printf("\nresPacket_1 : (%s)",resPacket);
		for(i=0;i< row_num;i++) 
		{
			row = mysql_fetch_row( result );
			if(row) 
			{
				perbill=0;
				floatbill = 0;

				memset(tmpchannel,0,sizeof(tmpchannel));
				memset(defcontext,0,sizeof(defcontext));
				memset(channel,0,sizeof(channel));
				memset(dstchannel,0,sizeof(dstchannel));
			
				strcpy(calldate, row[0]?row[0]:"unknown");
				strcpy(channel, row[1]?row[1]:"unknown");
				strcpy(clid1,row[2]?row[2]:"unknown");
				ps_delSpace(clid1);
				if(*clid1) {
					string_replace(clid1);
					tmpP = __base64_encode((unsigned char *)clid1, strlen(clid1), &size);
					if(tmpP) {
							strcpy(clid, tmpP);
							free(tmpP);
					}
				}
				else
					strcpy(clid,clid1);

				strcpy(dst, row[3]?row[3]:"unknown");
				strcpy(dcontext, row[4]?row[4]:"unknown");
				strcpy(duration, row[5]?row[5]:"unknown");
				strcpy(billsec, row[6]?row[6]:"unknown");
				strcpy(disposition, row[7]?row[7]:"unknown");
				strcpy(lastapp, row[8]?row[8]:"unknown");
				strcpy(dstchannel, row[9]?row[9]:"unknown");
				strcpy(defcontext, row[10]?row[10]:"unknown");

				ps_delSpace(calldate);
				ps_delSpace(channel);
				ps_delSpace(clid);
				ps_delSpace(dst);
				ps_delSpace(dcontext);
				ps_delSpace(duration);
				ps_delSpace(billsec);
				ps_delSpace(disposition);
				ps_delSpace(lastapp);
				ps_delSpace(dstchannel);
				ps_delSpace(defcontext);

				printf("\nclid:(%s), lastapp:(%s),disposition:(%s)-(%s)-(%s)",clid,lastapp,disposition,dst,defcontext);

                                        if(strlen(dstchannel) > 12) {
                                                if(*dstchannel == 'S') {
                                                        strncpy(tmpchannel,dstchannel+5,7);
							if(!strncmp(dst,dstchannel+4,8))
								continue;

						}
                                                else if(*dstchannel == 'L') {
                                                        strncpy(tmpchannel,dstchannel+7,7);
							if(!strncmp(dst,dstchannel+6,8))
								continue;
						}
                                        }
                                        else {
                                                if(*dstchannel == 'S') {
                                                        strcpy(tmpchannel,dstchannel+5);
							if(!strncmp(dst,dstchannel+4,8))
								continue;
						}
                                                else if(*dstchannel == 'L') {
                                                        strcpy(tmpchannel,dstchannel+7);
							if(!strncmp(dst,dstchannel+6,8))
								continue;
						}
                                        }

                                        for(j=0;j<tmpcnt;j++)
                                        {
                                                if(!strncasecmp(arr[j].phoneid,tmpchannel,strlen(arr[j].phoneid)))
                                                {
                                                        arr[j].recvtotcount +=1;
        printf("\n*****IF_1(%d):(%s)(%d)(%d)(%d)",j,arr[j].phoneid,arr[j].tottime,arr[j].totcount,arr[j].totbill);
                                                }
                                        }

			}
			selcnt++;
		}
		mysql_free_result(result);
		result = NULL;


		for(j=0; j < tmpcnt; j++) 
		{
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%d^%d^%d",arr[j].imid,arr[j].phoneid+3,arr[j].recvtotcount,arr[j].totcount, arr[j].totbill);
			printf("\n|%s^%d^%d",arr[j].imid,arr[j].totcount,arr[j].recvtotcount);


/**
|RES|ealee^7305^830^1^190|p31461^5555^0^0^0|twelveid0011^3833^2581^12^1098|ieyjo^7308^561
3^28^2669|mkjung^7302^103^2^76|k3627^7322^671^3^223|kjlee^7300^624^11^392|dacom4753^7321^0^0^0|p3146
^7320^0^0^0|dskim^7307^0^0^0
*/



			if(!((j+1)%20)) {
				if((j+1) < tmpcnt) {
						strcat(resPacket,"\n");
						tcpWrite(masterFd, resPacket);
						sprintf(resPacket,"|RES");
				}
				else {
						mysql_free_result(result);
						result = NULL;
						return 0;       
				}
			}

		}
		mysql_free_result(result);
		mysql_close(cdrmysql);
		result = NULL;
    return 0;       
}









/************************************************************************
* 월별 과금 조회 						     *
* 발신 이력 0:대표, 1:개인
*************************************************************************/
int
procCDM()
{
  char passwd[256];
  char email[256];
  char addcond[100];
  int   qid,returncode,size,j=0;
  int   test=0,ret,row_num=0,i,perbill=0,totbill=0;
  float	floatbill = 0;
  char tmp[100], table[10],cdr_server[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024];
	char	calldate[20],clid1[80],clid[160],dst[80],dcontext[80],duration[10],billsec[10],disposition[20];
	char	lastapp[20];
	char	fromtime[30],totime[30],call_kind[3],defcontext[30];
	char	*tmpP=NULL;

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(clid1,0,sizeof(clid1)); 
	memset(totime,0,sizeof(totime)); 
	memset(call_kind,0,sizeof(call_kind)); 
	memset(defcontext,0,sizeof(defcontext)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		qid = atoi(argv[2]);

	if(argv[3] && *argv[3])
		strcpy(fromtime,argv[3]);

	domain_string(domain);


	if(strlen(fromtime) != 7)
		strcpy(fromtime,"2006-08");


	if(PVS == 1) {
        sprintf(sqlcmd, "select substr(phoneid,2,7),defcontext,defaultip from number_manage where domain = '%s' and imid='%s'",domain,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
/***
		imid,type,number,extension
*/
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(dbuserid, row[0]?row[0]:"unknown");
			ps_delSpace(dbuserid);
			strcpy(defcontext, row[1]?row[1]:"outbound");
			ps_delSpace(defcontext);
			strcpy(serverip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
		}
		else
				return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));



		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}

	if(qid != 0)  {
		sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp from %s where substr(channel,6,7)='%s' and dcontext='%s' and substr(calldate,1,7) = '%s' and %s order by calldate asc",table,dbuserid,defcontext,fromtime,addcond);
	}
	else {
		sprintf(sqlcmd, "select calldate,clid,dst,dcontext,duration,billsec,disposition,lastapp from %s where substr(channel,6,3)='%3.3s' and dcontext='%s'  and substr(calldate,1,7) = '%s' and %s order by calldate asc",table,dbuserid,defcontext,fromtime,addcond);
	}

	printf("\nsqlcmd : (%s)-cdr_server:[7m(%s)[0m",sqlcmd,cdr_server);
	printf("\nsqlcmd : (%s)-cdr_server:[7m(%s)[0m",sqlcmd,cdr_server);

	cdrinit(cdr_server);

        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error1!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error2!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
*/
		sprintf(resPacket,"|RES");

		perbill=0;
		floatbill = 0;
		totbill = 0;
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
					strcpy(calldate, row[0]?row[0]:"unknown");

					strcpy(clid1,row[1]?row[1]:"unknown");
					ps_delSpace(clid1);
					if(*clid1) {
						string_replace(clid1);
						tmpP = __base64_encode((unsigned char *)clid1, strlen(clid1), &size);
						if(tmpP) {
								strcpy(clid, tmpP);
								free(tmpP);
						}
					}
					else
						strcpy(clid,clid1);
					strcpy(dst, row[2]?row[2]:"unknown");
					strcpy(dcontext, row[3]?row[3]:"unknown");
					strcpy(duration, row[4]?row[4]:"unknown");
					strcpy(billsec, row[5]?row[5]:"unknown");
					strcpy(disposition, row[6]?row[6]:"unknown");
					strcpy(lastapp, row[7]?row[7]:"unknown");
					ps_delSpace(calldate);
					ps_delSpace(clid);
					ps_delSpace(dst);
					ps_delSpace(dcontext);
					ps_delSpace(duration);
					ps_delSpace(billsec);
					ps_delSpace(disposition);
					ps_delSpace(lastapp);

					printf("\nlastapp:(%s),disposition:(%s)-(%s)",lastapp,disposition,dst);

					if(!strcasecmp(lastapp,"dial") && !strcasecmp(disposition,"answered")) {
						if(strlen(dst) <= 8 || !strncmp(dst,"070",3));
						else if(strlen(dst) > 4 && strncmp(dst,"070",3) && strncmp(dst,"010",3) && strncmp(dst,"011",3) && strncmp(dst,"016",3)  && strncmp(dst,"017",3) && strncmp(dst,"018",3) && strncmp(dst,"019",3) && strncmp(dst,"001",3) && strncmp(dst,"002",3) && strncmp(dst,"005",3) && strncmp(dst,"006",3)  && strncmp(dst,"00700",5) && strncmp(dst,"00777",5)) {
								perbill += 38 * ((int) (atoi(billsec)/180) +1);
						}
						else if(strlen(dst) > 4 && (!strncmp(dst,"070",3) || !strncmp(dst,"010",3) || !strncmp(dst,"011",3) || !strncmp(dst,"016",3) || !strncmp(dst,"017",3) || !strncmp(dst,"018",3) || !strncmp(dst,"019",3))) {
								floatbill = 11.7 * ((int) (atoi(billsec) / 10) +1);
								totbill += (int)ceil(floatbill);
						}

					}
					printf("\n시내/외 :(%d)원, 이동통신호 :(%d), [%s]초",perbill,totbill,billsec);
			}
			selcnt++;
	}
	mysql_free_result(result);
	result = NULL;
	mysql_close(cdrmysql);

	sprintf(resPacket+strlen(resPacket),"|%d^%d",perbill,totbill);
    return 0;       
}



/*************************************************************************
* CDU update
*************************************************************************/
int
procCDU()
{
  int   perbill=0;
  char passwd[256];
  char email[256];
  int   qid,returncode,j=0;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    addcond[100];
  char    sqlcmd[1024], table[10],cdr_server[20];
  char	lastapp[20];
  char	calldate[20],clid1[80],clid[160],src[80],dst[80],dcontext[80],duration[10],billsec[10],disposition[20];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64];

	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(dst,0,sizeof(dst)); 
	memset(recordfile,0,sizeof(recordfile)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
    selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(dst,argv[3]);

	if(argv[4] && *argv[4])
		strcpy(recordfile,argv[4]);

        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and imid='%s'",domain,user);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;


		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}
	cdrinit(cdr_server);

	//sprintf(sqlcmd, "select calldate,channel,clid,dst,dcontext,duration,billsec,disposition,lastapp,dstchannel,dcontext,recordfile from cdr where (substr(channel,6,3)='%3.3s' or substr(dstchannel,6,3)='%3.3s') and calldate > '%s' and calldate <= '%s' and (dcontext = 'outbound' or dcontext = 'inbound') order by calldate desc",arr[0].phoneid, arr[0].phoneid,fromtime,totime);

        sprintf(sqlcmd, "update cdr set recordfile = '%s' where calldate = '%s' and dst = '%s'",recordfile,fromtime,dst);

	printf("\nsqlcmd(%s)",sqlcmd);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(cdrmysql)
			mysql_close(cdrmysql);

		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        } 

	mysql_close(cdrmysql);
	sprintf(resPacket,"|RES|CDU(%s,%s)|",fromtime,recordfile);

    return 0;       
}


/*************************************************************************
*************************************************************************/
int
parseMailAddr(code)
{
	char	*fr, *to, *p;
	int		i=0;

	user[0] = domain[0] = upperuser[0] = orguser[0] = 0;

    if(argv[1])
		fr = argv[1];
    else 
		return 0;

    for (to = orguser; *fr; fr++) {
        if (*fr == '@')
            break;
        /***
        *to++ = tolower(*fr);
        */
        *to++ = *fr;
    }

    *to++ = 0;
    strcpy(user,orguser);
    strcpy(upperuser,orguser);
    //case_lower(user);
    case_upper(upperuser);

	if (*fr++ == '@') {
		for (to = domain; *fr; fr++)
			*to++ = tolower(*fr);
		*to++ = 0;
	}

	for (p = user; *p; p++) {
		if (isalnum(*p))
		   continue;
		if (p != user) 
		    if (*p == '.' || *p == '-' || *p == '_')
			continue;
	}


	printf("\nparseMailAddr:domain:(%s)",domain);

	for (p = domain; *p; p++) {
		if (isalnum(*p))
		    continue;
		if (p != user) 
		   if (*p == '.' || *p == '-' || *p == '_')
			continue;
		if (tst) printf("\tdomain = %s\n", domain);
		if (tst) printf("\tchar = %c[%02x]\n", *p, *p);

		return(errorReturn("ErDomainCharsetInvalid!",__FILE__,__LINE__));
	}
	
	for (p = domain; *p; p++) {
		if (*p >= 'A' && *p <= 'Z')
			*p = *p - 'A' + 'a';
	}

	i = 0;
	while(rwinfo[i].src_domain != NULL) {
			if(!strcmp(rwinfo[i].src_domain,domain)) {
				strcpy(domain,rwinfo[i].dst_domain);
				break;
			}
			i++;
	}
	strcpy(upperdomain,domain);
        case_upper(upperdomain);
/***
	for (p = user; *p; p++) {
		if (*p >= 'A' && *p <= 'Z')
			*p = *p - 'A' + 'a';
	}
*/
	return(successReturn("parse emailaddress!"));
}

/*************************************************************************
*************************************************************************/
int
parseFilter(cP, fPP, fsbP)
char	*cP;
char	**fPP;
char	*fsbP;
{
	if (cP && strncmp(cP, fsbP, 2) == 0) {
		*fPP = cP + 2;
		return 1;
	}
	return(0);
}

/*************************************************************************
*************************************************************************/
int
setFile(path, msg)
char	*path;
char	*msg;
{
	FILE	*fp;
	
	if (tst)
		printf("path = %s,msg=%s\n", path,msg);
	if ((fp = fopen(path, "w")) == NULL)
		return(errorReturn("fopen()!",__FILE__,__LINE__));
	fprintf(fp, "%s", msg);
	fclose(fp);
	return(successReturn("set File!"));
}


/*************************************************************************
*************************************************************************/
int
setFile1(path, msg)
char    *path;
char    *msg;
{
    FILE    *fp;
	char	tmpBuff[128];

    if (tst)
        printf("path = %s,msg=%s\n", path,msg);
    if ((fp = fopen(path, "w")) == NULL)
        return(errorReturn("fopen()!",__FILE__,__LINE__));
    fprintf(fp, "%s", msg);
    fclose(fp);
	sprintf(tmpBuff,"chown onnet:onnet %s",path);
	system(tmpBuff);
	sprintf(tmpBuff,"chmod 644 %s",path);
	system(tmpBuff);

    return(successReturn("set File!"));
}



/*************************************************************************
*************************************************************************/
int
setFile2(path, msg)
char    *path;
char    *msg;
{
    FILE    *fp;
	char	tmpBuff[128];

    if (tst)
        printf("path = %s,msg=%s\n", path,msg);
    if ((fp = fopen(path, "a+")) == NULL)
        return(errorReturn("fopen()!",__FILE__,__LINE__));
    fprintf(fp, "%s", msg);
    fclose(fp);
	sprintf(tmpBuff,"chown onnet:onnet %s",path);
	system(tmpBuff);
	sprintf(tmpBuff,"chmod 644 %s",path);
	system(tmpBuff);

    return(successReturn("set File2!"));
}


/*************************************************************************
*************************************************************************/
int
re_string(char *s)
{
	char	*p;
	
	for (p = _tmpbuf; *s; p++, s++) {
		if (*s == '\\') {
				p--;
				continue;
		}
		*p = *s;
	}
	*p = 0;
	
	return ((int) _tmpbuf);
}


/*************************************************************************
*************************************************************************/
int
string_replace(char *s)
{
        char    *p;

        for (; *s; s++) {
                if (*s == '\\' || *s == '\'' || *s == '\"') {
                           *s=' ';
                }
        }
}


/*************************************************************************
*************************************************************************/
int
string(char *s)
{
	char	*p;
	
	for (p = _tmpbuf; *s; p++, s++) {
		if (*s == '.' || *s == ' ' || *s == '[' || *s == ']' ||  *s == '*')
			*p++ = '\\';
		*p = *s;
	}
	*p = 0;
	
	return ((int) _tmpbuf);
}

/*************************************************************************
*************************************************************************/
int
domain_string(char *s)
{
    char    *p;

    for (p = _tmpbuf; *s; p++, s++) {
/**
        if (*s == '.') {
            *p = '-';
        }
        else
*/
            *p = *s;
    }
    *p = 0;

    return ((int) _tmpbuf);
}



/*************************************************************************
*************************************************************************/
int
tel_string(char *s)
{
    char    *p;

    for (p = _tmpbuf; *s; s++) {
        if (*s < '0' || *s > '9') {
		continue;
        }
        else
            *p = *s;
	p++;
    }
    *p = 0;

    return ((int) _tmpbuf);
}


/*************************************************************************
*************************************************************************/
int
ids_string(char *s)
{
    char    *p;

    for (p = _tmpbuf; *s; p++, s++) {
        if (*s == '.' || *s == '*' ||  *s == '?' ||  *s == '[' ||  *s == ']' ||  *s == '{' || *s == '}')
            *p++ = '\\';
        *p = *s;
    }
    *p = 0;
	printf("\n===>_tmpbuf:(%s)",_tmpbuf);

    return ((int) _tmpbuf);
}


/*************************************************************************
*************************************************************************/
int
reg_ids_string(char *s)
{
    char    *p;

    for (p = _tmpbuf; *s; p++, s++) {
        if (*s == '\\') {
			*p = *s;
			s++;
		}
		else 
			*p = *s;
    }
    *p = 0;

    return ((int) _tmpbuf);
}


int
fi_makeDir( char *path, mode_t  mode ,char *uid,char *gid)
{
    char *str, *last_p;
    char tmpBuff[512];
    char tmpPath[256];
    char tmpCmd[64];
    int firstCheck=1;
/**
    umask(002);
*/

    memset(tmpPath, 0x00, sizeof(tmpPath));
    strcpy(tmpBuff, path);
    last_p = tmpBuff;


#ifdef PYR
    while( (str = (char *)strtok(last_p, "/") ) != NULL )
#else
    while( (str = (char *)strtok_r(last_p, "/", &last_p) ) != NULL )
#endif
    {
        if(*path !='/') {
        if(firstCheck)
                firstCheck=0;
        else
                strcat(tmpPath, "/");
        }
        else
                strcat(tmpPath, "/");
        strcat(tmpPath, str);

        if( access( tmpPath, 0 ) != 0 )
        {
            if( mkdir(tmpPath, mode) < 0 )
            {
                if (errno != EEXIST)
                {
                    return(-1);
                }
            }
            else {
                        sprintf(tmpCmd,"chown -R root:root %s",tmpPath);
                        system(tmpCmd);
            }
        }

#ifdef PYR
    last_p = NULL;
#endif
    } /* end of while */

    return(0);
}

//20120412
/*********
        case ITS : ret = procITS(); break;
        case DTS : ret = procDTS(); break;
        case RTS : ret = procRTS(); break;
        case UTS : ret = procUTS(); break;

        case AN2 : ret = procAN2(); break;
        case IH3 : ret = procIH3(); break;
        case RH3 : ret = procRH3(); break;
        case IA3 : ret = procIA3(); break;
        case DA3 : ret = procDA3(); break;
        case RA3 : ret = procRA3(); break;
        case RRC : ret = procRRC(); break;
        case OF3 : ret = procOF3(); break;
        case AN3 : ret = procAN3(); break;
******/

/*************************************************************************
* third_ars member
*************************************************************************/
int
procRA3()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0, row_num1;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],sqlcmd1[256],forward_num[30],mailbox[64];
  char	name[65],code[10],number[32],h_number[20],extension[10], first_extension[10],second_extension[10],third_extension[4];;;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(name,0,sizeof(name)); 
	memset(code,0,sizeof(code)); 
	memset(number,0,sizeof(number)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(second_extension,0,sizeof(second_extension)); 
	memset(third_extension,0,sizeof(third_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
		strcpy(h_number,argv[2]);
    if(argv[3]&& *argv[3])
		strcpy(first_extension,argv[3]);
	else
		strcpy(first_extension,"1");

    if(argv[4] && strlen(argv[4])>2){
//        strncpy(first_extension,&argv[4][0],1);
        strncpy(second_extension,&argv[4][1],1);
        strncpy(third_extension,&argv[4][2],1);
    }else if(argv[4] && strlen(argv[4])>1){
        strncpy(second_extension,&argv[4][0],1);
        strncpy(third_extension,&argv[4][1],1);
    }else if(argv[4] && strlen(argv[4])>0){
        strncpy(second_extension,&argv[4][0],1);
        strcpy(third_extension,"");
    }else {
	sprintf(resPacket, "|ERR|Input Data!!!");
	return -1;
    }

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);
	if(!isdigitstr(code))
		return(errorReturn("EInput Data(code)",__FILE__,__LINE__));


	if(customInfo(domain) < 0)
		return -1;

	if(!mysql_1)
		sqlinit_1(LOCAL_SERVER);

                sprintf(sqlcmd, "select seq,h_number,extension,number,name from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension='%s' and extension = '%s' order by seq asc",prefix,h_number,first_extension,second_extension);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd, "select seq,h_number,extension,number,name from third_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension='%s' and second_extension='%s' and extension = '%s' order by seq asc",prefix,h_number,first_extension,second_extension,third_extension);
                }
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error sub_ars_member!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(seq, row[0]?row[0]:"001");
				ps_delSpace(seq);
				strcpy(h_number, row[1]?row[1]:"0");
				ps_delSpace(h_number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(number, row[3]?row[3]:"0");
				ps_delSpace(number);
				strcpy(name, row[4]?row[4]:"___");
				ps_delSpace(name);
			}

			sprintf(sqlcmd1, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix,number,serverip);
			ret = mysql_query(mysql_1, sqlcmd1);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if( row_num1 == 0 ) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}	
				else {
					    row1 = mysql_fetch_row( result_1);
					    if( row1) {
							strcpy(num070, row1[0]?row1[0]:"070000000");
							ps_delSpace(num070);
					    }
				}
				mysql_free_result(result_1);
				result_1 = NULL;
			}

			//sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s%s%s^%s^%s",seq,h_number,first_extension,second_extension,extension,number,name);

			if(!((i+1)%30))
			{
				if((i+1) < row_num)
				{
					strcat(resPacket,"\n");
					tcpWrite(masterFd, resPacket);
					printf("\n[5m%s[0m");
					sprintf(resPacket,"|RES");
				}
				else {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

	printf("\nresPacket:(%s)",resPacket);

	return 0;       
}
/*************************************************************************
* delete third_ars member
*************************************************************************/
int
procDA3()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	h_number[21],number[21],name[33],code[5],seq[10], sqlcmd1[512];
char	extension[10],first_extension[10],second_extension[10],third_extension[4];;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(second_extension,0,sizeof(second_extension)); 
	memset(third_extension,0,sizeof(third_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else
	strcpy(h_number,"0");

    if(argv[3]&& *argv[3])
	strcpy(first_extension,argv[3]);
    else
	strcpy(first_extension,"0");

    if(argv[4] && strlen(argv[4])>2){
//        strncpy(first_extension,&argv[4][0],1);
        strncpy(second_extension,&argv[4][1],1);
        strncpy(third_extension,&argv[4][2],1);
    }else if(argv[4] && strlen(argv[4])>1){
        strncpy(second_extension,&argv[4][0],1);
        strncpy(third_extension,&argv[4][1],1);
    }else if(argv[4] && strlen(argv[4])>0){
        strncpy(second_extension,&argv[4][0],1);
        strcpy(third_extension,"");
    }else {
	sprintf(resPacket, "|ERR|Input Data!!!");
	return -1;
    }



    if(argv[5]&& *argv[5])
                snprintf(number,sizeof(number),"%s",argv[5]);
    else
	strcpy(number,"0");

    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(code) || strlen(h_number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else  {
	    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
	    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}

	tel_string(number);
	strcpy(number,_tmpbuf);
	tel_string(h_number);
	strcpy(h_number,_tmpbuf);

        sprintf(sqlcmd,"DELETE from  sub_ars_member \
                where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and number='%s'",prefix,h_number,first_extension,second_extension,number);
        if(third_extension && strlen(third_extension) > 0){
        sprintf(sqlcmd,"DELETE from  third_ars_member \
                where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension = '%s' and number='%s'",prefix,h_number,first_extension,second_extension,third_extension,number);

        }
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				sprintf(commandBuf,"|DA3|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1,'DA3')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DA3|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],prefix,serverip);
				sprintf(resPacket,"|RES|DA3 userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);

					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DA3')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}

    sprintf(resPacket,"|RES|DA3 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,first_extension,extension,number);
    return 0;       
}


/*************************************************************************
* third_ars meber
*************************************************************************/
int
procIA3()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],first_extension[10],second_extension[10],third_extension[4];;

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(second_extension,0,sizeof(second_extension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
		strcpy(seq,argv[2]);
    else
	sprintf(seq,"%d",getpid());

    if(argv[3] && *argv[3])
		strcpy(h_number,argv[3]);
    else
		strcpy(h_number,"0");

    if(argv[4] && *argv[4])
		strcpy(first_extension,argv[4]);
    else
		strcpy(first_extension,"1");

    if(argv[5] && strlen(argv[5])>2){
 //       strncpy(first_extension,&argv[5][0],1);
        strncpy(second_extension,&argv[5][1],1);
        strncpy(third_extension,&argv[5][2],1);
    }else if(argv[5] && strlen(argv[5])>1){
//        strncpy(first_extension,&argv[5][0],1);
        strncpy(second_extension,&argv[5][0],1);
        strncpy(third_extension,&argv[5][1],1);
    }else if(argv[5] && strlen(argv[5])>0){
        strncpy(second_extension,&argv[5][0],1);
        strcpy(third_extension,"");
    }else {
	sprintf(resPacket, "|ERR|Input Data!!!");
	return -1;
    }


    if(argv[6] && *argv[6])
                snprintf(number,sizeof(number),"%s",argv[6]);
    else
		strcpy(number,"0");
		
    if(argv[7] && *argv[7])
		strcpy(name,argv[7]);

    if(strlen(h_number) < 11 || strlen(number) < 4 || !isdigitstr(number) || !isdigitstr(seq))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(strlen(number) == 3)
		sprintf(number,"0%s",number);
	else if(strlen(number) != 4)
		strcpy(number,"0000");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
		else  {
		    if(argv[8] && *argv[8])
				strcpy(prefix,argv[8]);
		    if(argv[9] && *argv[9])
				strcpy(serverip,argv[9]);
		}


		tel_string(number);


                sprintf(sqlcmd,"DELETE from sub_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and number = '%s'",prefix,h_number,first_extension,second_extension,number);
                if(third_extension && strlen(third_extension) > 0){
			sprintf(sqlcmd,"DELETE from third_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension = '%s' and number = '%s'",prefix,h_number,first_extension,second_extension,third_extension,number);
                }
                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return -1;
                }

//NEWNEW
                sprintf(sqlcmd,"DELETE from sub_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq >= %s",prefix,h_number,first_extension,second_extension,seq);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"DELETE from third_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension = '%s' and seq >= %s",prefix,h_number,first_extension,second_extension,third_extension,seq);
                }
                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return -1;
                }

                sprintf(sqlcmd,"INSERT into sub_ars_member( \
                        prefix,seq,h_number,first_extension,extension,number,name,defaultip) values( \
                        '%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,first_extension,second_extension,number,name,serverip);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"INSERT into third_ars_member( \
                        prefix,seq,h_number,first_extension,second_extension,extension,number,name,defaultip) values( \
                        '%3.3s',%s,'%s','%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,first_extension,second_extension,third_extension,number,name,serverip);
                }
/**********
		sprintf(sqlcmd,"DELETE from third_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension = '%s',extension='%s' and number = '%s'",prefix,h_number,first_extension,second_extension,third_extension,number);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"DELETE from sub_ars_member where prefix='%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension = '%s' and extension = '%s' and seq = %s",prefix,h_number,first_extension,second_extension,third_extension,seq);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		sprintf(sqlcmd,"INSERT into third_ars_member( \
			prefix,seq,h_number,first_extension,second_extension,extension,number,name,defaultip) values( \
			'%3.3s',%s,'%s','%s','%s','%s','%s','%s')",prefix,seq,h_number,first_extension,second_extension,third_extension,number,name,serverip);

**/
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
					sprintf(commandBuf,"|IA3|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
						if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1,'IA3')",tmp, commandBuf,BACKUP_SERVER,"sub2");
							mysql_query(mysql, sqlcmd);

						}
					}

					sprintf(commandBuf,"|IA3|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],prefix,serverip);
					sprintf(resPacket,"|RES|IA3 userid:(%s)-(%s)-(%s)-(%s)",user,domain,extension,number);

					/****추가 ***/
		//			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					if( ret = mysql_query(mysql, sqlcmd) ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						if(mysql)
							mysql_close(mysql);
						sqlinit();
						if( ret = mysql_query(mysql, sqlcmd) ) {
							tcpWrite(masterFd, resPacket);
							logCmd();
							exit(0);
						}
					}   

					result = mysql_store_result( mysql );
					if(!result ) {
						sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
						tcpWrite(masterFd, resPacket);
						exit(0);
					}
									
					row_num = mysql_num_rows(result);
					if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;
						return 0;
					}

					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
						}
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IA3')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
						}
					}
					mysql_free_result(result);
					result = NULL;
	}

    sprintf(resPacket,"|RES|IA3 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,first_extension,extension,number);
    return 0;       
}

/*************************************************************************
*************************************************************************/
int
procRRC()
{
  char passwd[256];
  char email[256];
  char tmp[100],seq[20],today[15],sqlcmd1[512];
  unsigned int  tmpNumber;
  char    prefix[200];
  char    sqlcmd[512],number[20],userid[20];
  char  action[32], status[4];
        int ret,row_num;


/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(passwd,0,sizeof(passwd));
        memset(number,0,sizeof(number));
        memset(action,0,sizeof(action));
        memset(status,0,sizeof(status));
        memset(userid,0,sizeof(userid));
        memset(sqlcmd,0,sizeof(sqlcmd));

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

        if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

        if(argv[3] && *argv[3])
                strcpy(action,argv[3]);
        if(argv[4] && *argv[4])
                strcpy(passwd,argv[4]);
        if(argv[5] && *argv[5])
                strcpy(userid,argv[5]);


//      if(customInfo(domain) < 0)
//              return -1;

printf("\nrequest : number(%s),action(%s),passwd(%s) ",number,action,passwd);
        if(!strcmp(action,"SET")){

printf("\nrequest :delete remotecall domain:%s,number:%s, sqlcmd:%s",domain,number,sqlcmd);
sprintf(sqlcmd,"--------%s %s-----------",domain,number);
                printf("\ntest sqlcmd : ((((%s))))",sqlcmd);

                sprintf(sqlcmd,"DELETE from remotecall where  domain='%s' and number='%s'", domain,number);

                printf("\nsdelete qlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return(-1);
                }
                sprintf(sqlcmd,"INSERT into remotecall (number,phoneid,domain,passwd,status) values ('%s','%s','%s','%s','1') ",number,userid,domain,passwd);
                printf("\nsqlcmd : ((((%s))))",sqlcmd);
                if( mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return(-1);
                }
        }       
        
                        sprintf(sqlcmd, "select passwd,status from remotecall where phoneid = '%s' and domain='%s' and number='%s'",userid,domain,number);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );           
                                        return(-1);
                                }   
                                                 
                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
                                        return -1;
                                }
                
                                row = mysql_fetch_row( result );
                                if(row) {
                                        strcpy(passwd, row[0]?row[0]:"");
                                        ps_delSpace(passwd);
                                        strcpy(status, row[1]?row[1]:"0");
                                        ps_delSpace(status);
                                }
                                mysql_free_result(result);
                                result = NULL;
        sprintf(resPacket,"|RES|%s|%s|%s|",userid,passwd,status);
        return 0;
}


/*************************************************************************************/
//|AN3|xxx@temp4402.lgdacom.net|07086119500|1|0|0|115.95.192.16
/*************************************************************************************/
int             
procAN3()               
{                       
char    sqlcmd[512];    
char    tmp[64],messenger_ip[32];
char    firstexten[20],secondexten[20],thirdexten[20];
char    h_number[20];           
char    call_seq[11];   
char    hunt_num[32],numbertype[2],fphone_id[30];
char    method[2],ssw_ip[20],option1[10]; 
int row_num = 0, ret = 0, i=0, sd=-1,intfromtime,inttotime, j=0;
int randnum = 0, datacount = 0;         
struct  tm      *tp;
long    t;                              
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char    tel[20],option6[10];            
char    numlist[100][20],tmpnum[10],directnumber[20];
char    frommin[5],tomin[5];    
int     forward_check = 0;
char    callerid[20],tmpcrm[256];
char    crm_070[15],crm_flag[5],crm_messenger_ip[16];
char    record[11],org_num[20];
char    option2[10],class[20];

    
        memset(number,0,sizeof(number));
        memset(org_num,0,sizeof(org_num));
        memset(option6,0,sizeof(option6));
        memset(firstexten,0,sizeof(firstexten));
        memset(secondexten,0,sizeof(secondexten));
        memset(thirdexten,0,sizeof(thirdexten));
        memset(hunt_num,0,sizeof(hunt_num));
        memset(call_seq,0,sizeof(call_seq));
        memset(prefix,0,sizeof(prefix));
        memset(method,0,sizeof(method));
        memset(numbertype,0,sizeof(numbertype));
        memset(ssw_ip,0,sizeof(ssw_ip));
        memset(option1,0,sizeof(option1));
        memset(tel,0,sizeof(tel));
        memset(directnumber,0,sizeof(directnumber));
        memset(frommin,0,sizeof(frommin));
        memset(tomin,0,sizeof(tomin));
        memset(callerid,0,sizeof(callerid));
        memset(record,0,sizeof(record));
        memset(tmpcrm,0,sizeof(tmpcrm));
        memset(crm_070,0,sizeof(crm_070));
        memset(crm_flag,0,sizeof(crm_flag));
        memset(crm_messenger_ip,0,sizeof(crm_messenger_ip));
        memset(option2,0,sizeof(option2));
        memset(class,0,sizeof(class));


       t=time(0);
       tp = (struct tm *) localtime(&t);


        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));
        
        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");
        
        if(argv[3] && *argv[3])
                strcpy(firstexten,argv[3]);
        else
                strcpy(firstexten,"0000");
        
        if(argv[4] && *argv[4])
                strcpy(secondexten,argv[4]);
        else
                strcpy(secondexten,"0000");
        
        if(argv[5] && *argv[5])
                strcpy(thirdexten,argv[5]);
        else
                strcpy(thirdexten,"0000");
        
        if(argv[6] && *argv[6])
                strcpy(call_seq,argv[6]);
        else
                strcpy(call_seq,"0");
       
        if(argv[7] && *argv[7])
                strcpy(ssw_ip,argv[7]);
        else
                strcpy(ssw_ip,SSW_IP);
                
        if(argv[8] && *argv[8])
                strcpy(callerid,argv[8]);
        else
                strcpy(callerid,"07000000000");

        sprintf(sqlcmd, "select phoneid,numbertype from number_manage where 070number = '%s'",h_number);
        if( ret = mysql_query(mysql, sqlcmd) ) {
                sprintf(resPacket,"|RES|0|0|X|");
                return 0;
        }
        result = mysql_store_result( mysql );
printf("\nsqlcmd : (%s)",sqlcmd);
        if(result) {
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        sprintf(resPacket,"|RES|0|0|X|");
                        return 0;
                }
                else  {
                        row = mysql_fetch_row( result );
                        if( row) {
                                    strcpy(phoneid, row[0]?row[0]:"00000000");
                                    ps_delSpace(phoneid);
                                    strcpy(numbertype, row[0]?row[0]:"0");
                                    ps_delSpace(numbertype);
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
        else {
                sprintf(resPacket,"|RES|0|0|X|");
                return 0;
        }
                
        strncpy(prefix,phoneid+1,3);
        
        
        sprintf(sqlcmd, "select distinct method,number from third_ars where h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension='%s'",h_number,firstexten,secondexten,thirdexten);
        
        printf("\nsqlcmd : (%s)",sqlcmd);

        if( ret = mysql_query(mysql, sqlcmd) ) {
                sprintf(resPacket,"|RES|1|0|X|");
        }       
                        
        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket,"|RES|1|0|X|");
                return 0;
        }               
                                    
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {        
                mysql_free_result(result);
                result = NULL;
                sprintf(resPacket,"|RES|1|0|X|");
                return 0;
        }       
        row = mysql_fetch_row( result );
        if( row) {
                strcpy(method, row[0]?row[0]:"2");
                ps_delSpace(method);
                strcpy(directnumber, row[1]?row[1]:"07000000000");
                ps_delSpace(directnumber);
        }
        mysql_free_result(result);
        result = NULL;

printf("\n[5m[7mMETHOD : (%s)[0m[0m",method);

        if(*method == '0') {
                sprintf(resPacket,"|RES|0|%s|1%3.3s%4.4s|",call_seq,prefix,h_number+strlen(h_number)-4);
        }
        else if(*method == '9') {
                if(strlen(directnumber) == 3)
                        sprintf(resPacket,"|RES|9|%s|1%s0%s|",call_seq,prefix,directnumber);
                else if(strlen(directnumber) == 4)
                        sprintf(resPacket,"|RES|9|%s|1%s%s|",call_seq,prefix,directnumber);
                else if(strlen(directnumber) > 4)
                        sprintf(resPacket,"|RES|9|%s|%s|",call_seq,directnumber);
                else
                        sprintf(resPacket,"|RES|9|0|-|");

        }
        else if(*method == '1') {
                sprintf(resPacket,"|RES|1|0|-|");
        }
        else if(*method == '2') {
                sprintf(sqlcmd, "select distinct number,seq from third_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,firstexten,secondexten,thirdexten,call_seq);
                
                printf("\n(((%s))))",sqlcmd);
                printf("\n(((%s))))",sqlcmd);
                printf("\n(((%s))))",sqlcmd);
        
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|2|0|X|");
                        return 0;
                }
                
                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|2|0|X|");
                        return 0;
                }
                        
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|2|0|X|");
                        return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0"); 
                        ps_delSpace(call_seq);
                   }
                mysql_free_result(result);
                result = NULL;

                sprintf(sqlcmd, "select option1,tel,option6,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

                printf("\n(((%s))))",sqlcmd);
                printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
                else {
                        row_num = mysql_num_rows(result);
                        if( row_num == 0 ) {
                        }
                        else {
                                row = mysql_fetch_row( result );
                                if( row) {
                                        strcpy(option1,row[0]?row[0]:"N");
                                        ps_delSpace(option1);
                                        strcpy(tel,row[1]?row[1]:"");
                                        ps_delSpace(tel);
                                        strcpy(option6,row[2]?row[2]:"");
                                        ps_delSpace(option6);
                 
                                        strcpy(record,row[3]?row[3]:"");
                                        ps_delSpace(record);
                                        strcpy(crm_070,row[4]?row[4]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row[5]?row[5]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row[6]?row[6]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row[7]?row[7]:"");
                                        ps_delSpace(org_num);
                                        strcpy(option2,row[8]?row[8]:"");
                                        ps_delSpace(option2);
                                        strcpy(class,row[9]?row[9]:"");
                                        ps_delSpace(class);
                                }
                        }
                        mysql_free_result(result);
                        result = NULL;
                }       
                if(strlen(tel) < 7) 
                        strcpy(tel,"");
                        
                                
                if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {                 
                        sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                        commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                }                       
                                        
                                        

                if(strlen(hunt_num) == 4)
                        sprintf(resPacket,"|RES|2|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|",call_seq,prefix,hunt_num,option1,tel,option6,option2,class);
                else
                        sprintf(resPacket,"|RES|2|%s|%s|%s|%s|%s|%s|%s|",call_seq,hunt_num,option1,tel,option6,option2,class);

        }
        else if(*method == '3') {
                sprintf(sqlcmd, "select distinct number,seq from third_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension = '%s' and seq > %s order by seq asc",prefix,h_number,firstexten,secondexten,thirdexten,call_seq);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|3|0|X|");
                        return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|3|0|X|");
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|3|0|X|");
                          return 0;
                }
                sprintf(resPacket,"|RES|3|0|");
                if(row_num > 20)
                        row_num = 20;
                        
                if(!mysql_1)
                        sqlinit_1(LOCAL_SERVER);
        
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq); 
                        
                if(strlen(hunt_num) == 4) {
                int j = 0,row_num1;
                memset(fphone_id,0,sizeof(fphone_id));
                
                if(strlen(hunt_num) == 4) {
                        int j = 0,row_num1;
                        if(mysql_1) {
                        sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);
                
                        printf("\nABSENT : (%s)",sqlcmd);
                        ret = mysql_query(mysql_1, sqlcmd);
                        
                        printf("\nsqlcmd :(%s)",sqlcmd);

                        result_1 = mysql_store_result( mysql_1 );
                        if(result_1) {
                                row_num1 = mysql_num_rows(result_1);
                                if(row_num1 == 0) {
                                        mysql_free_result(result_1);
                                        result_1 = NULL;
                                        continue;
                                }
                                else {
                                        row1 = mysql_fetch_row( result_1 );
                                        if(row1 && row1[1] && *row1[1] == 'Y') {
                                                mysql_free_result(result_1);
                                                result_1 = NULL;
                                                continue;
                                        }

                                        strcpy(crm_070,row1[2]?row1[2]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row1[3]?row1[3]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row1[5]?row1[5]:"");
                                        ps_delSpace(org_num);

                                        memset(tmpcrm,0,sizeof(tmpcrm));
                                        if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
                                                sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                                                commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                                         }
                                } 
                        }
                        mysql_free_result(result_1);
                        result_1 = NULL;
                        }               
                }                       
                                        
                if(mysql_1) {    
                if(getpid()%5 == 0)
                        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);                      
                else if(getpid()%5 == 1)        
                        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
                else                    
                        sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);                                     
                                        
                printf("\nFORWARD_INFO : (%s)",sqlcmd);
                ret = mysql_query(mysql_1, sqlcmd);
                                        
                printf("\nsqlcmd :(%s)",sqlcmd);
                                        
                result_1 = mysql_store_result( mysql_1 );
                if(result_1) {
                        row_num1 = mysql_num_rows(result_1);
                        if( row_num1 == 0 ) {   
                                mysql_free_result(result_1);
                                result_1 = NULL;
                        }
                        else {
                                for(j=0;j < row_num1;j++) {
                                    row1 = mysql_fetch_row( result_1);
                                    if( row1) {
                                                strcpy(tmp, row1[1]?row1[1]:"00000000000");
                                                ps_delSpace(tmp);
                                                strcpy(fromday, row1[2]?row1[2]:"0");
                                                ps_delSpace(fromday);
                                                strcpy(totoday, row1[3]?row1[3]:"0");
                                                ps_delSpace(totoday);
                                                strcpy(fromtime, row1[4]?row1[4]:"0");
                                                ps_delSpace(fromtime);
                                                strcpy(totime, row1[5]?row1[5]:"0");
                                                ps_delSpace(totime);
                                                strcpy(kind, row1[6]?row1[6]:"0");
                                                ps_delSpace(kind);
                                                strcpy(frommin, row1[7]?row1[7]:"0");
                                                ps_delSpace(frommin);
                                                strcpy(tomin, row1[8]?row1[8]:"0");
                                                ps_delSpace(tomin);

                                                intfromtime= atoi(fromtime);
                                                inttotime= atoi(totime);


                                                if(inttotime == 0 && intfromtime==0)
                                                        inttotime = 24;
                                                if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {                       
                                                        inttotime += 24;
                                                        if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
                                                                tp->tm_hour += 24;
                                                }
                                                 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
                                                        if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
                                                                if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
                                                                        forward_check = 1;
                                                                }
                                                        }
                                                        else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
                                                                if(atoi(frommin) <= tp->tm_min) {
                                                                        forward_check = 1;
                                                                }
                                                        }
                                                        else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
                                                                if(atoi(tomin) > tp->tm_min) {
                                                                        forward_check = 1;
                                                                }
                                                        }
                                                        else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                                                                forward_check = 1;
                                                        }
                                                        if(forward_check) {
                                                            if(strlen(tmp) == 4) {
                                                        
                                                                sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
                                                            }
                                                            else if(strlen(tmp) == 8) {
                                                                sprintf(fphone_id,"%s",tmp);
                                                            }
                                                            else if(strlen(tmp) > 8) {
                                                                sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
                                                            }
                                                                else {
                                                                        strcpy(kind,"X");
                                                                        strcpy(fphone_id,"");
                                                                }
                                                        }
                                                        else {
                                                                strcpy(kind,"X");
                                                                strcpy(fphone_id,"");
                                                        }
                                                }
                                                else {
                                                        strcpy(kind,"X");
                                                        strcpy(fphone_id,"");
                                                }
                                        }
                                        break;
                                }
                        }
                        mysql_free_result(result_1);
                        result_1 = NULL;
                        }
                }
                                        if(*fphone_id == '\0') {
                                                sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);
                                                if(datacount == 0) {
                                                                if(*fphone_id) {
                                                                                sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);                                                       
                                                                                datacount++;
                                                                }
                                                }               
                                                else {                  
                                                        if(*fphone_id)  
                                                                        sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
                                                }       
                                        }               
                                        else {                  
                                                if( datacount == 0) {
                                                        if(*kind == '0') {
                                                                if(*fphone_id) {
                                                                                sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);                                                   
                                                                                datacount++;
                                                                }
                                                        }
                                                        if(*kind == '3') {
                                                                if(*hunt_num && *fphone_id) {
                                                                                sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
                                                                                datacount++;
                                                                }
                                                                else if(*hunt_num) {
                                                                                sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);                            
                                                                                datacount++;
                                                                }
                                                                else if(*fphone_id) {
                                                                                sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
                                                                                datacount++;
                                                                }
                                                        }
                                                }
                                                else {
                                                        if(*kind == '0') {
                                                                if(*fphone_id)
                                                                                sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
                                                        }
                                                        if(*kind == '3') {

                                                                if(*hunt_num && *fphone_id) {
                                                                                sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
                                                                }
                                                                else if(*hunt_num) {
                                                                                sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
                                                                }
                                                                else if(*fphone_id)
                                                                                sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
                                                        }
                                                }
                                        } ///////                               
                                }                               
                                else {                          
                                        if(i == 0)                              
                                                sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
                                        else                                    
                                                sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
                                }                       
                        }                       
                }                               
                mysql_free_result(result);              
                result = NULL;                                  
                                                                                
                sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
        }                                               
        else if(*method == '4') {                       
                sprintf(sqlcmd, "select distinct number,seq from third_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and extension ='%s'",prefix,h_number,firstexten,secondexten,thirdexten);
                                                                                
printf("\nsqlcmd : (%s)",sqlcmd);
                                                                
                if( ret = mysql_query(mysql, sqlcmd) ) {        
                        sprintf(resPacket,"|RES|4|0|X|");                       
                        return 0;
                }                                               
                                                                
                result = mysql_store_result( mysql );                           
                if(!result ) {
                        sprintf(resPacket,"|RES|4|0|X|");
                        return 0;               
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|4|0|X|");
                        return 0;
                }

                sprintf(resPacket,"|RES|4|0|");
                for(j=0; j < 100; j++)
                        strcpy(numlist[j],"");

                for(i=0;i < row_num, i < 100;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        sprintf(numlist[i],"%8.8s",hunt_num);

                                }
                                printf("\n(numlist[i]:(%s)",numlist[i]);
                        }
                }
                mysql_free_result(result);
                result = NULL;
                
                srand(getpid()); 
                for(i=0;i < row_num;i++) {
                        randnum = rand()%row_num;
                        strcpy(tmpnum,numlist[i]);
                        strcpy(numlist[i],numlist[randnum]);
                        strcpy(numlist[randnum],tmpnum);

                        printf("\nrow_num:(%d),(%s)",i,numlist[i]);
                        if(i == 99)
                                break;
                }
                
                for(i=0;i < row_num;i++) {
                        if(strlen(numlist[i]) == 8)
                                sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
                }               
        }                       
        else if(*method == '5') {
                sprintf(sqlcmd, "select distinct number,seq from third_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and second_extension='%s' and  extension = '%s' order by lasttime ASC",prefix,h_number,firstexten,secondexten,thirdexten);
                                
printf("\nsqlcmd : (%s)",sqlcmd);
                                        
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }       
                
                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                sprintf(resPacket,"|RES|5|0|");
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        if( i == 0)
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        if(i == 0)
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                                        else 
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                        
                                }
                        }
                }
                mysql_free_result(result);
                result = NULL; 
        }               
        printf("\nresPacket:(%s)",resPacket);
        return 0;       
}                       

/***************************************************************************************/
/***************************************************************************************/
int
RemoteCall(ip,callerid,orgcallernum,phoneid,context,target,option3,par_domain)
char    *ip;
char    *callerid;
char    *orgcallernum;
char    *phoneid;
char    *context;
char    *target;
char    *option3;
char    *par_domain;
{       
        int     sockfd=-1,n;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[256];
        int     channelflag = 1,callflag=0;
        EVENT_STRUCT    data;
        long    dur_time=0L; 
                        

        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));
        memset(&data,0,sizeof(EVENT_STRUCT));


        strcpy(data.event,"Newchannel");

        sprintf(data.channel,"Local/%s@RemoteCall/n\r\n",orgcallernum);
        strcpy(data.callerid,callerid);


printf("\nRemotecall callerid:(%s),orgcallernum:(%s)",callerid,orgcallernum);
        //strcpy(data.exten,phoneid);
        strcpy(data.exten,target);
        //strcpy(data.context,"clickcall");
        strcpy(data.context,context);
        strcpy(data.serverip,ip);
        data.state = 0;
printf("\n2222222Remotecall connect to %s  ip:%s, callerid:(%s),orgcallernum:(%s)",MANAGER_SERVER,ip,callerid,orgcallernum);

        //sockfd = tcpConnect(ip, 5038);
        //sockfd = tcpConnect(MANAGER_SERVER, 110);
	sockfd = connectToManager(ip);

	if(sockfd < 0) {
		usleep(10000);
		sockfd = connectToManager(ip);
		if(sockfd < 0) {
printf("\nRemotecall connect Error %s  callerid:(%s),orgcallernum:(%s)",MANAGER_SERVER,callerid,orgcallernum);
                        sprintf(resPacket, "|ERR|Service Error!(%s-%s)",phoneid+3,target);
		return sockfd;
		}
	}
        
        memset(destP,0,sizeof(destP));
        sprintf(destP+strlen(destP),"Action: Originate\r\nActionID: %d\r\nWhere: MYSQLIF\r\n",getpid());
        sprintf(actionid,"%d",getpid());
        
        if(strlen(phoneid) < 8)
                //sprintf(destP,"Channel: SIP/1%s\r\n",target);
                sprintf(destP+strlen(destP),"Channel: Local/%s@RemoteCall/n\r\n",orgcallernum);
        else {
                sprintf(resPacket, "|ERR|Phone ID Error(%s-%s)",phoneid,target);
                return -1;
        }       
        sprintf(destP+strlen(destP),"CallerID: %s\r\n",callerid);
        sprintf(destP+strlen(destP),"CallerIDNAME: %s\r\n",callerid);
        sprintf(destP+strlen(destP),"Exten: %s\r\n",target);
        sprintf(destP+strlen(destP),"Context: %s\r\n",context);
        sprintf(destP+strlen(destP),"Priority: 1\r\n");
        sprintf(destP+strlen(destP),"Variable: __DOMAIN=%s\r\n",par_domain);
        sprintf(destP+strlen(destP),"Variable: __PHONEID=1%s\r\n",phoneid);
        sprintf(destP+strlen(destP),"Variable: __NUM070=%s\r\n",callerid);
        sprintf(destP+strlen(destP),"Variable: __RRWAIT=10\r\n");
        sprintf(destP+strlen(destP),"Variable: PREFIX=%3.3s\r\n",phoneid);
        sprintf(destP+strlen(destP),"Async: yes\r\n\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        dur_time = time(0);
        alarm(60);
        while((n=readline(sockfd, destP, 1024))) {

                alarm(0);
                if(n < 0) {
                        close(sockfd);
                        sprintf(resPacket, "|ERR|Data read Error!(%s-%s)",phoneid+3,target);
                        return -1;
                }

                if(!strncasecmp(destP,"server: ",strlen("server: "))) {
                        strcpy(data.serverip,destP+strlen("server: "));
                        if(strncasecmp(data.serverip,ip,strlen(ip))) {
                                memset(&data,0,sizeof(EVENT_STRUCT));
                        }
                }

        printf("\n[5mreadline:(%s)[0m",destP);
                if(!strncasecmp(destP,"event: ",strlen("event: "))) {
                        strcpy(data.event,destP+strlen("event: "));
                        printf("\ndata.event:([5m%s[0m)",data.event);
                        if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess"))) {
                                data.state = 1;
                                channelflag = 2;
                        }
                        printf("\nstate(%d):::::(((%s)))((%s)",data.state,data.event,destP);
                        if(!strncasecmp(data.event,"newchannel",strlen("newchannel"))) {
        
                        }

                        printf("\ndata.event:([5m%s[0m)",data.event);
                }
        
                if(!strncasecmp(destP,"channel: ",strlen("channel: "))) {
                        if(!strncasecmp(data.event,"newchannel",strlen("newchannel")))
                                strcpy(data.channel,destP+strlen("channel: "));
                }       
                        
                sprintf(actionid,"%d",getpid());
                if(!strncasecmp(destP,"actionid: ",strlen("actionid: "))) {
                        strcpy(data.actionid,destP+strlen("actionid: "));
                        printf("\n=========>data.event:([7m%s[0m)data.actionId:(%s),actionId:(%s)",data.event,data.actionid,actionid);                 
                        if(strncasecmp(data.actionid,actionid,strlen(actionid))) {
                                if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess")) || !strcasecmp(data.event,"originatefailure",strlen("originatefailure")))  {
                
                                        strcpy(data.event,"");
                                        printf("\n[5mEVENT_STRUCT Cleared!!!!![0m");
                                }
                                printf("\n!!!stranged!!!");
                                printf("\n!!!stranged!!!");

                        }
                        else {
                                if(!strncasecmp(data.event,"OriginateSuccess",strlen("OriginateSuccess"))) {
                                        callflag = 1;
                                        break;
                                }
                                if(!strncasecmp(data.event,"originatefailure",strlen("originatefailure")))
                                {
                                        callflag = -1;
                                        break;
                                }

                        printf("[7m(%s)[0m\n",data.event);
                        printf("[7m(%s)[0m\n",data.event);
                        printf("[7m(%s)[0m\n",data.event);


                        }
                }
                if(!strncmp(destP,"Message: ",strlen("message: "))) {

                        if(!strncmp(destP,"Originate success",strlen("Originate success"))) {
                                        callflag = 1;
                                        break;
                        }else{
                                        callflag = -1;
                                        break;
                        }

                }               

                if(!strcmp(destP,"\n") || !strcmp(destP,"\r\n")) {
                        memset(&data,0,sizeof(EVENT_STRUCT));
                        printf("\n[5mEVENT_STRUCT Cleared!!!!![0m");
                }                       
                printf(">>:%s",destP);  
                alarm(60*2);    
        }                       
        alarm(0);               
                                        
                                        
        strcpy(destP,"Action: Logoff\r\n\r\n");
        write(sockfd, destP, strlen(destP));
        close(sockfd);  
                        
        if(callflag == 0) {
                if(!strncasecmp(data.event,"link",strlen("link")))
                        callflag = 1;
                else    
                        callflag = -1;
        }       

printf("\n[5mRemoteCall callflag=%d !!!!![0m",callflag);
        return callflag;                
}


/*************************************************************************
* Click Call요청
|CCC|07086119501@test28.net|001|002|clickcall|07086119501
*************************************************************************/
int
procAAA()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid,outboundcall=0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0, match=0;
  char tmp[100],dest[30],target[30],callerid[30],inner_num[5],tmpinner_num[12],context[30];
  unsigned int  tmpNumber;
  int   intfromtime=0,inttotime=0;
  char    sqlcmd[512],servername[60],forbiden_call[11];
  char  fromtime[11],totime[11],tempinner_num[20],orgcallernum[20];
  char  forbid_prefix[256],option3[11],auth_num[20];
  char  *tmpP;
struct  tm      *tp;
time_t  t;


        memset(fromtime,0,sizeof(fromtime));
        memset(totime,0,sizeof(totime));
        memset(forbiden_call,0,sizeof(forbiden_call));

        memset(callerid,0,sizeof(callerid));
        memset(email,0,sizeof(email));
        memset(option3,0,sizeof(option3));
        memset(passwd,0,sizeof(passwd));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(tmpinner_num,0,sizeof(tmpinner_num));
        memset(orgcallernum,0,sizeof(orgcallernum)); 
        memset(auth_num,0,sizeof(auth_num)); 
/****
        if (isMailList(argv[1])         
                return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
        t=time(0);
        tp = (struct tm *) localtime(&t);
  
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);
  
        if(argv[2] && *argv[2]) 
                strcpy(dest,argv[2]);
        else {
                sprintf(resPacket, "|ERR|AAA|%s@%s|",user,domain);
                return -1;
        }
        if(argv[3] && *argv[3]) 
                strcpy(auth_num,argv[3]);
        else {
                sprintf(resPacket, "|ERR|AAA|%s@%s|",user,domain);
                return -1;
        }


/***
        if(argv[3] && *argv[3])
                strcpy(callerid,argv[3]);
        else
                strcpy(callerid,"");
*/

        sprintf(sqlcmd, "select phoneid,070number,defaultip from number_manage where (070number = '%s' or org_num = '%s')",dest,dest);

        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                logCmd();
                return(-1);
        }

        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
                result = NULL;
                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                logCmd();
                return -1;
        }       

        row = mysql_fetch_row( result );
        if( row) {
                strcpy(phoneid, row[0]?row[0]:"0");
printf("\nphoneid:(%s)",phoneid);
                ps_delSpace(phoneid);

		strcpy(inner_num,phoneid+4);

		strcpy(callerid, row[1]?row[1]:"07000000000");
                ps_delSpace(callerid);
                strcpy(serverip, row[2]?row[2]:"127.0.0.1");
                ps_delSpace(serverip);
        }       
                
        mysql_free_result(result);
        result = NULL;
        
/***    
        if(strcmp(phoneid+4,inner_num) && strlen(inner_num) == 4)
                strcpy(phoneid+4, inner_num);
*/              
	sprintf(target,"%s",phoneid+4);
                outboundcall = 0;

	printf("\ntarget : (%s)",target);

	strcpy(context,"clickcall");
                        
printf("\ncallerid:([%s])",callerid);
                
                
if(PVS == 0)  {         
    if(!strcmp(context,"RemoteCall") && strlen(orgcallernum) > 8){
           if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }           
            else  {
                sprintf(resPacket, "|RES|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }       
printf("\nis remote Call callerid:([%s]==> ret:%d)",callerid,ret);
     }else{                     
           if((ret = clickCall("127.0.0.1",callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,auth_num)) < 0) {
                        sprintf(resPacket, "|ERR|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }   
            else  {
                sprintf(resPacket, "|RES|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
     }
            tcpWrite(masterFd, resPacket, strlen(resPacket));
}                       
else {          
    if(!strcmp(context,"RemoteCall") && strlen(orgcallernum) > 8){
printf("\n      not pvs is remote Call callerid:([%s])",callerid);
           //if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0)
           if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0)
                {
                        sprintf(resPacket, "|ERR|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }
            else  {
                sprintf(resPacket, "|RES|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
printf("\n&&&&&&&&&&&&&7is remote Call callerid:([%s]==> ret:%d)",callerid,ret);
    }else{
           if((ret = clickCall(serverip,callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,auth_num)) < 0) {
                        sprintf(resPacket, "|ERR|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }
            else  {
                sprintf(resPacket, "|RES|AAA|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
    }
        mysql_close(mysql_1);
        mysql_1 = NULL;
            tcpWrite(masterFd, resPacket, strlen(resPacket));
}
return 0;

}


/*************************************************************************
* Click Call요청
|CCC|07086119501@test28.net|001|002|clickcall|07086119501
*************************************************************************/
int
procCCC()
{
  char passwd[256];
  int   qid,returncode,fields_num,cpid,outboundcall=0;
  int   test=0, ret, row_num=0,sqlcnt=0,i=0,rand=0, match=0;
  char tmp[100],dest[30],target[30],callerid[30],inner_num[5],tmpinner_num[12],context[30];
  unsigned int  tmpNumber;
  int   intfromtime=0,inttotime=0;
  char    sqlcmd[512],servername[60],forbiden_call[11];
  char  fromtime[11],totime[11],tempinner_num[20],orgcallernum[20];
  char  forbid_prefix[256],option3[11];
  char  *tmpP;
struct  tm      *tp;
time_t  t;


        memset(fromtime,0,sizeof(fromtime));
        memset(totime,0,sizeof(totime));
        memset(forbiden_call,0,sizeof(forbiden_call));

        memset(callerid,0,sizeof(callerid));
        memset(email,0,sizeof(email));
        memset(option3,0,sizeof(option3));
        memset(passwd,0,sizeof(passwd));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(tmpinner_num,0,sizeof(tmpinner_num));
        memset(orgcallernum,0,sizeof(orgcallernum)); 
/****
        if (isMailList(argv[1])         
                return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
        t=time(0);
        tp = (struct tm *) localtime(&t);
  
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);
  
        if(argv[2] && *argv[2]) 
                strcpy(dest,argv[2]);
        else {
                sprintf(resPacket, "|ERR|CCC|%s@%s|",user,domain);
                return -1;
        }

/***
        if(argv[3] && *argv[3])
                strcpy(callerid,argv[3]);
        else
                strcpy(callerid,"");
*/
        
        if(argv[3] && *argv[3]) 
                strcpy(tempinner_num,argv[3]);
        else 
                strcpy(tempinner_num,"");

        if(strlen(tempinner_num) > 4)
                strcpy(inner_num,tempinner_num+(strlen(tempinner_num)-4));
        else if(strlen(tempinner_num) == 4)
                strcpy(inner_num,tempinner_num);
        else if(strlen(tempinner_num) == 3)
                sprintf(inner_num,"0%s",tempinner_num);
        else  {
                sprintf(resPacket, "|ERR|CCC|%s@%s|",user,domain);
                return -1;
        }

        if(argv[4] && *argv[4])
                strcpy(context,argv[4]);
        else
                strcpy(context,"clickcall");

        if(argv[5] && *argv[5])
                strcpy(orgcallernum,argv[5]);
        else
                strcpy(orgcallernum,"-");

        if(PVS == 1) {
                if(customInfo(domain) < 0)
                        return -1;

                sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
printf("\nphoneid:(%s)",phoneid);
        }
        else  {
                if(!mysql_1)
                        sqlinit_1(LOCAL_SERVER);

                sprintf(sqlcmd, "select proxyip,prefix from custom_info where domain = '%s'",domain);
                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql_1)
				mysql_close(mysql_1);
                        sqlinit_1(LOCAL_SERVER);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }   
                
                result = mysql_store_result( mysql_1);
                if(!result) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,inner_num,domain);
                        tcpWrite(masterFd, resPacket);
                }
                                
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,inner_num,domain);
                        tcpWrite(masterFd, resPacket);
                } 
                
                row = mysql_fetch_row( result );
                if(row) {
                        strcpy(serverip, row[0]?row[0]:"1");
                        ps_delSpace(serverip);
                        strcpy(prefix, row[1]?row[1]:"001");
                        ps_delSpace(prefix);
                }
                mysql_free_result(result);
                result = NULL;

                sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);
        }

        printf("\nproxyip : (%s)",serverip);

        sprintf(sqlcmd, "select phoneid,070number,forbiden_call,fromtime,totime from number_manage where phoneid = '0%7.7s' and defaultip = '%s'",phoneid+1,serverip);

        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                logCmd();
                return(-1);
        }

        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
                result = NULL;
                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                logCmd();
                return -1;
        }       

        row = mysql_fetch_row( result );
        if( row) {
                strcpy(phoneid, row[0]?row[0]:"0");
printf("\nphoneid:(%s)",phoneid);
                ps_delSpace(phoneid);
                if(strlen(inner_num) != 4)
                        strcpy(inner_num,phoneid+4);

                if(strlen(callerid) < 11)
                        strcpy(callerid, row[1]?row[1]:"07000000000");
                
                ps_delSpace(callerid);
                strcpy(forbiden_call, row[2]?row[2]:"YYYYYYYY");
                ps_delSpace(forbiden_call);
                strcpy(fromtime, row[3]?row[3]:"YYYYYYYY");
                ps_delSpace(fromtime);
                strcpy(totime, row[4]?row[4]:"YYYYYYYY");
                ps_delSpace(totime);
        }       
                
        mysql_free_result(result);
        result = NULL;
        
/***    
        if(strcmp(phoneid+4,inner_num) && strlen(inner_num) == 4)
                strcpy(phoneid+4, inner_num);
*/              
        if(strlen(dest) == 3 || strlen(dest) == 4 || strlen(dest) == 8) {
                outboundcall = 0;
                //sprintf(target,"%3.3s%s",phoneid+1,dest);
                sprintf(target,"%s",dest);
        }
        else {
                outboundcall = 1;
                sprintf(target,"%s",dest);
                if(strlen(target) < 9) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                        return -1;
                }
        }

        if(outboundcall) {
                sprintf(sqlcmd, "select forbid_prefix from number_list where number = '%s'",callerid);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        ;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }
                else {
                        row_num = mysql_num_rows(result);
                        if( row_num != 0 ) {
                                row = mysql_fetch_row( result );
                                if( row) {
                                        strcpy(forbid_prefix, row[0]?row[0]:"0");
                                        ps_delSpace(forbid_prefix);
                                }
                        }
                        mysql_free_result(result);
                        result = NULL;
                }
                
                
                if(*forbid_prefix) {
                        tmpP = (char *)strtok(forbid_prefix,",");
                        if(!strncmp(tmpP,target,strlen(tmpP))) {
                                match = 1;
                        }
                        if(match != 1) {
                                while(tmpP = (char *)strtok(NULL,",")) {
                                        if(!strncmp(tmpP,target,strlen(tmpP))) {
                                                match = 1;
                                                break; 
                                        }
                                }
                        }
                }
                
                if(match == 1) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                        return -1;
                }       
/*****                  
        strcpy(phoneid, row[0]?row[0]:"0");
        ps_delSpace(phoneid);   
        if(strlen(callerid) < 11)       
        strcpy(callerid, row[1]?row[1]:"07000000000");
        ps_delSpace(callerid);
        strcpy(forbiden_call, row[2]?row[2]:"YYYYYYYY");
        ps_delSpace(forbiden_call);
        strcpy(fromtime, row[3]?row[3]:"YYYYYYYY");
        ps_delSpace(fromtime);
        strcpy(totime, row[4]?row[4]:"YYYYYYYY");
        ps_delSpace(totime);
*/


               sprintf(sqlcmd, "select phoneid,forbiden_call,fromtime,totime,option3 from number_manage where phoneid= '0%7.7s' and domain = '%s'",phoneid + 1,domain);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                       ;
                }


                result = mysql_store_result( mysql );
                if(!result ) {
                        ;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(phoneid, row[0]?row[0]:"0");
                        ps_delSpace(phoneid);
                        strcpy(forbiden_call, row[1]?row[1]:"0");
                        ps_delSpace(forbiden_call);
                        strcpy(fromtime, row[2]?row[2]:"0");
                        ps_delSpace(fromtime);
                        strcpy(totime, row[3]?row[3]:"0");
                        ps_delSpace(totime);
                        strcpy(option3, row[4]?row[4]:"0");
                        ps_delSpace(option3);
                }
                mysql_free_result(result);
                result = NULL;

                
                intfromtime= atoi(fromtime);
                inttotime= atoi(totime);

                if(intfromtime == 0 && inttotime == 0)
                        inttotime = 24;
                
                if(inttotime < intfromtime) {
                        inttotime+=24;
                        if(tp->tm_hour < inttotime && tp->tm_hour < intfromtime)
                                tp->tm_hour += 24;
                }
printf("\n[7m===>(%s)--->(%s)[0m",phoneid,forbiden_call);
                        
                if(inttotime == 0 && intfromtime==0);
                else {
                
                if(forbiden_call[0] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                        return -1;
                }
                else if(forbiden_call[2] == 'N' && tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(target,"010",3) || !strncmp(target,"011",3) || !strncmp(target,"017",3) || !strncmp(target,"018",3) || !strncmp(target,"016",3) || !strncmp(target,"019",3)) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                        return -1;
                        }
                }
                else if(forbiden_call[3] == 'N' && tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(!strncmp(target,"001",3) || !strncmp(target,"002",3)  || !strncmp(target,"006",3) || !strncmp(target,"00700",5) || !strncmp(target,"005",3) || !strncmp(target,"00777",5)) {
                                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                                return -1;
                        }
                }
                else if(forbiden_call[1] == 'N' &&  tp->tm_hour >= intfromtime && tp->tm_hour < inttotime) {
                        if(strlen(target) > 4 && (strncmp(target,"070",3) && strncmp(target,"010",3) && strncmp(target,"011",3) && strncmp(target,"017",3) && strncmp(target,"018",3) && strncmp(target,"016",3) && strncmp(target,"019",3) && strncmp(target,"001",3) && strncmp(target,"002",3) && strncmp(target,"006",3)  && strncmp(target,"00700",5) && strncmp(target,"005",3) && strncmp(target,"008",3) && strncmp(target,"00777",5)))
                                sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                                return -1;
                        }
                }
        }
printf("\n[7m===>(%s)--->(%s)[0m",phoneid,inner_num);

printf("\ntarget : (%s)",target);
printf("\ntarget : (%s)",target);
                        
printf("\ncallerid:([%s])",callerid);
                
                
if(PVS == 0)  {         
    if(!strcmp(context,"RemoteCall") && strlen(orgcallernum) > 8){
           if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }           
            else  {
                sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }       
printf("\nis remote Call callerid:([%s]==> ret:%d)",callerid,ret);
     }else{                     
           if((ret = clickCall("127.0.0.1",callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,NULL)) < 0) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }   
            else  {
                sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
     }
            tcpWrite(masterFd, resPacket, strlen(resPacket));
                                
                                
}                       
else {          
    if(!strcmp(context,"RemoteCall") && strlen(orgcallernum) > 8){
printf("\n      not pvs is remote Call callerid:([%s])",callerid);
           //if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0)
           if((ret = RemoteCall(serverip,callerid,orgcallernum,phoneid+1,context,target,option3,domain)) < 0)
                {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }
            else  {
                sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
printf("\n&&&&&&&&&&&&&7is remote Call callerid:([%s]==> ret:%d)",callerid,ret);
    }else{
           if((ret = clickCall(serverip,callerid,"Centrex",phoneid+1,"outbound",target,option3,domain,NULL)) < 0) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
            }
            else  {
                sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                }
    }
        mysql_close(mysql_1);
        mysql_1 = NULL;
            tcpWrite(masterFd, resPacket, strlen(resPacket));
}
return 0;


/***
|CCC|dacom4753@gw.iyouone.com|7320|7321|clickcall|
*/
        sprintf(commandBuf,"|CCC|%s@%s|%s|%s|clickcall|",user,domain,dest,tempinner_num,phoneid);

        printf("\ncommandBuf:(%s)",commandBuf);
        if(PVS == 1 && MASTER == 1) {
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {       
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {       
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }   
    
                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                    tcpWrite(masterFd, resPacket, strlen(resPacket));
                        logCmd();
                    return 0;
                }
        
                      
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                    tcpWrite(masterFd, resPacket, strlen(resPacket));
                        logCmd();
                        return 0;
                }

                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if(row) 
                        {
                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                ps_delSpace(serverip);
                                ps_delSpace(row[1]);
                        }
printf("\nserverip:(%s)",serverip);
                        if(*serverip && strlen(serverip) > 10) {
                                mysql_free_result(result);
                                result = NULL;
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                        sprintf(resPacket, "|ERR|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
                                        tcpWrite(masterFd, resPacket, strlen(resPacket));
                                }
                        }
                        /*** A￢¸?CallAº μI¼­¹o Aß 1´e¿¡¼­¸¸ ¼oCaμC¸e μE ***/
                        break;
                }
                mysql_free_result(result);
                result = NULL;
        }

        sprintf(resPacket, "|RES|CCC|%s@%s|%s|%s|",user,domain,phoneid,serverip);
        tcpWrite(masterFd, resPacket, strlen(resPacket));
        return 0;
    /*** AA´a °a°u¸| º¸³≫Ao ¾EA½ ***/

}


/*************************************************************************************************/
/*************************************************************************************************/
int
procOF3()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,off=0;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2], today[15];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	conn_method[10],forward_num[20];
  char	tmpDay1[9], tmpDay2[9];
	char	option7[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	break_include[10];
  char	colorclass[20];
  char	extension[4];

	int	intfromtime=0,inttotime=0;
	int	intfrommin=0,inttomin=0;
	int	intsafromtime=0,intsatotime=0;
	int	intsafrommin=0,intsatomin=0;
	int	intsunfrommin=0,intsuntomin=0;
	int	intsunfromtime=0,intsuntotime=0;
	int	intbreakfrommin=0,intbreaktomin=0;
	int	intbreakfromtime=0,intbreaktotime=0;
	int	mm,dd;
struct  tm      *tp;
long	t;


       t=time(0);
       tp = (struct tm *) localtime(&t);

	mm  = tp->tm_mon+1; dd  = tp->tm_mday;

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(today,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(option7,0,sizeof(option7)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(colorclass,0,sizeof(colorclass));
	memset(extension,0,sizeof(extension));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(option7,argv[3]);
	if(argv[5] && *argv[5])
		strcpy(extension,argv[5]);
	else
		strcpy(extension,"-");

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%s%s",prefix,"0000");
	}

tmm_currDate(YYYYMMDDHHMMSS,today);
sprintf(tmp,"%4.4s%2.2s%2.2s",today,today+4,today+6);


    sprintf(sqlcmd, "select domain from off_day where domain='%s' and off_day = '%s'",domain,tmp);
    if( ret = mysql_query(mysql, sqlcmd) ) {
            sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
            //_tcpWrite(masterFd, resPacket, strlen(resPacket));
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
    }
	else {
		result = mysql_store_result( mysql );
		if(!result ) {
			return -1;
		}
		else {
				row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;

				if(row_num > 0) {
					off = 1;
				}
		}
	}
	
/******
	if(*option7 == 'Y')
		sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,colorclass from hunting_group where domain='%s' and number='%s' and extension <> '-'",domain,outer_num);
	else 
*****/
	if(*option7 == 'Y')
		sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,colorclass from hunting_group where domain='%s' and number='%s' and myextension = '%s' and extension <> '-'",domain,outer_num,extension);
	else
		sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,colorclass from hunting_group where domain='%s' and number='%s' and myextension = '%s' and extension = '-'",domain,outer_num,extension);


        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   
	printf("\nsqlcmd:(%s)",sqlcmd);

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
				result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        

	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(fromtime, row[0]?row[0]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[1]?row[1]:"0");
				ps_delSpace(totime);
				strcpy(frommin, row[2]?row[2]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[3]?row[3]:"0");
				ps_delSpace(tomin);
				strcpy(conn_method, row[4]?row[4]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[5]?row[5]:"0");
				ps_delSpace(conn_method);

				strcpy(safromtime, row[6]?row[6]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[7]?row[7]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[8]?row[8]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[9]?row[9]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[10]?row[10]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[11]?row[11]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[12]?row[12]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[13]?row[13]:"0");
				ps_delSpace(suntomin);

				strcpy(breakfromtime, row[14]?row[14]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[15]?row[15]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[16]?row[16]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[17]?row[17]:"0");
				ps_delSpace(breaktomin);
				strcpy(break_include, row[18]?row[18]:"3");
				ps_delSpace(break_include);
				strcpy(colorclass, row[19]?row[19]:"");
				ps_delSpace(colorclass);
		}
		break;
	}
	mysql_free_result(result);
	result = NULL;

	intfromtime= atoi(fromtime);
	inttotime= atoi(totime);
	intfrommin= atoi(frommin);
	inttomin= atoi(tomin);

	intsafromtime= atoi(safromtime);
	intsatotime= atoi(satotime);
	intsafrommin= atoi(safrommin);
	intsatomin= atoi(satomin);

	intsunfromtime= atoi(sunfromtime);
	intsuntotime= atoi(suntotime);
	intsunfrommin= atoi(sunfrommin);
	intsuntomin= atoi(suntomin);

	intbreakfromtime= atoi(breakfromtime);
	intbreaktotime= atoi(breaktotime);
	intbreakfrommin= atoi(breakfrommin);
	intbreaktomin= atoi(breaktomin);

	printf("\nintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)",intfromtime,inttotime,intfrommin,inttomin);
	if(strlen(forward_num) > 8) {
		row_num = 0;
		if(!strncmp(forward_num,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(forward_num,"");
	}


	/*** off,break ***/
	printf("\nintbreaktime:(%d),intbreaktime:(%d),intbreakmin:(%d),intbreakmin:(%d)",intbreakfromtime,intbreaktotime,intbreakfrommin,intbreaktomin);
	printf("\ntw_wday:(%d),tm_hour:(%d),tm_min:(%d),break_include:(%d)",tp->tm_wday,tp->tm_hour,tp->tm_min,break_include);

	if(strlen(forward_num) == 3)
		sprintf(forward_num,"0%s",forward_num);

	if(tp->tm_wday == 0 && intsunfromtime == 0  && intsuntotime== 0) {
		if(off == 1) {
			sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		else {
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}

			if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
				else
					sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

			}
			else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
				else
					sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
			else
					sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		}
	}
	else if(tp->tm_wday == 6 && intsafromtime == 0  && intsatotime== 0) {
		if(off == 1) {
			sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		else {

			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
				else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		}
	}
	else if(tp->tm_wday != 0 && tp->tm_wday !=6 && intfromtime == 0 && inttotime== 0) {
		if(off == 1) {
				sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
				return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		else {
			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
				else
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
		}
	}
	else {
			if(off == 1) {
					sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
					return 0;
			}
			if(tp->tm_wday == 0) {
SUN:
				if(intsuntotime < intsunfromtime) {
					intsuntotime += 24;
					if(tp->tm_hour < intsuntotime && tp->tm_hour < intsunfromtime)
						tp->tm_hour += 24;
				}
				if(tp->tm_hour >= intsunfromtime && tp->tm_hour <= intsuntotime) {
					if(tp->tm_hour == intsunfromtime) {
						if(tp->tm_min >= intsunfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}
					}
					else if(tp->tm_hour == intsuntotime) {
						if(tp->tm_min < intsuntomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
							else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					}
				}

			}
			else if(tp->tm_wday == 6) {
SAT:
				if(intsatotime < intsafromtime) {
					intsatotime += 24;
					if(tp->tm_hour < intsatotime && tp->tm_hour < intsafromtime)
						tp->tm_hour += 24;
				}

				if(tp->tm_hour >= intsafromtime && tp->tm_hour <= intsatotime) {
					if(tp->tm_hour == intsafromtime) {
						if(tp->tm_min >= intsafrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}
					}
					else if(tp->tm_hour == intsatotime) {
						if(tp->tm_min < intsatomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
							else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					}
				}

			}
			else {
OTHER:
				if((inttotime < intfromtime) || (inttotime == intfromtime && intfrommin > inttomin)) {
					inttotime += 24;
					if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
						tp->tm_hour += 24;
				}
	printf("\n[5mintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)[0m",intfromtime,inttotime,intfrommin,inttomin);
				if(tp->tm_hour >= intfromtime && tp->tm_hour <= inttotime) {
					if(tp->tm_hour == intfromtime) {
						if(tp->tm_min >= intfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}
					}
					else if(tp->tm_hour == inttotime) {
						if(tp->tm_min < inttomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
						else {
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							else {
								tp = (struct tm *) localtime(&t);
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
										else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
									else
											sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);



								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
						}

					}
					else  {
						sprintf(resPacket,"|RES|1|%s|%s|%s||%s|",outer_num,conn_method,forward_num,colorclass);
					}
				}
				else {
					 tp = (struct tm *) localtime(&t);
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					else {
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
								else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|%s|",outer_num,conn_method,forward_num,colorclass);
							else
									sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);



						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||%s|",outer_num,colorclass);
					}
				}

			}
	}
	
    return 0;       
}


/*************************************************************************
*ARS TREE(third) 
*************************************************************************/
int
procITS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0, size=0;
  char tmp[100],today[20],groupname[64];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char  number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char  method[5],extension[10], first_extension[10],second_extension[10],third_extension[4];
  char  type[11],arsflag[10];
        unsigned char   *tmpP=NULL;
        
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code)); 
        memset(name,0,sizeof(name));
        memset(seq,0,sizeof(seq));
        memset(extension,0,sizeof(extension));
        memset(first_extension,0,sizeof(first_extension));
        memset(second_extension,0,sizeof(second_extension));
        memset(third_extension,0,sizeof(third_extension));
        memset(arsflag,0,sizeof(arsflag));
/****
if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);


    if(argv[2]&& *argv[2])
        strcpy(h_number,argv[2]);
    else
        strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
        strcpy(first_extension,argv[3]);
    else
        strcpy(first_extension,"0");

    if(argv[4] && strlen(argv[4])>2){
        strncpy(second_extension,&argv[4][1],1);
        strncpy(third_extension,&argv[4][2],1);
    }else if(argv[4] && strlen(argv[4])>1){
        strncpy(second_extension,&argv[4][0],1);
        strncpy(third_extension,&argv[4][1],1);
    }else if(argv[4] && strlen(argv[4])>0){
        strncpy(second_extension,&argv[4][0],1);
        strcpy(third_extension,"");
    }else {
	sprintf(resPacket, "|ERR|Input Data!!!");
	return -1;
    }

    if(argv[5]&& *argv[5])
        strcpy(groupname,argv[5]);
    else 
        strcpy(groupname,"-");
        
    if(argv[6]&& *argv[6])
        strcpy(method,argv[6]);
    else 
        strcpy(method,"0");
    
    if(argv[7]&& *argv[7])
                snprintf(number,sizeof(number),"%s",argv[7]);
    else 
        strcpy(number,"");
    
        
    if(PVS == 1) {
                if(customInfo(domain) < 0)
                        return -1;
                }
    
                if(*groupname == '\0') {
                        sprintf(tmp,"%s_%s",h_number,extension);
                        tmpP= __base64_encode((unsigned char *)tmp, strlen(tmp), &size);
                        if(tmpP) {
                                        strcpy(groupname,tmpP);
                                        free(tmpP);
                        }
                }
    

                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"delete from third_ars where \
                domain='%s' and h_number='%s' and first_extension = '%s' and second_extension='%s' and extension = '%s'",domain,h_number,first_extension,second_extension,third_extension);
                }

                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"insert into third_ars(domain,name,h_number,first_extension,second_extension,extension,method,number) values \
                ('%s','%s','%s','%s','%s','%s','%s','%s')",domain,groupname,h_number,first_extension,second_extension,third_extension,method,number);
                }

                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }

                if(PVS == 1 && MASTER == 1)
                {
                                   sprintf(commandBuf,"|ITS|%s@%s|%s|%s|%s%s%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension,groupname,method,number,prefix,serverip); 
                                sprintf(resPacket,"|RES|IAS userid:(%s)-(%s)-(%s)-(%s%s)-(%s)",user,domain,h_number,second_extension,third_extension,method);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
                                                mysql_query(mysql, sqlcmd);
                        
                                        }
                                }
                
                                   sprintf(commandBuf,"|ITS|%s@%s|%s|%s|%s%s%s|%s|%s|%s|%s|%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension,groupname,method,number,prefix,serverip); 
                                sprintf(resPacket,"|RES|ITS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,third_extension,method);               

                                /****Aß°¡ ***/
                                //sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);             
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );          
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }

                                result = mysql_store_result( mysql );
                                if(!result ) {
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
                                        logCmd();
                                        exit(0);
                                }

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);                        
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'ITS')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }       
                                mysql_free_result(result);
                                result = NULL;
            sprintf(resPacket,"|RES|IAR userid:(%s)-(%s)-(%s)",user,domain,number);
            return 0;
        }                       
        else {                  
            sprintf(resPacket,"|RES|ITS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,third_extension,method);
            return 0;                   
        }                               
}                               


/*************************************************************************
*ARS TREE(3 단계 delete  
*************************************************************************/
int
procDTS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10], first_extension[10];
  char	type[11],arsflag[10],second_extension[4],third_extension[4];;
	int thirdDel=0;

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(second_extension,0,sizeof(second_extension)); 
	memset(third_extension,0,sizeof(third_extension)); 
	memset(extension,0,sizeof(extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
        strcpy(first_extension,argv[3]);
    else
        strcpy(first_extension,"");
        
    if(argv[4] && strlen(argv[4])>2){
//        strncpy(first_extension,&argv[4][0],1);
        strncpy(second_extension,&argv[4][1],1);
        strncpy(third_extension,&argv[4][2],1);
    }else if(argv[4] && strlen(argv[4])>1){
        strncpy(second_extension,&argv[4][0],1);
        strncpy(third_extension,&argv[4][1],1);
    }else if(argv[4] && strlen(argv[4])>0){
        strncpy(second_extension,&argv[4][0],1);
        strcpy(third_extension,"");
    }else {
        sprintf(resPacket, "|ERR|Input Data!!!");
        return -1;
    }

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}
/*******		
		sprintf(sqlcmd,"delete from third_ars where \
		domain='%s' and h_number='%s' and first_extension = '%s' and extension = '%s' and second_extension = '%s'",domain,h_number,first_extension,third_extension,second_extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}
********/
printf("***** %s/%s   ===> %s/%s/%s ***\n",domain,h_number,first_extension,second_extension,third_extension);
                sprintf(sqlcmd,"delete from hunting_group where \
                domain='%s' and number='%s' and extension ='%s%s'",domain,h_number,first_extension,second_extension);
                if(third_extension && strlen(third_extension) > 0){
               	sprintf(sqlcmd,"delete from hunting_group where \
                domain='%s' and number='%s' and  extension = '%s%s%s'",domain,h_number,first_extension,second_extension,third_extension);
                }
                if(!strcmp(third_extension,"X")){
thirdDel=1;
                        sprintf(sqlcmd,"delete from hunting_group where \
                        domain='%s' and number='%s' and extension like '%s%s%%'",domain,h_number,first_extension,second_extension);
			strcpy(third_extension,"");
                }
printf("****** DTS sqlcmd=%s\n",sqlcmd);

                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }

                sprintf(sqlcmd,"delete from sub_ars_member where h_number='%s' and first_extension = '%s' and extension = '%s' ",h_number,first_extension,second_extension);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"delete from third_ars_member where \
                h_number='%s' and first_extension = '%s' and second_extension='%s' and extension = '%s'",h_number,first_extension,second_extension,third_extension);
                }else{
                        if( mysql_query(mysql, sqlcmd)) {
                                sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                                return -1;
                        }
                        sprintf(sqlcmd,"delete from sub_ars_member where  h_number='%s' and first_extension = '%s' and extension = '%s'",h_number,first_extension,second_extension);

                }

                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }

                sprintf(sqlcmd,"delete from third_ars where h_number='%s' and first_extension = '%s' and second_extension = '%s' ",h_number,first_extension,second_extension);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"delete from third_ars where \
                domain='%s' and h_number='%s' and first_extension = '%s' and second_extension='%s' and extension = '%s'",domain,h_number,first_extension,second_extension,third_extension);
                }else{
                        if( mysql_query(mysql, sqlcmd)) {
                                sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                                logCmd();
                                return -1;
                        }
                        sprintf(sqlcmd,"delete from sub_ars where  h_number='%s' and first_extension = '%s' and extension = '%s'",h_number,first_extension,second_extension);
                }

                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }


		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|DTS|%s@%s|%s|%s|%s%s%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension);
				if(thirdDel==1){
					sprintf(commandBuf,"|DTS|%s@%s|%s|%s|%s%s%sX|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension);
				}
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DTS')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|DTS|%s@%s|%s|%s|%s%s%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension);
				if(thirdDel==1){
					sprintf(commandBuf,"|DTS|%s@%s|%s|%s|%s%s%sX|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension);
				}
				sprintf(resPacket,"|RES|DTS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,third_extension,second_extension);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DTS')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
		sprintf(resPacket,"|RES|DTS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,third_extension,second_extension);
	}
	return 0;       
}


/*************************************************************************
*************************************************************************/
int     
procRTS()
{   
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],today[20];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char  number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char  method[5],extension[10],first_extension[10],second_extension[10],third_extension[4];;
  char  type[11],arsflag[10];
        
    
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/  
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code));
        memset(name,0,sizeof(name));
        memset(seq,0,sizeof(seq));
        memset(arsflag,0,sizeof(arsflag));
        memset(extension,0,sizeof(extension));
        memset(first_extension,0,sizeof(first_extension));
        memset(second_extension,0,sizeof(second_extension));
	memset(third_extension,0,sizeof(third_extension)); 

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

    if(argv[2]&& *argv[2])
        strcpy(h_number,argv[2]);
    else
        strcpy(h_number,"07000000000");
/**
    if(argv[3]&& *argv[3])
        strcpy(first_extension,argv[3]);
    else
        strcpy(first_extension,"0");
**/

    if(argv[3] && strlen(argv[3])>2){
        strncpy(first_extension,&argv[3][0],1);
        strncpy(second_extension,&argv[3][1],1);
        strncpy(third_extension,&argv[3][2],1);
    }else if(argv[3] && strlen(argv[3])>1){
        strncpy(first_extension,&argv[3][0],1);
        strncpy(second_extension,&argv[3][1],1);
        strcpy(third_extension,"");
    }else if(argv[3] && strlen(argv[3])>0){
        strncpy(first_extension,&argv[3][0],1);
        strcpy(second_extension,"");
        strcpy(third_extension,"");
    }else {
        sprintf(resPacket, "|ERR|Input Data!!!");
        return -1;
    }
/*****
******/
                if(argv[3] && strlen(argv[3])>1){
                        if(strlen(third_extension)> 0 )
                        sprintf(sqlcmd, "select name,extension,method,number from third_ars where domain = '%s' and h_number = '%s' and first_extension='%s' and second_extension='%s' and extension = '%s'",domain,h_number,first_extension, second_extension,third_extension);
                        else
                        sprintf(sqlcmd, "select name,extension,method,number from third_ars where domain = '%s' and h_number = '%s' and first_extension='%s' and second_extension='%s'",domain,h_number,first_extension, second_extension);

                }else{
                        if(strlen(second_extension)> 0 )
                        sprintf(sqlcmd, "select name,extension,method,number from sub_ars where domain = '%s' and h_number = '%s' and first_extension='%s' and extension = '%s'",domain,h_number,first_extension, second_extension);
                        else
                        sprintf(sqlcmd, "select name,extension,method,number from sub_ars where domain = '%s' and h_number = '%s' and first_extension='%s'",domain,h_number,first_extension);
                }


        
                printf("\nsqlcmd:(%s)(%s)",sqlcmd,first_extension);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }
        
                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket, "|ERR|mysql Search Error sub_ars!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return(-1);
                }       
 
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
                        logCmd();
                        return -1;
                }

                sprintf(resPacket,"|RES");
                for(i=0;i < row_num;i++)
                {
                        row = mysql_fetch_row( result );
                        if(row)
                        {
                                strcpy(name, row[0]?row[0]:"-");
                                ps_delSpace(name);
                                strcpy(extension, row[1]?row[1]:"0");
                                ps_delSpace(extension);
                                strcpy(method, row[2]?row[2]:"0");
                                ps_delSpace(method);
                                strcpy(number, row[3]?row[3]:"07000000000");
                                ps_delSpace(number);
                        }
                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",name,extension,method,number);
                                if(!((i+1)%15))
                                {
                                                if((i+1) < row_num)
                                                {
                                                                strcat(resPacket,"\n");
                                                                tcpWrite(masterFd, resPacket);
                                                                sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                                mysql_free_result(result);
                                                                result = NULL;
                                                                return 0;
                                                }
                                }
                
                        } 
                mysql_free_result(result);
                result = NULL;
                        
          return 0;     
}                               


/**************************************************************************************************/
/**************************************************************************************************/
int                     
procUTS()                       
{                               
  char mp3dir[1024];                            
  char email[256];                              
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;       
  int   test=0, ret, row_num, centerflag=0,retry=0;             
  char tmp[100],today[20];                                      
  unsigned int  tmpNumber;                      
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char  number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char  method[5],extension[10],first_extension[10],second_extension[10],third_extension[4];;
  char  type[11],arsflag[10];

        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code));
        memset(name,0,sizeof(name));
        memset(seq,0,sizeof(seq));
        memset(arsflag,0,sizeof(arsflag));
        memset(extension,0,sizeof(extension));
        memset(first_extension,0,sizeof(first_extension));
        memset(second_extension,0,sizeof(second_extension));
	memset(third_extension,0,sizeof(third_extension)); 
/****
if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);


    if(argv[2]&& *argv[2])
        strcpy(h_number,argv[2]);
    else
        strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
        strcpy(first_extension,argv[3]);
    else
        strcpy(first_extension,"");

    if(argv[4] && strlen(argv[4])>2){
//        strncpy(first_extension,&argv[3][0],1);
        strncpy(second_extension,&argv[4][1],1);
        strncpy(third_extension,&argv[4][2],1);
    }else if(argv[4] && strlen(argv[4])>1){
//        strncpy(first_extension,&argv[4][0],1);
        strncpy(second_extension,&argv[4][0],1);
        strncpy(third_extension,&argv[4][1],1);
    }else if(argv[4] && strlen(argv[4])>0){
        strncpy(second_extension,&argv[4][0],1);
        strcpy(third_extension,"");
    }else {
	sprintf(resPacket, "|ERR|error Input Data");
	return -1;
    }
/***
    if(argv[4]&& *argv[4])
        strcpy(extension,argv[4]);
    else
        strcpy(extension,"0");
***/

    if(argv[5]&& *argv[5])
        strcpy(name,argv[5]);
    else 
        sprintf(name,"%s_%s",h_number,extension);
        
    if(argv[6]&& *argv[6])
        strcpy(method,argv[6]);
    else 
        strcpy(method,"0");
        
    if(argv[7]&& *argv[7])
                snprintf(number,sizeof(number),"%s",argv[7]);
    else  {
        strcpy(number,"0");
        memset(number,0,sizeof(number));
    }   
        
    if(PVS == 1) {
                        if(customInfo(domain) < 0)
                                return -1;
                }
        
                sprintf(sqlcmd,"update sub_ars  set name = '%s',method = '%s',number = '%s' where \
                domain='%s' and h_number='%s' and first_extension='%s' and extension = '%s'",name,method,number,domain,h_number,first_extension, second_extension);
                if(third_extension && strlen(third_extension) > 0){
                sprintf(sqlcmd,"update third_ars  set name = '%s',method = '%s',number = '%s' where \
                domain='%s' and h_number='%s' and first_extension='%s' and second_extension='%s' and extension = '%s'",name,method,number,domain,h_number,first_extension,second_extension, third_extension);

                }

                printf("\nsqlcmd : (%s)",sqlcmd);
                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return -1;
                }

                if(PVS == 1 && MASTER == 1)
                {
                                sprintf(commandBuf,"|UTS|%s@%s|%s|%s|%s%s%s|%s|%s|%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension,name,method,number);
                                if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
                                        if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTS')",tmp, commandBuf,BACKUP_SERVER,"sub2");
                                                mysql_query(mysql, sqlcmd);

                                        }
                                }

                                sprintf(commandBuf,"|UTS|%s@%s|%s|%s|%s%s%s|%s|%s|%s|",user,domain,h_number,first_extension,first_extension,second_extension,third_extension,name,method,number);
                                sprintf(resPacket,"|RES|UTS userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension,method);

                                /****Aß°¡ ***/
                //              sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
                sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
                                printf("\nsqlcmd:(%s)",sqlcmd);
                                if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
                                }
                                
                                result = mysql_store_result( mysql );
                                if(!result ) {  
                                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
                                        logCmd();
                                        exit(0);
                                }               

                                row_num = mysql_num_rows(result);
                                if( row_num == 0 ) {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }

                                for(i=0;i < row_num;i++) {
                                        row = mysql_fetch_row( result);
                                        if(row)
                                        {
                                                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                                                ps_delSpace(serverip);
                                                ps_delSpace(row[1]);
                                        }
                                        if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
                                                        tmm_currDate(YYYYMMDDHHMMSS,today);
                                                        sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                        sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTS')",tmp, commandBuf,serverip);
                                                        printf("\nsqlcmd:(%s)",sqlcmd);
                                                        mysql_query(mysql, sqlcmd1);
                                                }
                                        }
                                }
                                mysql_free_result(result);
                                result = NULL;
        }
        sprintf(resPacket,"|RES|UTS userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,h_number,first_extension,second_extension,third_extension);
        return 0;
}



/*************************************************************************
* hunting group
*************************************************************************/
int
procIH1()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];
  char  directnumber[20];

	memset(email,0,sizeof(email));
	memset(directnumber,0,sizeof(directnumber));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");

    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

	if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");


	if(*totime == '\0')
		strcpy(totime,"0");
		

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");


    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");


	if(*method == '9' && argv[25])
		strcpy(directnumber,argv[25]);

    if(argv[28] && *argv[28])
                strcpy(break_include,argv[28]);
        else
                strcpy(break_include,"0");


	if(strlen(method) > 1 || !isdigitstr(method)) {
		sprintf(resPacket,"|ERR|오류:method(0~4) input::(%s)",method);
		return -1;
	}

	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));
printf("\ntotime111111111:(%s)",totime);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[26] && *argv[26]) 
			strcpy(prefix,argv[26]);
		if(argv[27] && *argv[27]) 
			strcpy(serverip,argv[27]);
		if(argv[28] && *argv[28])
			strcpy(break_include,argv[28]);
		else
			strcpy(break_include,"0");
	}

	if(strlen(forward_num) > 4) {
		sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
				
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(type, row[0]?row[0]:"1");
					ps_delSpace(type);

					strcpy(arsflag, row[1]?row[1]:"N");
					ps_delSpace(type);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*type == '0') {
			sprintf(resPacket,"|ERR|착신전환 번호오류:(%s)",forward_num);
			return -1;
		}
	}

	sprintf(sqlcmd,"delete from hunting_group where number = '%s' and extension ='%s'",number,extension);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into hunting_group( \
		domain,prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",domain,prefix,number,extension,name,method, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|IH1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|IH1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include);
		sprintf(resPacket,"|RES|IHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IH1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
    return 0;       
}
/*************************************************************************
* hunting group added moh_bill
*************************************************************************/
int
procIH2()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10],myextension[10];
  char  directnumber[20],colorclass[20];

	memset(email,0,sizeof(email));
	memset(directnumber,0,sizeof(directnumber));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
	memset(colorclass,0,sizeof(colorclass)); 
	memset(myextension,0,sizeof(myextension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");

    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

	if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");


	if(*totime == '\0')
		strcpy(totime,"0");
		

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");


    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");


	if(*method == '9' && argv[25])
		strcpy(directnumber,argv[25]);

    if(argv[28] && *argv[28])
                strcpy(break_include,argv[28]);
        else
                strcpy(break_include,"0");
    if(argv[29] && *argv[29])
                strcpy(colorclass,argv[29]);
        else
                strcpy(colorclass,"");

    if(argv[30] && *argv[30])
                strcpy(myextension,argv[30]);
        else
                strcpy(myextension,"-");


	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		strcpy(forward_num,"");
		//return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));
printf("\ntotime111111111:(%s)",totime);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		strcpy(forward_num,"");
		//return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));
printf("\ntotime111111111:(%s)",totime);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[26] && *argv[26]) 
			strcpy(prefix,argv[26]);
		if(argv[27] && *argv[27]) 
			strcpy(serverip,argv[27]);
		if(argv[28] && *argv[28])
			strcpy(break_include,argv[28]);
		else
			strcpy(break_include,"0");

		if(argv[29] && *argv[29])
			strcpy(colorclass,argv[29]);
		else
			strcpy(colorclass,"");
		if(argv[30] && *argv[30])
			strcpy(myextension,argv[30]);
		else
			strcpy(myextension,"-");
	}

	if(strlen(forward_num) > 4) {
		sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
				
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(type, row[0]?row[0]:"1");
					ps_delSpace(type);

					strcpy(arsflag, row[1]?row[1]:"N");
					ps_delSpace(type);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*type == '0') {
			strcpy(forward_num,"");
			sprintf(resPacket,"|ERR|착신전환 번호오류:(%s)",forward_num);
			//return -1;
		}
	}

	sprintf(sqlcmd,"delete from hunting_group where number = '%s' and extension ='%s'",number,extension);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into hunting_group( \
		domain,prefix,number,extension,myextension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",domain,prefix,number,extension,myextension,name,method, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|IH2|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],forward_num,argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|IH2|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],forward_num,argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
		sprintf(resPacket,"|RES|IH2 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IH2')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IH2 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
    return 0;       
}


/*************************************************************************
* hunting group
*************************************************************************/
int     
procRH3()
{       
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char  name[65],number[20],method[2],extension[10];
  char  code[10],flag[2];
  char  fromtime[10],totime[10],conn_method[10];
  char  frommin[10],tomin[10];
  char  safromtime[10],satotime[10];
  char  safrommin[10],satomin[10];
  char  sunfromtime[10],suntotime[10];
  char  sunfrommin[10],suntomin[10];

  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  directnumber[20];
  char  h_number[20];
  char  colorclass[20];
  char  myextension[20];
  char  inner_method[10];
  char  break_include[20];

        memset(safromtime,0,sizeof(safromtime));
        memset(satotime,0,sizeof(satotime));
        memset(directnumber,0,sizeof(directnumber));
        memset(satotime,0,sizeof(satotime));
        memset(satomin,0,sizeof(satomin));
        memset(frommin,0,sizeof(frommin));
        memset(tomin,0,sizeof(tomin));
        memset(fromtime,0,sizeof(fromtime));
        memset(totime,0,sizeof(totime));
        memset(conn_method,0,sizeof(conn_method));
        memset(forward_num,0,sizeof(forward_num));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code));
        memset(extension,0,sizeof(extension));
        memset(h_number,0,sizeof(h_number));
        memset(flag,0,sizeof(flag));
        memset(breakfromtime,0,sizeof(breakfromtime));
        memset(breakfrommin,0,sizeof(breakfrommin));
        memset(breaktotime,0,sizeof(breaktotime));
        memset(breaktomin,0,sizeof(breaktomin));

        memset(sunfromtime,0,sizeof(sunfromtime));
        memset(suntotime,0,sizeof(suntotime));
        memset(suntotime,0,sizeof(suntotime));
        memset(suntomin,0,sizeof(suntomin));
        memset(colorclass,0,sizeof(colorclass));
        memset(myextension,0,sizeof(myextension));
        memset(break_include,0,sizeof(break_include));

    if(argv[2] && *argv[2])
                strcpy(flag,argv[2]);
        else 
                strcpy(flag,"A");
        
    if(argv[3] && *argv[3])
                strcpy(h_number,argv[3]);
        else 
                strcpy(h_number,"");
    if(argv[4] && *argv[4])
                strcpy(extension,argv[4]);
        else 
                strcpy(extension,"");
/****   
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/      
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);
        
        
                if(*flag == 'R')
                        sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,colorclass,myextension,break_include,inner_method from hunting_group where domain = '%s' and number='%s' and myextension = '%s'",domain,h_number,extension);
                else {
                        if(strlen(h_number)>0){
                        sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,colorclass,myextension,break_include,inner_method from hunting_group where domain = '%s' and  number='%s'",domain,h_number);
                        }else{
                        sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,colorclass,myextension,break_include,inner_method from hunting_group where domain = '%s' and  extension <> '-'",domain);
                        }

                }

                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                        return(-1);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
                        logCmd();
                        return -1;
                }

                sprintf(resPacket,"|RES");
                for(i=0;i < row_num;i++)
                {       
        memset(safromtime,0,sizeof(safromtime));
        memset(satotime,0,sizeof(satotime));
        memset(directnumber,0,sizeof(directnumber));
        memset(satotime,0,sizeof(satotime));
        memset(satomin,0,sizeof(satomin));
        memset(frommin,0,sizeof(frommin));
        memset(tomin,0,sizeof(tomin));
        memset(fromtime,0,sizeof(fromtime));
        memset(totime,0,sizeof(totime));
        memset(conn_method,0,sizeof(conn_method));
        memset(forward_num,0,sizeof(forward_num));
        memset(email,0,sizeof(email));
        memset(prefix,0,sizeof(prefix));

        memset(breakfromtime,0,sizeof(breakfromtime));
        memset(breakfrommin,0,sizeof(breakfrommin));
        memset(breaktotime,0,sizeof(breaktotime));
        memset(breaktomin,0,sizeof(breaktomin));

        memset(sunfromtime,0,sizeof(sunfromtime));
        memset(suntotime,0,sizeof(suntotime));
        memset(suntotime,0,sizeof(suntotime));
        memset(suntomin,0,sizeof(suntomin));
        memset(colorclass,0,sizeof(colorclass));
        memset(myextension,0,sizeof(myextension));
        memset(break_include,0,sizeof(break_include));
        memset(inner_method,0,sizeof(inner_method));
                        row = mysql_fetch_row( result );
                        if(row)
                        {
                                strcpy(prefix, row[0]?row[0]:"001");
                                ps_delSpace(prefix);
                                strcpy(number, row[1]?row[1]:"001");
                                ps_delSpace(number);
                                strcpy(extension, row[2]?row[2]:"1");
                                ps_delSpace(extension);
                                strcpy(name, row[3]?row[3]:"___");
                                ps_delSpace(name);
                                strcpy(method, row[4]?row[4]:"0");
                                ps_delSpace(method);
                                strcpy(fromtime, row[5]?row[5]:"0");
                                ps_delSpace(fromtime); 
                                strcpy(totime, row[6]?row[6]:"0");
                                ps_delSpace(totime);
                                strcpy(conn_method, row[7]?row[7]:"0");
                                ps_delSpace(conn_method);
                                strcpy(forward_num, row[8]?row[8]:"");
                                ps_delSpace(forward_num);
                                strcpy(frommin, row[9]?row[9]:"0");
                                ps_delSpace(tomin);
                                strcpy(tomin, row[10]?row[10]:"0");
                                ps_delSpace(tomin);
                                strcpy(safromtime, row[11]?row[11]:"0");
                                ps_delSpace(safromtime);
                                strcpy(safrommin, row[12]?row[12]:"0");
                                ps_delSpace(safrommin);
                                strcpy(satotime, row[13]?row[13]:"0");
                                ps_delSpace(satotime);
                                strcpy(satomin, row[14]?row[14]:"0");
                                ps_delSpace(satomin);

                                strcpy(sunfromtime, row[15]?row[15]:"0");
                                ps_delSpace(sunfromtime);
                                strcpy(sunfrommin, row[16]?row[16]:"0");
                                ps_delSpace(sunfrommin);
                                strcpy(suntotime, row[17]?row[17]:"0");
                                ps_delSpace(suntotime);
                                strcpy(suntomin, row[18]?row[18]:"0");
                                ps_delSpace(suntomin);

                                strcpy(breakfromtime, row[19]?row[19]:"0");
                                ps_delSpace(breakfromtime);
                                strcpy(breakfrommin, row[20]?row[20]:"0");
                                ps_delSpace(breakfrommin);
                                strcpy(breaktotime, row[21]?row[21]:"0");
                                ps_delSpace(breaktotime);
                                strcpy(breaktomin, row[22]?row[22]:"0");
                                ps_delSpace(breaktomin);
                                strcpy(directnumber, row[23]?row[23]:"");
                                ps_delSpace(directnumber);
                                strcpy(colorclass, row[24]?row[24]:"");
                                ps_delSpace(colorclass);
                                strcpy(myextension, row[25]?row[25]:"");
                                ps_delSpace(myextension);
                                strcpy(break_include, row[26]?row[26]:"");
                                ps_delSpace(break_include);
                                strcpy(inner_method, row[27]?row[27]:"");
                                ps_delSpace(inner_method);
                        }       
                      //????BMH  sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,method, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,colorclass,myextension,break_include);         
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",\
prefix,number,extension,name,method, \
fromtime,frommin,totime,tomin,conn_method,\
forward_num,safromtime,safrommin,satotime,satomin,\
sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,\
breakfrommin,breaktotime,breaktomin,directnumber,break_include, \
inner_method,colorclass,myextension);

                                        if(!((i+1)%10))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }
                                
                }               
                mysql_free_result(result);
                result = NULL;  
                                
          return 0;             
}                               



/*************************************************************************
* hunting group
*************************************************************************/
int
procIH3()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];
  char  directnumber[20],colorclass[20],myextension[10];

	memset(email,0,sizeof(email));
	memset(directnumber,0,sizeof(directnumber));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
	memset(colorclass,0,sizeof(colorclass)); 
	memset(myextension,0,sizeof(myextension)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");

    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

	if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");


	if(*totime == '\0')
		strcpy(totime,"0");
		

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");


    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");


	if(*method == '9' && argv[25])
		strcpy(directnumber,argv[25]);

    if(argv[28] && *argv[28])
                strcpy(break_include,argv[28]);
        else
                strcpy(break_include,"0");
    if(argv[29] && *argv[29])
                strcpy(colorclass,argv[29]);
        else
                strcpy(colorclass,"");
//???BMH
	if(argv[30] && *argv[30])
		strcpy(myextension,argv[30]);
	else
		strcpy(myextension,"-");



	if(!isdigitstr(forward_num) || !strcmp(number,forward_num) || (strlen(forward_num) > 1 && strlen(forward_num) < 8)) {
		sprintf(resPacket,"|ERR|착신전화 번호 오류:(%s)",forward_num);
		return -1;
	}

	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));
printf("\ntotime111111111:(%s)",totime);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[26] && *argv[26]) 
			strcpy(prefix,argv[26]);
		if(argv[27] && *argv[27]) 
			strcpy(serverip,argv[27]);
		if(argv[28] && *argv[28])
			strcpy(break_include,argv[28]);
		else
			strcpy(break_include,"0");

		if(argv[29] && *argv[29])
			strcpy(colorclass,argv[29]);
		else
			strcpy(colorclass,"");
		if(argv[30] && *argv[30])
			strcpy(myextension,argv[30]);
		else
			strcpy(myextension,"-");
	}

	if(strlen(forward_num) > 4) {
		sprintf(sqlcmd, "select type,arsflag from number_list where number = '%s'",forward_num);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}   
		else {
				
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(type, row[0]?row[0]:"1");
					ps_delSpace(type);

					strcpy(arsflag, row[1]?row[1]:"N");
					ps_delSpace(type);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(*type == '0') {
			sprintf(resPacket,"|ERR|착신전환 번호오류:(%s)",forward_num);
			return -1;
		}
	}

	sprintf(sqlcmd,"delete from hunting_group where number = '%s' and extension ='%s'",number,extension);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into hunting_group( \
		domain,prefix,number,extension,myextension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",domain,prefix,number,extension,myextension,name,method, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	sprintf(commandBuf,"|IH3|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IHT')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}
	sprintf(commandBuf,"|IH3|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
		sprintf(resPacket,"|RES|IH3 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IH3')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IH3 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
    return 0;       
}
/*************************************************************************************/
//|AN2|xxx@temp4402.lgdacom.net|07086119500|1|0|0|115.95.192.16
/*************************************************************************************/
int
procAN2()
{
char	sqlcmd[512];
char	tmp[64],messenger_ip[32];
char    firstexten[20],secondexten[20];
char    h_number[20];
char    call_seq[11];
char    hunt_num[32],numbertype[2],fphone_id[30];
char    method[2],ssw_ip[20],option1[10];
int row_num = 0, ret = 0, i=0, sd=-1,intfromtime,inttotime, j=0;
int randnum = 0, datacount = 0;
struct  tm      *tp;
long	t;
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	tel[20],option6[10];
char    numlist[100][20],tmpnum[10],directnumber[20];
char	frommin[5],tomin[5];
int	forward_check = 0;
char    callerid[20],tmpcrm[256];
char    crm_070[15],crm_flag[5],crm_messenger_ip[16];
char	record[11],org_num[20];
char	option2[10],class[20];


	memset(number,0,sizeof(number));
	memset(org_num,0,sizeof(org_num));
	memset(option6,0,sizeof(option6));
	memset(firstexten,0,sizeof(firstexten));
	memset(secondexten,0,sizeof(secondexten));
	memset(hunt_num,0,sizeof(hunt_num));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(method,0,sizeof(method));
	memset(numbertype,0,sizeof(numbertype));
	memset(ssw_ip,0,sizeof(ssw_ip));
	memset(option1,0,sizeof(option1));
	memset(tel,0,sizeof(tel));
	memset(directnumber,0,sizeof(directnumber));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(callerid,0,sizeof(callerid)); 
        memset(record,0,sizeof(record));
        memset(tmpcrm,0,sizeof(tmpcrm));
        memset(crm_070,0,sizeof(crm_070));
        memset(crm_flag,0,sizeof(crm_flag));
        memset(crm_messenger_ip,0,sizeof(crm_messenger_ip));
        memset(option2,0,sizeof(option2));
        memset(class,0,sizeof(class));


       t=time(0);
       tp = (struct tm *) localtime(&t);


        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));

        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");

        if(argv[3] && *argv[3])
                strcpy(firstexten,argv[3]);
        else
                strcpy(firstexten,"0000");

        if(argv[4] && *argv[4])
                strcpy(secondexten,argv[4]);
        else
                strcpy(secondexten,"0000");

        if(argv[5] && *argv[5])
                strcpy(call_seq,argv[5]);
        else
                strcpy(call_seq,"0");

        if(argv[6] && *argv[6])
                strcpy(ssw_ip,argv[6]);
        else
                strcpy(ssw_ip,SSW_IP);

        if(argv[7] && *argv[7])
                strcpy(callerid,argv[7]);
        else
                strcpy(callerid,"07000000000");

	sprintf(sqlcmd, "select phoneid,numbertype from number_manage where 070number = '%s'",h_number);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}
	result = mysql_store_result( mysql );
printf("\nsqlcmd : (%s)",sqlcmd);
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			sprintf(resPacket,"|RES|0|0|X|");
			return 0;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(phoneid, row[0]?row[0]:"00000000");
				    ps_delSpace(phoneid);
				    strcpy(numbertype, row[0]?row[0]:"0");
				    ps_delSpace(numbertype);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}

	strncpy(prefix,phoneid+1,3);


	sprintf(sqlcmd, "select distinct method,number from sub_ars where h_number = '%s' and first_extension = '%s' and extension='%s'",h_number,firstexten,secondexten);

	printf("\nsqlcmd : (%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|1|0|X|");
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket,"|RES|1|0|X|");
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket,"|RES|1|0|X|");
		return 0;
	}
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(method, row[0]?row[0]:"2");
		ps_delSpace(method);
		strcpy(directnumber, row[1]?row[1]:"07000000000");
		ps_delSpace(directnumber);
	}
	mysql_free_result(result);
	result = NULL;


//BMH
        sprintf(sqlcmd, "select method from third_ars where h_number = '%s' and first_extension = '%s' and second_extension='%s'",h_number,firstexten,secondexten);

        printf("\nsqlcmd:(%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
                ;
        }

        result = mysql_store_result( mysql );
        if(!result ) {
                ;
        }
        else {
                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        ;
                }
                else {
                        row = mysql_fetch_row( result );
                        if( row) {
                                strcpy(method, row[0]?row[0]:"2");
                                ps_delSpace(method);
                        }
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|8|2|X|");
                        return 0;
                }
                mysql_free_result(result);
                result = NULL;
        }
//endBMH

printf("\n[5m[7mMETHOD : (%s)[0m[0m",method);

	if(*method == '0') {
		sprintf(resPacket,"|RES|0|%s|1%3.3s%4.4s|",call_seq,prefix,h_number+strlen(h_number)-4);
	}
	else if(*method == '9') {
		if(strlen(directnumber) == 3)
			sprintf(resPacket,"|RES|9|%s|1%s0%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) == 4)
			sprintf(resPacket,"|RES|9|%s|1%s%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) > 4)
			sprintf(resPacket,"|RES|9|%s|%s|",call_seq,directnumber);
		else 
			sprintf(resPacket,"|RES|9|0|-|");

	}
	else if(*method == '1') {
		sprintf(resPacket,"|RES|1|0|-|");
	}
	else if(*method == '2') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,firstexten,secondexten,call_seq);

		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select option1,tel,option6,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);
		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
			;
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);

                                        strcpy(record,row[3]?row[3]:"");
                                        ps_delSpace(record);
                                        strcpy(crm_070,row[4]?row[4]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row[5]?row[5]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row[6]?row[6]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row[7]?row[7]:"");
                                        ps_delSpace(org_num);
                                        strcpy(option2,row[8]?row[8]:"");
                                        ps_delSpace(option2);
                                        strcpy(class,row[9]?row[9]:"");
                                        ps_delSpace(class);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(strlen(tel) < 7)
			strcpy(tel,"");


                if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
                        sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                        commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                }



		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|2|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|",call_seq,prefix,hunt_num,option1,tel,option6,option2,class);
		else 
			sprintf(resPacket,"|RES|2|%s|%s|%s|%s|%s|%s|%s|",call_seq,hunt_num,option1,tel,option6,option2,class);

	}
	else if(*method == '3') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' and seq > %s order by seq asc",prefix,h_number,firstexten,secondexten,call_seq);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }
		sprintf(resPacket,"|RES|3|0|");
		if(row_num > 20)
			row_num = 20;

		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(hunt_num, row[0]?row[0]:"");
				ps_delSpace(hunt_num);
				strcpy(call_seq, row[1]?row[1]:"0");
				ps_delSpace(call_seq);

		if(strlen(hunt_num) == 4) {
		int j = 0,row_num1;
		memset(fphone_id,0,sizeof(fphone_id));

                if(strlen(hunt_num) == 4) {
                        int j = 0,row_num1;
                        if(mysql_1) {
                        sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

                        printf("\nABSENT : (%s)",sqlcmd);
                        ret = mysql_query(mysql_1, sqlcmd);

                        printf("\nsqlcmd :(%s)",sqlcmd);

                        result_1 = mysql_store_result( mysql_1 );
                        if(result_1) {
                                row_num1 = mysql_num_rows(result_1);
                                if(row_num1 == 0) {
                                        mysql_free_result(result_1);
                                        result_1 = NULL;
                                        continue;
                                }
                                else {
                                        row1 = mysql_fetch_row( result_1 );
                                        if(row1 && row1[1] && *row1[1] == 'Y') {
                                                mysql_free_result(result_1);
                                                result_1 = NULL;
                                                continue;
                                        }

                                        strcpy(crm_070,row1[2]?row1[2]:"");
                                        ps_delSpace(crm_070);
                                        strcpy(crm_flag,row1[3]?row1[3]:"");
                                        ps_delSpace(crm_flag);
                                        strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
                                        ps_delSpace(crm_messenger_ip);
                                        strcpy(org_num,row1[5]?row1[5]:"");
                                        ps_delSpace(org_num);

                                        memset(tmpcrm,0,sizeof(tmpcrm));
                                        if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
                                                sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
                                                commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
                                        }
                                }
                        }
                        mysql_free_result(result_1);
                        result_1 = NULL;
                        }
                }

		if(mysql_1) {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
		else
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

		printf("\nFORWARD_INFO : (%s)",sqlcmd);
		ret = mysql_query(mysql_1, sqlcmd);

		printf("\nsqlcmd :(%s)",sqlcmd);

		result_1 = mysql_store_result( mysql_1 );
		if(result_1) {
			row_num1 = mysql_num_rows(result_1);
			if( row_num1 == 0 ) {
				mysql_free_result(result_1);
				result_1 = NULL;
			}	
			else {
				for(j=0;j < row_num1;j++) {
				    row1 = mysql_fetch_row( result_1);
				    if( row1) {
						strcpy(tmp, row1[1]?row1[1]:"00000000000");
						ps_delSpace(tmp);
						strcpy(fromday, row1[2]?row1[2]:"0");
						ps_delSpace(fromday);
						strcpy(totoday, row1[3]?row1[3]:"0");
						ps_delSpace(totoday);
						strcpy(fromtime, row1[4]?row1[4]:"0");
						ps_delSpace(fromtime);
						strcpy(totime, row1[5]?row1[5]:"0");
						ps_delSpace(totime);
						strcpy(kind, row1[6]?row1[6]:"0");
						ps_delSpace(kind);
						strcpy(frommin, row1[7]?row1[7]:"0");
						ps_delSpace(frommin);
						strcpy(tomin, row1[8]?row1[8]:"0");
						ps_delSpace(tomin);

						intfromtime= atoi(fromtime);
						inttotime= atoi(totime);


                                                if(inttotime == 0 && intfromtime==0)
                                                        inttotime = 24;
						if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
                                                        inttotime += 24;
							if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
                                                                tp->tm_hour += 24;
                                                }
						 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
							if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
								if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
								if(atoi(frommin) <= tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
								if(atoi(tomin) > tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
								forward_check = 1;
							}
							if(forward_check) {
							    if(strlen(tmp) == 4) {

								sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
							    }
							    else if(strlen(tmp) == 8) {
								sprintf(fphone_id,"%s",tmp);
							    }
							    else if(strlen(tmp) > 8) {
								sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
							    }
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							else {
								strcpy(kind,"X");
								strcpy(fphone_id,"");
							}
						}
						else {
							strcpy(kind,"X");
							strcpy(fphone_id,"");
						}
					}
					break;
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
		}
					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

						if(datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
									sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
							if(*kind == '3') {
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										datacount++;
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
										datacount++;
								}
								else if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					} ///////
				}
				else {
					if(i == 0)
						sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
					else
						sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;

		sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
	}
	else if(*method == '4') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension ='%s'",prefix,h_number,firstexten,secondexten);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|4|0|X|");
			return 0;
                }

                sprintf(resPacket,"|RES|4|0|");
                for(j=0; j < 100; j++)
                        strcpy(numlist[j],"");

                for(i=0;i < row_num, i < 100;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        sprintf(numlist[i],"%8.8s",hunt_num);

                                }
                                printf("\n(numlist[i]:(%s)",numlist[i]);
                        }
                }
                mysql_free_result(result);
                result = NULL;

                srand(getpid());
                for(i=0;i < row_num;i++) {
                        randnum = rand()%row_num;
                        strcpy(tmpnum,numlist[i]);
                        strcpy(numlist[i],numlist[randnum]);
                        strcpy(numlist[randnum],tmpnum);

                        printf("\nrow_num:(%d),(%s)",i,numlist[i]);
                        if(i == 99)
                                break;
                }

                for(i=0;i < row_num;i++) {
                        if(strlen(numlist[i]) == 8)
                                sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
                }
	}
        else if(*method == '5') {
		sprintf(sqlcmd, "select distinct number,seq from sub_ars_member where prefix = '%3.3s' and h_number = '%s' and first_extension = '%s' and extension = '%s' order by lasttime ASC",prefix,h_number,firstexten,secondexten);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                sprintf(resPacket,"|RES|5|0|");
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        if( i == 0)
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        if(i == 0)
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);

                                }
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
	printf("\nresPacket:(%s)",resPacket);
	return 0;
}
/*************************************************************************
* Connect 서버정보 정보
*************************************************************************/
int
procIFC() 
{
  char    sqlcmd[512],sqlcmd1[255];
	char	serverip[20];
	char	num070[20];
	char	phoneid[10];
	char	prefix[10];
	char	a_proxyip[20];
	char	s_proxyip[20];
	char	defaultip[20];
	char	cdrserver[20];
	char	realip[20];
	char	seq[10];
	char	servername[64];
	char	nickname[64];
	char	rip[20];
	char	sub[10],befserverip[20];
	char passwd[256];
	char db_passwd[256];
	int src_len;
	int a_port = 0,s_port = 0,check_flag=0;
	unsigned char src_str[10000];
	unsigned char hash_str[10000];
	unsigned char dbhash_str[10000];
	unsigned char output[129];
	int	i,j, ret, row_num, row_num1,index;
	int port_8087=0,port_8088 =0;


	memset(defaultip,0,sizeof(defaultip));
	memset(seq,0,sizeof(seq));
	memset(a_proxyip,0,sizeof(a_proxyip));
	memset(s_proxyip,0,sizeof(s_proxyip));
	memset(phoneid,0,sizeof(phoneid));
	memset(prefix,0,sizeof(prefix));
	memset(db_passwd,0,sizeof(db_passwd));
	memset(dbhash_str,0,sizeof(dbhash_str));
	memset(rip,0,sizeof(rip));

		if(argv[2] && *argv[2])
			strcpy(num070,argv[2]);
		else
			strcpy(num070,"");

		if(argv[3] && *argv[3])
			strcpy(passwd,argv[3]);
		else 
			strcpy(passwd,"");

		if(strlen(passwd) < 20) {
			strcpy(src_str,passwd);
			src_len=strlen(src_str);
			sha4( src_str, src_len, output, 0);
			hexify( hash_str, output, 64 );
		}
		else 
			strcpy(hash_str,passwd);


		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		if(!strncmp(num070,"070",3)) {
			sprintf(sqlcmd, "select defaultip,passwd,domain,phoneid from number_manage where 070number='%s'",num070);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				exit(0);
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0) {
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",num070);
				logCmd();
				return -1;
			}
			else {
				row = mysql_fetch_row( result );
				if(row) {
					strcpy(defaultip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(defaultip);
					strcpy(db_passwd, row[1]?row[1]:"");
					ps_delSpace(db_passwd);
					strcpy(domain, row[2]?row[2]:"unknown.com");
					ps_delSpace(domain);
					strcpy(phoneid, row[3]?row[3]:"00000000");
					ps_delSpace(phoneid);
	
					strncpy(prefix,phoneid,3);
				}
				mysql_free_result(result);
				result = NULL;
			}

			if(strlen(passwd) < 20 && strlen(db_passwd) < 20) {
				if(!strcmp(passwd,db_passwd))
					;
				else {
					sprintf(resPacket, "|ERR|passwd incorrect(%s),(%s),dbpasswd:(%s)",num070,passwd,db_passwd);
					printf("(%s)\n",resPacket);
					logCmd();
					return -1;
				}
			}else
                        if(strlen(passwd) > 20 && strlen(db_passwd) < 20) {
                                memset(src_str,0,sizeof(src_str));
                                strcpy(src_str,db_passwd);
                                src_len=strlen(src_str);
                                sha4( src_str, src_len, output, 0);
                                hexify( dbhash_str, output, 64 );
                                if(!strcmp(passwd,dbhash_str))
                                        ;
                                else {
                                        sprintf(resPacket, "|ERR|passwd incorrect(%s),(%s),dbpasswd:(%s)",num070,passwd,db_passwd);
                                        printf("(%s)\n",resPacket);
                                        logCmd();
                                        return -1;
                                }
                        }
			else if(strcmp(hash_str,db_passwd)) {
				sprintf(resPacket, "|ERR|passwd incorrect(%s)",num070);
				logCmd();
				return -1;
			}

				sprintf(sqlcmd, "select servername,serverip,seq from server_info where domain ='%s' and serverip <> '%s'",defaultip,defaultip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					printf("\n(((%s)))",resPacket);
					return -1;
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					printf("\n(((%s)))",resPacket);
					return -1;
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					printf("\n.............row_num:(%d)",row_num);
					return -1;
				}


				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row(result);
					/*** serverip,servername,nickname,cdrserver ***/
					if(row) 
					{
						strcpy(servername, row[0]?row[0]:"");
						ps_delSpace(servername);

						if(!strcmp(servername,"sub1")) {
							strcpy(a_proxyip, row[1]?row[1]:"127.0.0.1");
							strcpy(seq, row[2]?row[2]:"0");
						}
						else if(!strcmp(servername,"sub2"))
							strcpy(s_proxyip, row[1]?row[1]:"127.0.0.1");
						
						ps_delSpace(a_proxyip);
						ps_delSpace(s_proxyip);
						ps_delSpace(seq);
					}
				}
				mysql_free_result(result);
				result = NULL;

				printf("\nrow[2]:(%s)",row[2]);
				printf("\nrow[2]:(%s)",row[2]);
				printf("\nrow[2]:(%s)",row[2]);


				sprintf(resPacket,"|RES|%s_8086|%s_%d|%s_8086|%s|%s",a_proxyip,s_proxyip,*seq=='1'?8087:8088,s_proxyip,domain,prefix);
		}
		else {

			strcpy(resPacket,"|RES|");
			strcpy(defaultip,num070);
			sprintf(sqlcmd, "select servername,domain,seq from server_info where serverip ='%s'",num070);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				printf("\n(((%s)))",resPacket);
				return -1;
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				printf("\n(((%s)))",resPacket);
				return -1;
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				printf("\n.............row_num:(%d)",row_num);
				return -1;
			}


			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row(result);
				/*** serverip,servername,nickname,cdrserver ***/
				if(row) 
				{
						strcpy(servername, row[0]?row[0]:"");
						ps_delSpace(servername);

						strcpy(domain, row[1]?row[1]:"127.0.0.1");
						ps_delSpace(domain);

						strcpy(seq, row[2]?row[2]:"0");
						ps_delSpace(seq);

						if(!strcmp(servername,"sub1")) {
							a_port=8086;
							strcpy(a_proxyip,"127.0.0.1");
							sprintf(resPacket,"|RES|%s_%d|||",a_proxyip,a_port);
							break;
						}
						else if(!strcmp(servername,"sub2")) {
						//select serverip,servername,domain,seq from server_info where domain ='211.32.148.83' and serverip <> domain;
							if(!mysql_1)
								sqlinit_1(LOCAL_SERVER);
							if(mysql_1) {
							sprintf(sqlcmd, "select serverip,servername,domain,seq from server_info where domain ='%s' and domain <> serverip",domain);

							printf("\n2nd query : (%s)",sqlcmd);
							ret = mysql_query(mysql_1, sqlcmd);

							printf("\nsqlcmd :(%s)",sqlcmd);

							result_1 = mysql_store_result( mysql_1 );
							if(result_1) {
								row_num1 = mysql_num_rows(result_1);
								if(row_num1 == 0) {
									mysql_free_result(result_1);
									result_1 = NULL;
									continue;
								}
								else {
									for(j=0;j < row_num1;j++) {
										row1 = mysql_fetch_row( result_1 );

										strcpy(rip,row1[0]?row1[0]:"127.0.0.");

										ps_delSpace(rip);
										printf("\n[5m[7mRIP:(%s) defaultip:(%s), seq:(%s)[0m[0m",rip,defaultip,row1[3]);
										if(!strcmp(rip,defaultip)) {
											if(!check_flag) {
												sprintf(resPacket+strlen(resPacket),"127.0.0.1_8086|");
												check_flag = 1;
											}
										}
										else {
											if(*row1[3] == '1') {
												sprintf(resPacket+strlen(resPacket),"%s_8087|",rip);
												port_8087 = 1;
											}
											else if(*row1[3] == '2') {
												sprintf(resPacket+strlen(resPacket),"%s_8088|",rip);
												port_8088 = 1;
											}
											else {
												if(port_8087 == 0) {
													sprintf(resPacket+strlen(resPacket),"%s_8087|",rip);
													port_8087 = 1;
			printf("\n[5m[7m1111111111111111111111[0m[0m\n");
												}
												else if(port_8088 == 0) {
													sprintf(resPacket+strlen(resPacket),"%s_8088|",rip);
													port_8088 = 1;
			printf("\n[5m[7m2222222222222222222222[0m[0m\n");
												}

											}
}

									}
								}
							}
							mysql_free_result(result_1);
							result_1 = NULL;
							}

						}


/****
						if(*seq == '1') {
							a_port=8086;
							strcpy(a_proxyip, row[1]?row[1]:"127.0.0.1");
printf("\na_proxyip:(%s)",a_proxyip);
						}
						else if(*seq == '2') {
							s_port=8087;
							strcpy(s_proxyip, row[1]?row[1]:"127.0.0.1");
printf("\ns_proxyip:(%s)",s_proxyip);

						}
					ps_delSpace(a_proxyip);
					ps_delSpace(s_proxyip);
*/
				}
			}
			mysql_free_result(result);
			result = NULL;
/****

			if(s_port != 0)
				sprintf(resPacket,"|RES|%s_%d|%s_%d||",a_proxyip,a_port,s_proxyip,s_port);
			else
				sprintf(resPacket,"|RES|%s_%d|||",a_proxyip,a_port);
*/
		}



		if(mysql_1)
			mysql_close(mysql_1);
		mysql_1 = NULL;

		if(mysql)
			mysql_close(mysql);
		mysql = NULL;


		return 0;

}

/*************************************************************************
*ARS TREE 
*************************************************************************/
int
procIIS()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0, size=0;
  char tmp[100],today[20],groupname[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	number[21],h_number[20],name[33],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10], first_extension[10];
  char	type[11],arsflag[10];

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(first_extension,0,sizeof(first_extension)); 
	memset(arsflag,0,sizeof(arsflag)); 
/****
if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


    if(argv[2]&& *argv[2])
	strcpy(h_number,argv[2]);
    else 
	strcpy(h_number,"07000000000");

    if(argv[3]&& *argv[3])
	strcpy(extension,argv[3]);
    else 
	strcpy(extension,"0");


    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		}

		sprintf(sqlcmd,"delete from second_ars where  \
		h_number = '%s' and extension = '%s'",h_number,extension);
		//20220808 CHG domain = '%s' and h_number = '%s' and extension = '%s'",domain,h_number,extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		sprintf(sqlcmd,"insert into second_ars(domain,h_number,extension) values \
		('%s','%s','%s')",domain,h_number,extension);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Insert Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return -1;
		}

		if(PVS == 1 && MASTER == 1) 
		{
				sprintf(commandBuf,"|IIS|%s@%s|%s|%s|",user,domain,h_number,extension);
				sprintf(resPacket,"|RES|IIS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				sprintf(commandBuf,"|IIS|%s@%s|%s|%s|",user,domain,h_number,extension);
				sprintf(resPacket,"|RES|IIS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);
				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					logCmd();
					return -1;
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IIS')",tmp, commandBuf,serverip);
							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	    sprintf(resPacket,"|RES|IIS userid:(%s)-(%s)-(%s)",user,domain,h_number);
	    return 0;       
	}
	else {
		sprintf(sqlcmd,"mkdir /var/lib/asterisk/sounds/ars/%s/%s/%s",domain, h_number,extension);
		if(strlen(extension) > 1)
			sprintf(sqlcmd,"mkdir /var/lib/asterisk/sounds/ars/%s/%s/%s/%s",domain, h_number,extension[0],extension[1]);
		system(sqlcmd);

		sprintf(resPacket,"|RES|IAS userid:(%s)-(%s)-(%s)-(%s)",user,domain,h_number,extension);
		return 0;       
	}
}
/*************************************************************************************/
/*************************************************************************************/
int
procANT()
{
char	sqlcmd[512];
char	tmp[64],messenger_ip[32];
char    extension[60];
char    h_number[20];
char    call_seq[11];
char    hunt_num[32],numbertype[2],fphone_id[30];
char    method[5],ssw_ip[20],option1[10];
int row_num = 0, ret = 0, i=0, sd=-1,intfromtime,inttotime, j=0;
int randnum = 0,datacount=0,cnt=0;
struct  tm      *tp;
long	t;
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2];
char	tel[20],option6[10],record[10],bill_type[2];
char    numlist[100][20],tmpnum[10],directnumber[20];
char	sub_method[5];
char	frommin[5],tomin[5];
int	forward_check = 0;
char	callerid[20],tmpcrm[256];
char	crm_070[15],crm_flag[5],crm_messenger_ip[16],org_num[20];
char	option2[10],class[20];


	memset(tmpcrm,0,sizeof(tmpcrm));
	memset(org_num,0,sizeof(org_num));
	memset(crm_070,0,sizeof(crm_070));
	memset(crm_flag,0,sizeof(crm_flag));
	memset(crm_messenger_ip,0,sizeof(crm_messenger_ip));
	memset(number,0,sizeof(number));
	memset(option6,0,sizeof(option6));
	memset(extension,0,sizeof(extension));
	memset(hunt_num,0,sizeof(hunt_num));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(method,0,sizeof(method));
	memset(numbertype,0,sizeof(numbertype));
	memset(ssw_ip,0,sizeof(ssw_ip));
	memset(option1,0,sizeof(option1));
	memset(tel,0,sizeof(tel));
	memset(directnumber,0,sizeof(directnumber));
	memset(bill_type,0,sizeof(bill_type));
	memset(sub_method,0,sizeof(sub_method));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(option2,0,sizeof(option2)); 
	memset(class,0,sizeof(class)); 

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));
/***
        if(argv[2] && *argv[2])
                strcpy(prefix,argv[2]);
        else
                strcpy(prefix,"000");
*/

        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");

        if(argv[3] && *argv[3])
                strcpy(extension,argv[3]);
        else
                strcpy(extension,"0000");

        if(argv[4] && *argv[4])
                strcpy(call_seq,argv[4]);
        else
                strcpy(call_seq,"0");
        if(argv[5] && *argv[5])
                strcpy(ssw_ip,argv[5]);
        else
                strcpy(ssw_ip,SSW_IP);

        if(argv[6] && *argv[6])
                strcpy(sub_method,argv[6]);
        else
                strcpy(sub_method,"");

        if(argv[7] && *argv[7])
                strcpy(callerid,argv[7]);
        else
                strcpy(callerid,"07000000000");


	sprintf(sqlcmd, "select phoneid,numbertype,option1,tel,option6,record,option2,class from number_manage where 070number = '%s'",h_number);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}
	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			sprintf(resPacket,"|RES|0|0|X|");
			return 0;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				    strcpy(phoneid, row[0]?row[0]:"00000000");
				    ps_delSpace(phoneid);
				    strcpy(numbertype, row[1]?row[1]:"0");
				    ps_delSpace(numbertype);
					strcpy(option1,row[2]?row[2]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[3]?row[3]:"");
					ps_delSpace(tel);
					strcpy(option6,row[4]?row[4]:"");
					ps_delSpace(option6);
					strcpy(record,row[5]?row[5]:"");
					ps_delSpace(record);
					strcpy(option2,row[6]?row[6]:"");
					ps_delSpace(option2);
					strcpy(class,row[7]?row[7]:"");
					ps_delSpace(class);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}

	strncpy(prefix,phoneid+1,3);

	printf("\nprefix:(%s)",prefix);

SEQUENCE_1:
	if(!strcmp(h_number,extension))
		sprintf(sqlcmd, "select method,directnumber from hunting_group where prefix = '%3.3s' and number = '%s'",prefix,h_number);
	else 
		sprintf(sqlcmd, "select method,directnumber from hunting_group where prefix = '%3.3s' and number = '%s' and extension = '%s'",prefix,h_number,extension);

	printf("\nsqlcmd:(%s)",sqlcmd);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		if(*numbertype == '1')
			sprintf(resPacket,"|RES|0|0|X|");
		else
			sprintf(resPacket,"|RES|1|0|X|");
		return 0;
	}
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(method, row[0]?row[0]:"2");
		ps_delSpace(method);
		strcpy(directnumber, row[1]?row[1]:"");
		ps_delSpace(directnumber);
	}
	mysql_free_result(result);
	result = NULL;

	if(*method == '9') {
		if(strlen(directnumber) == 3)
			sprintf(resPacket,"|RES|9|%s|1%s0%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) == 4)
			sprintf(resPacket,"|RES|9|%s|1%s%s|",call_seq,prefix,directnumber);
		else if(strlen(directnumber) > 4)
			sprintf(resPacket,"|RES|9|%s|%s|",call_seq,directnumber);
		else 
			sprintf(resPacket,"|RES|9|0|-|");
		return 0;
	}

/****
DROP TABLE IF EXISTS `sub_ars`;
CREATE TABLE `sub_ars` (
  `no` int(11) NOT NULL auto_increment,
  `name` varchar(64) default '',
  `domain` varchar(64) NOT NULL default '',
  `h_number` varchar(14) default '',
  `first_extension` varchar(4) default '',
  `extension` varchar(4) NOT NULL default '',
  `method` varchar(2) default '0',
  `number` varchar(14) default '',
  PRIMARY KEY  (`no`),
  KEY `sub_h_group` (`domain`,`h_number`)
) ENGINE=MyISAM AUTO_INCREMENT=459 DEFAULT CHARSET=euckr;
*/

	sprintf(sqlcmd, "select method from sub_ars where h_number = '%s' and first_extension = '%s'",h_number,extension);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		;
	}
	else {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			;
		}
		else {
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(method, row[0]?row[0]:"2");
				ps_delSpace(method);
			}
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket,"|RES|8|2|X|");
			return 0;
		}
		mysql_free_result(result);
		result = NULL;
	}

	if(*method == '6' && *sub_method == '\0')
		strcpy(sub_method,"62");
	if(*method == '7' && *sub_method == '\0')
		strcpy(sub_method,"73");
	if(*method == '8' && *sub_method == '\0')
		strcpy(sub_method,"84");
	if(*method == 'A' && *sub_method == '\0')
		strcpy(sub_method,"A3");

LOOP1:
	if(*method == '0') {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
	}
	else if(*method == '1') {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
	}
	else if(*method == '9') {
		sprintf(resPacket,"|RES|9|%s|%s|",call_seq,directnumber);
	}
	else if(*method == '2') {
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and seq > %s order by seq asc ",prefix,h_number,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,extension,call_seq);


		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;
						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP1;
						}
/***
						if(!strcmp(call_seq,"0")) {
								sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
								sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
								printf("\nsqlcmd:(%s)",sqlcmd);

								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
						}
*/
						if(!strcmp(call_seq,"0"))
							sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
						else
							sprintf(resPacket,"|RES|2|1|X|");

						return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select option1,tel,option6,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			goto SEQUENCE_1;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				goto SEQUENCE_1;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);
					strcpy(record,row[3]?row[3]:"");
					ps_delSpace(record);

					strcpy(crm_070,row[4]?row[4]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row[5]?row[5]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row[6]?row[6]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row[7]?row[7]:"");
					ps_delSpace(org_num);
					strcpy(option2,row[8]?row[8]:"");
					ps_delSpace(option2);
					strcpy(class,row[9]?row[9]:"");
					ps_delSpace(class);

				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		if(strlen(tel) < 7)
			strcpy(tel,"");

		if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
			sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
			commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
		}

		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|2|%s|1%3.3s%4.4s|%s|%s|%s|%s||||%s|%s|",call_seq,prefix,hunt_num,option1,tel,option6,record,option2,class);
		else 
			sprintf(resPacket,"|RES|2|%s|%s|%s|%s|%s|%s||||%s|%s|",call_seq,hunt_num,option1,tel,option6,record,option2,class);

	}
	else if(*method == '3') {
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and seq > %s order by seq asc ",prefix,h_number,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, call_seq);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|8",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|9",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|3|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP1;
						}
/***
						sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
						sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
						printf("\nsqlcmd:(%s)",sqlcmd);

						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
*/
						if(!strcmp(call_seq,"0"))
							sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|a",phoneid+1,option1,tel,option6,bill_type,record);
						else
							sprintf(resPacket,"|RES|3|1|X|");
						return 0;
                }
		sprintf(resPacket,"|RES|3|0|");

		if(row_num > 20)
			row_num = 20;

		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(hunt_num, row[0]?row[0]:"");
				ps_delSpace(hunt_num);
				strcpy(call_seq, row[1]?row[1]:"0");
				ps_delSpace(call_seq);

		if(strlen(hunt_num) == 4) {
			int j = 0,row_num1;
			if(mysql_1) {
			sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

			printf("\nABSENT : (%s)",sqlcmd);
			ret = mysql_query(mysql_1, sqlcmd);

			printf("\nsqlcmd :(%s)",sqlcmd);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if(row_num1 == 0) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}
				else {
					row1 = mysql_fetch_row( result_1 );
					if(row1 && row1[1] && *row1[1] == 'Y') {
						mysql_free_result(result_1);
						result_1 = NULL;
						continue;
					}

					strcpy(crm_070,row1[2]?row1[2]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row1[3]?row1[3]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row1[5]?row1[5]:"");
					ps_delSpace(org_num);

					memset(tmpcrm,0,sizeof(tmpcrm));
					if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
						sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
						commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
					}
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
		}


/***********************************/
		if(strlen(hunt_num) == 4) {
		int j = 0,row_num1;
		memset(fphone_id,0,sizeof(fphone_id));
		if(mysql_1) {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
		else
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and  (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

		printf("\nFORWARD_INFO : (%s)",sqlcmd);
		ret = mysql_query(mysql_1, sqlcmd);

		printf("\nsqlcmd :(%s)",sqlcmd);

		result_1 = mysql_store_result( mysql_1 );
		if(result_1) {
			row_num1 = mysql_num_rows(result_1);
			if( row_num1 == 0 ) {
				mysql_free_result(result_1);
				result_1 = NULL;
			}	
			else {
				for(j=0;j < row_num1;j++) {
				    row1 = mysql_fetch_row( result_1);
				    if( row1) {
						strcpy(tmp, row1[1]?row1[1]:"00000000000");
						ps_delSpace(tmp);
						strcpy(fromday, row1[2]?row1[2]:"0");
						ps_delSpace(fromday);
						strcpy(totoday, row1[3]?row1[3]:"0");
						ps_delSpace(totoday);
						strcpy(fromtime, row1[4]?row1[4]:"0");
						ps_delSpace(fromtime);
						strcpy(totime, row1[5]?row1[5]:"0");
						ps_delSpace(totime);
						strcpy(kind, row1[6]?row1[6]:"0");
						ps_delSpace(kind);
						strcpy(frommin, row1[7]?row1[7]:"0");
						ps_delSpace(frommin);
						strcpy(tomin, row1[8]?row1[8]:"0");
						ps_delSpace(tomin);

						intfromtime= atoi(fromtime);
						inttotime= atoi(totime);

                                                if(inttotime == 0 && intfromtime==0)
                                                        inttotime = 24;
						if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
                                                        inttotime += 24;
							if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
                                                                tp->tm_hour += 24;
                                                }

						 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
							if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
								if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
								if(atoi(frommin) <= tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
								if(atoi(tomin) > tp->tm_min) {
									forward_check = 1;
								}
							}
							else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
								forward_check = 1;
							}
							if(forward_check) {
							    if(strlen(tmp) == 4) {

								sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
							    }
							    else if(strlen(tmp) == 8) {
								sprintf(fphone_id,"%s",tmp);
							    }
							    else if(strlen(tmp) > 8) {
								sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
							    }
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
	
							}
							else {
								strcpy(kind,"X");
								strcpy(fphone_id,"");
							}
						}
						else {
							strcpy(kind,"X");
							strcpy(fphone_id,"");
						}
					}
					break;
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
		}
/***********************************/
					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

						if(datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
									sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
							if(*kind == '3') {
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										datacount++;
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
										datacount++;
								}
								else if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					} ///////
				}
				else {
					if(datacount == 0) {
						if(*hunt_num) {
								sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
								datacount++;
						}
					}
					else {
						if(*hunt_num)
								sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
					}
				}
			}
		}

		mysql_free_result(result);
		result = NULL;

		sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
	}
	else if(*method == '4') {
		if(!strcmp(h_number,extension)) {
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s'",prefix,h_number);
		}
		else {
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s'",prefix,h_number,extension);
		}

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
					result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP1;
						}
/****
						sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
						sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
						printf("\nsqlcmd:(%s)",sqlcmd);

						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
*/

					if(!strcmp(call_seq,"0"))
						sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|",phoneid+1,option1,tel,option6,bill_type,record);
					else
						sprintf(resPacket,"|RES|4|1|X|");
					return 0;
                }


                sprintf(resPacket,"|RES|4|0|");
                for(j=0; j < 100; j++)
                        strcpy(numlist[j],"");

                for(i=0;i < row_num, i < 100;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        sprintf(numlist[i],"%8.8s",hunt_num);

                                }
                                printf("\n(numlist[i]:(%s)",numlist[i]);
                        }
                }
                mysql_free_result(result);
                result = NULL;

                srand(getpid());
                for(i=0;i < row_num;i++) {
                        randnum = rand()%row_num;
                        strcpy(tmpnum,numlist[i]);
                        strcpy(numlist[i],numlist[randnum]);
                        strcpy(numlist[randnum],tmpnum);

                        printf("\nrow_num:(%d),(%s)",i,numlist[i]);
                        if(i == 99)
                                break;
                }


                for(i=0;i < row_num;i++) {
                        if(strlen(numlist[i]) == 8)
                                sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
                }
	}
        else if(*method == '5') {
		if(!strcmp(h_number,extension)) {
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' order by lasttime ASC",prefix,h_number);
		}
		else {
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by lasttime ASC",prefix,h_number,extension);
		}

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
                        return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP1;
						}
/***
						sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
						sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
						printf("\nsqlcmd:(%s)",sqlcmd);

						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
*/
			if(!strcmp(call_seq,"0"))
				sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			else
				sprintf(resPacket,"|RES|5|1|X|");
                        return 0;
                }

                sprintf(resPacket,"|RES|5|0|");
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        if( i == 0)
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        if(i == 0)
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);

                                }
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
        else if(*method == '6' || *method == '7') {
		if(!strcmp(sub_method+1,"2")) {
			
A_SEQUENCE_E:
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,extension,call_seq);

		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|c",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|%s|0|X|",sub_method);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|d",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|%s|0|X|",sub_method);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP1;
						}
/***
						if(!strcmp(call_seq,"0")) {
								sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
								sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
								printf("\nsqlcmd:(%s)",sqlcmd);

								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
						}
*/
					if(!strcmp(call_seq,"0"))
						sprintf(resPacket,"|RES|%s|1|1%7.7s|%s|%s|%s|%s|%s|e",sub_method,phoneid+1,option1,tel,option6,bill_type,record);
					else
						sprintf(resPacket,"|RES|%s|1|X|",sub_method);
						return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select option1,tel,option6,bill_type,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			goto A_SEQUENCE_E;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				goto A_SEQUENCE_E;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);
					strcpy(bill_type,row[3]?row[3]:"");
					ps_delSpace(bill_type);
					strcpy(record,row[4]?row[4]:"");
					ps_delSpace(record);

					strcpy(crm_070,row[5]?row[5]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row[6]?row[6]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row[7]?row[7]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row[8]?row[8]:"");
					ps_delSpace(org_num);
					strcpy(option2,row[9]?row[9]:"");
					ps_delSpace(option2);
					strcpy(class,row[10]?row[10]:"");
					ps_delSpace(class);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		if(strlen(tel) < 7)
			strcpy(tel,"");

		memset(tmpcrm,0,sizeof(tmpcrm));
		if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
			sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
			commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
		}

		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|%s|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|%s|%s|",sub_method,call_seq,prefix,hunt_num,option1,tel,option6,bill_type,record,option2,class);
		else 
			sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",sub_method,call_seq,hunt_num,option1,tel,option6,bill_type,record,option2,class);

		}
		else if(!strcmp(sub_method+1,"3")) {
			if(!strcmp(h_number,extension))
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
			else
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, sub_method,call_seq);

		printf("\nsqlcmd : (%s)",sqlcmd);

						if( ret = mysql_query(mysql, sqlcmd) ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						result = mysql_store_result( mysql );
						if(!result ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
								mysql_free_result(result);
								result = NULL;
								if(cnt == 0) {
									sleep(2); cnt = 1; goto LOOP1;
								}
		/***********************
								if(!strcmp(call_seq,"0")) {
										sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
										sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
										printf("\nsqlcmd:(%s)",sqlcmd);

										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
								}
		*/
								if(!strcmp(call_seq,"0"))
									sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
								else
									sprintf(resPacket,"|RES|%s|1|X|",sub_method);
								return 0;
						}
				sprintf(resPacket,"|RES|%s|0|",sub_method);
				if(row_num > 20)
					row_num = 20;

				if(!mysql_1)
					sqlinit_1(LOCAL_SERVER);

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if( row) {
						strcpy(hunt_num, row[0]?row[0]:"");
						ps_delSpace(hunt_num);
						strcpy(call_seq, row[1]?row[1]:"0");
						ps_delSpace(call_seq);
				if(strlen(hunt_num) == 4) {
					int j = 0,row_num1;
					if(mysql_1) {
					sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

					printf("\nABSENT : (%s)",sqlcmd);
					ret = mysql_query(mysql_1, sqlcmd);

					printf("\nsqlcmd :(%s)",sqlcmd);

					result_1 = mysql_store_result( mysql_1 );
					if(result_1) {
						row_num1 = mysql_num_rows(result_1);
						if(row_num1 == 0) {
							mysql_free_result(result_1);
							result_1 = NULL;
							continue;
						}
						else {
							row1 = mysql_fetch_row( result_1 );
							if(row1 && row1[1] && *row1[1] == 'Y') {
								mysql_free_result(result_1);
								result_1 = NULL;
								continue;
							}
							strcpy(crm_070,row1[2]?row1[2]:"");
							ps_delSpace(crm_070);
							strcpy(crm_flag,row1[3]?row1[3]:"");
							ps_delSpace(crm_flag);
							strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
							ps_delSpace(crm_messenger_ip);
							strcpy(org_num,row1[5]?row1[5]:"");
							ps_delSpace(org_num);

							memset(tmpcrm,0,sizeof(tmpcrm));
							if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
								sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
								commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
							}
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}

				if(strlen(hunt_num) == 4) {
				int j = 0,row_num1;
				memset(fphone_id,0,sizeof(fphone_id));
				if(mysql_1) {
				if(getpid()%5 == 0)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 1)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
				else if(getpid()%5 == 2)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 3)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number desc", prefix,hunt_num,domain);
				else
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql_1, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						for(j=0;j < row_num1;j++) {
							row1 = mysql_fetch_row( result_1);
							if( row1) {
								strcpy(tmp, row1[1]?row1[1]:"00000000000");
								ps_delSpace(tmp);
								strcpy(fromday, row1[2]?row1[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row1[3]?row1[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row1[4]?row1[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row1[5]?row1[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row1[6]?row1[6]:"0");
								ps_delSpace(kind);
								strcpy(frommin, row1[7]?row1[7]:"0");
								ps_delSpace(frommin);
								strcpy(tomin, row1[8]?row1[8]:"0");
								ps_delSpace(tomin);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;
								if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
									inttotime += 24;
									if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
										tp->tm_hour += 24;
								}
								 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
									if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
										if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
										if(atoi(frommin) <= tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
										if(atoi(tomin) > tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
										forward_check = 1;
									}
									if(forward_check) {
										if(strlen(tmp) == 4) {
											sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) == 8) {
											sprintf(fphone_id,"%s",tmp);
										}
										else if(strlen(tmp) > 8) {
											sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
										}
										else {
											strcpy(kind,"X");
											strcpy(fphone_id,"");
										}
									}
									else {
										strcpy(kind,"X");
										strcpy(fphone_id,"");
									}
								}
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							break;
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}
		/***********************************/
							if(*fphone_id == '\0') {
								sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

								if( datacount == 0) {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
								}
								else {
									if(*fphone_id)
											sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
								}
							}
							else {
								if( datacount == 0) {
									if(*kind == '0') {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
									if(*kind == '3') {
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
												datacount++;
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
												datacount++;
										}
										else if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
								}
								else {
									if(*kind == '0') {
										if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
									if(*kind == '3') {
					
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
										}
										else if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
								}

							}
						}
						else {
							if(datacount == 0) {
								if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
										datacount++;
								}
							}
							else {
								if(*hunt_num)
										sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
							}
						}

					}

					printf("\n\n\n\nresPacket:(%s),.....(%s)",resPacket,kind);
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
			}
	}
        else if(*method == '8' || *method == 'A') {
		if(!strcmp(sub_method+1,"4")) {
			if(!strcmp(h_number,extension)) {
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s'",prefix,h_number,sub_method);
			}
			else {
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and extension = '%s'",prefix,h_number,sub_method,extension);
			}

	printf("\nsqlcmd : (%s)",sqlcmd);

			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
				return 0;
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
				return 0;
			}

			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
						result = NULL;

							if(cnt == 0) {
								sleep(2); cnt = 1; goto LOOP1;
							}
	/****
							sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
							if( mysql_query(mysql, sqlcmd)) {
								sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
								return -1;
							}
							sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
							printf("\nsqlcmd:(%s)",sqlcmd);

							if( mysql_query(mysql, sqlcmd)) {
								sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
								return -1;
							}
	*/

						if(!strcmp(call_seq,"0"))
							sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|",phoneid+1,option1,tel,option6,bill_type,record);
						else
							sprintf(resPacket,"|RES|4|1|X|");
						return 0;
			}


			sprintf(resPacket,"|RES|4|0|");
			for(j=0; j < 100; j++)
				strcpy(numlist[j],"");

			for(i=0;i < row_num, i < 100;i++) {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(hunt_num, row[0]?row[0]:"");
					ps_delSpace(hunt_num);
					strcpy(call_seq, row[1]?row[1]:"0");
					ps_delSpace(call_seq);
					if(strlen(hunt_num) == 4) {
						sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
					}
					else {
						sprintf(numlist[i],"%8.8s",hunt_num);

					}
					printf("\n(numlist[i]:(%s)",numlist[i]);
				}
			}
			mysql_free_result(result);
			result = NULL;

			srand(getpid());
			for(i=0;i < row_num;i++) {
				randnum = rand()%row_num;
				strcpy(tmpnum,numlist[i]);
				strcpy(numlist[i],numlist[randnum]);
				strcpy(numlist[randnum],tmpnum);

				printf("\nrow_num:(%d),(%s)",i,numlist[i]);
				if(i == 99)
					break;
			}


			for(i=0;i < row_num;i++) {
				if(strlen(numlist[i]) == 8)
					sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
			}

		}
		else if(!strcmp(sub_method+1,"3")) {
			if(!strcmp(h_number,extension))
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
			else
				sprintf(sqlcmd, "select distinct number,seq from ars_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, sub_method,call_seq);

		printf("\nsqlcmd : (%s)",sqlcmd);

						if( ret = mysql_query(mysql, sqlcmd) ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						result = mysql_store_result( mysql );
						if(!result ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
								mysql_free_result(result);
								result = NULL;
								if(cnt == 0) {
									sleep(2); cnt = 1; goto LOOP1;
								}
		/***********************
								if(!strcmp(call_seq,"0")) {
										sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
										sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
										printf("\nsqlcmd:(%s)",sqlcmd);

										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
								}
		*/
								if(!strcmp(call_seq,"0"))
									sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
								else
									sprintf(resPacket,"|RES|%s|1|X|",sub_method);
								return 0;
						}
				sprintf(resPacket,"|RES|%s|0|",sub_method);
				if(row_num > 20)
					row_num = 20;

				if(!mysql_1)
					sqlinit_1(LOCAL_SERVER);

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if( row) {
						strcpy(hunt_num, row[0]?row[0]:"");
						ps_delSpace(hunt_num);
						strcpy(call_seq, row[1]?row[1]:"0");
						ps_delSpace(call_seq);
				if(strlen(hunt_num) == 4) {
					int j = 0,row_num1;
					if(mysql_1) {
					sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

					printf("\nABSENT : (%s)",sqlcmd);
					ret = mysql_query(mysql_1, sqlcmd);

					printf("\nsqlcmd :(%s)",sqlcmd);

					result_1 = mysql_store_result( mysql_1 );
					if(result_1) {
						row_num1 = mysql_num_rows(result_1);
						if(row_num1 == 0) {
							mysql_free_result(result_1);
							result_1 = NULL;
							continue;
						}
						else {
							row1 = mysql_fetch_row( result_1 );
							if(row1 && row1[1] && *row1[1] == 'Y') {
								mysql_free_result(result_1);
								result_1 = NULL;
								continue;
							}
							strcpy(crm_070,row1[2]?row1[2]:"");
							ps_delSpace(crm_070);
							strcpy(crm_flag,row1[3]?row1[3]:"");
							ps_delSpace(crm_flag);
							strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
							ps_delSpace(crm_messenger_ip);
							strcpy(org_num,row1[5]?row1[5]:"");
							ps_delSpace(org_num);

							memset(tmpcrm,0,sizeof(tmpcrm));
							if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
								sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
								commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
							}
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}

				if(strlen(hunt_num) == 4) {
				int j = 0,row_num1;
				memset(fphone_id,0,sizeof(fphone_id));
				if(mysql_1) {
				if(getpid()%5 == 0)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 1)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
				else if(getpid()%5 == 2)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 3)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number desc", prefix,hunt_num,domain);
				else
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql_1, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						for(j=0;j < row_num1;j++) {
							row1 = mysql_fetch_row( result_1);
							if( row1) {
								strcpy(tmp, row1[1]?row1[1]:"00000000000");
								ps_delSpace(tmp);
								strcpy(fromday, row1[2]?row1[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row1[3]?row1[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row1[4]?row1[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row1[5]?row1[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row1[6]?row1[6]:"0");
								ps_delSpace(kind);
								strcpy(frommin, row1[7]?row1[7]:"0");
								ps_delSpace(frommin);
								strcpy(tomin, row1[8]?row1[8]:"0");
								ps_delSpace(tomin);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;
								if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
									inttotime += 24;
									if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
										tp->tm_hour += 24;
								}
								 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
									if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
										if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
										if(atoi(frommin) <= tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
										if(atoi(tomin) > tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
										forward_check = 1;
									}
									if(forward_check) {
										if(strlen(tmp) == 4) {
											sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) == 8) {
											sprintf(fphone_id,"%s",tmp);
										}
										else if(strlen(tmp) > 8) {
											sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
										}
										else {
											strcpy(kind,"X");
											strcpy(fphone_id,"");
										}
									}
									else {
										strcpy(kind,"X");
										strcpy(fphone_id,"");
									}
								}
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							break;
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}
		/***********************************/
							if(*fphone_id == '\0') {
								sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

								if( datacount == 0) {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
								}
								else {
									if(*fphone_id)
											sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
								}
							}
							else {
								if( datacount == 0) {
									if(*kind == '0') {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
									if(*kind == '3') {
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
												datacount++;
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
												datacount++;
										}
										else if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
								}
								else {
									if(*kind == '0') {
										if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
									if(*kind == '3') {
					
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
										}
										else if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
								}

							}
						}
						else {
							if(datacount == 0) {
								if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
										datacount++;
								}
							}
							else {
								if(*hunt_num)
										sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
							}
						}

					}

					printf("\n\n\n\nresPacket:(%s),.....(%s)",resPacket,kind);
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(resPacket+strlen(resPacket),"|%s|%s|","","X");
			}

	}
	printf("\nresPacket:(%s)",resPacket);
	return 0;
}
/*************************************************************************************/
/*************************************************************************************/
int
procHNT()
{
char	sqlcmd[512];
char	tmp[64],messenger_ip[32];
char    extension[60];
char    h_number[20];
char    call_seq[11],tel[20];
char    hunt_num[32],numbertype[2],fphone_id[30],option2[5];
char    method[3],ssw_ip[20],option1[10],bill_type[10];
char    record[10],sub_method[3];
char    numlist[100][20],tmpnum[10];
char    fromday[11],totoday[11],fromtime[3],totime[3],kind[2],option6[10];
char	frommin[5],tomin[5],tmpcrm[256],class[20];

int row_num = 0, ret = 0, i=0,j=0, sd=-1,intfromtime,inttotime, randnum=0,datacount=0,cnt = 0;
int	forward_check = 0;
struct  tm      *tp;
long	t;
char	callerid[20],org_num[20];
char	crm_070[15],crm_flag[5],crm_messenger_ip[16];


	memset(crm_070,0,sizeof(crm_070));
	memset(org_num,0,sizeof(org_num));
	memset(callerid,0,sizeof(callerid));
	memset(crm_flag,0,sizeof(crm_flag));
	memset(crm_flag,0,sizeof(class));
	memset(option2,0,sizeof(option2));
	memset(crm_messenger_ip,0,sizeof(crm_messenger_ip));
	memset(number,0,sizeof(number));
	memset(extension,0,sizeof(extension));
	memset(hunt_num,0,sizeof(hunt_num));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(method,0,sizeof(method));
	memset(numbertype,0,sizeof(numbertype));
	memset(ssw_ip,0,sizeof(ssw_ip));
	memset(option1,0,sizeof(option1));
	memset(tel,0,sizeof(tel));
	memset(option6,0,sizeof(option6));
	memset(record,0,sizeof(record));
	memset(bill_type,0,sizeof(bill_type));
	memset(sub_method,0,sizeof(sub_method));
	memset(frommin,0,sizeof(frommin)); 
	memset(tomin,0,sizeof(tomin)); 
	memset(tmpcrm,0,sizeof(tmpcrm)); 

       t=time(0);
       tp = (struct tm *) localtime(&t);

        if(argc < 2)
                return(errorReturn("ErrInputData____",__FILE__,__LINE__));
/***
        if(argv[2] && *argv[2])
                strcpy(prefix,argv[2]);
        else
                strcpy(prefix,"000");
*/

        if(argv[2] && *argv[2])
                strcpy(h_number,argv[2]);
        else
                strcpy(h_number,"00000000000");

        if(argv[3] && *argv[3])
                strcpy(extension,argv[3]);
        else
                strcpy(extension,"0000");

        if(argv[4] && *argv[4])
                strcpy(call_seq,argv[4]);
        else
                strcpy(call_seq,"0");
        if(argv[5] && *argv[5])
                strcpy(ssw_ip,argv[5]);
        else
                strcpy(ssw_ip,SSW_IP);

        if(argv[6] && *argv[6])
                strcpy(sub_method,argv[6]);
        else
                strcpy(sub_method,"");

        if(argv[7] && *argv[7])
                strcpy(callerid,argv[7]);
        else
                strcpy(callerid,"07000000000");

/*
(5)reqPacket:(|HNT|xxx@onnet21.com|07075969000|0|)
mysql> select * from hunting_member;
+--------+-----+-------------+--------+----------+
| prefix | seq | h_number    | number | name     |
+--------+-----+-------------+--------+----------+
| 002    |   2 | 07075969490 | 9498   | dGVzdA== |
| 002    |   1 | 07075969490 | 9500   | dGVzdA== |
+--------+-----+-------------+--------+----------+
2 rows in set (0.00 sec)

mysql> select * from hunting_group;
+----+---------------------+--------+-------------+----------+--------+
| no | domain              | prefix | number      | name     | method |
+----+---------------------+--------+-------------+----------+--------+
| 22 | lgdacom.onnet21.com | 002    | 07075969490 | dGVzdA== | 3      |
| 24 | gw.iyouone.com      | 001    | 07075969000 | MTExMQ== | 1      |
+----+---------------------+--------+-------------+----------+--------+
2 rows in set (0.00 sec)

*/

	//sprintf(sqlcmd, "select phoneid,numbertype from number_manage where 070number = '%s'",h_number);
	sprintf(sqlcmd, "select phoneid,numbertype,option1,tel,option6,bill_type,record,option2,class from number_manage where 070number = '%s'",h_number);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}
	result = mysql_store_result( mysql );
	if(result) {
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			sprintf(resPacket,"|RES|0|0|X|");
			return 0;
		}
		else  {
			row = mysql_fetch_row( result );
			if( row) {
				strcpy(phoneid, row[0]?row[0]:"00000000");
				ps_delSpace(phoneid);
				strcpy(numbertype, row[1]?row[1]:"0");
				ps_delSpace(numbertype);

				strcpy(option1,row[2]?row[2]:"N");
				ps_delSpace(option1);
				strcpy(tel,row[3]?row[3]:"");
				ps_delSpace(tel);
				strcpy(option6,row[4]?row[4]:"");
				ps_delSpace(option6);
				strcpy(bill_type,row[5]?row[5]:"");
				ps_delSpace(bill_type);
				strcpy(record,row[6]?row[6]:"");
				ps_delSpace(record);
				strcpy(option2,row[7]?row[7]:"");
				ps_delSpace(option2);
				strcpy(class,row[8]?row[8]:"");
				ps_delSpace(class);
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
	else {
		sprintf(resPacket,"|RES|0|0|X|");
		return 0;
	}

	strncpy(prefix,phoneid+1,3);

	if(!strcmp(h_number,extension))
		sprintf(sqlcmd, "select method from hunting_group where prefix = '%3.3s' and number = '%s'",prefix,h_number);
	else 
		sprintf(sqlcmd, "select method from hunting_group where prefix = '%3.3s' and number = '%s' and extension = '%s'",prefix,h_number,extension);

	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
		return 0;
	}

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
		return 0;
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
		return 0;
	}
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(method, row[0]?row[0]:"2");
		ps_delSpace(method);
	}
	mysql_free_result(result);
	result = NULL;

	if(*method == '6' && *sub_method == '\0')
		strcpy(sub_method,"62");
	if(*method == '7' && *sub_method == '\0')
		strcpy(sub_method,"73");
	if(*method == '8' && *sub_method == '\0')
		strcpy(sub_method,"84");
	if(*method == 'A' && *sub_method == '\0')
		strcpy(sub_method,"A3");

LOOP:
	if(*method == '0') {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
	}
	else if(*method == '1') {
		sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
	}
	else if(*method == '2') {
SEQUENCE:
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and seq > %s order by seq asc ",prefix,h_number,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,extension,call_seq);


		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			//sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			//sprintf(resPacket,"|RES|2|0|X|");
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP;
						}
/***
						if(!strcmp(call_seq,"0")) {
								sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
								sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
								printf("\nsqlcmd:(%s)",sqlcmd);

								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
						}
*/
			if(!strcmp(call_seq,"0"))
				sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			else
				sprintf(resPacket,"|RES|2|1|X|");
				return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		memset(option1,0,sizeof(option1));
		memset(tel,0,sizeof(tel));
		memset(option6,0,sizeof(option6));
		memset(record,0,sizeof(record));
		memset(bill_type,0,sizeof(bill_type));
	
		sprintf(sqlcmd, "select option1,tel,option6,bill_type,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			goto SEQUENCE;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				goto SEQUENCE;
			}
			else {
//char	crm_070[15],crm_flag[5],crm_messenger_ip[16];
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);
					strcpy(bill_type,row[3]?row[3]:"");
					ps_delSpace(bill_type);
					strcpy(record,row[4]?row[4]:"");
					ps_delSpace(record);
					strcpy(crm_070,row[5]?row[5]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row[6]?row[6]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row[7]?row[7]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row[8]?row[8]:"");
					ps_delSpace(org_num);
					strcpy(option2,row[9]?row[9]:"");
					ps_delSpace(option2);
					strcpy(class,row[10]?row[10]:"");
					ps_delSpace(class);

				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		if(strlen(tel) < 7)
			strcpy(tel,"");
		else {
			row_num = 0;
			if(!strncmp(tel,"070",3)) {
				sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}
				else {
					result = mysql_store_result( mysql );
					if(result) {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
						result = NULL;
					}
				}
			}
			else {
				sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					;
				}
				else {
					result = mysql_store_result( mysql );
					if(result) {
						row_num = mysql_num_rows(result);
						mysql_free_result(result);
						result = NULL;
					}
				}
			}
			if(row_num > 0)
				strcpy(tel,"");
		}

		if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
			sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
			commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
		}

		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|2|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",call_seq,prefix,hunt_num,option1,tel,option6,bill_type,record,crm_070,crm_flag,crm_messenger_ip,option2,class);
		else 
			sprintf(resPacket,"|RES|2|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",call_seq,hunt_num,option1,tel,option6,bill_type,record,crm_070,crm_flag,crm_messenger_ip,option2,class);

	}
	else if(*method == '3') {
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and seq > %s order by seq asc ",prefix,h_number,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, call_seq);

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|",phoneid+1,option1,tel,option6,bill_type,record);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|5",phoneid+1,option1,tel,option6,bill_type,record);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;
						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP;
						}
/***
						if(!strcmp(call_seq,"0")) {
								sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
								sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
								printf("\nsqlcmd:(%s)",sqlcmd);

								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
						}
*/
						if(!strcmp(call_seq,"0"))
							sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|-",phoneid+1,option1,tel,option6,bill_type,record);
						else
							sprintf(resPacket,"|RES|3|1|X|");

						return 0;
                }
		sprintf(resPacket,"|RES|3|0|");
		if(row_num > 20)
			row_num = 20;

		if(!mysql_1)
			sqlinit_1(LOCAL_SERVER);

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(hunt_num, row[0]?row[0]:"");
				ps_delSpace(hunt_num);
				strcpy(call_seq, row[1]?row[1]:"0");
				ps_delSpace(call_seq);
		if(strlen(hunt_num) == 4) {
			int j = 0,row_num1;
			if(mysql_1) {
			sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

			printf("\nABSENT : (%s)",sqlcmd);
			ret = mysql_query(mysql_1, sqlcmd);

			printf("\nsqlcmd :(%s)",sqlcmd);

			result_1 = mysql_store_result( mysql_1 );
			if(result_1) {
				row_num1 = mysql_num_rows(result_1);
				if(row_num1 == 0) {
					mysql_free_result(result_1);
					result_1 = NULL;
					continue;
				}
				else {
					row1 = mysql_fetch_row( result_1 );
					if(row1 && row1[1] && *row1[1] == 'Y') {
						mysql_free_result(result_1);
						result_1 = NULL;
						continue;
					}
					strcpy(crm_070,row1[2]?row1[2]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row1[3]?row1[3]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row1[5]?row1[5]:"");
					ps_delSpace(org_num);

					if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
						sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
						commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
					}
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
			printf("\n11111111>tmpCrm : (%s)",tmpcrm);
		}

		if(strlen(hunt_num) == 4) {
		int j = 0,row_num1;
		memset(fphone_id,0,sizeof(fphone_id));
		if(mysql_1) {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
		else if(getpid()%5 == 2)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number asc", prefix,hunt_num,domain);
		else if(getpid()%5 == 3)
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number desc", prefix,hunt_num,domain);
		else
			sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

		printf("\nFORWARD_INFO : (%s)",sqlcmd);
		ret = mysql_query(mysql_1, sqlcmd);

		printf("\nsqlcmd :(%s)",sqlcmd);

		result_1 = mysql_store_result( mysql_1 );
		if(result_1) {
			row_num1 = mysql_num_rows(result_1);
			if( row_num1 == 0 ) {
				mysql_free_result(result_1);
				result_1 = NULL;
			}	
			else {
				for(j=0;j < row_num1;j++) {
				    row1 = mysql_fetch_row( result_1);
				    if( row1) {
						strcpy(tmp, row1[1]?row1[1]:"00000000");
						ps_delSpace(tmp);
						strcpy(fromday, row1[2]?row1[2]:"0");
						ps_delSpace(fromday);
						strcpy(totoday, row1[3]?row1[3]:"0");
						ps_delSpace(totoday);
						strcpy(fromtime, row1[4]?row1[4]:"0");
						ps_delSpace(fromtime);
						strcpy(totime, row1[5]?row1[5]:"0");
						ps_delSpace(totime);
						strcpy(kind, row1[6]?row1[6]:"0");
						ps_delSpace(kind);
						strcpy(frommin, row1[7]?row1[7]:"0");
						ps_delSpace(frommin);
						strcpy(tomin, row1[8]?row1[8]:"0");
						ps_delSpace(tomin);

						intfromtime= atoi(fromtime);
						inttotime= atoi(totime);
						if(intfromtime == 0 && inttotime ==0)
							inttotime +=24;
						if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
							inttotime += 24;
							if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
								tp->tm_hour += 24;
						}

					 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
						if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
							if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
								forward_check = 1;
							}
						}
						else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
							if(atoi(frommin) <= tp->tm_min) {
								forward_check = 1;
							}
						}
						else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
							if(atoi(tomin) > tp->tm_min) {
								forward_check = 1;
							}
						}
						else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
							forward_check = 1;
						}
						if(forward_check) {
							    if(strlen(tmp) == 4) {

								sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
							    }
							    else if(strlen(tmp) == 8) {
								sprintf(fphone_id,"%s",tmp);
							    }
							    else if(strlen(tmp) > 8) {
								sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
							    }
							else {
								strcpy(kind,"X");
								strcpy(fphone_id,"");
							}
						}
						else {
							strcpy(kind,"X");
							strcpy(fphone_id,"");
						}

					}
					else {
						strcpy(kind,"X");
						strcpy(fphone_id,"");
					}
					}
					break;
				}
			}
			mysql_free_result(result_1);
			result_1 = NULL;
			}
		}
/***********************************/
	if(strlen(tmp) > 8 && mysql_1) {
		row_num1 = 0;
		if(!strncmp(tmp,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
		}
		if(row_num1 > 0)
			strcpy(fphone_id,"");
	}
					if(*fphone_id == '\0') {
						sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

						if( datacount == 0) {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
						}
						else {
							if(*fphone_id)
									sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
						}
					}
					else {
						if( datacount == 0) {
							if(*kind == '0') {
								if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
							if(*kind == '3') {
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										datacount++;
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
										datacount++;
								}
								else if(*fphone_id) {
										sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
										datacount++;
								}
							}
						}
						else {
							if(*kind == '0') {
								if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
							if(*kind == '3') {
			
								if(*hunt_num && *fphone_id) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
								}
								else if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
								}
								else if(*fphone_id)
										sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
							}
						}

					}
				}
				else {
					if(datacount == 0) {
						if(*hunt_num) {
								sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
								datacount++;
						}
					}
					else {
						if(*hunt_num)
								sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
					}
				}

			}
		}
		mysql_free_result(result);
		result = NULL;

		printf("\n2222222222tmpCrm:(%s)",tmpcrm);
		printf("\n2222222222tmpCrm:(%s)",tmpcrm);

		sprintf(resPacket+strlen(resPacket),"|%s|%s|%s","","X",tmpcrm);
	}
	else if(*method == '4') {
		if(!strcmp(h_number,extension)) {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s'",prefix,h_number);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by seq asc",prefix,h_number);
		else if(getpid()%5 == 2)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by seq desc",prefix,h_number);
		else if(getpid()%5 == 3)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by number desc",prefix,h_number);
		else if(getpid()%5 == 4)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by number asc",prefix,h_number);
		}
		else {
		if(getpid()%5 == 0)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s'",prefix,h_number,extension);
		else if(getpid()%5 == 1)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by seq asc",prefix,h_number,extension);
		else if(getpid()%5 == 2)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by seq desc",prefix,h_number,extension);
		else if(getpid()%5 == 3)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by number desc",prefix,h_number,extension);
		else if(getpid()%5 == 4)
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by number asc",prefix,h_number,extension);

		}
			

printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|6",phoneid+1,option1,tel,option6,bill_type,record);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|7",phoneid+1,option1,tel,option6,bill_type,record);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
						mysql_free_result(result);
						result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP;
						}
/***
						sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
						sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
						printf("\nsqlcmd:(%s)",sqlcmd);

						if( mysql_query(mysql, sqlcmd)) {
							sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
							return -1;
						}
*/
						if(!strcmp(call_seq,"0"))
							sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|~",phoneid+1,option1,tel,option6,bill_type,record);
						else
							sprintf(resPacket,"|RES|4|1|X|");
						return 0;
                }


		for(j=0; j < 100; j++)
			strcpy(numlist[j],"");

		sprintf(resPacket,"|RES|4|0|");
		for(i=0;i < row_num, i < 100;i++) {
			row = mysql_fetch_row( result);
			if( row) {
				strcpy(hunt_num, row[0]?row[0]:"");
				ps_delSpace(hunt_num);
				strcpy(call_seq, row[1]?row[1]:"0");
				ps_delSpace(call_seq);
				if(strlen(hunt_num) == 4) {
					sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
/*****
					if( i == 0)
						sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
					else
						sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
*****/
				}
				else {
					sprintf(numlist[i],"%8.8s",hunt_num);
/****
					if(i == 0)
						sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
					else
						sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
*/

				}
				printf("\n(numlist[i]:(%s)",numlist[i]);
			}
		}
		mysql_free_result(result);
		result = NULL;

		srand(getpid());
		for(i=0;i < row_num;i++) {
			randnum = rand()%row_num;
			strcpy(tmpnum,numlist[i]);
			strcpy(numlist[i],numlist[randnum]);
			strcpy(numlist[randnum],tmpnum);

			printf("\nrow_num:(%d),(%s)",i,numlist[i]);
			if(i == 99)
				break;
		}

		
		for(i=0;i < row_num;i++) {
			if(strlen(numlist[i]) == 8)
				sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
		}

    }
    else if(*method == '5') {
                if(!strcmp(h_number,extension)) {
                        sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by lasttime ASC",prefix,h_number);
                }
                else {
                        sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by lasttime ASC",prefix,h_number,extension);
                }


printf("\nsqlcmd : (%s)",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			//sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			//sprintf(resPacket,"|RES|5|0|X|");
                        return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP;
						}
			if(!strcmp(call_seq,"0"))
				sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s||||%s|%s|",phoneid+1,option1,tel,option6,bill_type,record,option2,class);
			else
				sprintf(resPacket,"|RES|5|1|X|");
                        return 0;
                }
                sprintf(resPacket,"|RES|5|0|");
                for(i=0;i < row_num;i++) {
                        row = mysql_fetch_row( result);
                        if( row) {
                                strcpy(hunt_num, row[0]?row[0]:"");
                                ps_delSpace(hunt_num);
                                strcpy(call_seq, row[1]?row[1]:"0");
                                ps_delSpace(call_seq);
                                if(strlen(hunt_num) == 4) {
                                        if( i == 0)
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
                                }
                                else {
                                        if(i == 0)
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
                                        else
                                                sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);

                                }
                        }
                }
                mysql_free_result(result);
                result = NULL;
        }
        else if(*method == '6' || *method == '7') {
			if(!strcmp(sub_method+1,"2")) {
			
SEQUENCE_E:
		if(!strcmp(h_number,extension))
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
		else
			sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and extension = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,extension,call_seq);

		printf("\n(((%s))))",sqlcmd);

                if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|c",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|%s|0|X|",sub_method);
			return 0;
                }

                result = mysql_store_result( mysql );
                if(!result ) {
			sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|d",phoneid+1,option1,tel,option6,bill_type,record);
			//sprintf(resPacket,"|RES|%s|0|X|",sub_method);
			return 0;
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
						result = NULL;

						if(cnt == 0) {
							sleep(2); cnt = 1; goto LOOP;
						}
/***
						if(!strcmp(call_seq,"0")) {
								sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
								sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
								printf("\nsqlcmd:(%s)",sqlcmd);

								if( mysql_query(mysql, sqlcmd)) {
									sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
									return -1;
								}
						}
*/
					if(!strcmp(call_seq,"0"))
						sprintf(resPacket,"|RES|%s|1|1%7.7s|%s|%s|%s|%s|%s|e",sub_method,phoneid+1,option1,tel,option6,bill_type,record);
					else
						sprintf(resPacket,"|RES|%s|1|X|",sub_method);
						return 0;
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(hunt_num, row[0]?row[0]:"");
                        ps_delSpace(hunt_num);
                        strcpy(call_seq, row[1]?row[1]:"0");
                        ps_delSpace(call_seq);
                }
		mysql_free_result(result);
		result = NULL;

		sprintf(sqlcmd, "select option1,tel,option6,bill_type,record,070number,crm_flag,messenger_ip,org_num,option2,class from number_manage where phoneid='0%3.3s%4.4s' and domain = '%s'",prefix,hunt_num,domain);

		printf("\n(((%s))))",sqlcmd);

		if( ret = mysql_query(mysql, sqlcmd) ) {
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			goto SEQUENCE_E;
		}
		else {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				goto SEQUENCE_E;
			}
			else {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(option1,row[0]?row[0]:"N");
					ps_delSpace(option1);
					strcpy(tel,row[1]?row[1]:"");
					ps_delSpace(tel);
					strcpy(option6,row[2]?row[2]:"");
					ps_delSpace(option6);
					strcpy(bill_type,row[3]?row[3]:"");
					ps_delSpace(bill_type);
					strcpy(record,row[4]?row[4]:"");
					ps_delSpace(record);
					strcpy(crm_070,row[5]?row[5]:"");
					ps_delSpace(crm_070);
					strcpy(crm_flag,row[6]?row[6]:"");
					ps_delSpace(crm_flag);
					strcpy(crm_messenger_ip,row[7]?row[7]:"");
					ps_delSpace(crm_messenger_ip);
					strcpy(org_num,row[8]?row[8]:"");
					ps_delSpace(org_num);
					strcpy(option2,row[9]?row[9]:"");
					ps_delSpace(option2);
					strcpy(class,row[10]?row[10]:"");
					ps_delSpace(class);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

		if(strlen(tel) < 7)
			strcpy(tel,"");

		if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
			sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
			commandSendUc(tmpcrm,"NOT",crm_messenger_ip,0);
		}
		if(strlen(hunt_num) == 4) 
			sprintf(resPacket,"|RES|%s|%s|1%3.3s%4.4s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",sub_method,call_seq,prefix,hunt_num,option1,tel,option6,bill_type,record,crm_070,crm_flag,crm_messenger_ip,option2,class);
		else 
			sprintf(resPacket,"|RES|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",sub_method,call_seq,hunt_num,option1,tel,option6,bill_type,record,crm_070,crm_flag,crm_messenger_ip,option2,class);

		}
		else if(!strcmp(sub_method+1,"3")) {
				if(!strcmp(h_number,extension))
					sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
				else
					sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, sub_method,call_seq);

		printf("\nsqlcmd : (%s)",sqlcmd);

						if( ret = mysql_query(mysql, sqlcmd) ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						result = mysql_store_result( mysql );
						if(!result ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
								mysql_free_result(result);
								result = NULL;
								if(cnt == 0) {
									sleep(2); cnt = 1; goto LOOP;
								}
		/***********************
								if(!strcmp(call_seq,"0")) {
										sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
										sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
										printf("\nsqlcmd:(%s)",sqlcmd);

										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
								}
		*/
								if(!strcmp(call_seq,"0"))
									sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
								else
									sprintf(resPacket,"|RES|%s|1|X|",sub_method);
								return 0;
						}
				sprintf(resPacket,"|RES|%s|0|",sub_method);
				if(row_num > 20)
					row_num = 20;

				if(!mysql_1)
					sqlinit_1(LOCAL_SERVER);

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if( row) {
						strcpy(hunt_num, row[0]?row[0]:"");
						ps_delSpace(hunt_num);
						strcpy(call_seq, row[1]?row[1]:"0");
						ps_delSpace(call_seq);
				if(strlen(hunt_num) == 4) {
					int j = 0,row_num1;
					if(mysql_1) {
					sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

					printf("\nABSENT : (%s)",sqlcmd);
					ret = mysql_query(mysql_1, sqlcmd);

					printf("\nsqlcmd :(%s)",sqlcmd);

					result_1 = mysql_store_result( mysql_1 );
					if(result_1) {
						row_num1 = mysql_num_rows(result_1);
						if(row_num1 == 0) {
							mysql_free_result(result_1);
							result_1 = NULL;
							continue;
						}
						else {
							row1 = mysql_fetch_row( result_1 );
							if(row1 && row1[1] && *row1[1] == 'Y') {
								mysql_free_result(result_1);
								result_1 = NULL;
								continue;
							}

							strcpy(crm_070,row1[2]?row1[2]:"");
							ps_delSpace(crm_070);
							strcpy(crm_flag,row1[3]?row1[3]:"");
							ps_delSpace(crm_flag);
							strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
							ps_delSpace(crm_messenger_ip);
							strcpy(org_num,row1[5]?row1[5]:"");
							ps_delSpace(org_num);

							if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
								sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
								commandSendUc(tmpcrm,"NOT",crm_messenger_ip, 0);
							}



						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
					printf("\n333333333333tmpCrm:(%s)",tmpcrm);
				}

				if(strlen(hunt_num) == 4) {
				int j = 0,row_num1;
				memset(fphone_id,0,sizeof(fphone_id));
				if(mysql_1) {
				if(getpid()%5 == 0)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 1)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
				else if(getpid()%5 == 2)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 3)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number desc", prefix,hunt_num,domain);
				else
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql_1, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						for(j=0;j < row_num1;j++) {
							row1 = mysql_fetch_row( result_1);
							if( row1) {
								strcpy(tmp, row1[1]?row1[1]:"00000000");
								ps_delSpace(tmp);
								strcpy(fromday, row1[2]?row1[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row1[3]?row1[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row1[4]?row1[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row1[5]?row1[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row1[6]?row1[6]:"0");
								ps_delSpace(kind);
								strcpy(frommin, row1[7]?row1[7]:"0");
								ps_delSpace(frommin);
								strcpy(tomin, row1[8]?row1[8]:"0");
								ps_delSpace(tomin);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;

								if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
									inttotime += 24;
									if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
										tp->tm_hour += 24;
								}

								 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
									if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
										if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
										if(atoi(frommin) <= tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
										if(atoi(tomin) > tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
										forward_check = 1;
									}
									if(forward_check) {
										if(strlen(tmp) == 4) {

											sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) == 8) {
											sprintf(fphone_id,"%s",tmp);
										}
										else if(strlen(tmp) > 8) {
											sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
										}
										else{
											strcpy(kind,"X");
											strcpy(fphone_id,"");
										}
									}
									else {
										strcpy(kind,"X");
										strcpy(fphone_id,"");
									}
								}
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							break;
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}
	/***********************************/
	if(strlen(tmp) > 8 && mysql_1) {
		row_num1 = 0;
		if(!strncmp(tmp,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
				mysql_free_result(result_1);
				result_1 = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
		}
		if(row_num1 > 0)
			strcpy(fphone_id,"");
	}
							if(*fphone_id == '\0') {
								sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

								if( datacount == 0) {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
								}
								else {
									if(*fphone_id)
											sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
								}
							}
							else {
								if( datacount == 0) {
									if(*kind == '0') {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
									if(*kind == '3') {
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
												datacount++;
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
												datacount++;
										}
										else if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
								}
								else {
									if(*kind == '0') {
										if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
									if(*kind == '3') {
					
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
										}
										else if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
								}

							}
						}
						else {
							if(datacount == 0) {
								if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
										datacount++;
								}
							}
							else {
								if(*hunt_num)
										sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
							}
						}

					}
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(resPacket+strlen(resPacket),"|%s|%s|%s|","","X",tmpcrm);
			}
/////////////////////////

	}
        else if(*method == '8' || *method == 'A') {
		if(!strcmp(sub_method+1,"4")) {
			if(!strcmp(h_number,extension)) {
			if(getpid()%5 == 0)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s'",prefix,h_number);
			else if(getpid()%5 == 1)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by seq asc",prefix,h_number);
			else if(getpid()%5 == 2)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by seq desc",prefix,h_number);
			else if(getpid()%5 == 3)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by number desc",prefix,h_number);
			else if(getpid()%5 == 4)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' order by number asc",prefix,h_number);
			}
			else {
			if(getpid()%5 == 0)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s'",prefix,h_number,extension);
			else if(getpid()%5 == 1)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by seq asc",prefix,h_number,extension);
			else if(getpid()%5 == 2)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by seq desc",prefix,h_number,extension);
			else if(getpid()%5 == 3)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by number desc",prefix,h_number,extension);
			else if(getpid()%5 == 4)
				sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' order by number asc",prefix,h_number,extension);

			}
				

	printf("\nsqlcmd : (%s)",sqlcmd);

			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|6",phoneid+1,option1,tel,option6,bill_type,record);
				return 0;
			}

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket,"|RES|2|0|1%7.7s|%s|%s|%s|%s|%s|7",phoneid+1,option1,tel,option6,bill_type,record);
				return 0;
			}

			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
							mysql_free_result(result);
							result = NULL;

							if(cnt == 0) {
								sleep(2); cnt = 1; goto LOOP;
							}
	/***
							sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
							if( mysql_query(mysql, sqlcmd)) {
								sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
								return -1;
							}
							sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
							printf("\nsqlcmd:(%s)",sqlcmd);

							if( mysql_query(mysql, sqlcmd)) {
								sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
								return -1;
							}
	*/
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|2|1|1%7.7s|%s|%s|%s|%s|%s|~",phoneid+1,option1,tel,option6,bill_type,record);
							else
								sprintf(resPacket,"|RES|4|1|X|");
							return 0;
			}


			for(j=0; j < 100; j++)
				strcpy(numlist[j],"");

			sprintf(resPacket,"|RES|4|0|");
			for(i=0;i < row_num, i < 100;i++) {
				row = mysql_fetch_row( result);
				if( row) {
					strcpy(hunt_num, row[0]?row[0]:"");
					ps_delSpace(hunt_num);
					strcpy(call_seq, row[1]?row[1]:"0");
					ps_delSpace(call_seq);
					if(strlen(hunt_num) == 4) {
						sprintf(numlist[i],"1%3.3s%4.4s",prefix,hunt_num);
	/*****
						if( i == 0)
							sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
						else
							sprintf(resPacket+strlen(resPacket),"1%3.3s%4.4s",prefix,hunt_num);
	*****/
					}
					else {
						sprintf(numlist[i],"%8.8s",hunt_num);
	/****
						if(i == 0)
							sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
						else
							sprintf(resPacket+strlen(resPacket),"%8.8s",hunt_num);
	*/

					}
					printf("\n(numlist[i]:(%s)",numlist[i]);
				}
			}
			mysql_free_result(result);
			result = NULL;

			srand(getpid());
			for(i=0;i < row_num;i++) {
				randnum = rand()%row_num;
				strcpy(tmpnum,numlist[i]);
				strcpy(numlist[i],numlist[randnum]);
				strcpy(numlist[randnum],tmpnum);

				printf("\nrow_num:(%d),(%s)",i,numlist[i]);
				if(i == 99)
					break;
			}

			
			for(i=0;i < row_num;i++) {
				if(strlen(numlist[i]) == 8)
					sprintf(resPacket+strlen(resPacket),"%8.8s",numlist[i]);
			}


		}
		else if(!strcmp(sub_method+1,"3")) {
				if(!strcmp(h_number,extension))
					sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,sub_method,call_seq);
				else
					sprintf(sqlcmd, "select distinct number,seq from hunting_member where prefix = '%3.3s' and h_number = '%s' and extension = '%s' and method = '%s' and seq > %s order by seq asc ",prefix,h_number,extension, sub_method,call_seq);

		printf("\nsqlcmd : (%s)",sqlcmd);

						if( ret = mysql_query(mysql, sqlcmd) ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						result = mysql_store_result( mysql );
						if(!result ) {
							if(!strcmp(call_seq,"0"))
								sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
							else
								sprintf(resPacket,"|RES|%s|0|X|",sub_method);
							return 0;
						}

						row_num = mysql_num_rows(result);
						if( row_num == 0 ) {
								mysql_free_result(result);
								result = NULL;
								if(cnt == 0) {
									sleep(2); cnt = 1; goto LOOP;
								}
		/***********************
								if(!strcmp(call_seq,"0")) {
										sprintf(sqlcmd,"update number_list set type=1,arsflag = 'X' where number='%s'",h_number);
										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Data Not Found!.(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
										sprintf(sqlcmd,"update number_manage set numbertype = '1', option7 = 'X' where 070number='%s'",h_number);
										printf("\nsqlcmd:(%s)",sqlcmd);

										if( mysql_query(mysql, sqlcmd)) {
											sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
											return -1;
										}
								}
		*/
								if(!strcmp(call_seq,"0"))
									sprintf(resPacket,"|RES|%s|1|SIP/1%7.7s",sub_method,phoneid+1);
								else
									sprintf(resPacket,"|RES|%s|1|X|",sub_method);
								return 0;
						}
				sprintf(resPacket,"|RES|%s|0|",sub_method);
				if(row_num > 20)
					row_num = 20;

				if(!mysql_1)
					sqlinit_1(LOCAL_SERVER);

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if( row) {
						strcpy(hunt_num, row[0]?row[0]:"");
						ps_delSpace(hunt_num);
						strcpy(call_seq, row[1]?row[1]:"0");
						ps_delSpace(call_seq);
				if(strlen(hunt_num) == 4) {
					int j = 0,row_num1;
					if(mysql_1) {
					sprintf(sqlcmd, "select phoneid,bill_type,070number,crm_flag,messenger_ip,org_num from number_manage where phoneid = '0%3.3s%4.4s' and (domain='%s' or domain='') ", prefix,hunt_num,domain);

					printf("\nABSENT : (%s)",sqlcmd);
					ret = mysql_query(mysql_1, sqlcmd);

					printf("\nsqlcmd :(%s)",sqlcmd);

					result_1 = mysql_store_result( mysql_1 );
					if(result_1) {
						row_num1 = mysql_num_rows(result_1);
						if(row_num1 == 0) {
							mysql_free_result(result_1);
							result_1 = NULL;
							continue;
						}
						else {
							row1 = mysql_fetch_row( result_1 );
							if(row1 && row1[1] && *row1[1] == 'Y') {
								mysql_free_result(result_1);
								result_1 = NULL;
								continue;
							}

							strcpy(crm_070,row1[2]?row1[2]:"");
							ps_delSpace(crm_070);
							strcpy(crm_flag,row1[3]?row1[3]:"");
							ps_delSpace(crm_flag);
							strcpy(crm_messenger_ip,row1[4]?row1[4]:"");
							ps_delSpace(crm_messenger_ip);
							strcpy(org_num,row1[5]?row1[5]:"");
							ps_delSpace(org_num);

							if(strlen(crm_messenger_ip) > 10 && strcmp(crm_messenger_ip,"127.0.0.1") &&  (*crm_flag == 'A' || *crm_flag == 'B' || *crm_flag == 'C')) {
								sprintf(tmpcrm,"%s^%s^%s^%s^%s",crm_070,domain,hunt_num,callerid,org_num);
								commandSendUc(tmpcrm,"NOT",crm_messenger_ip, 0);
							}



						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
					printf("\n333333333333tmpCrm:(%s)",tmpcrm);
				}

				if(strlen(hunt_num) == 4) {
				int j = 0,row_num1;
				memset(fphone_id,0,sizeof(fphone_id));
				if(mysql_1) {
				if(getpid()%5 == 0)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 1)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by executeseq desc", prefix,hunt_num,domain);
				else if(getpid()%5 == 2)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number asc", prefix,hunt_num,domain);
				else if(getpid()%5 == 3)
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='') order by number desc", prefix,hunt_num,domain);
				else
					sprintf(sqlcmd, "select executeseq,number,fromday,today,fromtime,totime,kind,frommin,tomin from forward_number where substr(phoneid,2,7) = '%3.3s%4.4s' and (kind = '0' or kind = '3') and (domain='%s' or domain='')", prefix,hunt_num,domain);

				printf("\nFORWARD_INFO : (%s)",sqlcmd);
				ret = mysql_query(mysql_1, sqlcmd);

				printf("\nsqlcmd :(%s)",sqlcmd);

				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					if( row_num1 == 0 ) {
						mysql_free_result(result_1);
						result_1 = NULL;
					}	
					else {
						for(j=0;j < row_num1;j++) {
							row1 = mysql_fetch_row( result_1);
							if( row1) {
								strcpy(tmp, row1[1]?row1[1]:"00000000");
								ps_delSpace(tmp);
								strcpy(fromday, row1[2]?row1[2]:"0");
								ps_delSpace(fromday);
								strcpy(totoday, row1[3]?row1[3]:"0");
								ps_delSpace(totoday);
								strcpy(fromtime, row1[4]?row1[4]:"0");
								ps_delSpace(fromtime);
								strcpy(totime, row1[5]?row1[5]:"0");
								ps_delSpace(totime);
								strcpy(kind, row1[6]?row1[6]:"0");
								ps_delSpace(kind);
								strcpy(frommin, row1[7]?row1[7]:"0");
								ps_delSpace(frommin);
								strcpy(tomin, row1[8]?row1[8]:"0");
								ps_delSpace(tomin);

								intfromtime= atoi(fromtime);
								inttotime= atoi(totime);
								if(intfromtime == 0 && inttotime ==0)
									inttotime +=24;

								if((inttotime < intfromtime) || (inttotime == intfromtime && atoi(frommin) > atoi(tomin))) {
									inttotime += 24;
									if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
										tp->tm_hour += 24;
								}

								 if(((time(0) < atol(totoday) && time(0) > atol(fromday)) || (atol(fromday) == 0 && atol(totoday)==0)) && ( inttotime >= intfromtime)) {
									if(tp->tm_hour == intfromtime && tp->tm_hour == inttotime) {
										if(atoi(frommin) <= tp->tm_min && atoi(tomin) >  tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour == intfromtime && tp->tm_hour < inttotime) {
										if(atoi(frommin) <= tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour == inttotime) {
										if(atoi(tomin) > tp->tm_min) {
											forward_check = 1;
										}
									}
									else if(tp->tm_hour > intfromtime && tp->tm_hour < inttotime) {
										forward_check = 1;
									}
									if(forward_check) {
										if(strlen(tmp) == 4) {

											sprintf(fphone_id,"1%3.3s%4.4s",prefix,tmp);
										}
										else if(strlen(tmp) == 8) {
											sprintf(fphone_id,"%s",tmp);
										}
										else if(strlen(tmp) > 8) {
											sprintf(fphone_id,"%s@%s",tmp,ssw_ip);
										}
										else{
											strcpy(kind,"X");
											strcpy(fphone_id,"");
										}
									}
									else {
										strcpy(kind,"X");
										strcpy(fphone_id,"");
									}
								}
								else {
									strcpy(kind,"X");
									strcpy(fphone_id,"");
								}
							}
							break;
						}
					}
					mysql_free_result(result_1);
					result_1 = NULL;
					}
				}
	/***********************************/
	if(strlen(tmp) > 8 && mysql_1) {
		row_num1 = 0;
		if(!strncmp(tmp,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
				mysql_free_result(result_1);
				result_1 = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tmp);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				;
			}
			else {
				result_1 = mysql_store_result( mysql_1 );
				if(result_1) {
					row_num1 = mysql_num_rows(result_1);
					mysql_free_result(result_1);
					result_1 = NULL;
				}
			}
		}
		if(row_num1 > 0)
			strcpy(fphone_id,"");
	}
							if(*fphone_id == '\0') {
								sprintf(fphone_id,"1%3.3s%4.4s",prefix,hunt_num);

								if( datacount == 0) {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
								}
								else {
									if(*fphone_id)
											sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
								}
							}
							else {
								if( datacount == 0) {
									if(*kind == '0') {
										if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
									if(*kind == '3') {
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
												datacount++;
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"SIP/1%3.3s%4.4s",prefix,hunt_num);
												datacount++;
										}
										else if(*fphone_id) {
												sprintf(resPacket+strlen(resPacket),"SIP/%s",fphone_id);
												datacount++;
										}
									}
								}
								else {
									if(*kind == '0') {
										if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
									if(*kind == '3') {
					
										if(*hunt_num && *fphone_id) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s&SIP/%s",prefix,hunt_num,fphone_id);
										}
										else if(*hunt_num) {
												sprintf(resPacket+strlen(resPacket),"&SIP/1%3.3s%4.4s",prefix,hunt_num);
										}
										else if(*fphone_id)
												sprintf(resPacket+strlen(resPacket),"&SIP/%s",fphone_id);
									}
								}

							}
						}
						else {
							if(datacount == 0) {
								if(*hunt_num) {
										sprintf(resPacket+strlen(resPacket),"SIP/%8.8s",hunt_num);
										datacount++;
								}
							}
							else {
								if(*hunt_num)
										sprintf(resPacket+strlen(resPacket),"&SIP/%8.8s",hunt_num);
							}
						}

					}
				}
				mysql_free_result(result);
				result = NULL;

				sprintf(resPacket+strlen(resPacket),"|%s|%s|%s|","","X",tmpcrm);
			}

	}
		printf("\ntmpCrm:(%s)",tmpcrm);
		printf("\ntmpCrm:(%s)",tmpcrm);

	printf("\nresPacket:(%s)",resPacket);
	return 0;
}

/*************************************************************************
* hunting group Call method change
|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|13131|4|A|
|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|13131|4|A|

|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|111111|4|R|<<<<<|RES|UHT userid:(superadmin)-(lgdacom.onnet
21.com)-(111111)-(07075969498)-(4):(211.32.148.89)
248 | lgdacom.onnet21.com        | 002    | 07075969498 | 0         | MTExMTEx                         | 2      |

105)-(0000000105|RES|0829708|N|N|0|N||||211.32.148.81|goodman0513|gw.springwall.co.kr|9708|1|N|N|N|||||1||123.142.128
.16|)
(5)reqPacket:(|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|111111|4|R|)
parseMailAddr:domain:(lgdacom.onnet21.com)
sqlcmd:(select proxyip,prefix from custom_info where domain = 'lgdacom.onnet21.com')
(5)-(|RES|UHT userid:(superadmin)-(lgdacom.onnet21.com)-(111111)-(07075969498)-(4)),  (UHT)
(96)-(0000000096|RES|0829714|N|N|0|N||||211.32.148.81|jh|gw.springwall.co.kr|9714|1|N|N|N|||||1||123.142.128.16|)
*************************************************************************/
int
procUH1()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20];
  char	break_include[10];

	memset(directnumber,0,sizeof(directnumber));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"1");
/*
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");


    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");

    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");

    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");

	if(*method == '9' && argv[25])
		strcpy(directnumber,argv[25]);

    if(argv[28] && *argv[28])
                strcpy(break_include,argv[28]);
        else
                strcpy(break_include,"0");


   if(strlen(method) > 1 || !isdigitstr(method)) {
	sprintf(resPacket,"|ERR|Update Error!method(0~4) input:(%s)",method);
	return -1;
   }

    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[26] && *argv[26]) 
				strcpy(prefix,argv[26]);
			if(argv[27] && *argv[27]) 
				strcpy(serverip,argv[27]);
			if(argv[28] && *argv[28])
				strcpy(break_include,argv[28]);
	}

	if(*flag == 'A') {
		sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s' \
			where domain='%s' and number = '%s' and extension = '%s'",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,directnumber,domain,number,extension);
		//if(*fromtime != '0' || *safromtime != '0' || *sunfromtime != '0') {
			ret = mysql_query(mysql, sqlcmd);
			sprintf(sqlcmd,"UPDATE hunting_group set fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s' ,safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',break_include='%s' \
				where domain='%s' and number = '%s' and extension <> '-'",fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,domain,number);
		//}
	}
	else if(*flag == 'R') {
		sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s' ,breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s' \
			where domain='%s' and number = '%s' and extension = '-'",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,domain,number);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}   
			if(*method == '6') {
				sprintf(sqlcmd,"UPDATE hunting_member set method= concat('6',substr(method,2,1)) where h_number = '%s'",number);
			}
			else if(*method == '7') {
				sprintf(sqlcmd,"UPDATE hunting_member set method= concat('7',substr(method,2,1)) where h_number = '%s'",number);
			}
	}

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   


	sprintf(commandBuf,"|UH1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UH1')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UH1|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip);
sprintf(resPacket,"|RES|UHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UH1')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
sprintf(resPacket,"|RES|UHT userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
return 0;       
}
/*************************************************************************
* hunting group Call method change
|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|13131|4|A|
|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|13131|4|A|

|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|111111|4|R|<<<<<|RES|UHT userid:(superadmin)-(lgdacom.onnet
21.com)-(111111)-(07075969498)-(4):(211.32.148.89)
248 | lgdacom.onnet21.com        | 002    | 07075969498 | 0         | MTExMTEx                         | 2      |

105)-(0000000105|RES|0829708|N|N|0|N||||211.32.148.81|goodman0513|gw.springwall.co.kr|9708|1|N|N|N|||||1||123.142.128
.16|)
(5)reqPacket:(|UHT|superadmin@lgdacom.onnet21.com|07075969498|0|111111|4|R|)
parseMailAddr:domain:(lgdacom.onnet21.com)
sqlcmd:(select proxyip,prefix from custom_info where domain = 'lgdacom.onnet21.com')
(5)-(|RES|UHT userid:(superadmin)-(lgdacom.onnet21.com)-(111111)-(07075969498)-(4)),  (UHT)
(96)-(0000000096|RES|0829714|N|N|0|N||||211.32.148.81|jh|gw.springwall.co.kr|9714|1|N|N|N|||||1||123.142.128.16|)
added moh_bill 
*************************************************************************/
int
procUH2()
{
  char mp3dir[1024];
  char email[256],sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20];
  char	colorclass[20];
  char	myextension[20];
  char	break_include[10];

	memset(directnumber,0,sizeof(directnumber));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));

	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(colorclass,0,sizeof(colorclass));
	memset(myextension,0,sizeof(myextension));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"1");
/*
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4]) {
		if(strlen(argv[4]) < sizeof(name))
			strcpy(name,argv[4]);
		else
			sprintf(name,"%d",getpid());
	}
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(method,argv[5]);
	else 
		strcpy(method,"1");
    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");


    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");

    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");

    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");

    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");

    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");

	if(*method == '9' && argv[25])
		strcpy(directnumber,argv[25]);

    if(argv[28] && *argv[28])
                strcpy(break_include,argv[28]);
        else
                strcpy(break_include,"0");

	if(argv[29] && *argv[29])
		strcpy(colorclass,argv[29]);
	else
		strcpy(colorclass,"");
		if(argv[30] && *argv[30])
			strcpy(myextension,argv[30]);
		else
			strcpy(myextension,"-");



    if(strlen(number) < 11)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
			if(argv[26] && *argv[26]) 
				strcpy(prefix,argv[26]);
			if(argv[27] && *argv[27]) 
				strcpy(serverip,argv[27]);
			if(argv[28] && *argv[28])
				strcpy(break_include,argv[28]);

			if(argv[29] && *argv[29])
				strcpy(colorclass,argv[29]);
			else
				strcpy(colorclass,"");
		if(argv[30] && *argv[30])
			strcpy(myextension,argv[30]);
		else
			strcpy(myextension,"-");

	}


	if(strlen(forward_num) > 8) {
		row_num = 0;
		if(!strncmp(forward_num,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			return(errorReturn("EInput Data(number-forward_num)",__FILE__,__LINE__));
	}



/********
        if(*flag == 'A') {
                sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s' ,colorclass='%s',myextension='%s'\
                        where domain='%s' and number = '%s' and extension = '%s' and myextension='%s'",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass,myextension,domain,number,extension,myextension);
		if(*myextension == "-"){
	                sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s' ,colorclass='%s',myextension='%s'\
                        where domain='%s' and number = '%s' and extension <> '-' and myextension='%s'",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass,myextension,domain,number,extension,myextension);

		}

        }
*********/
        if(*flag == 'A') {
                sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s',colorclass='%s' ,myextension='-'\
                        where domain='%s' and number = '%s' and extension = '%s' and (myextension='-' OR myextension='%s')",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass,domain,number,extension,extension);
                //if(*fromtime != '0' || *safromtime != '0' || *sunfromtime != '0') {
	printf("\nars update sqlcmd .... 1:(%s)",sqlcmd);
                        ret = mysql_query(mysql, sqlcmd);
                        sprintf(sqlcmd,"UPDATE hunting_group set fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s' ,safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',break_include='%s',colorclass='%s',myextension='-' \
                                where domain='%s' and number = '%s' and extension <> '-' and myextension='-'",fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,colorclass,domain,number);
                //}
        }
        else if(*flag == 'R') {
                sprintf(sqlcmd,"UPDATE hunting_group set name = '%s',method = '%s',fromtime='%s',totime='%s',conn_method='%s',forward_num='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s' ,breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',directnumber='%s',break_include='%s',colorclass='%s' \
                        where domain='%s' and number = '%s' and extension = '-'  and myextension='-'",name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,colorclass,domain,number);
                        if( ret = mysql_query(mysql, sqlcmd) ) {
                                ;
                        }
                        if(*method == '6') {
                                sprintf(sqlcmd,"UPDATE hunting_member set method= concat('6',substr(method,2,1)) where h_number = '%s'",number);
                        }
                        else if(*method == '7') {
                                sprintf(sqlcmd,"UPDATE hunting_member set method= concat('7',substr(method,2,1)) where h_number = '%s'",number);
                        }
                        else if(*method == '8') {
                                sprintf(sqlcmd,"UPDATE hunting_member set method= concat('8',substr(method,2,1)) where h_number = '%s'",number);
                        }
                        else if(*method == 'A') {
                                sprintf(sqlcmd,"UPDATE hunting_member set method= concat('A',substr(method,2,1)) where h_number = '%s'",number);
                        }

        }


	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   


	sprintf(commandBuf,"|UH2|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],name,argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UH2')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|UH2|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],name,argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],prefix,serverip,break_include,colorclass,myextension);
sprintf(resPacket,"|RES|UH2 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UH2')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}
sprintf(resPacket,"|RES|UH2 userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);
return 0;       
}

int
procRN2()
{
  char passwd[256];
  char email[256];
  char representNum[256];
  int   qid,returncode;
  int   test=0,ret,row_num=0,i;
  char tmp[100],recorddate[21];
  unsigned int	tmpNumber, frepresent=0;
  char    sqlcmd[512],forbiden_call[11],fromtime[11],totime[11],org_num[20],svc_kind[10],bill_type[10];


	memset(email,0,sizeof(email));
	memset(recorddate,0,sizeof(recorddate));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(org_num,0,sizeof(org_num)); 
	memset(forbiden_call,0,sizeof(forbiden_call)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(bill_type,0,sizeof(bill_type)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/***중앙 , 로컬 구분 불필요....(양쪽 모두 sync되어야 함
	If(PVS == 1) 
	{
*/
		//sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,org_num,svc_kind,bill_type,ipcc_application,ipcc_record,moh_bill,ipcc_ivr from number_manage where 070number in (select number from number_list where domain='%s' and status=1) and domain = '%s' order by numbertype,070number,extension asc",domain,domain);

		sprintf(sqlcmd, "select distinct(substr(phoneid,5,4)), imid,numbertype,070number,forbiden_call ,fromtime,totime,recorddate,org_num,svc_kind,bill_type,ipcc_application,ipcc_record,moh_bill,ipcc_ivr from number_manage where 070number in (select number from number_list where domain='%s') and domain = '%s' order by numbertype,070number,extension asc",domain,domain);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd)) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
/***
	}
*/
        
/***
		imid,type,number,extension,phoneid
*/
	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) 
	{
		row = mysql_fetch_row( result);
		if( row) 
		{
                        strcpy(dbhost, row[0]?row[0]:"unknown");
                        strcpy(dbuserid, row[1]?row[1]:"unknown");
                        qid =  row[2]?atoi(row[2]):1;
                        strcpy(dbdomain, row[3]?row[3]:"unknown");
                        strcpy(forbiden_call, row[4]?row[4]:"unknown");
                        strcpy(fromtime, row[5]?row[5]:"0");
                        strcpy(totime, row[6]?row[6]:"0");
                        strcpy(recorddate, row[7]?row[7]:"0");
                        strcpy(org_num, row[8]?row[8]:"");
                        strcpy(svc_kind, row[9]?row[9]:"");
                        strcpy(bill_type, row[10]?row[10]:"");
			if(strcmp(bill_type,"Y")) strcpy(bill_type,"N");
                        strcpy(ipcc_application, row[11]?row[11]:"");
                        strcpy(ipcc_record, row[12]?row[12]:"");
                        strcpy(moh_bill, row[13]?row[13]:"");
                        strcpy(ipcc_ivr, row[14]?row[14]:"");

                        ps_delSpace(dbuserid);
                        ps_delSpace(dbhost);
                        ps_delSpace(dbdomain);
                        ps_delSpace(forbiden_call);
                        ps_delSpace(fromtime);
                        ps_delSpace(totime);
                        ps_delSpace(recorddate);
                        ps_delSpace(org_num);
                        ps_delSpace(svc_kind);
                        ps_delSpace(bill_type);
                        ps_delSpace(ipcc_application);
                        ps_delSpace(ipcc_record);
                        ps_delSpace(moh_bill);
                        ps_delSpace(ipcc_ivr);
			if(strcmp(ipcc_application,"Y")) strcpy(ipcc_application,"N");
			if(strcmp(ipcc_record,"Y")) strcpy(ipcc_record,"N");


			/* OJKIM START 개인번호 가진 사람일때 대표번도 명기*/
		    sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",dbhost,dbdomain,bill_type,ipcc_record,ipcc_application);
		    //sprintf(resPacket+strlen(resPacket),"|%s^%d^%s^%s^%s",dbuserid,qid,dbdomain,dbhost,forbiden_call);
/* OJKIM END*/
			
		}
		if(!((i+1)%20)) 
		{
			if((i+1) < row_num) 
			{
				strcat(resPacket,"\n");
				tcpWrite(masterFd, resPacket);
				printf("\n[5m%s[0m");
				sprintf(resPacket,"|RES");
			}
			else {
				mysql_free_result(result);
				result = NULL;
				return 0;       
			}
		}
		selcnt++;
	}
	mysql_free_result(result);
	result = NULL;

    return 0;       
}

/*************************************************************************
* insert callback
*************************************************************************/
int
procCAL()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20],phoneid[10];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[64];
  char	number[21],h_number[20],name[64],code[5],seq[10],sqlcmd1[512];
  char	method[5],extension[10],num070[14];
  char	offday[10],offname[30],maxcall[10];
	char	callback_flag[10],destP[256],command[64];
char    callbackcode[21];
char    ivrcode[21];
char    queuecode[21];
char    s_num[21];
char    r_num[21];
char    callback_num[21];
char    off_flag[6];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(num070,0,sizeof(num070)); 
	memset(interface,0,sizeof(interface)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
        memset(callbackcode,0,sizeof(callbackcode));
        memset(ivrcode,0,sizeof(ivrcode));
        memset(queuecode,0,sizeof(queuecode));
        memset(s_num,0,sizeof(s_num));
        memset(r_num,0,sizeof(r_num));
        memset(callback_num,0,sizeof(callback_num));

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(defaultip,argv[2]);
	else
		strcpy(defaultip,"127.0.0.1");

	if(argv[3] && *argv[3])
		strcpy(callbackcode,argv[3]);
	else
		strcpy(callbackcode,"0");

	if(argv[4] && *argv[4])
		strcpy(ivrcode,argv[4]);
	else
		strcpy(ivrcode,"0");

	if(argv[5] && *argv[5])
		strcpy(queuecode,argv[5]);
	else
		strcpy(queuecode,"0");

	if(argv[6] && *argv[6])
		strcpy(s_num,argv[6]);
	else
		strcpy(s_num,"0");

	if(argv[7] && *argv[7])
		strcpy(r_num,argv[7]);
	else
		strcpy(r_num,"0");

	if(argv[8] && *argv[8])
		strcpy(callback_num,argv[8]);
	else
		strcpy(callback_num,"0");

	if(argv[9] && *argv[9])
		strcpy(off_flag,argv[9]);
	else
		strcpy(off_flag,"0");


	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;

	}
/**
+--------------+------------------+------+-----+---------------------+----------------+
| Field        | Type             | Null | Key | Default             | Extra          |
+--------------+------------------+------+-----+---------------------+----------------+
| uniqueid     | int(10) unsigned | NO   | PRI | NULL                | auto_increment | 
| domain       | varchar(64)      | YES  | MUL |                     |                | 
| defaultip    | varchar(20)      | YES  |     | 127.0.0.1           |                | 
| callbackcode | varchar(30)      | YES  |     | NULL                |                | 
| ivrcode      | varchar(30)      | YES  |     | NULL                |                | 
| queuecode    | varchar(30)      | YES  |     | NULL                |                | 
| sender_num   | varchar(20)      | YES  |     | NULL                |                | 
| receiver_num | varchar(20)      | YES  |     | NULL                |                | 
| callback_num | varchar(20)      | YES  |     | NULL                |                | 
| off_flag     | varchar(2)       | YES  |     | NULL                |                | 
| recorddate   | datetime         | YES  |     | 0000-00-00 00:00:00 |                | 
+--------------+------------------+------+-----+---------------------+----------------+
*/

	if(PVS == 1) {
		sprintf(sqlcmd,"INSERT into  callback_list( domain,defaultip,callbackcode,ivrcode,queuecode,sender_num,receiver_num,callback_num,off_flag,recorddate) values('%s','%s','%s','%s','%s','%s','%s','%s','%s',NOW())",domain,defaultip,callbackcode,ivrcode,queuecode,s_num,r_num,callback_num,off_flag);
		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
		printf("\nsqlcmd:(%s)",sqlcmd);


                if( mysql_query(mysql, sqlcmd)) {
                        sprintf(resPacket, "|ERR|error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        logCmd();
                }
	}
	sprintf(resPacket,"|RES|CAL success!");
	return 0;       
}
/*************************************************************************
* new IVR Number All Off tine check ars group
*************************************************************************/
int
procIOQ()
{
  char email[256], sqlcmd1[512];
  int   qid,returncode,fields_num,cpid, fd=0,tryCnt = 0;
  int   test=0, ret, row_num, centerflag=0,retry=0, i=0;
  char tmp[100],seq[20],today[20];
  unsigned int	tmpNumber;
  char    sqlcmd[1024],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10],sec_extension[10];
  char	type[10],arsflag[10],flag[5];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  breakfromtime[10],breaktotime[10];
  char  breakfrommin[10],breaktomin[10];
  char  break_include[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[20];
  char  defaultip[20];
  char  directnumber[20];
  char  prefix[10],inner_digit[10],callback_flag[5];
	char	policy[20];
	char	queue_name[64], process_method[11];

	memset(email,0,sizeof(email));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(frommin,0,sizeof(frommin));
	memset(totime,0,sizeof(totime));
	memset(tomin,0,sizeof(tomin));

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));

	memset(breaktomin,0,sizeof(breaktomin));
	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breakfrommin,0,sizeof(breakfrommin));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(directnumber,0,sizeof(directnumber));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(extension,0,sizeof(extension)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(type,0,sizeof(type)); 
	memset(arsflag,0,sizeof(arsflag)); 
	memset(flag,0,sizeof(flag)); 
	memset(method,0,sizeof(method)); 
	memset(ment_file,0,sizeof(ment_file)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(defaultip,0,sizeof(defaultip)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(inner_digit,0,sizeof(inner_digit)); 
	memset(queue_name,0,sizeof(queue_name)); 
	memset(process_method,0,sizeof(process_method)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(extension,argv[3]);
	else 
		strcpy(extension,"-");
/***
   if(strlen(extension) > 1 || !isdigitstr(extension)) {
	sprintf(resPacket,"|ERR|group number invalid:(%s)",extension);
	return -1;
   }
*/

    if(argv[4] && *argv[4])
		strcpy(name,argv[4]);
	else 
		strcpy(name,"");

    if(argv[5] && *argv[5])
		strcpy(sec_extension,argv[5]);
	else 
		strcpy(sec_extension,"");


    if(argv[6] && *argv[6])
		strcpy(flag,argv[6]);
	else 
		strcpy(flag,"A");

    if(*flag == 'R')
		strcpy(extension,"-");

    if(argv[7] && *argv[7])
		strcpy(fromtime,argv[7]);
	else 
		strcpy(fromtime,"0");

    if(argv[8] && *argv[8])
                strcpy(frommin,argv[8]);
        else
                strcpy(frommin,"0");


    if(argv[9] && *argv[9])
		strcpy(totime,argv[9]);
	else 
		strcpy(totime,"0");
	if(*totime == '\0')
		strcpy(totime,"0");
		
    if(argv[10] && *argv[10])
                strcpy(tomin,argv[10]);
        else
                strcpy(tomin,"0");
    if(argv[11] && *argv[11])
		strcpy(conn_method,argv[11]);
	else 
		strcpy(conn_method,"0");
    if(argv[12] && *argv[12])
		strcpy(forward_num,argv[12]);
	else 
		strcpy(forward_num,"");


    if(argv[13] && *argv[13])
                strcpy(safromtime,argv[13]);
        else
                strcpy(safromtime,"0");

    if(argv[14] && *argv[14])
                strcpy(safrommin,argv[14]);
        else
                strcpy(safrommin,"0");


    if(argv[15] && *argv[15])
                strcpy(satotime,argv[15]);
        else
                strcpy(satotime,"0");

    if(argv[16] && *argv[16])
                strcpy(satomin,argv[16]);
        else
                strcpy(satomin,"0");

    if(argv[17] && *argv[17])
                strcpy(sunfromtime,argv[17]);
        else
                strcpy(sunfromtime,"0");

    if(argv[18] && *argv[18])
                strcpy(sunfrommin,argv[18]);
        else
                strcpy(sunfrommin,"0");


    if(argv[19] && *argv[19])
                strcpy(suntotime,argv[19]);
        else
                strcpy(suntotime,"0");

    if(argv[20] && *argv[20])
                strcpy(suntomin,argv[20]);
        else
                strcpy(suntomin,"0");
    if(argv[21] && *argv[21])
                strcpy(breakfromtime,argv[21]);
        else
                strcpy(breakfromtime,"0");

    if(argv[22] && *argv[22])
                strcpy(breakfrommin,argv[22]);
        else
                strcpy(breakfrommin,"0");

    if(argv[23] && *argv[23])
                strcpy(breaktotime,argv[23]);
        else
                strcpy(breaktotime,"0");

    if(argv[24] && *argv[24])
                strcpy(breaktomin,argv[24]);
        else
                strcpy(breaktomin,"0");


    if(argv[25] && *argv[25])
                strcpy(holfromtime,argv[25]);
        else
                strcpy(holfromtime,"0");

    if(argv[26] && *argv[26])
                strcpy(holfrommin,argv[26]);
        else
                strcpy(holfrommin,"0");


    if(argv[27] && *argv[27])
                strcpy(holtotime,argv[27]);
        else
                strcpy(holtotime,"0");

    if(argv[28] && *argv[28])
                strcpy(holtomin,argv[28]);
        else
                strcpy(holtomin,"0");
    if(argv[29] && *argv[29])
                strcpy(ment_file,argv[29]);
        else
                strcpy(ment_file,"");
    if(argv[30] && *argv[30])
                strcpy(ment_flag,argv[30]);
        else
                strcpy(ment_flag,"");

    if(*method == '9' && argv[31])
                strcpy(directnumber,argv[31]);

    if(argv[32] && *argv[32])
                strcpy(break_include,argv[32]);
        else
                strcpy(break_include,"0");

/***
    if(argv[31] && *argv[31])
                strcpy(break_include,argv[31]);
        else
                strcpy(break_include,"0");
*/

    if(argv[33] && *argv[33])
                strcpy(wait_music,argv[33]);
        else
                strcpy(wait_music,"default");


    if(argv[34] && *argv[34])
                strcpy(queue_name,argv[34]);
        else
                strcpy(queue_name,"");

    if(argv[35] && *argv[35])
                strcpy(process_method,argv[35]);
        else
		return(errorReturn("EInput Data(process_method)",__FILE__,__LINE__));

    if(argv[36] && *argv[36])
                strcpy(callback_flag,argv[36]);
        else
                strcpy(callback_flag,"0");


/*******
	if(*method == '2')
		strcpy(policy,"linear");
	if(*method == '3')
		strcpy(policy,"ringall");
	if(*method == '4')
		strcpy(policy,"random");
	if(*method == '5')
		strcpy(policy,"roundrobin");
	else
		strcpy(policy,"leastrecent");

	if(strlen(method) > 1 || !isdigitstr(method)) {
		sprintf(resPacket,"|ERR|오류:method(0~4) input::(%s)",method);
		return -1;
	}
*/


	if(strlen(number) < 11 || !isdigitstr(number))
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

	if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}
	else {
		if(argv[37] && *argv[37]) 
			strcpy(prefix,argv[37]);
		if(argv[38] && *argv[38]) 
			strcpy(serverip,argv[38]);

	}

	sprintf(sqlcmd,"delete from pre_ars_check where number = '%s'",number);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit();
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}
	if(PVS == 1) {
		sprintf(sqlcmd, "select callback_flag from max_call where domain = '%s' and number='%s'",domain,number);
		printf("\n[5m(%s)[0m",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(result ) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) 
			{
//				mysql_free_result(result);
//				result = NULL;
//				return(errorReturn("90000|",__FILE__,__LINE__));
			}
			else {
				row = mysql_fetch_row( result );
				if( row) 
				{
					strcpy(callback_flag, row[0]?row[0]:"0");
					ps_delSpace(callback_flag);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}   
	}

	sprintf(sqlcmd,"INSERT into pre_ars_check( \
		domain,prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,ment_file,ment_flag,wait_music,regdate,queue_name,process_method,directnumber,callback_flag) values( \
		'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s',NOW(),'%s','%s','%s','%s')",domain,prefix,number,extension,name,sec_extension, \
		fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,ment_file,ment_flag, wait_music,queue_name,process_method,directnumber,callback_flag);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	/**** ARS_GROUP TIME UPDATE ****/
		sprintf(sqlcmd,"UPDATE ars_group set fromtime='%s',totime='%s',frommin='%s',tomin='%s',safromtime='%s',safrommin='%s',satotime='%s',satomin='%s' \
,sunfromtime='%s',sunfrommin='%s',suntotime='%s',suntomin='%s',holfromtime='%s',holfrommin='%s',holtotime='%s',holtomin='%s',breakfromtime='%s',breakfrommin='%s',breaktotime='%s',breaktomin='%s',break_include='%s' where domain='%s' and number = '%s'",fromtime,totime,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,domain,number);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		;
	}   

/********
	sprintf(sqlcmd,"delete from queue_table where domain = '%s' and defaultip ='%s' and name = '%s'",domain,defaultip,name);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
	}

	sprintf(sqlcmd,"INSERT into queue_table(domain,defaultip,name, musiconhold,announce ,context,strategy ,timeout ,retry ,maxlen ,announce_frequency,announce_holdtime, monitor_format ,monitor_join,queue_youarenext, queue_thankyou,regdate,eventmemberstatus,eventwhencalled,joinempty) values ('%s','%s','%s','%s','','callback_context','%s',90,1,100,0,'no','','no','silence','',NOW(),1,1,'yes')",domain,serverip,name,wait_music,policy);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Input Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}
*/

	sprintf(commandBuf,"|IOQ|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],argv[32],argv[33],queue_name,process_method,callback_flag,prefix,serverip);
	if(PVS == 1 && MASTER == 1) 
	{

		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IOQ')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

	sprintf(commandBuf,"|IOQ|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],argv[8],argv[9],argv[10],argv[11],argv[12],argv[13],argv[14],argv[15],argv[16],argv[17],argv[18],argv[19],argv[20],argv[21],argv[22],argv[23],argv[24],argv[25],argv[26],argv[27],argv[28],argv[29],argv[30],argv[31],argv[32],argv[33],queue_name,process_method,callback_flag,prefix,serverip);

		sprintf(resPacket,"|RES|IOQ userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'IOQ')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

    sprintf(resPacket,"|RES|IOQ userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,name,number,method,queue_name,process_method);
    return 0;       
}

/*************************************************************************
* ars group,
*************************************************************************/
int
procROQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	name[65],number[20],method[5],extension[10],sec_extension[10];
  char	code[10],flag[2];
  char	fromtime[10],totime[10],conn_method[10];
  char	frommin[10],tomin[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];

  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	directnumber[20],break_include[10];
	char    inner_method[10];
  char	holfromtime[10],holtotime[10];
  char	holfrommin[10],holtomin[10];
  char  ment_file[40];
  char  ment_flag[10];
  char  wait_music[40];
	char	queue_name[64], process_method[11];
	char	callback_flag[5];

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(directnumber,0,sizeof(directnumber));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(fromtime,0,sizeof(fromtime));
	memset(totime,0,sizeof(totime));
	memset(conn_method,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(flag,0,sizeof(flag)); 
	memset(breakfromtime,0,sizeof(breakfromtime)); 
	memset(breakfrommin,0,sizeof(breakfrommin)); 
	memset(breaktotime,0,sizeof(breaktotime)); 
	memset(breaktomin,0,sizeof(breaktomin)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));
	memset(break_include,0,sizeof(break_include));
	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));
	memset(ment_file,0,sizeof(ment_file)); 
	memset(ment_flag,0,sizeof(ment_flag)); 
	memset(wait_music,0,sizeof(wait_music)); 
	memset(queue_name,0,sizeof(queue_name)); 
	memset(process_method,0,sizeof(process_method)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(callback_flag,0,sizeof(callback_flag)); 
	memset(number,0,sizeof(number)); 

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);

    if(argv[3] && *argv[3])
		strcpy(flag,argv[3]);
	else 
		strcpy(flag,"A");
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);


//		if(*flag == 'R')
			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag from pre_ars_check where domain = '%s' and extension = '-' and number = '%s'",domain,number);
//		else 
//			sprintf(sqlcmd, "select distinct prefix,number,extension,name,method,fromtime,totime,conn_method,forward_num,frommin,tomin,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag from pre_ars_check where domain = '%s' and extension <> '-'",domain);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error hunting_group!(%s, %s)",mysql_error(mysql),sqlcmd );
			logCmd();
			return(-1);
		}   
				
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
			logCmd();
			return -1;
		}

		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++)
		{
			row = mysql_fetch_row( result );
			if(row)
			{
				strcpy(prefix, row[0]?row[0]:"001");
				ps_delSpace(prefix);
				strcpy(number, row[1]?row[1]:"001");
				ps_delSpace(number);
				strcpy(extension, row[2]?row[2]:"1");
				ps_delSpace(extension);
				strcpy(name, row[3]?row[3]:"___");
				ps_delSpace(name);
				strcpy(sec_extension, row[4]?row[4]:"");
				ps_delSpace(sec_extension);
				strcpy(fromtime, row[5]?row[5]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[6]?row[6]:"0");
				ps_delSpace(totime);
				strcpy(conn_method, row[7]?row[7]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[8]?row[8]:"");
				ps_delSpace(forward_num);
				strcpy(frommin, row[9]?row[9]:"0");
				ps_delSpace(tomin);
				strcpy(tomin, row[10]?row[10]:"0");
				ps_delSpace(tomin);
				strcpy(safromtime, row[11]?row[11]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[12]?row[12]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[13]?row[13]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[14]?row[14]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[15]?row[15]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[16]?row[16]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[17]?row[17]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[18]?row[18]:"0");
				ps_delSpace(suntomin);

				strcpy(holfromtime, row[19]?row[19]:"0");
				ps_delSpace(holfromtime);
				strcpy(holfrommin, row[20]?row[20]:"0");
				ps_delSpace(holfrommin);
				strcpy(holtotime, row[21]?row[21]:"0");
				ps_delSpace(holtotime);
				strcpy(holtomin, row[22]?row[22]:"0");
				ps_delSpace(holtomin);


				strcpy(breakfromtime, row[23]?row[23]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[24]?row[24]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[25]?row[25]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[26]?row[26]:"0");
				ps_delSpace(breaktomin);
				strcpy(directnumber, row[27]?row[27]:"");
				ps_delSpace(directnumber);

				strcpy(break_include, row[28]?row[28]:"0");
				ps_delSpace(break_include);
				strcpy(inner_method, row[29]?row[29]:"0");
				ps_delSpace(inner_method);

				strcpy(ment_file, row[30]?row[30]:"0");
				ps_delSpace(ment_file);
				strcpy(ment_flag, row[31]?row[31]:"0");
				ps_delSpace(ment_flag);

				strcpy(wait_music, row[32]?row[32]:"default");
				ps_delSpace(wait_music);

				strcpy(queue_name, row[33]?row[33]:"default");
				ps_delSpace(queue_name);

				strcpy(process_method, row[34]?row[34]:"3");
				ps_delSpace(process_method);
				strcpy(callback_flag, row[35]?row[35]:"1");
				ps_delSpace(callback_flag);
			}

//			if(*process_method == '3' && strlen(queue_name) > 2) {
//				if(!mysql_1)
//					sqlinit_1(LOCAL_SERVER);
//
//				sprintf(sqlcmd1, "select name from queue_table where domain ='%s' and name= '%s'",domain,queue_name);
//
//				printf("\nsqlcmd1:(%s)",sqlcmd1);
//				ret = mysql_query(mysql_1, sqlcmd1);
//
//				result_1 = mysql_store_result( mysql_1 );
//				if(result_1) {
//					row_num1 = mysql_num_rows(result_1);
//					if( row_num1 == 0 ) {
//						mysql_free_result(result_1);
//						result_1 = NULL;
//						continue;
//					}	
//					else {
//						    row1 = mysql_fetch_row( result_1);
//						    if( row1) {
//							;
//						    }
//					}
//					mysql_free_result(result_1);
//					result_1 = NULL;
//				}
//			}

	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);
	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);
	printf("\n%s^%s^%s^%s\n",holfromtime,holfrommin,holtotime,holtomin);

			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s",prefix,number,extension,name,sec_extension, fromtime,frommin,totime,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,directnumber,break_include,inner_method,ment_file,ment_flag,wait_music,queue_name,process_method,callback_flag);

                                        if(!((i+1)%10))
                                        {
                                                if((i+1) < row_num)
                                                {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                                }
                                                else
                                                {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        return 0;
                                                }
                                        }

		}
		mysql_free_result(result);
		result = NULL;

	  return 0;       
}
/*************************************************************************
* ars group
*************************************************************************/
int
procDOQ()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65];
  char	name[65],number[20],method[5],extension[10],flag[5],sec_extension[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(extension,0,sizeof(extension)); 
	memset(sec_extension,0,sizeof(sec_extension)); 
	memset(flag,0,sizeof(flag)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
                snprintf(number,sizeof(number),"%s",argv[2]);
    else
	strcpy(number,"0");

    if(argv[3] && *argv[3])
	strcpy(extension,argv[3]);
    else
	strcpy(extension,"-");

    if(argv[4] && *argv[4])
	strcpy(sec_extension,argv[4]);
    else
	strcpy(sec_extension,"");

    if(strlen(number) < 9)
		return(errorReturn("EInput Data(number)",__FILE__,__LINE__));

        if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
	}


	if(strlen(number) > 10) {
			sprintf(sqlcmd, "select name from pre_ars_check where number= '%s'",number);

		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}

		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
			return(-1);
		}

		row = mysql_fetch_row( result );
		if(row) {
			strcpy(name, row[0]?row[0]:"");
			ps_delSpace(name);
		}
		mysql_free_result(result);
		result = NULL;


		sprintf(sqlcmd,"DELETE from  pre_ars_check \
			where domain='%s' and number = '%s'",domain,number);
		printf("\nsqlcmd : (%s)",sqlcmd);

		if( mysql_query(mysql, sqlcmd)) {
			sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}


	}

	sprintf(commandBuf,"|DOQ|%s@%s|%s|%s|%s|",user,domain,argv[2],extension,sec_extension);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt) values ('%s','%s','%s','0',1)",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|DOQ|%s@%s|%s|%s|%s|",user,domain,argv[2],extension,sec_extension);
		sprintf(resPacket,"|RES|DOQ userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,extension,number);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);		
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DOQ')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|DOQ userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,number,extension,number);
	return 0;       
}
/*************************************************************************
* ivr-통계
*************************************************************************/
int
procIVR()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,row_num1=0;
  int   test=0, ret, row_num, centerflag=0,retry=0,i;
  char tmp[100],seq[20],today[20],num070[20];
  unsigned int  tmpNumber;
  char    sqlcmd[1024],sqlcmd1[1024],forward_num[30],mailbox[64];
  char  name[65],code[10],number[32],h_number[20],extension[10];
  char  membername[20], interface[20],penalty[11],paused[11],paused_cause[21];
  char  callbackcode[30],ivrcode[30],queuecode[30],sender_num[15],receiver_num[15];
  char  callback_num[15],recorddate[15],fromsearch[20],tosearch[20],fromtime[20],totime[20];
  char  data_column[1024];
  char  _time[5],count[11],data[1024];

int j=0;
  char addcond[100];
char table[20],cdr_server[20],cdr_server2[20];
        memset(cdr_server,0,sizeof(cdr_server));
        memset(cdr_server2,0,sizeof(cdr_server2));
        memset(table,0,sizeof(table));
        memset(addcond,0,sizeof(addcond));

        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(name,0,sizeof(name));
        memset(code,0,sizeof(code));
        memset(number,0,sizeof(number));
        memset(extension,0,sizeof(extension));
        memset(membername,0,sizeof(membername));
        memset(interface,0,sizeof(interface));
        memset(penalty,0,sizeof(penalty));
        memset(paused,0,sizeof(paused));
        memset(paused_cause,0,sizeof(paused_cause));
        memset(fromtime,0,sizeof(fromtime));
        memset(totime,0,sizeof(totime));
        memset(data_column,0,sizeof(data_column));
        memset(recorddate,0,sizeof(recorddate));
        memset(_time,0,sizeof(_time));
        memset(number,0,sizeof(number));
        memset(count,0,sizeof(count));
        memset(data,0,sizeof(data));
        memset(fromsearch,0,sizeof(fromsearch));
        memset(tosearch,0,sizeof(tosearch));

/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/
    if(argv[2]&& *argv[2])
                strcpy(name,argv[2]);
        else
                strcpy(name,"");

    if(argv[3]&& *argv[3])
                strcpy(fromsearch,argv[3]);
        else
                strcpy(fromsearch,"");

    if(argv[4]&& *argv[4])
                strcpy(tosearch,argv[4]);
        else
                strcpy(tosearch,"");


        if(customInfo(domain) < 0)
                return -1;


	sprintf(commandBuf,"|RVR|%s@%s|%s|%s|%s|",user,domain,name,fromsearch,tosearch);
	if(PVS == 1 && MASTER == 1) 
	{
		sprintf(sqlcmd, "select substr(phoneid,2,7),defaultip from number_manage where domain = '%s' and 070number='%s'",domain,name);
		if(strlen(name) < 8){
			sprintf(sqlcmd, "select substr(phoneid,2,7),defaultip from number_manage where domain = '%s' limit 1",domain);
		}
                printf("\nsqlcmd=================:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			return(-1);
		}   
			
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
		
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(dbuserid, row[0]?row[0]:"unknown");
			ps_delSpace(dbuserid);
			strcpy(serverip, row[1]?row[1]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;

		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				//sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].active);
				sprintf(cdr_server2,"%s",CDR_SERVER_[j].standby);
				break;
			}
			j++;
		}

/****
		strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);

		if(*s_shmP->cdr_server == '\0')
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

		if(s_shmP->cdr_fail > 20) {
			if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
				s_shmP->cdr_change_time = time(0);
			}
			else {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
				s_shmP->cdr_change_time=time(0);
			}
		}
		if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
			s_shmP->cdr_fail = 0;
		}
		sprintf(cdr_server2,"%s",s_shmP->cdr_server);
*/


        memset(sqlcmd,0,sizeof(sqlcmd));
        
        if(*name == '\0') {
                if(strlen(fromsearch) == 8  && *tosearch == '\0' )
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and substr(recorddate,1,8) >= '%s' order by recorddate ASC",domain,fromsearch);
                else if(strlen(fromsearch) == 10 && *tosearch == '\0')
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and recorddate >= '%s' order by recorddate ASC",domain,fromsearch);
                else if(strlen(fromsearch) == 8  && *tosearch != '\0' )
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and substr(recorddate,1,8) >= '%s'  and substr(recorddate,1,8) <= '%s' order by recorddate ASC",domain,fromsearch, tosearch);
                else if(strlen(fromsearch) == 10 && *tosearch != '\0')
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and recorddate >= '%s'  and recorddate <= '%s' order by recorddate ASC",domain,fromsearch, tosearch);
        }
        else {  
                if(strlen(fromsearch) == 8  && *tosearch == '\0' )
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and number='%s'  and substr(recorddate,1,8) >= '%s' order by recorddate ASC", domain,name,fromsearch);
                else if(strlen(fromsearch) == 10 && *tosearch == '\0')
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and number ='%s' and recorddate >= '%s' order by recorddate ASC",domain,name,fromsearch);
                else if(strlen(fromsearch) == 8  && *tosearch != '\0' )
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and number = '%s' and substr(recorddate,1,8) >= '%s'  and substr(recorddate,1,8) <= '%s' order by recorddate ASC",domain,name,fromsearch, tosearch);
                else if(strlen(fromsearch) == 10 && *tosearch != '\0')
                        sprintf(sqlcmd, "select recorddate,time,number,count,data from ivr_stat where domain = '%s' and number = '%s' and recorddate >= '%s'  and recorddate <= '%s' order by recorddate ASC",domain,name,fromsearch, tosearch);

        }
                printf("\ncdr_server:(%s)",cdr_server);
                printf("\ncdr_server2:(%s)",cdr_server2);

		cdrinit(cdr_server2);
                if( ret = mysql_query(cdrmysql, sqlcmd) ) {
                        sprintf(resPacket, "|ERR|mysql Active Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			//s_shmP->cdr_fail++;
			if(cdrmysql)
				mysql_close(cdrmysql);
			cdrinit(cdr_server2);
			if( ret = mysql_query(cdrmysql, sqlcmd) ) {
				//s_shmP->cdr_fail++;
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }

		//s_shmP->cdr_fail = 0;

                result = mysql_store_result( cdrmysql );
                if(!result ) {
                        sprintf(resPacket, "|ERR|mysql Search Error ivr_stat!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return(-1);
                }

                row_num = mysql_num_rows(result);
                printf("\nsqlcmd:(%s)==> row:(%d)",sqlcmd,row_num);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket, "|ERR|90000|Data Not Found!.(%s)",sqlcmd);
                        return -1;
                }
//recorddate,time,number,count,data
                printf("\nsqlcmd:(%s)",sqlcmd);

                sprintf(resPacket,"|RES");
                for(i=0;i < row_num;i++)
                {
                        row = mysql_fetch_row( result );
                        if(row)
                        {
                                strcpy(recorddate, row[0]?row[0]:"");
                                ps_delSpace(recorddate);
                                strcpy(_time, row[1]?row[1]:"");
                                ps_delSpace(_time);
                                strcpy(number, row[2]?row[2]:"");
                                ps_delSpace(number);
                                strcpy(count, row[3]?row[3]:"");
                                ps_delSpace(count);
                                strcpy(data, row[4]?row[4]:"");
                                ps_delSpace(data);
                        }


                        //sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s",seq,h_number,extension,number,name,num070);
                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s",recorddate,_time,number,count,data);

                        if(!((i+1)%5))
                        { 
                                if((i+1) < row_num)
                                {
                                        strcat(resPacket,"\n");
                                        tcpWrite(masterFd, resPacket);
                                        printf("\n[5m%s[0m");
                                        sprintf(resPacket,"|RES");
                                }
                                else {
                                        mysql_free_result(result);
                                        result = NULL;
                                        return 0;
                                }
                        }
                }       
                mysql_free_result(result);
                result = NULL;  
                                
	}
        printf("\nresPacket:(%s)",resPacket);
                                
        return 0;               
}                               
int
Conference2(ip,command,peer,confnm,callerid,phoneid,domain)
char    *ip;
char    *command;
char    *peer;
char    *confnm;
char    *callerid;
char    *phoneid;
char    *domain;
{
        int     n,sockfd=-1;
        char    event[64],exten[32],channel[64],actionid[10];
        char    destP[257];
        int     channelflag = 1,callflag=0;
        EVENT_STRUCT    data;
        long    dur_time=0L;


        memset(event,0,sizeof(event));
        memset(exten,0,sizeof(exten));
        memset(channel,0,sizeof(channel));
        memset(actionid,0,sizeof(actionid));
        memset(&data,0,sizeof(EVENT_STRUCT));


        //sockfd = tcpConnect(ip, 5038);

	sockfd = connectToManager(ip);
	if(sockfd < 0) {
		usleep(10000);
		sockfd = connectToManager(ip);
		if(sockfd < 0)
			return sockfd;
	}

        sprintf(destP,"Action: Originate\r\nChannel: Local/%s@conference\r\nWhere: MYSQLIF\r\nPriority: 1\r\nTimeout: 30000\r\nVariable: CONFNM=%s\r\nVariable: SRCCHAN=Local/%s@conference-%d\r\nVariable: CALLERID(num)=%s\r\nVariable: SENDER=%s\r\nVariable: DOMAIN=%s\r\nVariable: PHONEID=%s\r\nAsync: yes\r\nCallerId: %s\r\nActionID: %d\r\n\r\n",peer,confnm,confnm,getpid(),callerid,callerid,callerid,domain,phoneid,getpid());

/****
        strcpy(destP,"Action: Originate\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);
        sprintf(destP,"Channel: Local/%s@conference\r\n",peer);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Priority: 1\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Timeout: 30000\r\n");
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: CONFNM=%s\r\n",confnm);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: SRCCHAN=Local/%s@conference-%d\r\n",confnm,getpid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: CALLERID(num)=%s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);


        sprintf(destP,"Variable: SENDER=%s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: DOMAIN=%s\r\n",domain);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"Variable: PHONEID=%s\r\n",phoneid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        strcpy(destP,"Async: yes\r\n\r\n");
        write(sockfd, destP, strlen(destP));

        sprintf(destP,"CallerId: %s\r\n",callerid);
        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        sprintf(destP,"ActionID: %d\r\n\r\n",getpid());
*/

        write(sockfd, destP, strlen(destP));
        printf("%s",destP);

        return sockfd;
}
/*************************************************************************
* Conference2
*************************************************************************/
int
procCF2()
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20];
  char  code[65],destP[512];

        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(prefix,0,sizeof(prefix));
        memset(code,0,sizeof(code));
        memset(inner_digit,0,sizeof(inner_digit));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

    if(argv[2] && *argv[2])
                strcpy(phoneid,argv[2]);
        else
                strcpy(phoneid,"00000000");
    if(argv[3] && *argv[3])
                strcpy(peer,argv[3]);
        else
                strcpy(peer,"00000000");
    if(argv[4] && *argv[4])
                strcpy(confnm,argv[4]);
    else
                strcpy(confnm,"00000000");
    if(argv[5] && *argv[5])
                strcpy(callerid,argv[5]);
    else
	    strcpy(callerid,"00000000");

	if(customInfo(domain) < 0)
		return -1;


	printf("\npeer:(%s)",peer);
	sockfd=Conference2(serverip,"orginate",peer,confnm,callerid,phoneid,domain);
	if(sockfd > -1) {
		strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
		write(sockfd, sqlcmd, strlen(sqlcmd));
		close(sockfd); 
	}

	sprintf(resPacket,"|RES|%s|%s|",peer,confnm);
        return 0;
}
/*************************************************************************
* update queue member - penalty
*************************************************************************/
int
procUPM()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0,sockfd;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],today[20], membername[20];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64],interface[32];
	char	paused[11],paused_cause[21],command[128];
  char	h_number[21],number[21],name[64],code[5],seq[10], sqlcmd1[512];
char	extension[10];
char wrapuptime[11],memberdelay[11];
char penalty[20];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(name,0,sizeof(name)); 
	memset(seq,0,sizeof(seq)); 
	memset(extension,0,sizeof(extension)); 
	memset(membername,0,sizeof(membername)); 
	memset(interface,0,sizeof(interface)); 
	memset(wrapuptime,0,sizeof(wrapuptime)); 
	memset(memberdelay,0,sizeof(memberdelay)); 
	memset(penalty,0,sizeof(penalty)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2]&& *argv[2])
	strcpy(name,argv[2]);
    else
	strcpy(name,"");

    if(argv[3]&& *argv[3])
	strcpy(membername,argv[3]);
    else
	strcpy(membername,"");

    if(argv[4]&& *argv[4])
	strcpy(penalty,argv[4]);
    else
	strcpy(penalty,"NULL");


    tmm_currDate(YYYYMMDDHHMMSS,today);
    sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

    if(PVS == 1) {
		if(customInfo(domain) < 0)
			return -1;
		sprintf(sqlcmd, "select interface from queue_member_table where domain='%s'  and queue_name = '%s' and membername='%s'",domain,name,membername);
		//sprintf(sqlcmd, "select interface from queue_member_table where domain='%s'  and membername='%s'",domain,membername);

		printf("\nsqlcmd:(%s)",sqlcmd);
		ret = mysql_query(mysql, sqlcmd);

		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
				return -1;
			}
			else {
				row = mysql_fetch_row( result);
				if( row) {
				    strcpy(interface, row[0]?row[0]:"00000000");
				    ps_delSpace(interface);
				}
			}
			mysql_free_result(result);
			result = NULL;
		    }
		else {
			sprintf(resPacket, "|ERR|90000|Data not found!(%s, %s)",mysql_error(mysql),sqlcmd );
			return -1;
		}
	}
	else  {
	    if(argv[5] && *argv[5])
			strcpy(interface,argv[5]);
	    if(argv[6] && *argv[6])
			strcpy(prefix,argv[6]);
	    if(argv[7] && *argv[7])
			strcpy(serverip,argv[7]);
	}

	//sprintf(sqlcmd,"UPDATE queue_member_table set paused = %s, paused_cause='%s',wrapuptime=%s,memberdelay=%s \
		where  domain = '%s' and queue_name='%s' and membername = '%s'",paused,paused_cause,wrapuptime,memberdelay,domain,name,membername);
	sprintf(sqlcmd,"UPDATE queue_member_table set penalty = %s \
		where  domain = '%s' and  membername = '%s' and queue_name = '%s'",penalty,domain,membername,name);
	printf("\nsqlcmd:(%s)",sqlcmd);

	if( mysql_query(mysql, sqlcmd)) {
		sprintf(resPacket, "|ERR|Delete Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return -1;
	}

	if(PVS == 1 && MASTER == 1) 
	{
				//sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,wrapuptime,memberdelay,prefix,serverip);
				sprintf(commandBuf,"|UPM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,penalty,interface,prefix,serverip);
				if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
					if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UPM')",tmp, commandBuf,BACKUP_SERVER,"sub2");
						mysql_query(mysql, sqlcmd);

					}
				}

				//sprintf(commandBuf,"|UQM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,wrapuptime,memberdelay,prefix,serverip);
				sprintf(commandBuf,"|UPM|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,name,membername,penalty,interface,prefix,serverip);
				sprintf(resPacket,"|RES|UPM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,penalty);

				/****추가 ***/
		//		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					if(mysql)
						mysql_close(mysql);
					sqlinit();
					if( ret = mysql_query(mysql, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql );
				if(!result ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
					tcpWrite(masterFd, resPacket);
					exit(0);
				}
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) {
					mysql_free_result(result);
					result = NULL;
					return 0;
				}

				for(i=0;i < row_num;i++) {
					row = mysql_fetch_row( result);
					if(row) 
					{
						strcpy(serverip, row[0]?row[0]:"127.0.0.1");
						ps_delSpace(serverip);
						ps_delSpace(row[1]);
					}
					if(*serverip && strlen(serverip) > 10) {
						if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
							tmm_currDate(YYYYMMDDHHMMSS,today);
							sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
							sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UPM')",tmp, commandBuf,serverip);

							printf("\nsqlcmd:(%s)",sqlcmd);
							mysql_query(mysql, sqlcmd1);
						}
					}
				}
				mysql_free_result(result);
				result = NULL;
	}
	else {
		sprintf(command,"QueuePenalty\r\nQueue: %s\r\nDomain: %s\r\nName: %s\r\nInterface: %s\r\nPenalty: %s\r\nWrapup: 0\r\nDelay: 0",name,domain,membername,interface,penalty);
		printf("\ncommand: (%s)",command);

		sockfd = IPCCManager("127.0.0.1",command);
		if(sockfd > -1) {
			strcpy(command,"Action: Logoff\r\n\r\n");
			write(sockfd, command, strlen(command));
			close(sockfd);
		}
else {
	sprintf(resPacket,"|ERR|UPM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,penalty);
    return -1;       

}
	}

	sprintf(resPacket,"|RES|UPM userid:(%s)-(%s)-(%s)-(%s)",user,domain,membername,penalty);
    return 0;       
}



/*************************************************************************************************
insert number_list
*************************************************************************************************/
int
procINL()
{
  char mp3dir[1024];
  char email[256], sqlcmd1[1];
  int   test=0, ret, row_num, centerflag=0,retry=0,i=0;
  char tmp[100],seq[20],today[20];
  char    sqlcmd[512],snumber[30],enumber[30],type[10],serverip[30],oamserver[30];
long number_st=0,number_ed=0;
int okcnt=0;
int term=0;
	char svc_kind[10],forbid_prefix[10],areacode[10],etc[20];
	char	*tmpP=NULL;
char resbuffer[1024];

	memset(resbuffer,0,sizeof(resbuffer));
	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(type,0,sizeof(type)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(svc_kind,0,sizeof(svc_kind)); 
	memset(forbid_prefix,0,sizeof(forbid_prefix)); 
	memset(areacode,0,sizeof(areacode)); 
	memset(oamserver,0,sizeof(oamserver)); 
	memset(etc,0,sizeof(etc)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

//= "|UNL|".$_SESSION[_id]."@".$newdomain."|".$type."|".$status."|".$forbid_prefix."|".$serverip."|".$org_num."|".$areacode."|".$oldnumber."|";
    if(argv[2] && *argv[2])
                strcpy(type,argv[2]);
        else
                strcpy(type,"1");

    if(argv[3] && *argv[3])
                strcpy(svc_kind,argv[3]);
        else
                strcpy(svc_kind,"0");

    if(argv[4] && *argv[4])
                strcpy(forbid_prefix,argv[4]);
        else
                strcpy(forbid_prefix,"");
    if(argv[5] && *argv[5])
		strcpy(serverip,argv[5]);
	else 
		strcpy(serverip,"127.0.0.1");

    if(argv[6] && *argv[6])
		strcpy(snumber,argv[6]);
	else 
		strcpy(snumber,"0");
    if(argv[7] && *argv[7])
		strcpy(enumber,argv[7]);
	else 
		strcpy(enumber,"0");
    if(argv[8] && *argv[8])
		strcpy(areacode,argv[8]);
	else 
		strcpy(areacode,"");
    if(argv[9] && *argv[9])
		strcpy(etc,argv[9]);
	else 
		strcpy(etc,"");
    if(argv[10] && *argv[10])
		strcpy(oamserver,argv[10]);
	else 
		strcpy(oamserver,"");

	if(!mysql)
		sqlinit(LOCAL_SERVER);
if(ISPMS == 0) {
	number_st=atol(snumber+3);
	number_ed=atol(enumber+3);
	term=number_ed - number_st;

	printf("snumber:%s,enumber:%s,number_st:%d,number_ed:%d,type:%s,svckind:%s\n",snumber,enumber,number_st,number_ed,type,svc_kind);
	sprintf(resPacket,"|RES");
	for( i=0;i<=(number_ed - number_st); i++){ 
		sprintf(sqlcmd, "insert into number_list(number,forbid_prefix,serverip,type,lastdate,etc,org_num,areacode,svc_kind, status) values('070%08d','%s','%s','%s',SYSDATE(),'%s', '','%s','%s', '4') ",(number_st + i),forbid_prefix,serverip,type,etc,areacode,svc_kind);
//		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			printf(" insert number_list Error!(%d,%s, %s)\n",ret,mysql_error(mysql),sqlcmd );
		}else{
			okcnt++;
		}
		if(PVS == 1){
				sprintf(resPacket+strlen(resPacket),"|070%08d^%s^%s^%s^%d",(number_st + i),(ret==0)?"RES":"ERR",(ret==0)?"성공":"실패",(ret==0)?"-":mysql_error(mysql),i);
						if(!((i+1)%10))
						{
							if((i+1) < term)
							{
								strcat(resPacket,"\n");
		printf(" ************** resPacket(%s)\n",resPacket );
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
							}
						}
		}

	}
	if(strlen(resPacket) >5){
		strcat(resPacket,"\n");
		printf(" ************** resPacket(%s)\n",resPacket );
		tcpWrite(masterFd, resPacket);
		sprintf(resPacket,"|RES");
	}
}
        printf("\nPRS_SERVER:(%s)(%d)/%s\n",PRS_SERVER,okcnt,tmpP);
	if((PVS == 1 || ISPMS == 1) && okcnt > 0 ){
		sprintf(sqlcmd, "insert into oam_info (fromnum,tonum,ip,servername,etc) values('%s','%s','%s','%s','%s')",snumber,enumber,oamserver,oamserver,serverip);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		ret = mysql_query(mysql, sqlcmd);

sprintf(resPacket+strlen(resPacket),"|OAM_INFO^%s^%s^%s^%d",(ret==0)?"RES":"ERR",(ret==0)?"성공":"실패",(ret==0)?"-":mysql_error(mysql),ret);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if(PVS == 1 && MASTER == 1 && ISPMS == 0) {
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) 
			{
sprintf(resPacket+strlen(resPacket),"|SERVER_INFO^ERR^실패^%s^%d",mysql_error(mysql),ret);
			}else{   

				result = mysql_store_result( mysql );
				if(!result ) {
sprintf(resPacket+strlen(resPacket),"|SERVER_INFO^ERR^실패^%s^%d",mysql_error(mysql),ret);
				}else{
									
					row_num = mysql_num_rows(result);
					if( row_num > 0 ) {
	sprintf(commandBuf,"|INL|%s@%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[4],argv[5],argv[6],argv[7],areacode,argv[9],oamserver);
					for(i=0;i < row_num;i++) {
						row = mysql_fetch_row( result);
						if(row) 
						{
							strcpy(serverip, row[0]?row[0]:"127.0.0.1");
							ps_delSpace(serverip);
							ps_delSpace(row[1]);
printf("\n=======^^^^^^^^^^^^INL sending======[%s]\n",serverip);
						if(*serverip && strlen(serverip) > 10) {
							if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
								tmm_currDate(YYYYMMDDHHMMSS,today);
								sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
								sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'INL')",tmp, commandBuf,serverip);
								printf("\nsqlcmd:(%s)",sqlcmd);
								mysql_query(mysql, sqlcmd1);
							}
				sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%d",serverip,(ret>=0)?"RES":"ERR",(ret>=0)?"성공":"실패",(ret>=0)?"-":"-",ret);
printf("======================^^^^^^^^^^^^PCSERVER INL sended======[%s][%d]\n",serverip,ret);
						}
						}
					}
					} // > 0
				}
			}
                        i=0;
			while(relay_server_info[i].ip != NULL) {
				if((ret = commandSend(commandBuf,relay_server_info[i].ip,"sub1") < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'INL')",tmp, commandBuf,relay_server_info[i].ip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
printf("======================^^^^^^^^^^^^RELAYSERVER INL sended======[%s][%d]\n",serverip,ret);
			sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%d",(ret>=0)?"RES":"ERR",(ret>=0)?"성공":"실패",(ret>=0)?"-":"-",ret);
				i++;
			}
			if(result){
				mysql_free_result(result);
				result = NULL;
			}
		}

	}

	if(PVS == 1 && MASTER == 1 && ISPMS == 0 && strlen(PRS_SERVER) > 9 && okcnt> 0) {
	sprintf(commandBuf,"|INL|%s@%s|%s|%s|-|%s|%s|%s|%s|%s|%s|",user,domain,argv[2],argv[3],argv[5],argv[6],argv[7],areacode,argv[9],oamserver);
		printf("\ncommandBuf:(%s)\n",commandBuf);
		if(ret = commandSendPMS(commandBuf,PRS_SERVER) < 0) {
		printf("\nERROR commandBuf:(%s)\n",commandBuf);
			tmm_currDate(YYYYMMDDHHMMSS,today);
			sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
			sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'INL')",tmp, commandBuf,BACKUP_SERVER,"sub2");
			mysql_query(mysql, sqlcmd);

		}
		sprintf(resPacket+strlen(resPacket),"|PRS_SERVER^%s^%s^%s^%d",(ret>=0)?"RES":"ERR",(ret>=0)?"성공":"실패",(ret>=0)?"-":"-",ret);
    		printf("************** resPacket(%s)\n",resPacket );
    		return 0;
	}
}

int
getPrefixFromDB_OLD(char *con_ip,char *retprefix){
        int    ret=0;
        int row_num=0;
        int i=0;
        char nextprefix[4];
        char tmpprefix[4];
        char curprefix[4];
        char sqlcmd[1024];
        int ok=0;
        int j=0;
        int isDUP=0;
                memset(curprefix,0,sizeof(curprefix));
                memset(nextprefix,0,sizeof(nextprefix));
                memset(tmpprefix,0,sizeof(tmpprefix));
NEXT_DUP:
                sprintf(sqlcmd, "select binary(prefix) from custom_info where (%s) order by binary(prefix) asc",con_ip);
                strcpy(curprefix,"000");
		if(isDUP){
	                sprintf(sqlcmd, "select binary(prefix) from custom_info where binary(prefix) > '%s' and (%s) order by binary(prefix) asc",nextprefix,con_ip);
                	strcpy(curprefix,nextprefix);
		}
                if(!mysql)
                        sqlinit();


                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        printf( "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return -1;
                }
                result = mysql_store_result( mysql );
                if(!result ) {
                        printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                        return -1;
                }
                row_num = mysql_num_rows(result);
                printf("\nrow_num :(%d)",row_num);
                if(row_num > 0){
                        ok=0;
                        for(i=0;i < row_num;i++) {
                                row = mysql_fetch_row(result) ;
                                getnextnumB(curprefix,tmpprefix);

				if(atoi(tmpprefix) == 999)
                			strcpy(tmpprefix,"A00");

printf("\n========================Nextprefix :(%s)(%s)\n",row[0],tmpprefix);
                                if(strncmp(row[0],tmpprefix,3)){
                                        sprintf(nextprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
                                        printf("\n===========breakd===========Nextprefix :(%s)(%s)\n",row[0],nextprefix);
                                        ok=1;
                                        break;

                                }
                                sprintf(curprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
                        }
                        if(ok == 0){
				if(!strcmp(tmpprefix,"z99")){
					printf("\n FULL END END END END(%s) .....................\n",tmpprefix);
					if(result){
						printf("\n freeresult.....................\n");
						mysql_free_result(result);
						result = NULL;
					}
                                	sprintf(retprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
					return 1;
				}
				else{
                                	getnextnumB(curprefix,tmpprefix);
                                	sprintf(nextprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
				}
                        }
                }else{
                        printf("\n select num row  =00000000.......................\n");
                        sprintf(nextprefix,"001");
                }
		if(result){
                        printf("\n freeresult.....................\n");
			mysql_free_result(result);
			result = NULL;
		}


                sprintf(sqlcmd, "select binary(prefix) from custom_info where binary(prefix)='%s' and  (%s) ",nextprefix,con_ip);
                        printf("\n dupcheck (%s).....................\n",sqlcmd);
                if(!mysql)
                        sqlinit();
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        printf( "|ERR|mysql Search Error!(%s, %s)\n",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
                        sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }else{
                	result = mysql_store_result( mysql );
                	if(result ) {
                		row_num = mysql_num_rows(result);
                		if(row_num > 0){
                			printf("\n DUPLICATION!!!!!!!!!!!row_num :(%d, sqlcmd:(%s))\n",row_num,sqlcmd);
isDUP=1;
					goto NEXT_DUP;
				}
			}else{
                        	printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			}
		}

                printf("\nending..................curprefix:(%s)......... next:(%s)\n",curprefix,nextprefix);
		//strcpy(retprefix,nextprefix);
		strcpy(retprefix,curprefix);

		return 1;
}

/* 20200130 BMH ADD START */
int
getPrefixFromDB(char *con_ip,char *retprefix, int NewPrefixtype){
        int    ret=0;
        int row_num=0;
        int i=0;
        char nextprefix[4];
        char tmpprefix[4];
        char curprefix[4];
        char sqlcmd[1024];
        int ok=0;
        int j=0;
        int isDUP=0;
                memset(curprefix,0,sizeof(curprefix));
                memset(nextprefix,0,sizeof(nextprefix));
                memset(tmpprefix,0,sizeof(tmpprefix));
NEXT_DUP:
                sprintf(sqlcmd, "select binary(prefix) from custom_info where (%s) order by binary(prefix) asc",con_ip);
		if(NewPrefixtype == 0){
                	sprintf(sqlcmd, "select binary(prefix) from custom_info where (%s)  and substr(prefix,2) < '9A' order by binary(prefix) asc",con_ip);
		}
                strcpy(curprefix,"000");
		if(isDUP){
	                sprintf(sqlcmd, "select binary(prefix) from custom_info where binary(prefix) > '%s' and (%s) order by binary(prefix) asc",nextprefix,con_ip);
			if(NewPrefixtype == 0){
	                	sprintf(sqlcmd, "select binary(prefix) from custom_info where binary(prefix) > '%s' and substr(prefix,2) < '9A' and (%s) order by binary(prefix) asc",nextprefix,con_ip);
			}
                	strcpy(curprefix,nextprefix);
		}
                if(!mysql)
                        sqlinit();


                printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        printf( "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                        return -1;
                }
                result = mysql_store_result( mysql );
                if(!result ) {
                        printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                        return -1;
                }
                row_num = mysql_num_rows(result);
                printf("\nrow_num :(%d)",row_num);
                if(row_num > 0){
                        ok=0;
                        for(i=0;i < row_num;i++) {
                                row = mysql_fetch_row(result) ;
				if(NewPrefixtype == 1){
					getnextnumB2(curprefix,tmpprefix);// getnextnumB(curprefix,tmpprefix);
				}else{
					getnextnumB(curprefix,tmpprefix);// getnextnumB(curprefix,tmpprefix);
				}

	//20200130			if(atoi(tmpprefix) == 999)
               //20200130		strcpy(tmpprefix,"A00");
                                        sprintf(nextprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
                                if(strncmp(row[0],tmpprefix,3)){
                                        printf("\n===========breakd===========Nextprefix :(%s)(%s)\n",row[0],nextprefix);
                                        ok=1;
                                        break;

                                }
                                sprintf(curprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
                        }
                        if(ok == 0){
				if((NewPrefixtype == 0 && !strcmp(tmpprefix,"z99")) || !strcmp(tmpprefix,"zzz")){ //20200130  if(!strcmp(tmpprefix,"z99")) //무조건 신규도 z99까지만 사용토록
					printf("\n FULL END END END END(%s) .....................\n",tmpprefix);
					if(result){
						printf("\n freeresult.....................\n");
						mysql_free_result(result);
						result = NULL;
					}
                                	sprintf(retprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
					return 1;
				}
				else{
					if(NewPrefixtype == 1){
						getnextnumB2(curprefix,tmpprefix);
					}else{
						getnextnumB(curprefix,tmpprefix);
					}
                                	sprintf(nextprefix,"%c%c%c",tmpprefix[0],tmpprefix[1],tmpprefix[2]);
				}
                        }
                }else{
                        printf("\n select num row  =00000000.......................\n");
                        sprintf(nextprefix,"001");
			if(isDUP){ //20200130 ADD
				strcpy(curprefix,nextprefix);
				if(NewPrefixtype == 1){
					getnextnumB2(curprefix,nextprefix);
				}else{
					getnextnumB(curprefix,nextprefix);
				}
			}
                }
		if(result){
                        printf("\n freeresult.....................\n");
			mysql_free_result(result);
			result = NULL;
		}


                sprintf(sqlcmd, "select binary(prefix) from custom_info where binary(prefix)='%s' and  (%s) ",nextprefix,con_ip);
                        printf("\n dupcheck (%s).....................\n",sqlcmd);
                if(!mysql)
                        sqlinit();
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        printf( "|ERR|mysql Search Error!(%s, %s)\n",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
                        sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
                }else{
                	result = mysql_store_result( mysql );
                	if(result ) {
                		row_num = mysql_num_rows(result);
                		if(row_num > 0){
                			printf("\n(isDUP(%d) DUPLICATION!!!!!!!!!!!row_num :(%d, sqlcmd:(%s))\n",isDUP,row_num,sqlcmd);
					//20200130 add isDUP=1;
					if(isDUP++ > 300){
						mysql_free_result(result);
						result = NULL;
                                		sprintf(nextprefix,"");
						return -2;
					}
					//end add

					goto NEXT_DUP;
				}
			}else{
                        	printf("|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
			}
		}

                printf("\nending..................curprefix:(%s)......... next:(%s)\n",curprefix,nextprefix);
		if(nextprefix && strlen(nextprefix) == 3)
			strcpy(retprefix,nextprefix); //20200130 확인필요
		else
			strcpy(retprefix,curprefix);

		return 1;
}
/* 20200130 BMH ADD END */

int getnextnumB(char *curp,char *nextp)
{
        char A[62]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
        char *AS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        char *AS2="0123456789";
        char *r0,*r1,*r2;
        int p0,p1,p2;
        r0=strchr(AS,curp[0]);
        r1=strchr(AS2,curp[1]);
        r2=strchr(AS2,curp[2]);
        if(!curp || *curp =='\0'){
                sprintf(nextp,"%c%c%c",A[0],A[0],A[1]);
                //      printf("\n\n=curp ius null===========nextp: %s  ==> %s\n",curp,nextp);

                return;
        }
	if(atoi(curp+1) == 100 && *curp == 'z'){
		//return z99
		return;
	}
        //printf("getnextnum ==================%s=(%c, %c, %c)\n",curp,*r0,*r1,*r2);
        p0=r0-AS;
        p1=r1-AS2;
        p2=r2-AS2;
        p2++;
        if(p2 >9){
                p2=0;
                p1++;
                if(p1 > 9){
                        p1=0;
                        p0++;
                }
        }
//printf("pos: %d %d %d\n",p0,p1,p2);
        sprintf(nextp,"%c%c%c",A[p0],A[p1],A[p2]);
        return 1;
}

/* 20200130 BMH ADD START */
int getnextnumB2(char *curp,char *nextp)
{
        char A[62]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
	char B[36]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
        char *AS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
	char *AS2="0123456789abcdefghijklmnopqrstuvwxyz";
        char *r0,*r1,*r2;
        int p0,p1,p2;
        r0=strchr(AS,curp[0]);
        r1=strchr(AS2,curp[1]);
        r2=strchr(AS2,curp[2]);
        if(!curp || *curp =='\0'){
                sprintf(nextp,"%c%c%c",A[0],A[0],A[1]);
                      printf("\n\n=curp ius null===========nextp: %s  ==> %s\n",curp,nextp);
                return;
        }
	if(!strncmp(curp,"zzz",3)){//20200130 ORG: if(atoi(curp+1) == 100 && *curp == 'z')
		//return z99
		return;
	}
        //printf("getnextnum ==================%s=(%c, %c, %c)\n",curp,*r0,*r1,*r2);
        p0=r0-AS;
        p1=r1-AS2;
        p2=r2-AS2;
        p2++;
        if(p2 > 35){//20200130 ORG: if(p2 >9)
                p2=0;
                p1++;
                if(p1 > 35){//20200130 ORG if(p1 > 9)
                        p1=0;
                        p0++;
                }
        }
//printf("pos: %d %d %d\n",p0,p1,p2);
	if( p0 > 61 ){ return; } //20200106
        //20200130 CHG 1: B, 2: B sprintf(nextp,"%c%c%c",A[p0],A[p1],A[p2]);
        sprintf(nextp,"%c%c%c",A[p0],B[p1],B[p2]);
        return 1;
}
/* 20200130 BMH ADD END */

int
procUCN()
{
char	sqlcmd[512];
char	sqlcmd1[512];
char	tmp[20],messenger_ip[32];
char    extension[60];
char    cid[20];
char    call_seq[11],today[15];
char    recorddate[32];
char    phoneid[21];
int row_num = 0, ret = 0, i=0, sd=-1, cpid;
struct  tm      *tp;
long	t;
char    cust_name[512];

	memset(cid,0,sizeof(cid));
	memset(extension,0,sizeof(extension));
	memset(call_seq,0,sizeof(call_seq));
	memset(prefix,0,sizeof(prefix));
	memset(serverip,0,sizeof(serverip));
	memset(phoneid,0,sizeof(phoneid));
	memset(today,0,sizeof(today));
	memset(cust_name,0,sizeof(cust_name));
	memset(outer_num,0,sizeof(outer_num));

       t=time(0);
       tp = (struct tm *) localtime(&t);

	if(argc < 2)
		return(errorReturn("ErrInputData____",__FILE__,__LINE__));

	if(argv[2] && *argv[2])
		strcpy(cust_name,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);



	tmm_currDate(YYYYMMDDHHMMSS,today);
	sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

     	if(PVS == 1 && MASTER == 1) {

		if(customInfo(domain) < 0)
			return -1;

	}

	printf("\n ================= UPDATE NUMBER_LIST CUST_NAME \n");
	sprintf(sqlcmd, "update number_list set cust_name='%s' where number = '%s'",cust_name,outer_num);
	printf("\nsqlcmd:(%s)",sqlcmd);
	ret = mysql_query(mysql, sqlcmd);

	printf("\n ================= UPDATE CUSTOM_INFO CUST_NAME \n");
	sprintf(sqlcmd, "update custom_info set cust_name = '%s' where domain = '%s'",cust_name,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	ret = mysql_query(mysql, sqlcmd);


	sprintf(commandBuf,"|UCN|%s@%s|%s|%s|",user,domain,cust_name,outer_num);
	if(PVS == 1 && MASTER == 1) 
	{
		if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
			if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
				tmm_currDate(YYYYMMDDHHMMSS,today);
				sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
				sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,BACKUP_SERVER,"sub2");
				mysql_query(mysql, sqlcmd);

			}
		}

		sprintf(commandBuf,"|UCN|%s@%s|%s|%s|",user,domain,cust_name,outer_num);

		/****추가 ***/
		//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
		sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
		printf("\nsqlcmd:(%s)",sqlcmd);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			if(mysql)
				mysql_close(mysql);
			sqlinit();
			if( ret = mysql_query(mysql, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql );
		if(!result ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			exit(0);
		}
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return 0;
		}

		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				ps_delSpace(row[1]);
			}
			if(*serverip && strlen(serverip) > 10) {
				if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,serverip);
					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql, sqlcmd1);
				}
			}
		}
		mysql_free_result(result);
		result = NULL;
	}


	sprintf(resPacket,"|RES|UCN(%s)-(%s)",cust_name, outer_num);
	return 0;
}

/*************************************************************************
* Search Oam Server
*************************************************************************/
int
procSOA()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,flag070 = 0;
  int   ret,row_num,i,seq=0;
  char tmp[100],tmpdomain[128];
  char  sqlcmd[512],proxyip[30],kind[2];
  char fromoam[10],serverip[20],domainproxyip[20];

        memset(email,0,sizeof(email));
        memset(tmpdomain,0,sizeof(tmpdomain));
        memset(passwd,0,sizeof(passwd));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(outer_num,0,sizeof(outer_num));
        memset(fromoam,0,sizeof(fromoam));
        memset(serverip,0,sizeof(serverip));
        memset(domainproxyip,0,sizeof(domainproxyip));

        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

        if(argv[2] && *argv[2])
                strcpy(outer_num,argv[2]);
        if(argv[3] && *argv[3])
                strcpy(fromoam,argv[3]);

        domain_string(domain);
        if(PVS == 1) {
                if(!mysql)
                        sqlinit();

		if(strncmp(outer_num,"070",3))
			sprintf(sqlcmd, "select domain from number_list where (org_num='%s') and domain <> '' limit 1",outer_num);
		else {
			flag070 = 1;
			sprintf(sqlcmd, "select domain from number_list where (number='%s') and domain <> '' limit 1",outer_num);
		}

SOA_RETY:

                printf("\nsqlcmd:(%s)",sqlcmd);
                ret = mysql_query(mysql, sqlcmd);
                if(result = mysql_store_result( mysql )){
                        row_num = mysql_num_rows(result);
                        if( row_num > 0 ) {
                                row = mysql_fetch_row( result );
                                if( row) {
                                        strcpy(tmpdomain, row[0]?row[0]:"");
                                        ps_delSpace(tmpdomain);
                                }
                        }
			else {
				mysql_free_result(result);
				if(flag070 == 1) {
					flag070++;
					sprintf(sqlcmd, "select domain from number_list where (org_num='%s') and domain <> '' limit 1",outer_num);
					goto SOA_RETY;
				}
				sprintf(resPacket,"|ERR|^");
				return 0;
			}
                }
		else {
			sprintf(resPacket,"|ERR|^");
			return 0;
		}
                if(result){
                        mysql_free_result(result);
                        result = NULL;
                }

                sprintf(sqlcmd, "select serverip,proxyip from custom_info where status='A' and  domain='%s'",tmpdomain);
                printf("\nsqlcmd:(%s)",sqlcmd);
                ret = mysql_query(mysql, sqlcmd);
                if(result = mysql_store_result( mysql )){
                        row_num = mysql_num_rows(result);
                        if( row_num > 0 ) {
                                row = mysql_fetch_row( result );
                                if( row) {
                                        strcpy(serverip, row[0]?row[0]:"");
                                        ps_delSpace(serverip);
                                        strcpy(domainproxyip, row[1]?row[1]:"");
                                        ps_delSpace(domainproxyip);
                                        mysql_free_result(result);
                                        result = NULL;
                                        sprintf(resPacket,"|RES|%s-%s-%s",outer_num,serverip,domainproxyip);
                                        logCmd();
                                        sprintf(resPacket,"|RES|%s^%s",serverip,domainproxyip);
                                        return 0;
                                }
                        }
                }
                if(result){
                        mysql_free_result(result);
                        result = NULL;
                }
sprintf(resPacket,"|ERR|^%s",outer_num);
        }

    return 0;
}



/*************************************************************************
* Search Oam Server
*************************************************************************/
int
procMAC()
{
  char passwd[256];
  int   ret,row_num,i;
  char    sqlcmd[1024],sqlcmd1[1024],today[20],tmp[20];
  char    tmpPhoneid[10],num070[14];
  char    secret[10],inner_num[5],phoneid[10],md5_passwd[64];
	char	messenger_ip[20];
	int src_len;	
        unsigned char src_str[10000];
        unsigned char hash_str[10000];
        unsigned char output[129];
        char passwd_store[387];
        char old_passwd_store[387];
        char macinfo[15];
        char mynumber[15];
        char mydomain[50];
        char myimid[20];
        char myphoneid[20];

	memset(myphoneid,0,sizeof(myphoneid)); 
	memset(myimid,0,sizeof(myimid)); 
	memset(mydomain,0,sizeof(mydomain)); 
	memset(mynumber,0,sizeof(mynumber)); 
	memset(macinfo,0,sizeof(macinfo)); 
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(today,0,sizeof(today)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(today,0,sizeof(today)); 
	memset(passwd_store,0,sizeof(passwd_store)); 
	memset(old_passwd_store,0,sizeof(old_passwd_store)); 

	if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(argv[4] && *argv[4])
		strcpy(macinfo,argv[4]);

	if(argv[5] && *argv[5])
		strcpy(mynumber,argv[5]);

    if(PVS == 1) {

		//sprintf(sqlcmd, "select 070number from number_manage where phoneid ='0%3.3s%s' and defaultip= '%s'",prefix, inner_num,serverip);
		sprintf(sqlcmd, "select 070number,phoneid,imid,domain from number_manage where 070number ='%s' or org_num = '%s'",mynumber, mynumber);

printf("\nsqlcmd:(%s)",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd) ) {
                        sprintf(resPacket,"|ERR|NOT FOUND");
                        return(0);
                }

                result = mysql_store_result( mysql );
                if(!result ) {
                        sprintf(resPacket,"|ERR|NOT FOUND");
                        return(0);
                }

                row_num = mysql_num_rows(result);
                if( row_num == 0 ) {
                        mysql_free_result(result);
                        result = NULL;
                        sprintf(resPacket,"|ERR|NOT FOUND");
                        return(0);
                }
                row = mysql_fetch_row( result );
                if( row) {
                        strcpy(mynumber, row[0]?row[0]:"0");
                        ps_delSpace(mynumber);
                        strcpy(myphoneid, row[1]?row[1]:"");
                        ps_delSpace(myphoneid);
                        strcpy(myimid, row[2]?row[2]:"");
                        ps_delSpace(myimid);
                        strcpy(mydomain, row[3]?row[3]:"");
                        ps_delSpace(mydomain);
                }
                mysql_free_result(result);
                result = NULL;
        }
	if(!authmysql)
		authinit(AUTH_SERVER);


	sprintf(sqlcmd, "select macaddress from DCS_PHONE_AUTH where setdn = '%s' and macaddress='%s'",mynumber,macinfo);
printf("\nsql:(%s)\n",sqlcmd);
	if( ret = mysql_query(authmysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
        	return -1;
        } 
	result = mysql_store_result(authmysql);
	if(!result ) 
	{
		sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
		return(-1);
	}   
					
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) 
	{
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|(%s)(%s)-(%s) is not",inner_num,macinfo,mynumber);
		return -1;
	}
	sprintf(resPacket, "|RES|%s|%s|%s|%s",mynumber,myphoneid,myimid,mydomain);
	if(result){
		mysql_free_result(result);
		result = NULL;
	}
	return 0;
}
/*****************************************************************************************/
int
customInfoWithChk(char *pardomain)
{
        char    sqlcmd[512];
        int     ret,row_num;


        memset(serverip,0,sizeof(serverip));
        memset(prefix,0,sizeof(prefix));
        memset(inner_digit,0,sizeof(inner_digit));
        memset(sqlcmd,0,sizeof(sqlcmd));

        sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where status='A' and  domain= '%s'",pardomain);
        printf("\nsqlcmd:(%s)",sqlcmd);
        ret = mysql_query(mysql, sqlcmd);
        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }

        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
                result = NULL;
                sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
                return(-1);
        }

        row = mysql_fetch_row( result );
        if(row) {
                strcpy(serverip, row[0]?row[0]:"127.0.0.1");
                ps_delSpace(serverip);
                strcpy(prefix, row[1]?row[1]:"000");
                ps_delSpace(prefix);
                strcpy(inner_digit, row[2]?row[2]:"4");
                ps_delSpace(inner_digit);
        }
        mysql_free_result(result);
        result = NULL;

        return 0;
}
/*************************************************************************
* 비번/이름 OAM2 변경  						     *
*************************************************************************/
int
procUNO2(char *RELAYIP)
{
  char passwd[256];
  char email[256],sqlcmd1[512];
  int   qid,returncode,num_row,fields_num;
  int   test=0,ret,row_num,cpid,i=0,j=0;
  char tmp[100],today[15],num070[14],md5_passwd[64];
  unsigned int	tmpNumber;
  char    sqlcmd[512],phone_type[5],d_name[32];
	char	tel[21];
	char	messenger_ip[20],old_passwd[256];


	memset(email,0,sizeof(email));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(d_name,0,sizeof(d_name)); 
	memset(tel,0,sizeof(tel)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(old_passwd,0,sizeof(old_passwd)); 

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2] && strlen(argv[2]) > 3 && strlen(argv[2]) < 32) {
		strcpy(passwd,argv[2]);
	}
	else 
		strcpy(passwd,"");

	if(argv[3] && *argv[3]) {
		strcpy(inner_num,argv[3]);
	}

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");

	if(strlen(inner_num) !=4)
	{
		strcpy(inner_num,"0000");
	}


	if(argv[4] && *argv[4]) {
		strcpy(d_name,argv[4]);
	}
	else
		strcpy(d_name,"");

	if(argv[5] && *argv[5] && strlen(argv[5]) > 7 && isdigitstr(argv[5])) {
		strcpy(tel,argv[5]);
	}
	else
		strcpy(tel,"");
	if(argv[6] && *argv[6])  {
		strcpy(phoneid,argv[6]);
		if(strlen(phoneid) == 8)
			strcpy(inner_num,phoneid+4);
	}


	if(!mysql_1)
		sqlinit_1(RELAYIP);
	if(strlen(tel) > 8) {
		row_num = 0;
		if(!strncmp(tel,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
				if(mysql_1)
					mysql_close(mysql_1);
				sqlinit_1(RELAYIP);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}
			else {
				result = mysql_store_result( mysql_1 );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",tel);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
				if(mysql_1)
					mysql_close(mysql_1);
				sqlinit_1(RELAYIP);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}
			else {
				result = mysql_store_result( mysql_1 );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(tel,"");
	}

	
	printf("\ninner_num:(%s",inner_num);
	printf("\ninner_num:(%s",inner_num);
	printf("\ninner_num:(%s",inner_num);
/***
    if(!strcmp(inner_num,"0000") && strlen(outer_num) > 7)
        strncpy(inner_num,outer_num+(strlen(outer_num)-4),4);

	sprintf(phoneid,"%s%s%s",phone_type,prefix,inner_num);
12:04:12 |UNO|07082149387@premium_c_4740.lgdacom.net|1111|1001|v8DH/Lyx|0164010426<<<<<|RES|UNO userid:(07082149387)-(
premium_c_4740.lgdacom.net)-(1111)-(v8DH/Lyx)-(11801001):(211.32.148.89)
*/

    if(PVS == 1) 
	{
		if(customInfo2(domain) < 0)
			return -1;

		sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		//sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd from number_manage where phoneid = '0%7.7s'",phoneid+1);
		sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd from number_manage where phoneid = '0%7.7s' and domain = '%s'",phoneid+1,domain);
		printf("\nsqlcmd:(%s)\n",sqlcmd);
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
			if(mysql_1)
				mysql_close(mysql_1);
			sqlinit_1(RELAYIP);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				tcpWrite(masterFd, resPacket);
				logCmd();
				exit(0);
			}
		}   

		result = mysql_store_result( mysql_1 );
		if(!result ) 
		{
			sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql_1),sqlcmd );
			return(-1);
		}   
						
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) 
		{
			mysql_free_result(result);
			result = NULL;
			sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
			return -1;
		}

		row = mysql_fetch_row( result );
		if(row) 
		{
			strcpy(num070, row[0]?row[0]:"07000000000");
			ps_delSpace(num070);
			strcpy(crm_flag, row[1]?row[1]:"");
			ps_delSpace(crm_flag);
			strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
			ps_delSpace(messenger_ip);
			strcpy(old_passwd, row[3]?row[3]:"1111");
			ps_delSpace(old_passwd);
		}
		mysql_free_result(result);
		result = NULL;

	} else {
		if(argv[6] && *argv[6]) 
			strcpy(phoneid,argv[6]);
		if(argv[7] && *argv[7]) 
			strcpy(serverip,argv[7]);
		else
			return(errorReturn("PACKET Request Error!(Not Center)",__FILE__,__LINE__));
		sprintf(prefix,"%3.3s",phoneid+1);
	}

	if(*passwd  == '\0' || strlen(passwd) == 32)
		strcpy(passwd,old_passwd);

	//if(strlen(passwd) > 3 && strcmp(passwd,old_passwd)) {
		/*** update sip_buddies ***/
//                sprintf(sqlcmd,"UPDATE number_manage set \
//                name = '%s',tel = '%s',passwd='%s' where \
//                phoneid = '0%s' and defaultip='%s'", d_name,tel,passwd,phoneid+1,serverip);

                sprintf(sqlcmd,"UPDATE number_manage set \
                name = '%s',tel = '%s' where \
                phoneid = '0%7.7s' and defaultip='%s'", d_name,tel,phoneid+1,serverip);
/****
	}
	else 
                sprintf(sqlcmd,"UPDATE number_manage set \
                name = '%s',tel = '%s' where \
                phoneid = '0%7.7s' and defaultip='%s'", d_name,tel,phoneid+1,serverip);
*/

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|update sip_buddies!(%s, %s)",mysql_error(mysql_1),sqlcmd );
				logCmd();
				//return(-1);
		}

		tmm_currDate(YYYYMMDDHHMMSS,today);
		sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);

		if(PVS == 1 && MASTER == 1) {
			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip,num070);

			if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {

				MD5_DIGEST digest;
				
				//if(strlen(passwd) > 3 && strcmp(passwd,old_passwd)) {
					md5_digest(passwd, strlen(passwd), digest);
					for (j=0; j< sizeof(digest); j++) {
					    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
					}
/****
				}
				else {
					md5_digest(old_passwd, strlen(old_passwd), digest);
					for (j=0; j< sizeof(digest); j++) {
					    sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
					}
				}
*/

				sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,inner_num,d_name,tel,phoneid,serverip,num070);
				if(ret = commandSendUc(commandBuf,"UNO",messenger_ip, 1) < 0) {
					sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'UNO','%s','%s')",tmp, commandBuf,serverip,messenger_ip, num070);

					printf("\nsqlcmd:(%s)",sqlcmd);
					mysql_query(mysql_1, sqlcmd1);
				}
			}
			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip);
			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNO')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql_1, sqlcmd);

				}
			}

			sprintf(commandBuf,"|UNO|%s@%s|%s|%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,d_name,tel,phoneid,serverip);
			sprintf(resPacket,"|RES|UNO userid:(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,passwd, d_name, phoneid);
			/****추가 ***/
		//	sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
				if(mysql_1)
					mysql_close(mysql_1);
				sqlinit_1(RELAYIP);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql_1 );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10 ) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UNO')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql_1, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
	}

	
	sprintf(tmpStr,"tmpid%s@%s",inner_num,domain);
	argv[1]=tmpStr;
	argv[2]=passwd;
	argv[3]=inner_num;
	printf("\nprocUNO-->procUTH start\n");
	ret = procUTH2(RELAYIP);
	printf("\nprocUNO-->procUTH end\n");
	if(ret==0){
		sprintf(resPacket,"|RES|UNO userid:(%s)-(%s)-(%s)-(%s)-(%s)-(%s)",user,domain,passwd, d_name, phoneid, tel);
		return 0;       
	}else{
		return -1;       
	}
}
/*************************************************************************
* 비번변경 OAM2, |domain|passwd|inner_num ~~~ 
*************************************************************************/
int
procUTH2(char *RELAYIP)
{
  char passwd[256];
  int   ret,row_num,i;
  char    sqlcmd[1024],sqlcmd1[1024],today[20],tmp[20];
  char    tmpPhoneid[10],num070[14];
  char    secret[10],inner_num[5],phoneid[10],md5_passwd[64];
	char fromoam[10];
	char	messenger_ip[20];
	int src_len;	
        unsigned char src_str[10000];
        unsigned char hash_str[10000];
        unsigned char output[129];
        char passwd_store[387];
        char old_passwd_store[387];

	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(inner_num,0,sizeof(inner_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(tmp,0,sizeof(tmp)); 
	memset(today,0,sizeof(today)); 
	memset(serverip,0,sizeof(serverip)); 
	memset(num070,0,sizeof(num070)); 
	memset(crm_flag,0,sizeof(crm_flag)); 
	memset(md5_passwd,0,sizeof(md5_passwd)); 
	memset(messenger_ip,0,sizeof(messenger_ip)); 
	memset(today,0,sizeof(today)); 
	memset(passwd_store,0,sizeof(passwd_store)); 
	memset(old_passwd_store,0,sizeof(old_passwd_store)); 
	memset(fromoam,0,sizeof(fromoam)); 

	if(argv[2] && *argv[2])
		strcpy(passwd,argv[2]);

	if(strlen(passwd) < 4 || strlen(passwd) == 32) {
		sprintf(resPacket,"|RES|master|(%s)",passwd);
		return 0 ;
	}
	if(argv[3] && *argv[3])
		strcpy(inner_num,argv[3]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) < 4 || strlen(inner_num) > 12)
		strcpy(inner_num,"1111");

	//if(!isdigitstr(inner_num) || !isdigitstr(passwd) || strlen(passwd) < 4) 
	if(!isdigitstr(inner_num) || strlen(passwd) < 4) {
		sprintf(resPacket, "|ERR|g(%s,%s)",inner_num,passwd);
		return -1;
	}

	if(argv[6] && *argv[6])
		strcpy(fromoam,argv[6]);


	if(strlen(passwd) < 30 ) {
		strcpy(src_str,passwd);
		src_len=strlen(src_str);

		sha4( src_str, src_len, output, 0);
		hexify( hash_str, output, 64 );
		//strcpy(passwd,hash_str);
	}
	else 
		strcpy(hash_str,passwd);
	tmm_currDate(YYYYMMDD,today);


printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

	if(!mysql_1)
		sqlinit_1(RELAYIP);

	if(!*inner_num) {
	if( !strcmp(user,"master")) {

		//sprintf(sqlcmd, "update custom_info set passwd = '%s' where domain = '%s' and manager='%s' ",hash_str,domain,user);
		sprintf(sqlcmd, "update custom_info set passwd = '%s' where domain = '%s' and manager='%s' ",passwd,domain,user);

		printf("\nsqlcmd:(%s)",sqlcmd);
		mysql_query(mysql_1, sqlcmd);

		sprintf(resPacket,"|RES|master|",phoneid);
		return 0 ;
	}

	sprintf(sqlcmd, "select passwd_store from number_manage where where domain = '%s' and imid='%s'",domain,user);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql_1, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
		if(mysql_1)
			mysql_close(mysql_1);
		sqlinit_1(RELAYIP);
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql_1 );
	if(!result ) 
	{
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql_1),sqlcmd );
		return(-1);
	}   
					
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) 
	{
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) 
	{
		strcpy(old_passwd_store, row[0]?row[0]:"");
		ps_delSpace(old_passwd_store);
	}
	mysql_free_result(result);
	result = NULL;

	if(strlen(old_passwd_store) > 128) {
		sprintf(passwd_store,"%-128.128s|%-257.257s",hash_str,old_passwd_store);

		if(!strncmp(hash_str,old_passwd_store,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_1",passwd);
			return -1;
		}
		else if(!strncmp(hash_str,old_passwd_store+129,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_2",passwd);
			return -1;
		}
		else if(!strncmp(hash_str,old_passwd_store+258,128)) {
			sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_3",passwd);
			return -1;
		}
	}
	else if(strlen(old_passwd_store) <= 128)
		sprintf(passwd_store,"%-128.128s|%-128.128s|%-128.128s",hash_str,"","");
	
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

	sprintf(sqlcmd, "update number_manage set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' where domain = '%s' and imid='%s'",hash_str,today,passwd_store,domain,user);
	//sprintf(sqlcmd, "update number_manage set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' where domain = '%s' and imid='%s'",passwd,today,passwd_store,domain,user);

	printf("\nsqlcmd:(%s)",sqlcmd);
	mysql_query(mysql_1, sqlcmd);
	}
	else {
		if(PVS == 1 && MASTER == 1)  {

			if(customInfo2(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);




				sprintf(sqlcmd, "select 070number,crm_flag,messenger_ip,passwd_store from number_manage where phoneid = '0%3.3s%4.4s' and domain = '%s'",prefix,inner_num,domain);
				printf("\nsqlcmd:(%s)",sqlcmd);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
					if(mysql_1)
						mysql_close(mysql_1);
					sqlinit_1(RELAYIP);
					if( ret = mysql_query(mysql_1, sqlcmd) ) {
						tcpWrite(masterFd, resPacket);
						logCmd();
						exit(0);
					}
				}   

				result = mysql_store_result( mysql_1 );
				if(!result ) 
				{
					sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql_1),sqlcmd );
					return(-1);
				}   
								
				row_num = mysql_num_rows(result);
				if( row_num == 0 ) 
				{
					mysql_free_result(result);
					result = NULL;
					sprintf(resPacket, "|ERR|(%s) number_manage is not",domain);
					return -1;
				}

				row = mysql_fetch_row( result );
				if(row) 
				{
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(crm_flag, row[1]?row[1]:"");
					ps_delSpace(crm_flag);
					strcpy(messenger_ip, row[2]?row[2]:"127.0.0.1");
					ps_delSpace(messenger_ip);
					strcpy(old_passwd_store, row[3]?row[3]:"");
					ps_delSpace(old_passwd_store);
				}
				mysql_free_result(result);
				result = NULL;
		} else {
			if(argv[4] && *argv[4])
				strcpy(phoneid,argv[4]);
			if(argv[5] && *argv[5])
				strcpy(serverip,argv[5]);
			else {
				if(customInfo(domain) < 0)
					return -1;

				sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

			}
		}
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

		//passwd[5] = '\0';
		if(strlen(old_passwd_store) > 128) {
			sprintf(passwd_store,"%-128.128s|%-257.257s",hash_str,old_passwd_store);
			if(!strncmp(hash_str,old_passwd_store,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_1",passwd);
				return -1;
			}
			else if(!strncmp(hash_str,old_passwd_store+129,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_2",passwd);
				return -1;
			}
			else if(!strncmp(hash_str,old_passwd_store+258,128)) {
				sprintf(resPacket, "|ER0|(%s) is one of passwd last 3 changed passwd_3",passwd);
				return -1;
			}
		}
		else if(strlen(old_passwd_store) <= 128)
			sprintf(passwd_store,"%-128.128s|%-128.128s|%-128.128s",hash_str,"","");

		sprintf(sqlcmd,"UPDATE number_manage  set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' \
		where phoneid = '0%7.7s' and domain='%s'",\
		hash_str,today,passwd_store,phoneid+1,domain);
		//sprintf(sqlcmd,"UPDATE number_manage  set passwd = '%s',passwd_chg_date='%s',passwd_store='%s' \
		//where phoneid = '0%7.7s' and domain='%s'",\
		//passwd,today,passwd_store,phoneid+1,domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql_1),sqlcmd );
			logCmd();
			//return(-1);
		}


/*****************************
		sprintf(sqlcmd,"UPDATE voicemail_users  set password = '%s' \
		where mailbox = '%7.7s' and domain='%s'",\
		passwd,phoneid+1, domain);

		printf("\nsqlcmd : ((((%s))))",sqlcmd);
		if( mysql_query(mysql_1, sqlcmd) ) {
			sprintf(resPacket, "|ERR|Update Error!(%s, %s)",mysql_error(mysql_1),sqlcmd );
			logCmd();
			//return(-1);
		}
*/

		sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);
printf("\n[5m(%s),(%s)[0m",hash_str,passwd);

printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
printf("\ncommandBuf:(%s)",commandBuf);
		sprintf(resPacket,"|RES|UTH userid:(%s)-(%s)_(%s)",user,domain,phoneid);


		printf("\nphoneid1 : (%s)",phoneid);
		if(PVS == 1 && MASTER == 1) 
		{

			if(MASTER == 1 && strlen(BACKUP_SERVER) > 8) {
				if(ret = commandSend(commandBuf,BACKUP_SERVER,"sub2") < 0) {
					tmm_currDate(YYYYMMDDHHMMSS,today);
					sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
					sprintf(sqlcmd, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTH')",tmp, commandBuf,BACKUP_SERVER,"sub2");
					mysql_query(mysql_1, sqlcmd);

				}
			}

		printf("\nphoneid2 : (%s)",phoneid);
		if((*crm_flag == 'A' || *crm_flag == 'B') && strcmp(messenger_ip,"127.0.0.1")) {
                        int j;
                        MD5_DIGEST digest;
                        md5_digest(passwd, strlen(passwd), digest);
                        for (j=0; j< sizeof(digest); j++) {
                            sprintf(md5_passwd+strlen(md5_passwd),"%02x", digest[j]);
                        }

			sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|%s|",user,domain,md5_passwd,inner_num,phoneid,serverip,num070);
			//sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|%s|",user,domain,hash_str,inner_num,phoneid,serverip,num070);
			if(ret = commandSendUc(commandBuf,"UTH",messenger_ip,1) < 0) {
				sprintf(sqlcmd1, "insert into send_uc(regdate,command,serverip,flag,cnt,cmd,messenger_ip,number) values ('%s','%s','%s','0',1,'UTH','%s','%s')",tmp, commandBuf,serverip,messenger_ip,num070);
				printf("\nsqlcmd:(%s)",sqlcmd1);
				mysql_query(mysql_1, sqlcmd1);
			}
		}
		printf("\nphoneid3 : (%s)",phoneid);

		sprintf(commandBuf,"|UTH|%s@%s|%s|%s|%s|%s|",user,domain,passwd,inner_num,phoneid,serverip);
		sprintf(resPacket,"|RES|UTH userid:(%s)-(%s)_(%s)",user,domain,phoneid);
			/****추가 ***/
			//sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and serverip <> '%s'",serverip,serverip);
			sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",serverip);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql_1),sqlcmd );
				if(mysql_1)
					mysql_close(mysql_1);
				sqlinit_1(RELAYIP);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql_1 );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql_1),sqlcmd );
				tcpWrite(masterFd, resPacket);
				exit(0);
			}
							
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				return 0;
			}

			for(i=0;i < row_num;i++) {
				row = mysql_fetch_row( result);
				if(row) 
				{
					strcpy(serverip, row[0]?row[0]:"127.0.0.1");
					ps_delSpace(serverip);
					ps_delSpace(row[1]);
				}
				if(*serverip && strlen(serverip) > 10) {
					if((ret = commandSend(commandBuf,serverip,row[1]) < 0)) {
						tmm_currDate(YYYYMMDDHHMMSS,today);
						sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
						sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'UTH')",tmp, commandBuf,serverip);
						printf("\nsqlcmd:(%s)",sqlcmd);
						mysql_query(mysql_1, sqlcmd1);
					}
				}
			}
			mysql_free_result(result);
			result = NULL;
		}

	}
	sprintf(resPacket,"|RES|master|(%s)",phoneid);
	return 0 ;

}
/*************************************************************************
* rcording free
*************************************************************************/
int
procDEC2(char *RELAYIP)
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],phoneid[20],mailbox[64];
  char	code[65], filename[64],channel[64],peerchannel[64];
  char	basedir[128];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");
    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");
    if(argv[4] && *argv[5])
		strcpy(phoneid,argv[5]);
	else
		strcpy(phoneid,"xxxxx");


	
	if(!mysql_1)
		sqlinit_1(RELAYIP);

	memset(filename,0,sizeof(filename)); 
    //if(PVS == 1 && *domain == '\0') {
			sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s'",phoneid+1);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql_1, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql_1 Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
				if(mysql_1)
					mysql_close(mysql_1);
				sqlinit_1(RELAYIP);
				if( ret = mysql_query(mysql_1, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql_1 );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql_1),sqlcmd );
				logCmd();
				return(-1);
			}   
						
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(domain, row[0]?row[0]:"unknown.unknown");
				ps_delSpace(domain);
				strcpy(serverip, row[1]?row[1]:"127.0.0.1");
				ps_delSpace(serverip);
			}
			mysql_free_result(result);
			result = NULL;
	//}

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

    //if(PVS == 1 && *domain != '\0') {
/***********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);
printf("\n[5m(((%s)))[0m",serverip);

			if(*filename == '\0')
				sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);
				
			sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);

			if(*channel == '\0' || strlen(channel) < 10) {
				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			if(strlen(channelname) < 10 ) {
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}
/****
			if(*monitored == '0'){
				sprintf(resPacket, "|ERR|DEC|%s@%s|%s|%s|2|",user,domain,phoneid,serverip);
				return -1;
			}
*/

				sprintf(command,"%s","StopMonitor");
printf("\n[5mMonitor stop~~~!");
                                sockfd  = Monitor(serverip,command,basedir,channelname,peerchannel,NULL);
				if(sockfd > -1) {
					strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
					write(sockfd, sqlcmd, strlen(sqlcmd));
					close(sockfd);
				}

	//}
	sprintf(resPacket, "|RES|DEC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}

/*************************************************************************
* rcording
*************************************************************************/
int
procREC2(char *RELAYIP)
{
  char mp3dir[1024];
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
	char	destP[256];
  char  sqlcmd[512],phoneid[20],mailbox[64],method[10];
  char  basedir[128];
  char	code[65], filename[64],channel[64],peerchannel[64];
        time_t  tmm;
        struct  tm      tp;
        int     yy, mm, dd, hour, min, wday,sec;


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(filename,0,sizeof(filename)); 
	memset(channel,0,sizeof(channel)); 
	memset(peerchannel,0,sizeof(peerchannel)); 
	memset(phoneid,0,sizeof(phoneid)); 
	memset(method,0,sizeof(method)); 

        tmm=time(0);
        localtime_r(&tmm, &tp );

        yy  = tp.tm_year+1900; mm  = tp.tm_mon+1; dd  = tp.tm_mday;
        hour= tp.tm_hour; min = tp.tm_min; sec = tp.tm_sec;
        wday = tp.tm_wday;

/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

/****
/home/ucmaster/211.32.148.83/monitor
|REC|admin@test28.net|001/0010002/0002-0000_20091281442|SIP/10010002-b3c6||10010002|===>(rec.c)
*/

    if(argv[2] && *argv[2])
		strcpy(filename,argv[2]);
	else
		strcpy(filename,"");

//strcpy(filename,"");
	if(strlen(filename) < 20)
		    strcpy(filename,"");

    if(argv[3] && *argv[3])
		strcpy(channel,argv[3]);
	else
		strcpy(channel,"");
	strcpy(channel,"");

    if(argv[4] && *argv[4])
		strcpy(peerchannel,argv[4]);
	else
		strcpy(peerchannel,"xxxxx");

    if(argv[5] && *argv[5])
		strcpy(phoneid,argv[5]);
	else
		strcpy(phoneid,"xxxxx");

    if(argv[6] && *argv[6])
		strcpy(method,argv[6]);
	else
		strcpy(method,"");

	if(!mysql_1)
		sqlinit_1(RELAYIP);

	if(strlen(phoneid) == 8)
		sprintf(sqlcmd, "select domain,defaultip from number_manage where phoneid = '0%7.7s' and domain='%s'",phoneid+1,domain);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"070",3))
		sprintf(sqlcmd, "select domain,defaultip from number_manage where 070number = '%s' and domain='%s'",phoneid,domain);
	else if(strlen(phoneid) > 8 && !strncmp(phoneid,"0",1))
		sprintf(sqlcmd, "select domain,defaultip from number_manage where org_num = '%s' and domain='%s'",phoneid,domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql_1, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql_1),sqlcmd );
		if(mysql_1)
			mysql_close(mysql_1);
		sqlinit_1(RELAYIP);
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql_1 );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql_1),sqlcmd );
		logCmd();
		return(-1);
	}   
				
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
		logCmd();
		return -1;
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(domain, row[0]?row[0]:"unknown.unknown");
		ps_delSpace(domain);
		strcpy(serverip, row[1]?row[1]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	mysql_free_result(result);
	result = NULL;

printf("\n[5m(((%s)))[0m",domain);
printf("\n[5m(((%s)))[0m",domain);

/*********************
		if(customInfo(domain) < 0)
			return -1;
*/
			strncpy(prefix,phoneid+1,3);
			*phoneid = '1';

printf("\n[5m(((%s)))[0m",serverip);

                        if(*filename == '\0') {
                               sprintf(filename,"%3.3s/%7.7s/%s-%s_%04d%02d%02d%02d%02d%02d",prefix,phoneid+1,phoneid+4,"0000",yy,mm,dd,hour,min,sec);

				sprintf(basedir,"/home/ucmaster/%s/monitor/%s",serverip,filename);
			}
			else
				sprintf(basedir,"%s",filename);

  

			if(*channel == '\0' || strlen(channel) < 10) {
				sprintf(command,"show channel_1 SIP/1%7.7s",phoneid+1);
				if(strcmp(serverip,"127.0.0.1") && strlen(serverip) > 5) {
					sockfd = ManagerInfo(serverip,command);
					if(sockfd > -1) {
						strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
						write(sockfd, sqlcmd, strlen(sqlcmd));
						close(sockfd);
					}
				}
			}
			else 
				strcpy(channelname,channel);

			//if(strlen(channelname) < 10 || strlen(bridgedchannelname) < 10) {
			if(strlen(channelname) < 10) {
				sprintf(resPacket, "|ERR|REC|%s@%s|%s|%s|1|",user,domain,phoneid,serverip);
				return -1;
			}


			sprintf(command,"%s","Monitor");
printf("\n[5mMonitor start~~~!");
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
printf("\nManagerInfo:(%s)",basedir);
			sockfd = Monitor(serverip,command,basedir,channelname,*peerchannel?peerchannel:"xxxx",method);
			if(sockfd > -1) {
				strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
				write(sockfd, sqlcmd, strlen(sqlcmd));
				close(sockfd);
			}

	//}
	sprintf(resPacket, "|RES|REC|%s@%s|%s|%s||",user,domain,phoneid,serverip);
	return 0;
}
/*************************************************************************
* hangup OAM2
*************************************************************************/
int
procHNG2(char *RELAYIP)
{
  char mp3dir[1024];
  char email[256];
	char	destP[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int	tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char	code[65],outer_num[15],phoneid[10];


	memset(email,0,sizeof(email));
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(code,0,sizeof(code)); 
	memset(outer_num,0,sizeof(outer_num)); 
	memset(phoneid,0,sizeof(phoneid)); 
/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

    if(argv[2] && *argv[2])
		strcpy(inner_num,argv[2]);

	if(strlen(inner_num) == 3)
		sprintf(inner_num,"0%s",inner_num);
	else if(strlen(inner_num) != 4)
		strcpy(inner_num,"0000");
    if(argv[3] && *argv[3])
		strcpy(outer_num,argv[3]);

    if(PVS == 1) {
		if(!mysql_1)
			sqlinit_1(RELAYIP);

		if(strlen(outer_num) <  10) {
			if(customInfo2(domain) < 0)
				return -1;

			sprintf(phoneid,"1%3.3s%4.4s",prefix,inner_num);

		}
		else  {
			sprintf(sqlcmd, "select defaultip,phoneid,domain from number_manage where 070number = '%s'",outer_num);
			printf("\nsqlcmd:(%s)",sqlcmd);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
				if(mysql)
					mysql_close(mysql);
				sqlinit();
				if( ret = mysql_query(mysql, sqlcmd) ) {
					tcpWrite(masterFd, resPacket);
					logCmd();
					exit(0);
				}
			}   

			result = mysql_store_result( mysql );
			if(!result ) {
				sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
				return(-1);
			}   
					
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				mysql_free_result(result);
				result = NULL;
				sprintf(resPacket, "|ERR|Data Not Found!.(%s)",sqlcmd);
				logCmd();
				return -1;
			}

			row = mysql_fetch_row( result );
			if(row) {
				strcpy(serverip, row[0]?row[0]:"127.0.0.1");
				ps_delSpace(serverip);
				strcpy(phoneid, row[1]?row[1]:"00000000");
				ps_delSpace(phoneid);
				strcpy(domain, row[2]?row[2]:"uplus.co.kr");
				ps_delSpace(domain);
			}

			mysql_free_result(result);
			result = NULL;
			strncpy(prefix,phoneid+1,3);
			strcpy(inner_num,phoneid+4);
			*phoneid = '1';
		}


		sprintf(channelname,"SIP/1%7.7s",phoneid+1);
		sprintf(command,"Channel: %s",channelname);
		sockfd = ManagerAction(serverip,"Hangup",command);
		if(sockfd > -1) {
			strcpy(sqlcmd,"Action: Logoff\r\n\r\n");
			write(sockfd, sqlcmd, strlen(sqlcmd));
			close(sockfd);
		}

	}
	sprintf(resPacket, "|RES|HNG|%s@%s|%s|",user,domain,phoneid);
	return 0;
}
/*****************************************************************************************/
int
customInfo2(char *pardomain)
{
	char	sqlcmd[512];
	int	ret,row_num;


	memset(serverip,0,sizeof(serverip));
	memset(prefix,0,sizeof(prefix));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(sqlcmd,0,sizeof(sqlcmd));

	sprintf(sqlcmd, "select proxyip,prefix,inner_digit from custom_info where domain= '%s'",pardomain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql_1, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,
mysql_error(mysql_1),sqlcmd );
		if( ret = mysql_query(mysql_1, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			sleep(1);
			logCmd();
			exit(0);
		}
	}

	result = mysql_store_result( mysql_1 );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error custom_info!(%s, %s)",mysql_error(mysql_1),sqlcmd );
		return(-1);
	}

	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|90000|(%s)Data Not Found!.",domain);
		return(-1);
	}

	row = mysql_fetch_row( result );
	if(row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
		strcpy(prefix, row[1]?row[1]:"000");
		ps_delSpace(prefix);
		strcpy(inner_digit, row[2]?row[2]:"4");
		ps_delSpace(inner_digit);
	}
	mysql_free_result(result);
	result = NULL;

	return 0;
}


//jsfamily PROJECT07 타 OAM에 패킷 전달 번호이동 관련
int
relayOAMproc(char *relcmd,int n)
{
	char	sqlcmd[512];
	char	sendcmdbuf[1024];
	int	ret,row_num;
	int c=2;
	if(n > 10 || n < 2){
		n=0;
	}
	
	memset(sendcmdbuf,0,sizeof(sendcmdbuf));
sprintf(sendcmdbuf,"|%s|%s",relcmd,argv[1]);
printf("\n=========== sendcmdbuf %s(%d)sendcmdbuf:%s\n",relcmd,n,sendcmdbuf);
	for(c=2; c <= n; c++){
		sprintf(sendcmdbuf+strlen(sendcmdbuf),"|%s",argv[c]);
	}
printf("\n=========== relayOAMproc %s(%d)commandBuf:%s\n",relcmd,n,sendcmdbuf);
    	if(PVS == 1) {
		if(!strcmp(OAM_RLYSERVERS1,MYOAM_SERVER)){
			if(ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2) < 0) {
				ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
			}
		}
		if(!strcmp(OAM_RLYSERVERS2,MYOAM_SERVER)){
			if(ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1) < 0) {
				ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS3);
			}
		}
		if(!strcmp(OAM_RLYSERVERS3,MYOAM_SERVER)){
			if(ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS1) < 0) {
				ret = commandSendOAM3332(sendcmdbuf,OAM_RLYSERVERS2);
			}
		}
	}

	return ret;
}



/****************************************************************************************/
/****************************************************************************************/
int
procHDS()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32],today[20];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);

	strcpy(call_kind,"9");
	if(argv[10] && *argv[10])
		strcpy(call_kind,argv[10]);
/********************************
	if(argv[1] && *argv[1])
		strcpy(fromtime,argv[1]);

	if(argv[2] && *argv[2])
		strcpy(totime,argv[2]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[3] && *argv[3])
		strcpy(where_field_1,argv[2]);
	if(argv[4] && *argv[4])
		strcpy(where_value_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_field_2,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_value_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_field_3,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_value_3,argv[8]);


	strcpy(call_kind,"9");
	if(argv[9] && *argv[9])
		strcpy(call_kind,argv[9]);
*******************/
	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;

/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	printf("\nserverip:(%s)",serverip);
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}

/***
		strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);
		if(*s_shmP->cdr_server == '\0')
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

		if(s_shmP->cdr_fail > 20) {
			if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
				s_shmP->cdr_change_time=time(0);
			}
			else {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
				s_shmP->cdr_change_time=time(0);
			}
		}

		if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
			s_shmP->cdr_fail = 0;
		}
		sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */

        sprintf(sqlcmd,"select recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext <> 'inbound'",fromtime,totime,domain);

        if(*where_field_1 && *where_value_1)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
        if(*where_field_2 && *where_value_2)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
        if(*where_field_3 && *where_value_3)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

        strcat(sqlcmd," order by recorddate DESC");

        /****************************************/
printf("\nselcmd:%s\n",sqlcmd);
printf("\nselcmd:%s\n",sqlcmd);

	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		if(cdrmysql)
			mysql_close(cdrmysql);
		//s_shmP->cdr_fail++;
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			//s_shmP->cdr_fail++;
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

	//s_shmP->cdr_fail = 0;

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
***/
		sprintf(resPacket,"|RES");
printf("\n row_num:%d\n",row_num);
		for(i=0;i < row_num;i++) {
printf("\n i/row_num:%d/%d\n",i,row_num);
                        memset(recorddate,0,sizeof(recorddate));
                        memset(src_num,0,sizeof(src_num));
                        memset(dst_num,0,sizeof(dst_num));
                        memset(ars_num,0,sizeof(ars_num));
                        memset(kind,0,sizeof(kind));
                        memset(queuename,0,sizeof(queuename));
                        memset(inner_digit,0,sizeof(inner_digit));
                        memset(dtmf_1,0,sizeof(dtmf_1));
                        memset(dtmf_2,0,sizeof(dtmf_2));
                        memset(responsecode,0,sizeof(responsecode));
                        memset(result_,0,sizeof(result_));
                        memset(billsec,0,sizeof(billsec));
                        memset(src070,0,sizeof(src070));
                        memset(srcorg,0,sizeof(srcorg));
                        memset(dst070,0,sizeof(dst070));
                        memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));
                        loop = 0;

			row = mysql_fetch_row( result );
			if( row) {
/***
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
***/

                            strcpy(recorddate,row[0]?row[0]:"");
                            strcpy(src_num,row[1]?row[1]:"");
                            strcpy(dst_num,row[2]?row[2]:"");
                            strcpy(ars_num,row[3]?row[3]:"");
                            strcpy(kind,row[4]?row[4]:"");
                            strcpy(queuename,row[5]?row[5]:"");
                            strcpy(inner_digit,row[6]?row[6]:"");
                            strcpy(dtmf_1,row[7]?row[7]:"");
                            strcpy(dtmf_2,row[8]?row[8]:"");
                            strcpy(responsecode,row[9]?row[9]:"");
                            strcpy(result_,row[10]?row[10]:"");
                            strcpy(billsec,row[11]?row[11]:"");
                            strcpy(src070,row[12]?row[12]:"");
                            strcpy(srcorg,row[13]?row[13]:"");
                            strcpy(dst070,row[14]?row[14]:"");
                            strcpy(dstorg,row[15]?row[15]:"");
                            strcpy(channel,row[16]?row[16]:"");
                            strcpy(dstchannel,row[17]?row[17]:"");

                            if(*call_kind == '0') {
                                if(strncmp(src_num,dst_num,4) || strlen(src_num) < 8 || strlen(dst_num) < 8)
                                        continue;
                                if(*inner_digit == '3') {
                                    strcpy(src_num,row[1]?row[1]+5:"");
                                    strcpy(dst_num,row[2]?row[2]+5:"");
                                }
                                else {
                                    strcpy(src_num,row[1]?row[1]+4:"");
                                    strcpy(dst_num,row[2]?row[2]+4:"");
                                }
                            }
                            else if(*call_kind == '1') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"011",3) || !strncmp(dst_num,"017",3) || !strncmp(dst_num,"018",3) || !strncmp(dst_num,"019",3) || !strncmp(dst_num,"010",3) || !strncmp(dst_num,"00",2) || strlen(dst_num) < 8)
                                        continue;
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                            }
                            else if(*call_kind == '2') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"011",3) || !strncmp(dst_num,"017",3) || !strncmp(dst_num,"018",3) || !strncmp(dst_num,"019",3) || !strncmp(dst_num,"010",3) || strlen(dst_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '3') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"00",2) && strlen(dst_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '9' || *call_kind == '\0') {
                                if(!strncmp(src_num,dst_num,4)) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                                else {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                            }
                                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s", recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result_,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel);

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);
printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%s)",resPacket);

					if(!((i+1)%15)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}



/*************************************************************************
* inbound
*************************************************************************/
int
procHDR()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32],today[20];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);

	strcpy(call_kind,"9");
	if(argv[10] && *argv[10])
		strcpy(call_kind,argv[10]);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;

/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	printf("\nserverip:(%s)",serverip);
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}
/**********
		strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);
		if(*s_shmP->cdr_server == '\0')
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

		if(s_shmP->cdr_fail > 20) {
			if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
				s_shmP->cdr_change_time=time(0);
			}
			else {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
				s_shmP->cdr_change_time=time(0);
			}
		}

		if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
			s_shmP->cdr_fail = 0;
		}

		sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */

        sprintf(sqlcmd,"select recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext = 'inbound'",fromtime,totime,domain);

        if(*where_field_1 && *where_value_1)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
        if(*where_field_2 && *where_value_2)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
        if(*where_field_3 && *where_value_3)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

        strcat(sqlcmd," order by recorddate DESC");

printf("\nsqlcmd:%s\n",sqlcmd);
printf("\nsqlcmd:%s\n",sqlcmd);
        /****************************************/

	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		//s_shmP->cdr_fail++;
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			//s_shmP->cdr_fail++;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   
	//s_shmP->cdr_fail = 0;

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
***/
		sprintf(resPacket,"|RES");
printf("\nrow_num:%d\n",row_num);
		for(i=0;i < row_num;i++) {
printf("\ni/row_num:%d/%d\n",i,row_num);
                        memset(recorddate,0,sizeof(recorddate));
                        memset(src_num,0,sizeof(src_num));
                        memset(dst_num,0,sizeof(dst_num));
                        memset(ars_num,0,sizeof(ars_num));
                        memset(kind,0,sizeof(kind));
                        memset(queuename,0,sizeof(queuename));
                        memset(inner_digit,0,sizeof(inner_digit));
                        memset(dtmf_1,0,sizeof(dtmf_1));
                        memset(dtmf_2,0,sizeof(dtmf_2));
                        memset(responsecode,0,sizeof(responsecode));
                        memset(result_,0,sizeof(result_));
                        memset(billsec,0,sizeof(billsec));
                        memset(src070,0,sizeof(src070));
                        memset(srcorg,0,sizeof(srcorg));
                        memset(dst070,0,sizeof(dst070));
                        memset(dstorg,0,sizeof(dstorg));    
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));

                        loop = 0;
			row = mysql_fetch_row( result );
			if( row) {
/*
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
*/

                            strcpy(recorddate,row[0]?row[0]:"");
                            strcpy(src_num,row[1]?row[1]:"");
                            strcpy(dst_num,row[2]?row[2]:"");
                            strcpy(ars_num,row[3]?row[3]:"");
                            strcpy(kind,row[4]?row[4]:"");
                            strcpy(queuename,row[5]?row[5]:"");
                            strcpy(inner_digit,row[6]?row[6]:"");
                            strcpy(dtmf_1,row[7]?row[7]:"");
                            strcpy(dtmf_2,row[8]?row[8]:"");
                            strcpy(responsecode,row[9]?row[9]:"");
                            strcpy(result_,row[10]?row[10]:"");
                            strcpy(billsec,row[11]?row[11]:"");
                            strcpy(src070,row[12]?row[12]:"");
                            strcpy(srcorg,row[13]?row[13]:"");
                            strcpy(dst070,row[14]?row[14]:"");
                            strcpy(dstorg,row[15]?row[15]:"");
                            strcpy(channel,row[16]?row[16]:"");
                            strcpy(dstchannel,row[17]?row[17]:"");

                            if(*call_kind == '0') {
                                if(strncmp(src_num,dst_num,4)  || strlen(src_num) < 8 || strlen(dst_num) < 8)
                                        continue;
                                if(*inner_digit == '3') {
                                    strcpy(src_num,row[1]?row[1]+5:"");
                                    strcpy(dst_num,row[2]?row[2]+5:"");
                                }
                                else {
                                    strcpy(src_num,row[1]?row[1]+4:"");
                                    strcpy(dst_num,row[2]?row[2]+4:"");
                                }
                            }
                            else if(*call_kind == '1') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(src_num,"011",3) || !strncmp(src_num,"017",3) || !strncmp(src_num,"018",3) || !strncmp(src_num,"019",3) || !strncmp(src_num,"010",3) || !strncmp(src_num,"00",2) || strlen(src_num) < 8)
                                        continue;
                                    if(*inner_digit == '3') {
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                            }
                            else if(*call_kind == '2') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(src_num,"011",3) || !strncmp(src_num,"017",3) || !strncmp(src_num,"018",3) || !strncmp(src_num,"019",3) || !strncmp(src_num,"010",3) || strlen(src_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '3') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(src_num,"00",2) && strlen(src_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '9' || *call_kind == '\0') {
                                if(!strncmp(src_num,dst_num,4)) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                                else {
                                    if(*inner_digit == '3') {
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                            }
                                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s", recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result_,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel);

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);

					if(!((i+1)%15)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}


/*************************************************************************
* outbound Static
*************************************************************************/
int
procHSS()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32],today[20];
  char	groupby_field_1[32],groupby_field_2[32],count[11];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));
	memset(groupby_field_1,0,sizeof(groupby_field_1));
	memset(groupby_field_2,0,sizeof(groupby_field_2));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(count,0,sizeof(count)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);
	if(argv[10] && *argv[10])
		strcpy(groupby_field_1,argv[10]);
	if(argv[11] && *argv[11])
		strcpy(groupby_field_2,argv[11]);

	strcpy(call_kind,"9");
	if(argv[12] && *argv[12])
		strcpy(call_kind,argv[12]);


	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;


/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	printf("\nserverip:(%s)",serverip);
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}
/***
		strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);

		if(*s_shmP->cdr_server == '\0')
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

		if(s_shmP->cdr_fail > 20) {
			if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
				s_shmP->cdr_change_time=time(0);
			}
			else {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
				s_shmP->cdr_change_time=time(0);
			}
		}

		if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
			s_shmP->cdr_fail = 0;
		}

		sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */
        sprintf(sqlcmd,"select count(*) from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext <> 'inbound'",fromtime,totime,domain);
        if(*groupby_field_1 && *groupby_field_2 == '\0') {
            sprintf(sqlcmd,"select count(*),%s from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext <> 'inbound'",groupby_field_1,fromtime,totime,domain);

            if(*where_field_1 && *where_value_1)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
            if(*where_field_2 && *where_value_2)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
            if(*where_field_3 && *where_value_3)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

            sprintf(sqlcmd+strlen(sqlcmd)," group by %s", groupby_field_1);
        }
        else if(*groupby_field_1 && *groupby_field_2) {
            sprintf(sqlcmd,"select count(*),%s,%s from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext <> 'inbound'",groupby_field_1,groupby_field_2,fromtime,totime,domain);

            if(*where_field_1 && *where_value_1)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
            if(*where_field_2 && *where_value_2)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
            if(*where_field_3 && *where_value_3)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

            sprintf(sqlcmd+strlen(sqlcmd)," group by %s,%s", groupby_field_1,groupby_field_2);
        }

printf("\nsqlcmd:%s\n",sqlcmd);
printf("\nsqlcmd:%s\n",sqlcmd);
	/*** 1633과금 처리 할것!!!! ***/

	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		//s_shmP->cdr_fail++;
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			//s_shmP->cdr_fail++;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

	//s_shmP->cdr_fail = 0;

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
printf("\nrow_num:%d\n",row_num);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
***/
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) {
printf("\nrow_num:%d/%d\n",i,row_num);
                        memset(count,0,sizeof(count));

			row = mysql_fetch_row( result );
			if( row) {
/**
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
**/

                            strcpy(count,row[0]?row[0]:"0");


                            if(*groupby_field_1 && *groupby_field_2)
                                sprintf(resPacket+strlen(resPacket),"|%s^%s^%s", count,row[1]?row[1]:"0",row[2]?row[2]:"0");
                            else
                                sprintf(resPacket+strlen(resPacket),"|%s^%s", count,row[1]?row[1]:"0");
/*
                            if(*groupby_field_1 && *groupby_field_2)
                                sprintf(resPacket+strlen(resPacket),"|%s^%s^%s", count,groupby_field_1,groupby_field_2);
                            else
                                sprintf(resPacket+strlen(resPacket),"|%s^%s", count,groupby_field_1);
*/

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);

					if(!((i+1)%30)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}


/*************************************************************************
* inbound Static
*************************************************************************/
int
procHRS()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32], today[20];
  char	groupby_field_1[32],groupby_field_2[32],count[11];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));
	memset(groupby_field_1,0,sizeof(groupby_field_1));
	memset(groupby_field_2,0,sizeof(groupby_field_2));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(count,0,sizeof(count)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);
	if(argv[10] && *argv[10])
		strcpy(groupby_field_1,argv[10]);
	if(argv[11] && *argv[11])
		strcpy(groupby_field_2,argv[11]);

	strcpy(call_kind,"9");
	if(argv[12] && *argv[12])
		strcpy(call_kind,argv[12]);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;

/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	printf("\nserverip:(%s)",serverip);
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}
/*******
		strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);

		if(*s_shmP->cdr_server == '\0')
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

		if(s_shmP->cdr_fail > 20) {
			if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
				s_shmP->cdr_change_time=time(0);
			}
			else {
				strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
				s_shmP->cdr_change_time=time(0);
			}
		}

		if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
			s_shmP->cdr_fail = 0;
		}

		sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */

        if(*groupby_field_1 && *groupby_field_2 == '\0') {
            sprintf(sqlcmd,"select count(*),%s from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext = 'inbound'",groupby_field_1,fromtime,totime,domain);

            if(*where_field_1 && *where_value_1)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
            if(*where_field_2 && *where_value_2)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
            if(*where_field_3 && *where_value_3)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

            sprintf(sqlcmd+strlen(sqlcmd)," group by %s", groupby_field_1);
        }
        else if(*groupby_field_1 && *groupby_field_2) {
            sprintf(sqlcmd,"select count(*),%s,%s from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext = 'inbound'",groupby_field_1,groupby_field_2,fromtime,totime,domain);

            if(*where_field_1 && *where_value_1)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
            if(*where_field_2 && *where_value_2)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
            if(*where_field_3 && *where_value_3)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

            sprintf(sqlcmd+strlen(sqlcmd)," group by %s,%s", groupby_field_1,groupby_field_2);
        }

printf("\nsqlcmd:%s\n",sqlcmd);

	/*** 1633과금 처리 할것!!!! ***/
	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		//s_shmP->cdr_fail++;
		if(cdrmysql)
			mysql_close(cdrmysql);
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			//s_shmP->cdr_fail++;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

	//s_shmP->cdr_fail = 0;

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
printf("\nrow_num:%d\n",row_num);
        if( row_num == 0 ) {
printf("\nrow_num:%d\n",row_num);
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
***/
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) {
                        memset(count,0,sizeof(count));

			row = mysql_fetch_row( result );
			if( row) {
/**
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
**/

                            strcpy(count,row[0]?row[0]:"0");


                            if(*groupby_field_1 && *groupby_field_2)
                                sprintf(resPacket+strlen(resPacket),"|%s^%s^%s", count,row[1]?row[1]:"0",row[2]?row[2]:"0");
                            else
                                sprintf(resPacket+strlen(resPacket),"|%s^%s", count,row[1]?row[1]:"0");

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);

					if(!((i+1)%30)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}



/*************************************************************************
* ARS Static
*************************************************************************/
int
procANS()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32],today[20];
  char	groupby_field_1[32],groupby_field_2[32],count[11];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));
	memset(groupby_field_1,0,sizeof(groupby_field_1));
	memset(groupby_field_2,0,sizeof(groupby_field_2));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(count,0,sizeof(count)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);
	if(argv[10] && *argv[10])
		strcpy(groupby_field_1,argv[10]);
	if(argv[11] && *argv[11])
		strcpy(groupby_field_2,argv[11]);

	strcpy(call_kind,"9");
	if(argv[12] && *argv[12])
		strcpy(call_kind,argv[12]);

	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;

/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
	row = mysql_fetch_row( result );
	if( row) {
		strcpy(serverip, row[0]?row[0]:"127.0.0.1");
		ps_delSpace(serverip);
	}
	mysql_free_result(result);
	result = NULL;
printf("\nserverip:(%s)",serverip);
	j= 0;
	while(strlen(CDR_SERVER_[j].server) > 1) {
		if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
			sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
			sprintf(table,"%s",CDR_SERVER_[j].table);
			sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
			break;
		}
		j++;
	}

/*****************
	strcpy(CDR_SERVER_[j].cdr_server,CDR_SERVER_[j].standby);
	if(*s_shmP->cdr_server == '\0')
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

	if(s_shmP->cdr_fail > 20) {
		if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
			s_shmP->cdr_change_time=time(0);
		}
		else {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
		}
	}

	if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
		s_shmP->cdr_change_time=time(0);
		s_shmP->cdr_fail = 0;
	}

	sprintf(cdr_server,"%s",s_shmP->cdr_server);
*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */
            sprintf(sqlcmd,"select ars_num,queuename,result,count(*) from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' and dcontext = 'inbound'",fromtime,totime,domain);
            if(*where_field_1 && *where_value_1)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
            if(*where_field_2 && *where_value_2)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
            if(*where_field_3 && *where_value_3)
                sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

            sprintf(sqlcmd+strlen(sqlcmd),"%s"," group by ars_num,queuename,result");


printf("sqlcmd=( %s )\n",sqlcmd);
printf("sqlcmd=( %s )\n",sqlcmd);


	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		if(cdrmysql)
			mysql_close(cdrmysql);
		//s_shmP->cdr_fail++;
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			//s_shmP->cdr_fail++;
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   
	//s_shmP->cdr_fail = 0;

	result = mysql_store_result( cdrmysql );
	if(!result) {
		sprintf(resPacket, "|ERR|mysql Search Error2!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
		return(-1);
	}

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
printf(">>>>>>sqlcmd=( %s )\n",sqlcmd);
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
printf(">>>>>>row_num=( %d )\n",row_num);
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
		sprintf(resPacket,"|RES");
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result );
			if( row) {
/*
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
*/

                            sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s",row[0]?row[0]:"",row[1]?row[1]:"",row[2]?row[2]:"",row[3]?row[3]:"");
printf("\nresPacket:%s\n",resPacket);

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);
                                if(!((i+1)%20)) {
                                        if((i+1) < row_num) {
                                                        strcat(resPacket,"\n");
                                                        tcpWrite(masterFd, resPacket);
                                                        sprintf(resPacket,"|RES");
                                        }
                                        else {
                                                        mysql_free_result(result);
                                                        result = NULL;
                                                        printf("\n[5m%s[0m",resPacket);
                                                        return 0;       
                                        }
                                }
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}

/**********************************************************************************************************************/
/**********************************************************************************************************************/
int
procHDA()
{
  int   perbill=0,j = 0, dis_flag = 0, loop=0;
  char passwd[256];
  char email[256];
  int   qid,returncode;
  int   test=0,ret,row_num,i,size;
  char tmp[100];
  unsigned int	tmpNumber;
  unsigned int	tmpcallkind=0;
  char    sqlcmd[1024], table[10],cdr_server[20];
  char    addcond[100],dstchannel[100];
  char	lastapp[20];
  char	recorddate[20],src_num[15], dst_num[15], ars_num[15],kind[10],queuename[32],inner_digit[5],dtmf_1[5],dtmf_2[5], responsecode[5];
  char  result_[32],billsec[11], src070[15],srcorg[15],dst070[15],dstorg[15],channel[50];
  char	fromtime[30],totime[30],call_kind[3],recordfile[64],condition[128],where_field_1[32],where_field_2[32];
  char	where_value_1[32],where_value_2[32];
  char	where_field_3[32],where_value_3[32],today[20];
  char	*tmpP=NULL;

	memset(recorddate,0,sizeof(recorddate));
	memset(src_num,0,sizeof(src_num));
	memset(dst_num,0,sizeof(dst_num));
	memset(ars_num,0,sizeof(ars_num));
	memset(kind,0,sizeof(kind));
	memset(queuename,0,sizeof(queuename));
	memset(inner_digit,0,sizeof(inner_digit));
	memset(dtmf_1,0,sizeof(dtmf_1));
	memset(dtmf_2,0,sizeof(dtmf_2));
	memset(responsecode,0,sizeof(responsecode));
	memset(result_,0,sizeof(result_));
	memset(billsec,0,sizeof(billsec));
	memset(src070,0,sizeof(src070));
	memset(srcorg,0,sizeof(srcorg));
	memset(dst070,0,sizeof(dst070));
	memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));

	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(condition,0,sizeof(condition)); 
	memset(where_field_1,0,sizeof(where_field_1)); 
	memset(where_value_1,0,sizeof(where_value_1)); 
	memset(where_field_2,0,sizeof(where_field_2)); 
	memset(where_value_2,0,sizeof(where_value_2)); 
	memset(where_field_3,0,sizeof(where_field_3)); 
	memset(where_value_2,0,sizeof(where_value_3)); 
	memset(today,0,sizeof(today)); 


/****
	if (isMailList(argv[1])		return(errorReturn("ErMailListExistAlready",__FILE__,__LINE__));
*/

	qid = 0;
        selcnt = 0;

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(fromtime,argv[2]);

	if(argv[3] && *argv[3])
		strcpy(totime,argv[3]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[4] && *argv[4])
		strcpy(where_field_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_value_1,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_field_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_value_2,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_field_3,argv[8]);
	if(argv[9] && *argv[9])
		strcpy(where_value_3,argv[9]);

	strcpy(call_kind,"9");
	if(argv[10] && *argv[10])
		strcpy(call_kind,argv[10]);
/********************************
	if(argv[1] && *argv[1])
		strcpy(fromtime,argv[1]);

	if(argv[2] && *argv[2])
		strcpy(totime,argv[2]);

        tmm_currDate(YYYYMMDDHHMMSS,today);
        if(strlen(fromtime) == 0) {
                sprintf(fromtime,"%4.4s-%2.2s-%2.2s 00:00:00",today,today+4,today+6);
        }
        if(strlen(totime) == 0) {
                sprintf(totime,"%4.4s-%2.2s-%2.2s 24:59:59",today,today+4,today+6);
        }

	if(argv[3] && *argv[3])
		strcpy(where_field_1,argv[2]);
	if(argv[4] && *argv[4])
		strcpy(where_value_1,argv[4]);
	if(argv[5] && *argv[5])
		strcpy(where_field_2,argv[5]);
	if(argv[6] && *argv[6])
		strcpy(where_value_2,argv[6]);
        if(argv[7] && *argv[7])
		strcpy(where_field_3,argv[7]);
	if(argv[8] && *argv[8])
		strcpy(where_value_3,argv[8]);


	strcpy(call_kind,"9");
	if(argv[9] && *argv[9])
		strcpy(call_kind,argv[9]);
*******************/
	if(strlen(fromtime) < 19)
		strcpy(fromtime ,"0000-12-31 23:59:59");
	if(strlen(totime) < 19)
		strcpy(totime,"2099-12-31 23:59:59");

	domain_string(domain);

        if(customInfo(domain) < 0)
                return -1;

/***** get cdr_server start................. */
        sprintf(sqlcmd, "select defaultip from number_manage where domain = '%s' and (imid='%s' or 070number='%s' or org_num='%s' or phoneid='%s')",domain,user,user,user,user);
		printf("\nsqlcmd : (%s)",sqlcmd);
        if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                _tcpWrite(masterFd, resPacket, strlen(resPacket));
		sleep(1); logCmd();
                exit(0);
        }   

        result = mysql_store_result(mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
                return(errorReturn("90000|",__FILE__,__LINE__));
        }

        
		row = mysql_fetch_row( result );
		if( row) {
			strcpy(serverip, row[0]?row[0]:"127.0.0.1");
			ps_delSpace(serverip);
		}
		mysql_free_result(result);
		result = NULL;
	printf("\nserverip:(%s)",serverip);
		j= 0;
		while(strlen(CDR_SERVER_[j].server) > 1) {
			if(!strcmp(serverip,CDR_SERVER_[j].vip)) {
				sprintf(addcond,"(host = '%s' or host = '%s')",CDR_SERVER_[j].active,CDR_SERVER_[j].standby);
				sprintf(table,"%s",CDR_SERVER_[j].table);
				sprintf(cdr_server,"%s",CDR_SERVER_[j].cdr_server);
				break;
			}
			j++;
		}
/***********
	if(*s_shmP->cdr_server == '\0')
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);

	if(s_shmP->cdr_fail > 20) {
		if(!strcmp(CDR_SERVER_[j].cdr_server, s_shmP->cdr_server)) {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].active);
			s_shmP->cdr_change_time=time(0);
		}
		else {
			strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
			s_shmP->cdr_change_time=time(0);
		}
	}

	if(s_shmP->cdr_fail == 0 && !strcmp(s_shmP->cdr_server,CDR_SERVER_[j].active) && time(0)-s_shmP->cdr_change_time > 3600) {
		strcpy(s_shmP->cdr_server,CDR_SERVER_[j].cdr_server);
		s_shmP->cdr_change_time=time(0);
		s_shmP->cdr_fail = 0;
	}

	sprintf(cdr_server,"%s",s_shmP->cdr_server);
	*/

printf("\ncdr_server:(%s)",cdr_server);
/***** get cdr_server end................. */

        sprintf(sqlcmd,"select recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel from new_cdr where recorddate  > '%s' and recorddate  <= '%s' and domain = '%s' ",fromtime,totime,domain);

        if(*where_field_1 && *where_value_1)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_1, where_value_1);
        if(*where_field_2 && *where_value_2)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_2, where_value_2);
        if(*where_field_3 && *where_value_3)
            sprintf(sqlcmd+strlen(sqlcmd) ," and %s='%s'",where_field_3, where_value_3);

        strcat(sqlcmd," order by recorddate DESC");

        /****************************************/
printf("\nselcmd:%s\n",sqlcmd);
printf("\nselcmd:%s\n",sqlcmd);

	cdrinit(cdr_server);
        if( ret = mysql_query(cdrmysql, sqlcmd) ) {
		if(cdrmysql)
			mysql_close(cdrmysql);
		//s_shmP->cdr_fail++;
		cdrinit(cdr_server);
		if( ret = mysql_query(cdrmysql, sqlcmd) ) {
			sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(cdrmysql),sqlcmd );
			//s_shmP->cdr_fail++;
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
        }   

	//s_shmP->cdr_fail = 0;

        result = mysql_store_result( cdrmysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(cdrmysql),sqlcmd );
                return(-1);
        }   
                
        row_num = mysql_num_rows(result);
        if( row_num == 0 ) {
                mysql_free_result(result);
		result = NULL;
		mysql_close(cdrmysql);
                return(errorReturn("90000|",__FILE__,__LINE__));
        }
        
/***
		calldate,clid,dst,dcontext,duration,billsec,disposition
***/
		sprintf(resPacket,"|RES");
printf("\n row_num:%d\n",row_num);
		for(i=0;i < row_num;i++) {
printf("\n i/row_num:%d/%d\n",i,row_num);
                        memset(recorddate,0,sizeof(recorddate));
                        memset(src_num,0,sizeof(src_num));
                        memset(dst_num,0,sizeof(dst_num));
                        memset(ars_num,0,sizeof(ars_num));
                        memset(kind,0,sizeof(kind));
                        memset(queuename,0,sizeof(queuename));
                        memset(inner_digit,0,sizeof(inner_digit));
                        memset(dtmf_1,0,sizeof(dtmf_1));
                        memset(dtmf_2,0,sizeof(dtmf_2));
                        memset(responsecode,0,sizeof(responsecode));
                        memset(result_,0,sizeof(result_));
                        memset(billsec,0,sizeof(billsec));
                        memset(src070,0,sizeof(src070));
                        memset(srcorg,0,sizeof(srcorg));
                        memset(dst070,0,sizeof(dst070));
                        memset(dstorg,0,sizeof(dstorg));
                        memset(channel,0,sizeof(channel));
                        memset(dstchannel,0,sizeof(dstchannel));
                        loop = 0;

			row = mysql_fetch_row( result );
			if( row) {
/***
                            while(row[loop]) {
                                ps_delSpace(row[loop]);
                                loop++;
                            }
***/

                            strcpy(recorddate,row[0]?row[0]:"");
                            strcpy(src_num,row[1]?row[1]:"");
                            strcpy(dst_num,row[2]?row[2]:"");
                            strcpy(ars_num,row[3]?row[3]:"");
                            strcpy(kind,row[4]?row[4]:"");
                            strcpy(queuename,row[5]?row[5]:"");
                            strcpy(inner_digit,row[6]?row[6]:"");
                            strcpy(dtmf_1,row[7]?row[7]:"");
                            strcpy(dtmf_2,row[8]?row[8]:"");
                            strcpy(responsecode,row[9]?row[9]:"");
                            strcpy(result_,row[10]?row[10]:"");
                            strcpy(billsec,row[11]?row[11]:"");
                            strcpy(src070,row[12]?row[12]:"");
                            strcpy(srcorg,row[13]?row[13]:"");
                            strcpy(dst070,row[14]?row[14]:"");
                            strcpy(dstorg,row[15]?row[15]:"");
                            strcpy(channel,row[16]?row[16]:"");
                            strcpy(dstchannel,row[17]?row[17]:"");

                            if(*call_kind == '0') {
                                if(strncmp(src_num,dst_num,4))
                                        continue;
                                if(*inner_digit == '3') {
                                    strcpy(src_num,row[1]?row[1]+5:"");
                                    strcpy(dst_num,row[2]?row[2]+5:"");
                                }
                                else {
                                    strcpy(src_num,row[1]?row[1]+4:"");
                                    strcpy(dst_num,row[2]?row[2]+4:"");
                                }
                            }
                            else if(*call_kind == '1') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"011",3) || !strncmp(dst_num,"017",3) || !strncmp(dst_num,"018",3) || !strncmp(dst_num,"019",3) || !strncmp(dst_num,"010",3) || !strncmp(dst_num,"00",2) || strlen(dst_num) < 8)
                                        continue;
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                            }
                            else if(*call_kind == '2') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"011",3) || !strncmp(dst_num,"017",3) || !strncmp(dst_num,"018",3) || !strncmp(dst_num,"019",3) || !strncmp(dst_num,"010",3) || strlen(dst_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '3') {
                                if(!strncmp(src_num,dst_num,4))
                                        continue;

                                if(!strncmp(dst_num,"00",2) && strlen(dst_num) > 8) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                                else
                                    continue;
                            }
                            else if(*call_kind == '9' || *call_kind == '\0') {
                                if(strncmp(src_num,dst_num,4)) {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                        strcpy(dst_num,row[2]?row[2]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                        strcpy(dst_num,row[2]?row[2]+4:"");
                                    }
                                }
                                else {
                                    if(*inner_digit == '3') {
                                        strcpy(src_num,row[1]?row[1]+5:"");
                                    }
                                    else {
                                        strcpy(src_num,row[1]?row[1]+4:"");
                                    }
                                }
                            }
                                        sprintf(resPacket+strlen(resPacket),"|%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s^%s", recorddate,src_num, dst_num, ars_num,kind,queuename,inner_digit,dtmf_1,dtmf_2, responsecode,result_,billsec, src070,srcorg,dst070,dstorg,channel,dstchannel);

printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%d)",i);
printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~(%s)",resPacket);

					if(!((i+1)%15)) {
						if((i+1) < row_num) {
								strcat(resPacket,"\n");
								tcpWrite(masterFd, resPacket);
								sprintf(resPacket,"|RES");
						}
						else {
								mysql_free_result(result);
								result = NULL;
								printf("\n[5m%s[0m",resPacket);
								return 0;       
						}
					}
			}
			selcnt++;
        }
	mysql_free_result(result);
        //tcpWrite(masterFd, resPacket, strlen(resPacket));
    return 0;       
}



/*********************************************************************************************************/
/*********************************************************************************************************/
int
procOF1()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,off=0;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2], today[15];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	conn_method[10],forward_num[20];
  char	tmpDay1[9], tmpDay2[9];
	char	option7[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	holfrommin[10],holtomin[10];
  char	holfromtime[10],holtotime[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	break_include[10],firstextension[10];
  char	secondextension[10];
  char	res_secondextension[10];
  char	ment_file[256];
  char callback_flag[11];

	int	intfromtime=0,inttotime=0;
	int	intfrommin=0,inttomin=0;
	int	intsafromtime=0,intsatotime=0;
	int	intsafrommin=0,intsatomin=0;
	int	intsunfrommin=0,intsuntomin=0;
	int	intsunfromtime=0,intsuntotime=0;
	int	intholfrommin=0,intholtomin=0;
	int	intholfromtime=0,intholtotime=0;
	int	intbreakfrommin=0,intbreaktomin=0;
	int	intbreakfromtime=0,intbreaktotime=0;
	int	mm,dd;
struct  tm      *tp;
long	t;


       t=time(0);
       tp = (struct tm *) localtime(&t);

	mm  = tp->tm_mon+1; dd  = tp->tm_mday;

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(today,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(option7,0,sizeof(option7)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(firstextension,0,sizeof(firstextension));
	memset(secondextension,0,sizeof(secondextension));
	memset(res_secondextension,0,sizeof(res_secondextension));
	memset(ment_file,0,sizeof(ment_file));
	memset(callback_flag,0,sizeof(callback_flag));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(option7,argv[3]);

	if(argv[5] && *argv[5])
		strcpy(firstextension,argv[5]);
	else
		strcpy(firstextension,"-");

	if(argv[6] && *argv[6])
		strcpy(secondextension,argv[6]);
	else
		strcpy(secondextension,"-");


	if(strlen(secondextension) < 0)
		strcpy(secondextension,"-");

	if(!strcmp(firstextension,"-") && !strcmp(secondextension,"-")) {
		sprintf(resPacket, "|ERR|input error");
		return -1;
	}
	if(strlen(firstextension) < 1) {
		sprintf(resPacket, "|ERR|input error");
		return -1;
	}

//	if(*firstextension < '0' || *firstextension > '9') {
//		sprintf(resPacket, "|ERR|input error");
//		return -1;
//	}
	

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%s%s",prefix,"0000");
	}

tmm_currDate(YYYYMMDDHHMMSS,today);
sprintf(tmp,"%4.4s%2.2s%2.2s",today,today+4,today+6);


    //sprintf(sqlcmd, "select domain,ment_file from off_day where domain='%s' and off_day = '%s'",domain,tmp);
    sprintf(sqlcmd, "select domain,ment_file from off_day where domain='%s' and off_day = '%s' and etc='%s'",domain,tmp,outer_num);
    printf("\noff_day search(%s)\n",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}

	{
		result = mysql_store_result( mysql );
		if(!result ) {
			return -1;
		}
		else {
				row_num = mysql_num_rows(result);

				if(row_num > 0) {
					row = mysql_fetch_row( result);
					off = 1;
					strcpy(ment_file, row[1]?row[1]:"offtime");
				}
				mysql_free_result(result);
				result = NULL;
		}
	}

/***
| holtotime      | varchar(2)  | YES  |     | 0                   |                | 
| holtomin       | varchar(2)  | YES  |     | 0                   |                | 
| holfromtime    | varchar(2)  | YES  |     | 0                   |                | 
| holfrommin     | varchar(2)  | YES  |     | 0                   |                | 
***/


	sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,method,callback_flag from pre_ars_check where domain='%s' and number='%s'",domain,outer_num);
    printf("\npre_ars_check search(%s)\n",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
        }   
        else {        
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}


	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(fromtime, row[0]?row[0]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[1]?row[1]:"0");
				ps_delSpace(totime);
				strcpy(frommin, row[2]?row[2]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[3]?row[3]:"0");
				ps_delSpace(tomin);
				strcpy(conn_method, row[4]?row[4]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[5]?row[5]:"0");
				ps_delSpace(conn_method);

				strcpy(safromtime, row[6]?row[6]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[7]?row[7]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[8]?row[8]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[9]?row[9]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[10]?row[10]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[11]?row[11]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[12]?row[12]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[13]?row[13]:"0");
				ps_delSpace(suntomin);

				strcpy(holfromtime, row[14]?row[14]:"0");
				ps_delSpace(holfromtime);
				strcpy(holfrommin, row[15]?row[15]:"0");
				ps_delSpace(holfrommin);
				strcpy(holtotime, row[16]?row[16]:"0");
				ps_delSpace(holtotime);
				strcpy(holtomin, row[17]?row[17]:"0");
				ps_delSpace(holtomin);


				strcpy(breakfromtime, row[18]?row[18]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[19]?row[19]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[20]?row[20]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[21]?row[21]:"0");
				ps_delSpace(breaktomin);
				strcpy(break_include, row[22]?row[22]:"3");
				ps_delSpace(break_include);
				strcpy(res_secondextension, row[23]?row[23]:"-");
				ps_delSpace(res_secondextension);
				strcpy(callback_flag, row[24]?row[24]:"-");
				ps_delSpace(callback_flag);
		}
		break;
	}
	mysql_free_result(result);
	result = NULL;


	intfromtime= atoi(fromtime);
	inttotime= atoi(totime);
	intfrommin= atoi(frommin);
	inttomin= atoi(tomin);

	intsafromtime= atoi(safromtime);
	intsatotime= atoi(satotime);
	intsafrommin= atoi(safrommin);
	intsatomin= atoi(satomin);

	intsunfromtime= atoi(sunfromtime);
	intsuntotime= atoi(suntotime);
	intsunfrommin= atoi(sunfrommin);
	intsuntomin= atoi(suntomin);

	intholfromtime= atoi(holfromtime);
	intholtotime= atoi(holtotime);
	intholfrommin= atoi(holfrommin);
	intholtomin= atoi(holtomin);

	intbreakfromtime= atoi(breakfromtime);
	intbreaktotime= atoi(breaktotime);
	intbreakfrommin= atoi(breakfrommin);
	intbreaktomin= atoi(breaktomin);

	printf("\nDAY(%d)",tp->tm_wday);
	printf("\nintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)",intfromtime,inttotime,intfrommin,inttomin);
	if(strlen(forward_num) > 8) {
		row_num = 0;
		if(!strncmp(forward_num,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(forward_num,"");
	}


	/*** off,break ***/
	printf("\nintbreaktime:(%d),intbreaktime:(%d),intbreakmin:(%d),intbreakmin:(%d)",intbreakfromtime,intbreaktotime,intbreakfrommin,intbreaktomin);

	if(strlen(forward_num) == 3)
		sprintf(forward_num,"0%s",forward_num);

	if(tp->tm_wday == 0 && intsunfromtime == 0  && intsuntotime== 0) {
		if(off == 1) {
			goto OFFDAY;
//			sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}

			if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

			}
			else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
			else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
	else if(tp->tm_wday == 6 && intsafromtime == 0  && intsatotime== 0) {
		if(off == 1) {
			goto OFFDAY;
//			sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {

			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
	else if(tp->tm_wday != 0 && tp->tm_wday !=6 && intfromtime == 0 && inttotime== 0) {
		if(off == 1) {
				goto OFFDAY;
//				sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//				return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {
			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
/************/
	else {
			if(tp->tm_wday == 0) {
				if(off == 1) {
					goto OFFDAY;
				}
SUN:
				if((intsuntotime < intsunfromtime) || (intsuntotime == intsunfromtime && intsunfrommin > intsuntomin)) {
					intsuntotime += 24;
					if((tp->tm_hour < intsuntotime && tp->tm_hour < intsunfromtime) || (intsuntotime == intsunfromtime+24 && atoi(sunfrommin) > atoi(suntomin)))
						tp->tm_hour += 24;
				}
				if(tp->tm_hour >= intsunfromtime && tp->tm_hour <= intsuntotime) {
					if(tp->tm_hour == intsunfromtime) {
						if(tp->tm_min >= intsunfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsuntotime) {
						if(tp->tm_min < intsuntomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}



			}
			else if(tp->tm_wday == 6) {
				if(off == 1) {
					goto OFFDAY;
				}
SAT:
				if((intsatotime < intsafromtime) || (intsatotime == intsafromtime && intsafrommin > intsatomin)) {
					intsatotime += 24;
					if((tp->tm_hour < intsatotime && tp->tm_hour < intsafromtime) || (intsatotime == intsafromtime+24 && atoi(safrommin) > atoi(satomin)))
						tp->tm_hour += 24;
				}

				if(tp->tm_hour >= intsafromtime && tp->tm_hour <= intsatotime) {
					if(tp->tm_hour == intsafromtime) {
						if(tp->tm_min >= intsafrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsatotime) {
						if(tp->tm_min < intsatomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}

			}
			else if(off == 1) {
OFFDAY:
printf("\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n");
printf("\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n");

				if((intholtotime < intholfromtime) || (intholtotime == intholfromtime && intholfrommin > intholtomin)) {
					intholtotime += 24;
					if((tp->tm_hour < intholtotime && tp->tm_hour < intholfromtime) || (intholtotime == intholfromtime+24 && atoi(holfrommin) > atoi(holtomin)))
						tp->tm_hour += 24;
				}
printf("intholfromtime:(%d)\n",intholfromtime);
printf("intholtotime:(%d)\n",intholtotime);
printf("intbreakfromtime:(%d)\n",intbreakfromtime);
printf("intbreaktotime:(%d)\n",intbreaktotime);
printf("tp->tm_hour:(%d)\n",tp->tm_hour);
				if(tp->tm_hour >= intholfromtime && tp->tm_hour <= intholtotime) {
					if(tp->tm_hour == intholfromtime) {
						if(tp->tm_min >= intholfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intholtotime) {
						if(tp->tm_min < intholtomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '3' || *break_include == '3')) {
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							}
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}
			}
			else {
OTHER:
				if((inttotime < intfromtime) || (inttotime == intfromtime && intfrommin > inttomin)) {
					inttotime += 24;
					if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
						tp->tm_hour += 24;
				}
	printf("\n[5mintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)[0m",intfromtime,inttotime,intfrommin,inttomin);
				if(tp->tm_hour >= intfromtime && tp->tm_hour <= inttotime) {
					if(tp->tm_hour == intfromtime) {
						if(tp->tm_min >= intfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == inttotime) {
						if(tp->tm_min < inttomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								tp = (struct tm *) localtime(&t);
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);



								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else  {
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
					}
				}
				else {
					 tp = (struct tm *) localtime(&t);
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);



						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}

			}

	}
	/**** callback_flag for exten & preArsCheck & offtime ****/
	strcat(resPacket, callback_flag);
	strcat(resPacket, "|");
    return 0;       
}


/*********************************************************************************************************/
/*********************************************************************************************************/
int
procOF5()
{
  char passwd[256];
  char email[256];
  int   qid,returncode,off=0;
  int   test=0,ret,row_num,i,seq;
  char tmp[100];
  unsigned int	tmpNumber;
  char  sqlcmd[512],proxyip[30],kind[2], today[15];
  char	fromday[11],totoday[11],fromtime[3],totime[3];
  char	frommin[11],tomin[11];
  char	conn_method[10],forward_num[20];
  char	tmpDay1[9], tmpDay2[9];
	char	option7[10];
  char	safromtime[10],satotime[10];
  char	safrommin[10],satomin[10];
  char	sunfromtime[10],suntotime[10];
  char	sunfrommin[10],suntomin[10];
  char	holfrommin[10],holtomin[10];
  char	holfromtime[10],holtotime[10];
  char	breakfromtime[10],breaktotime[10];
  char	breakfrommin[10],breaktomin[10];
  char	break_include[10],firstextension[10];
  char	secondextension[10];
  char	res_secondextension[10];
  char	ment_file[256];
  char callback_flag[11];

	int	intfromtime=0,inttotime=0;
	int	intfrommin=0,inttomin=0;
	int	intsafromtime=0,intsatotime=0;
	int	intsafrommin=0,intsatomin=0;
	int	intsunfrommin=0,intsuntomin=0;
	int	intsunfromtime=0,intsuntotime=0;
	int	intholfrommin=0,intholtomin=0;
	int	intholfromtime=0,intholtotime=0;
	int	intbreakfrommin=0,intbreaktomin=0;
	int	intbreakfromtime=0,intbreaktotime=0;
	int	mm,dd;
struct  tm      *tp;
long	t;


       t=time(0);
       tp = (struct tm *) localtime(&t);

	mm  = tp->tm_mon+1; dd  = tp->tm_mday;

	memset(safromtime,0,sizeof(safromtime));
	memset(satotime,0,sizeof(satotime));
	memset(satotime,0,sizeof(satotime));
	memset(satomin,0,sizeof(satomin));
	memset(email,0,sizeof(email));
	memset(conn_method,0,sizeof(conn_method));
	memset(today,0,sizeof(conn_method));
	memset(forward_num,0,sizeof(forward_num));
	memset(frommin,0,sizeof(frommin));
	memset(tomin,0,sizeof(tomin));
	memset(passwd,0,sizeof(passwd)); 
	memset(sqlcmd,0,sizeof(sqlcmd)); 
	memset(prefix,0,sizeof(prefix)); 
	memset(fromday,0,sizeof(fromday)); 
	memset(totoday,0,sizeof(totoday)); 
	memset(fromtime,0,sizeof(fromtime)); 
	memset(totime,0,sizeof(totime)); 
	memset(kind,0,sizeof(kind)); 
	memset(tmpDay1,0,sizeof(tmpDay1)); 
	memset(tmpDay2,0,sizeof(tmpDay2)); 
	memset(option7,0,sizeof(option7)); 

	memset(sunfromtime,0,sizeof(sunfromtime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntotime,0,sizeof(suntotime));
	memset(suntomin,0,sizeof(suntomin));

	memset(holfromtime,0,sizeof(holfromtime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtotime,0,sizeof(holtotime));
	memset(holtomin,0,sizeof(holtomin));

	memset(breakfromtime,0,sizeof(breakfromtime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktotime,0,sizeof(breaktotime));
	memset(breaktomin,0,sizeof(breaktomin));
	memset(break_include,0,sizeof(break_include));
	memset(firstextension,0,sizeof(firstextension));
	memset(secondextension,0,sizeof(secondextension));
	memset(res_secondextension,0,sizeof(res_secondextension));
	memset(ment_file,0,sizeof(ment_file));
	memset(callback_flag,0,sizeof(callback_flag));

	strcat(email, user);
	strcat(email, "@");
	strcat(email, domain);

	if(argv[2] && *argv[2])
		strcpy(outer_num,argv[2]);
	if(argv[3] && *argv[3])
		strcpy(option7,argv[3]);

	if(argv[5] && *argv[5])
		strcpy(firstextension,argv[5]);
	else
		strcpy(firstextension,"-");

	if(argv[6] && *argv[6])
		strcpy(secondextension,argv[6]);
	else
		strcpy(secondextension,"-");


	if(strlen(secondextension) < 0)
		strcpy(secondextension,"-");

	if(!strcmp(firstextension,"-") && !strcmp(secondextension,"-")) {
		sprintf(resPacket, "|ERR|input error");
		return -1;
	}
	if(strlen(firstextension) < 1) {
		sprintf(resPacket, "|ERR|input error");
		return -1;
	}

//	if(*firstextension < '0' || *firstextension > '9') {
//		sprintf(resPacket, "|ERR|input error");
//		return -1;
//	}
	

	domain_string(domain);
	{
		if(customInfo(domain) < 0)
			return -1;
		sprintf(phoneid,"1%s%s",prefix,"0000");
	}

tmm_currDate(YYYYMMDDHHMMSS,today);
sprintf(tmp,"%4.4s%2.2s%2.2s",today,today+4,today+6);


    //sprintf(sqlcmd, "select domain,ment_file from off_day where domain='%s' and off_day = '%s'",domain,tmp);
    sprintf(sqlcmd, "select domain,ment_file from off_day where domain='%s' and off_day = '%s' and etc='%s'",domain,tmp,outer_num);
    printf("\noff_day search(%s)\n",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}

	{
		result = mysql_store_result( mysql );
		if(!result ) {
			return -1;
		}
		else {
				row_num = mysql_num_rows(result);

				if(row_num > 0) {
					row = mysql_fetch_row( result);
					off = 1;
					strcpy(ment_file, row[1]?row[1]:"offtime");
					if(!strcmp(firstextension,"A")){
						printf("\nIVR OFFoff_day search(%s)\n",sqlcmd);
						sprintf(resPacket,"|RES|1|%s|0||%s|",outer_num,ment_file);
						return 0;
					}
				}
				mysql_free_result(result);
				result = NULL;
		}
	}

/***
| holtotime      | varchar(2)  | YES  |     | 0                   |                | 
| holtomin       | varchar(2)  | YES  |     | 0                   |                | 
| holfromtime    | varchar(2)  | YES  |     | 0                   |                | 
| holfrommin     | varchar(2)  | YES  |     | 0                   |                | 
***/


	sprintf(sqlcmd, "select distinct fromtime,totime,frommin,tomin,conn_method,forward_num,safromtime,safrommin,satotime,satomin,sunfromtime,sunfrommin,suntotime,suntomin,holfromtime,holfrommin,holtotime,holtomin,breakfromtime,breakfrommin,breaktotime,breaktomin,break_include,method,callback_flag from pre_ars_check where domain='%s' and number='%s'",domain,outer_num);
    printf("\npre_ars_check search(%s)\n",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}
	printf("\nsqlcmd:(%s)",sqlcmd);

        result = mysql_store_result( mysql );
        if(!result ) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%s, %s)",mysql_error(mysql),sqlcmd );
				logCmd();
        }   
        else {        
		row_num = mysql_num_rows(result);
		if( row_num == 0 ) {
			mysql_free_result(result);
			result = NULL;
			return(errorReturn("90000|",__FILE__,__LINE__));
		}
	}


	sprintf(resPacket,"|RES");
	for(i=0;i < row_num;i++) {
		row = mysql_fetch_row( result);
		if( row) {
				strcpy(fromtime, row[0]?row[0]:"0");
				ps_delSpace(fromtime);
				strcpy(totime, row[1]?row[1]:"0");
				ps_delSpace(totime);
				strcpy(frommin, row[2]?row[2]:"0");
				ps_delSpace(frommin);
				strcpy(tomin, row[3]?row[3]:"0");
				ps_delSpace(tomin);
				strcpy(conn_method, row[4]?row[4]:"0");
				ps_delSpace(conn_method);
				strcpy(forward_num, row[5]?row[5]:"0");
				ps_delSpace(conn_method);

				strcpy(safromtime, row[6]?row[6]:"0");
				ps_delSpace(safromtime);
				strcpy(safrommin, row[7]?row[7]:"0");
				ps_delSpace(safrommin);
				strcpy(satotime, row[8]?row[8]:"0");
				ps_delSpace(satotime);
				strcpy(satomin, row[9]?row[9]:"0");
				ps_delSpace(satomin);

				strcpy(sunfromtime, row[10]?row[10]:"0");
				ps_delSpace(sunfromtime);
				strcpy(sunfrommin, row[11]?row[11]:"0");
				ps_delSpace(sunfrommin);
				strcpy(suntotime, row[12]?row[12]:"0");
				ps_delSpace(suntotime);
				strcpy(suntomin, row[13]?row[13]:"0");
				ps_delSpace(suntomin);

				strcpy(holfromtime, row[14]?row[14]:"0");
				ps_delSpace(holfromtime);
				strcpy(holfrommin, row[15]?row[15]:"0");
				ps_delSpace(holfrommin);
				strcpy(holtotime, row[16]?row[16]:"0");
				ps_delSpace(holtotime);
				strcpy(holtomin, row[17]?row[17]:"0");
				ps_delSpace(holtomin);


				strcpy(breakfromtime, row[18]?row[18]:"0");
				ps_delSpace(breakfromtime);
				strcpy(breakfrommin, row[19]?row[19]:"0");
				ps_delSpace(breakfrommin);
				strcpy(breaktotime, row[20]?row[20]:"0");
				ps_delSpace(breaktotime);
				strcpy(breaktomin, row[21]?row[21]:"0");
				ps_delSpace(breaktomin);
				strcpy(break_include, row[22]?row[22]:"3");
				ps_delSpace(break_include);
				strcpy(res_secondextension, row[23]?row[23]:"-");
				ps_delSpace(res_secondextension);
				strcpy(callback_flag, row[24]?row[24]:"-");
				ps_delSpace(callback_flag);
		}
		break;
	}
	mysql_free_result(result);
	result = NULL;


	intfromtime= atoi(fromtime);
	inttotime= atoi(totime);
	intfrommin= atoi(frommin);
	inttomin= atoi(tomin);

	intsafromtime= atoi(safromtime);
	intsatotime= atoi(satotime);
	intsafrommin= atoi(safrommin);
	intsatomin= atoi(satomin);

	intsunfromtime= atoi(sunfromtime);
	intsuntotime= atoi(suntotime);
	intsunfrommin= atoi(sunfrommin);
	intsuntomin= atoi(suntomin);

	intholfromtime= atoi(holfromtime);
	intholtotime= atoi(holtotime);
	intholfrommin= atoi(holfrommin);
	intholtomin= atoi(holtomin);

	intbreakfromtime= atoi(breakfromtime);
	intbreaktotime= atoi(breaktotime);
	intbreakfrommin= atoi(breakfrommin);
	intbreaktomin= atoi(breaktomin);

	printf("\nDAY(%d)",tp->tm_wday);
	printf("\nintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)",intfromtime,inttotime,intfrommin,inttomin);
	if(strlen(forward_num) > 8) {
		row_num = 0;
		if(!strncmp(forward_num,"070",3)) {
			sprintf(sqlcmd, "select type from number_list where number = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
				mysql_free_result(result);
				result = NULL;
				}
			}
		}
		else {
			sprintf(sqlcmd, "select type from number_list where org_num = '%s' and type = 0",forward_num);
			if( ret = mysql_query(mysql, sqlcmd) ) {
				;
			}
			else {
				result = mysql_store_result( mysql );
				if(result) {
					row_num = mysql_num_rows(result);
					mysql_free_result(result);
					result = NULL;
				}
			}
		}
		if(row_num > 0)
			strcpy(forward_num,"");
	}


	/*** off,break ***/
	printf("\nintbreaktime:(%d),intbreaktime:(%d),intbreakmin:(%d),intbreakmin:(%d)",intbreakfromtime,intbreaktotime,intbreakfrommin,intbreaktomin);

	if(strlen(forward_num) == 3)
		sprintf(forward_num,"0%s",forward_num);

	if(tp->tm_wday == 0 && intsunfromtime == 0  && intsuntotime== 0) {
		if(off == 1) {
			goto OFFDAY;
//			sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}

			if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

			}
			else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
				if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
				if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
			}
			else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
					sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
			else
					sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
	else if(tp->tm_wday == 6 && intsafromtime == 0  && intsatotime== 0) {
		if(off == 1) {
			goto OFFDAY;
//			sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//			return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {

			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
	else if(tp->tm_wday != 0 && tp->tm_wday !=6 && intfromtime == 0 && inttotime== 0) {
		if(off == 1) {
				goto OFFDAY;
//				sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
//				return 0;
		}
		if(intbreakfromtime == 0 &&  intbreaktotime == 0)
			sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		else {
			tp = (struct tm *) localtime(&t);
			if(intbreaktotime < intbreakfromtime) {
				intbreaktotime += 24;
				if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
					tp->tm_hour += 24;
			}
			if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
				if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

				}
				else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
					if(intbreakfrommin <= tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
					if(intbreaktomin > tp->tm_min)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
					else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
				}
				else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
						sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
				else
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


			}
			else 
				sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
		}
	}
/************/
	else {
			if(tp->tm_wday == 0) {
				if(off == 1) {
					goto OFFDAY;
				}
SUN:
				if((intsuntotime < intsunfromtime) || (intsuntotime == intsunfromtime && intsunfrommin > intsuntomin)) {
					intsuntotime += 24;
					if((tp->tm_hour < intsuntotime && tp->tm_hour < intsunfromtime) || (intsuntotime == intsunfromtime+24 && atoi(sunfrommin) > atoi(suntomin)))
						tp->tm_hour += 24;
				}
				if(tp->tm_hour >= intsunfromtime && tp->tm_hour <= intsuntotime) {
					if(tp->tm_hour == intsunfromtime) {
						if(tp->tm_min >= intsunfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsuntotime) {
						if(tp->tm_min < intsuntomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}



			}
			else if(tp->tm_wday == 6) {
				if(off == 1) {
					goto OFFDAY;
				}
SAT:
				if((intsatotime < intsafromtime) || (intsatotime == intsafromtime && intsafrommin > intsatomin)) {
					intsatotime += 24;
					if((tp->tm_hour < intsatotime && tp->tm_hour < intsafromtime) || (intsatotime == intsafromtime+24 && atoi(safrommin) > atoi(satomin)))
						tp->tm_hour += 24;
				}

				if(tp->tm_hour >= intsafromtime && tp->tm_hour <= intsatotime) {
					if(tp->tm_hour == intsafromtime) {
						if(tp->tm_min >= intsafrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intsatotime) {
						if(tp->tm_min < intsatomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '1' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}

			}
			else if(off == 1) {
OFFDAY:
printf("\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n");
printf("\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n");

				if((intholtotime < intholfromtime) || (intholtotime == intholfromtime && intholfrommin > intholtomin)) {
					intholtotime += 24;
					if((tp->tm_hour < intholtotime && tp->tm_hour < intholfromtime) || (intholtotime == intholfromtime+24 && atoi(holfrommin) > atoi(holtomin)))
						tp->tm_hour += 24;
				}
printf("intholfromtime:(%d)\n",intholfromtime);
printf("intholtotime:(%d)\n",intholtotime);
printf("intbreakfromtime:(%d)\n",intbreakfromtime);
printf("intbreaktotime:(%d)\n",intbreaktotime);
printf("tp->tm_hour:(%d)\n",tp->tm_hour);
				if(tp->tm_hour >= intholfromtime && tp->tm_hour <= intholtotime) {
					if(tp->tm_hour == intholfromtime) {
						if(tp->tm_min >= intholfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
						else {
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == intholtotime) {
						if(tp->tm_min < intholtomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);
						else {
				
							 tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '2' || *break_include == '3'))
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else 
						sprintf(resPacket,"|RES|1|%s|%s|%s|%s|",outer_num,conn_method,forward_num,ment_file);

				}
				else {
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						tp = (struct tm *) localtime(&t);
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {

							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min && (*break_include == '2' || *break_include == '3'))
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime && (*break_include == '3' || *break_include == '3')) {
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							}
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}
			}
			else {
OTHER:
				if((inttotime < intfromtime) || (inttotime == intfromtime && intfrommin > inttomin)) {
					inttotime += 24;
					if((tp->tm_hour < inttotime && tp->tm_hour < intfromtime) || (inttotime == intfromtime+24 && atoi(frommin) > atoi(tomin)))
						tp->tm_hour += 24;
				}
	printf("\n[5mintfromtime:(%d),inttotime:(%d),intfrommin:(%d),inttomin:(%d)[0m",intfromtime,inttotime,intfrommin,inttomin);
				if(tp->tm_hour >= intfromtime && tp->tm_hour <= inttotime) {
					if(tp->tm_hour == intfromtime) {
						if(tp->tm_min >= intfrommin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							tp = (struct tm *) localtime(&t);
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);


								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}
					}
					else if(tp->tm_hour == inttotime) {
						if(tp->tm_min < inttomin)
							sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
						else {
							if(intbreakfromtime == 0 &&  intbreaktotime == 0)
								sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							else {
								tp = (struct tm *) localtime(&t);
								if(intbreaktotime < intbreakfromtime) {
									intbreaktotime += 24;
									if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
										tp->tm_hour += 24;
								}
								if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
									if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

									}
									else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
										if(intbreakfrommin <= tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
										if(intbreaktomin > tp->tm_min)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
										else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
									}
									else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
											sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
									else
											sprintf(resPacket,"|RES|0|%s|0|||",outer_num);



								}
								else 
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
						}

					}
					else  {
						sprintf(resPacket,"|RES|1|%s|%s|%s||",outer_num,conn_method,forward_num);
					}
				}
				else {
					 tp = (struct tm *) localtime(&t);
					if(intbreakfromtime == 0 &&  intbreaktotime == 0)
						sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					else {
						if(intbreaktotime < intbreakfromtime) {
							intbreaktotime += 24;
							if((tp->tm_hour < intbreaktotime && tp->tm_hour < intbreakfromtime) || (intbreaktotime == intbreakfromtime+24 && intbreakfrommin > intbreaktomin))
								tp->tm_hour += 24;
						}
						if(tp->tm_hour >= intbreakfromtime && tp->tm_hour <= intbreaktotime) {
							if( tp->tm_hour == intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min && intbreaktomin >  tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);

							}
							else if( tp->tm_hour == intbreakfromtime && tp->tm_hour < intbreaktotime) {
								if(intbreakfrommin <= tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour == intbreaktotime) {
								if(intbreaktomin > tp->tm_min)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
								else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
							}
							else if( tp->tm_hour > intbreakfromtime && tp->tm_hour < intbreaktotime)
									sprintf(resPacket,"|RES|1|%s|%s|%s|break|",outer_num,conn_method,forward_num);
							else
									sprintf(resPacket,"|RES|0|%s|0|||",outer_num);



						}
						else 
							sprintf(resPacket,"|RES|0|%s|0|||",outer_num);
					}
				}

			}

	}
	/**** callback_flag for exten & preArsCheck & offtime ****/
	strcat(resPacket, callback_flag);
	strcat(resPacket, "|");
    return 0;       
}



/**************************************************
get server-name
***************************************************/
int
procAS_()
{
  char email[256];
  int   qid,returncode,fields_num,cpid, fd=0,i=0, sockfd=0, count=0;
  int   test=0, ret, row_num, centerflag=0,retry=0;
  char tmp[100],seq[20],today[20],sqlcmd1[512],command[100];
  unsigned int  tmpNumber;
  char    sqlcmd[512],forward_num[30],mailbox[64];
  char    phoneid[11],confnm[64],peer[64],callerid[20],ip[20];
	char	active[20],standby[20];

  char callback_url[256],port[10],oamip[20],proxyip[20];
  char kind[10],from[15], to[15];
	char	tmp070[20],tmporg[20];


        memset(callback_url,0,sizeof(callback_url));
        memset(today,0,sizeof(today));
        memset(from,0,sizeof(from));
        memset(to,0,sizeof(to));
        memset(port,0,sizeof(port));
        memset(oamip,0,sizeof(oamip));
        memset(kind,0,sizeof(kind));
        memset(email,0,sizeof(email));
        memset(sqlcmd,0,sizeof(sqlcmd));
        memset(today,0,sizeof(today));
        memset(tmp070,0,sizeof(tmp070));
        memset(tmporg,0,sizeof(tmporg));
        memset(ip,0,sizeof(ip));
        memset(proxyip,0,sizeof(proxyip));
        memset(active,0,sizeof(active));
        memset(standby,0,sizeof(standby));
/****
        if (isMailList(argv[1])         return(errorReturn("ErMailListExistAlready",__FILE__,__LINE_
_));
*/
        strcat(email, user);
        strcat(email, "@");
        strcat(email, domain);

//number,callback_url,port,kind,from,to

    if(argv[2] && *argv[2])
                strcpy(oamip,argv[2]);
        else
                strcpy(oamip,"");

	sprintf(sqlcmd, "select proxyip from custom_info where domain = '%s'",domain);
	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER,__FILE__,__LINE__);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}
	else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				strcpy(proxyip, row[0]?row[0]:"");
				ps_delSpace(proxyip);
			}
			break;
		}
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",proxyip);

	printf("\nsqlcmd:(%s)",sqlcmd);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER,__FILE__,__LINE__);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			tcpWrite(masterFd, resPacket);
			logCmd();
			exit(0);
		}
	}   

	result = mysql_store_result( mysql );
	if(!result ) {
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}   
			
	row_num = mysql_num_rows(result);
	if( row_num == 0 ) {
		mysql_free_result(result);
		result = NULL;
		sprintf(resPacket, "|ERR|mysql Search Error number_manage!(%s, %s)",mysql_error(mysql),sqlcmd );
		logCmd();
		return(-1);
	}
	else {
		for(i=0;i < row_num;i++) {
			row = mysql_fetch_row( result);
			if(row) 
			{
				if(row[1])
					ps_delSpace(row[1]);

				if(row[1] && !strcasecmp(row[1],"sub1")) {
					strcpy(active, row[0]?row[0]:"");
				}
				else if(row[1] && !strcasecmp(row[1],"sub2")) {
					strcpy(standby, row[0]?row[0]:"");
				}
			}
		}
		ps_delSpace(active);
		ps_delSpace(standby);
		mysql_free_result(result);
		result = NULL;
	}

	sprintf(resPacket,"|RES|%s|%s|%s|",proxyip,active,standby);

	return 0;
}


/***********************************************************************************************************************/
/***********************************************************************************************************************/
int
procGET()
{
char	sqlcmd[512], option5[10],rcv_phoneid[10];
char	tmp[20],messenger_ip[32];

int row_num = 0, ret = 0, i=0, sd=-1;
struct  tm      *tp;
long	t;

int     port,intfromtime,inttotime,match = 0;
char    num070[60],rcvnum070[20];
char    cid[60];
char    phoneid[60];

	memset(option5,0,sizeof(option5));
	memset(num070,0,sizeof(num070));
	memset(rcvnum070,0,sizeof(rcvnum070));
	memset(cid,0,sizeof(cid));

	if(argv[2] && *argv[2]) 
		strcpy(phoneid,argv[2]);
	else	
		strcpy(phoneid,"00000000");

	if(argv[3] && *argv[3]) 
		strcpy(rcv_phoneid,argv[3]);
	else	
		strcpy(rcv_phoneid,"--------");


	if(strlen(phoneid) == 8)
		*phoneid = '0';

	sprintf(sqlcmd, "select 070number,option5,cid from number_manage where phoneid = '%s'",phoneid);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		if(mysql)
			mysql_close(mysql);
		sqlinit(LOCAL_SERVER);
		if( ret = mysql_query(mysql, sqlcmd) ) {
			exit(0);
		}
	}

	{
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				strcpy(num070,"");
				strcpy(cid,"");
				strcpy(option5,"N");
				mysql_free_result(result);
				result = NULL;

				sprintf(resPacket, "|ERR|number_manage query error!!");
				return -1;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(num070, row[0]?row[0]:"07000000000");
					ps_delSpace(num070);
					strcpy(option5, row[1]?row[1]:"N");
					ps_delSpace(option5);
					strcpy(cid, row[2]?row[2]:"");
					ps_delSpace(cid);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		else {
			strcpy(cid,"");
			strcpy(num070,"");
			strcpy(option5,"N");
		}
	}


	sprintf(sqlcmd, "select 070number,option5,cid from number_manage where phoneid = '%s'",rcv_phoneid);
	if( ret = mysql_query(mysql, sqlcmd) ) {
		sprintf(resPacket, "|ERR|number_manage query error!!");
		return -1;
	}
	else {
		result = mysql_store_result( mysql );
		if(result) {
			row_num = mysql_num_rows(result);
			if( row_num == 0 ) {
				strcpy(rcvnum070,"");
				mysql_free_result(result);
				result = NULL;
			}
			else  {
				row = mysql_fetch_row( result );
				if( row) {
					strcpy(rcvnum070, row[0]?row[0]:"07000000000");
					ps_delSpace(rcvnum070);
				}
			}
			mysql_free_result(result);
			result = NULL;
		}
		else {
			strcpy(rcvnum070,"");
		}
	}

	if(strlen(cid) < 4) {
		strcpy(cid,"");
		strcpy(option5,"N");
	}
	else 
		strcpy(option5,"Y");
	if(!strcasecmp(cid,"anonymous"))
		strcpy(cid,"00000000000");
	
	sprintf(resPacket,"|RES|%s|%s|%s|\n",num070,cid,rcvnum070);
}

// BMH 20170927 ADD
int check_cidlist(char *tmprid1,char *domain,char *prefix,char *outer_num,char * serverip,char * old_num, char * old_org_num, char *check_rid )
{
    int ret=0;
    int row_num= 0;
    char sqlcmd[512];
    char delete_rid[20];
    int chgdomain=0;
    int chgowner=0;
    int reauthorization = 0;
    memset(sqlcmd,0,sizeof(sqlcmd));
    memset(delete_rid,0,sizeof(delete_rid));

    printf("\n[1;32m outer_num(%s),old_sip070number(%s) tmprid1 : %s ,old_num(%s),old_org_num(%s) [0m\n", outer_num, old_sip070number, tmprid1,old_num,old_org_num);
    if(old_num && strlen(old_num) > 10 && strcmp(old_num,outer_num))
    {
        chgowner=1;
        printf("\n[1;32m outer_num(%s),old_sip070number(%s) chgowner : %d ,old_org_num(%s) [0m\n", outer_num, old_sip070number, chgowner,old_org_num);
        if(old_org_num && strlen(old_org_num) > 5 ){
        sprintf(sqlcmd,"update cid_list set user='%s' where cid='%s' and domain='%s' and user='%s'",old_num,old_org_num,domain,outer_num);
        printf("\n[1;41m ported-in원번호 번호변경 (%s) [0m\n",  sqlcmd);
        /*
            if( ret = mysql_query(mysql, sqlcmd)) {
                sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
                if(mysql)
                    mysql_close(mysql);
                sqlinit();
                if( ret = mysql_query(mysql, sqlcmd) )  {
                    logCmd();
                    exit(0);
                }
            }
        */
        }
    }
    if(old_sipdomain && strlen(old_sipdomain) > 10 && !strstr(old_sipdomain,"unknown.") &&  strcmp(old_sipdomain,domain))
        chgdomain=1;
//    printf("\n[1;32m old_sipdomain(%s),domain(%s) delete_rid : %s , tmprid1: %s ------------chgdomain: %d [0m\n",old_sipdomain,domain,delete_rid , ( tmprid1 ? tmprid1 : "" ), chgdomain);
    
//    sprintf(sqlcmd, "select cid from cid_list where user='%s' order by idx desc limit 1",outer_num);
    sprintf(sqlcmd, "select cid from cid_list where user='%s' and domain='%s' order by idx desc limit 1",outer_num, (chgdomain == 1)?old_sipdomain:domain);
    if(old_org_num && strlen(old_org_num) > 5){
    sprintf(sqlcmd, "select cid from cid_list where user='%s' and domain='%s' and cid != '%s' order by idx desc limit 1",outer_num, (chgdomain == 1)?old_sipdomain:domain,old_org_num);
    }
    printf("\n -----------------------------------------cid_list 조회 sqlcmd:(%s)\n",sqlcmd);
    printf("\n -----------------------------------------cid_list 조회 sqlcmd:(%s)\n",sqlcmd);
    printf("\n -----------------------------------------cid_list 조회 sqlcmd:(%s)\n",sqlcmd);
    printf("\n -----------------------------------------cid_list 조회 sqlcmd:(%s)\n",sqlcmd);
    if( ret = mysql_query(mysql, sqlcmd)) {
        sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
        if(mysql)
            mysql_close(mysql);
        sqlinit();
        if( ret = mysql_query(mysql, sqlcmd) ){
            logCmd();
            exit(0);
        }
    }else{
        result = mysql_store_result( mysql );
        if(result) {
            row_num = mysql_num_rows(result);
            if(row_num >= 1){
                row = mysql_fetch_row(result);
                strcpy(delete_rid, row[0]?row[0]:"");
                ps_delSpace(delete_rid);
            }
        }
        mysql_free_result(result);
        result = NULL;
    }
    
    if(!delete_rid || strlen(delete_rid) < 5){
        printf("\n[1;32m INSERT RID : %s , tmprid1: %s, outer_num(%s),old_num(%s),old_org_num(%s) [0m\n",delete_rid , tmprid1,outer_num,old_num,old_org_num);
        return 0;
    }

    if(delete_rid && tmprid1 && !strcmp(delete_rid,tmprid1) && chgdomain == 0 && chgowner == 0 ){
        printf("\n[1;32m duplicate RID : %s , tmprid1: %s [0m\n",delete_rid , tmprid1);
        return 1;
    }
    if(old_org_num && strlen(old_org_num) > 5 && !strcmp(delete_rid,old_org_num) && chgdomain == 0 && chgowner == 0 ){
        printf("\n[1;32m duplicate RID : %s , tmprid1: %s , old_org_num(%s)[0m\n",delete_rid , tmprid1,old_org_num);
        return 1;
    }

    if( old_org_num && strlen(old_org_num) > 5 && delete_rid && check_rid && !strcmp( delete_rid, check_rid ) && chgdomain == 0 && chgowner == 0 ){
        printf("\n[1;32m duplicate RID : %s , check_rid: %s , old_org_num(%s)[0m\n",delete_rid , check_rid, old_org_num);
        return 0;
    }

    printf("\n[1;32m delete_rid : %s , tmprid1: %s ------------chgdomain: %d [0m\n",delete_rid , tmprid1, chgdomain);
    if(delete_rid && strlen(delete_rid) > 6 && (!tmprid1 || strcmp(delete_rid,tmprid1) || chgdomain == 1 || chgowner == 1 )){
        row_num= 0;
//        sprintf(sqlcmd, "delete from cid_list where ( domain='%s' OR domain='%s') and  cid='%s' and ( user = '%s' or user ='%s' )",domain,old_sipdomain,delete_rid, outer_num, old_num);
        sprintf(sqlcmd, "delete from cid_list where  cid='%s' and ( user = '%s' or user ='%s') and domain='%s'",delete_rid, outer_num, old_num?old_num:"",(chgdomain == 1)?old_sipdomain:domain);
        printf("\n[1;32m delete cid_list  delete_rid : %s , tmprid1: %s [0m\n",delete_rid , tmprid1);
        printf("\n[1;41m delete cid_list  sql: %s [0m\n",sqlcmd);
        
        if( ret = mysql_query(mysql, sqlcmd)){
            sprintf(resPacket, "|ERR|mysql Search Error!(%d,%s, %s)",ret,mysql_error(mysql),sqlcmd );
            if(mysql)
                mysql_close(mysql);
            sqlinit();
            if( ret = mysql_query(mysql, sqlcmd) )  {
                 sprintf(errorCause,"delete cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                logCmd();
                exit(0);
            }
        }
        /* 20171106 추가 같은 도메인에 동일 CID 존재 여부 확인 */ 
        row_num = 0;
        //snprintf(sqlcmd,sizeof(sqlcmd),"select * from cid_list where (domain='%s' OR domain='%s') and cid='%s'",domain,old_sipdomain,delete_rid);
        snprintf(sqlcmd,sizeof(sqlcmd),"select * from cid_list where  cid='%s' and domain='%s'",delete_rid, (chgdomain == 1)?old_sipdomain:domain);
        
        if( ret = mysql_query(mysql, sqlcmd) ){
            printf("\n[7m Error select cid_list !! : %s[0m\n",sqlcmd);
            if(mysql)
                mysql_close(mysql);
            sqlinit();
            
            if( ret = mysql_query(mysql, sqlcmd) )  {
                sprintf(errorCause,"select cid_list!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                logCmd();
                exit(0);
            }
        } else {
            result = mysql_store_result( mysql );
            if( result ){
                row_num = mysql_num_rows(result);
                mysql_free_result(result);
                result = NULL;
            }
        }
        
        /* 20171106 수정 같은 도메인에 동일 CID가 존재 할경우 삭제 처리 안함  */
        /* if( row_num == 0 ) 추가 */
///*20171116 번호이동+도메인변경+RID재인증               || ( row_num == 0  && chgowner==1 && chgdomain == 1 && !strcmp(delete_rid,tmprid1)) */
        if(( row_num == 0  && chgowner==0 ) || (row_num == 0  && chgowner==1 && strcmp(delete_rid,tmprid1)) || ( row_num == 0  && chgowner==1 && chgdomain == 1 && !strcmp(delete_rid,tmprid1))
                ) {
            printf("\n[7m old_sipdomain(%s) cid list delete : %s[0m\n",old_sipdomain,sqlcmd);
            snprintf(sqlcmd,sizeof(sqlcmd),"select imid,phoneid,extension,defaultip from number_manage where  cid='%s' and domain='%s'",delete_rid, (chgdomain == 1)?old_sipdomain:domain);
            printf("\n[7m select cid user from number_manage select : %s[0m\n",sqlcmd);
        
            if( ret = mysql_query(mysql, sqlcmd))  {
                printf("\n[7m Error select cid user from number_manage : %s[0m\n",sqlcmd);
                if(mysql)
                    mysql_close(mysql);
                sqlinit();
                if( ret = mysql_query(mysql, sqlcmd) )  {
                    sprintf(errorCause,"select number_manage!!(%s,%s)(%d)",tmprid1,domain,__LINE__);
                    logCmd();
                    exit(0);
                }
            }else{
                char ciddomain[60];
                memset(ciddomain,0,sizeof(ciddomain));

                snprintf(ciddomain,sizeof(ciddomain),"%s",(strlen(old_sipdomain) > 10 && chgdomain == 1)?old_sipdomain:domain);
                result = mysql_store_result( mysql );
                if(result) {
                    row_num = mysql_num_rows(result);
                    if(row_num >= 1){
                        char rid_phoneid[20];
                        char rid_extension[20];
                        char rid_imid[20];
                        char rid_defip[20];
                        char command[500];
                        char tmpip[20];
                        int row_num2=0;
                        int i=0,j=0;
                        char dlist[1024];
                    
                        for(i=0;i < row_num;i++) {
                            memset(rid_phoneid,0,sizeof(rid_phoneid));
                            memset(rid_extension,0,sizeof(rid_extension));
                            memset(rid_imid,0,sizeof(rid_imid));
                            memset(rid_defip,0,sizeof(rid_defip));
                            memset(command,0,sizeof(command));
                            memset(tmpip,0,sizeof(tmpip));
                            memset(dlist,0,sizeof(dlist));
                            printf("[1;41m test row_num:%d, i:%d[0m\n",row_num,i);
                            row = mysql_fetch_row(result);
                            strcpy(rid_imid, row[0]?row[0]:"");
                            ps_delSpace(rid_imid);
                            strcpy(rid_phoneid, row[1]?row[1]:"");
                            ps_delSpace(rid_phoneid);
                            strcpy(rid_extension, row[2]?row[2]:"");
                            ps_delSpace(rid_extension);
                            strcpy(rid_defip, row[3]?row[3]:"");
                            ps_delSpace(rid_defip);
                            sprintf(dlist+strlen(dlist),"%s%s",strlen(dlist)>0?",":"",rid_phoneid);
                        
                            //sprintf(command, "|DID|%s@%s|%s|%s|%s| ",rid_imid,domain,rid_extension,rid_phoneid,rid_defip);
                            sprintf(command, "|DID|%s@%s|%s|%s|%s| ",rid_imid,ciddomain,rid_extension,rid_phoneid,rid_defip);
                            sprintf(sqlcmd, "select serverip,servername from server_info where domain = '%s' and etc <> 'main'",rid_defip);
                            printf("\nsqlcmd:(%s)",sqlcmd);
                            if( ret = mysql_query(mysql, sqlcmd) ) {
                                printf("\n Error query :%s\n",sqlcmd);
                            }
                            result_1 = mysql_store_result( mysql );
                            printf("=== commmand:%s\n",command);
                            if(result_1 ) {
                                row_num2 = mysql_num_rows(result_1);
                                j=0;
                                for(j=0;j < row_num2;j++) {
                                    row1 = mysql_fetch_row( result_1);
                                    if(row1)
                                    {
                                        strcpy(tmpip, row1[0]?row1[0]:"127.0.0.1");
                                        ps_delSpace(tmpip);
                                        if(strlen(tmpip)>10){
                                            if((ret = commandSend(command,tmpip,row1[1]) < 0)) {
                                                char today[20];
                                                char tmp[512];
                                                char sqlcmd1[512];
                                                memset(sqlcmd1,0,sizeof(sqlcmd1));
                                                memset(tmp,0,sizeof(tmp));
                                                memset(today,0,sizeof(today));
                                                tmm_currDate(YYYYMMDDHHMMSS,today);
                                                sprintf(tmp,"%4.4s-%2.2s-%2.2s %2.2s:%2.2s:%2.2s",today,today+4,today+6,today+8,today+10,today+12);
                                                sprintf(sqlcmd1, "insert into sync_info(regdate,command,serverip,flag,cnt,cmd) values ('%s','%s','%s','0',1,'DID')",tmp, commandBuf,serverip);
                                                printf("\nsqlcmd:(%s)",sqlcmd);
                                                mysql_query(mysql, sqlcmd1);
                                            }
                                            printf("\n=============>> %s == %d\n",command,ret);
                                        }
                                    }
                                }
                                if(result_1){
                                    mysql_free_result(result_1);
                                    result_1 = NULL;
                                }
                            }
                        }
                    
                    }
                    mysql_free_result(result);
                    result = NULL;
                }
                snprintf(sqlcmd,sizeof(sqlcmd),"update  number_manage set option5='N', cid='' where domain='%s' and cid='%s'",ciddomain,delete_rid);
                printf("\n[7m update cid user from number_manage  : %s[0m\n",sqlcmd);
                if( ret = mysql_query(mysql, sqlcmd)){
                    printf("\n[7m Error update cid user from number_manage delete : %s[0m\n",sqlcmd);
                    if(mysql)
                        mysql_close(mysql);
                    
                    sprintf(errorCause,"check_list number_manage update Error!!(%s,%s)(%d)",ciddomain, delete_rid,__LINE__);
                    logCmd();
                }
            }
        }else{
            printf("\n[1;32m SKIPPPPPPPPPPPPPPPPPPPP delete_rid : %s , tmprid1: %s ------------chgdomain: %d [0m\n",delete_rid , tmprid1, chgdomain);
        }
    }
    printf("\n[1;32m end result delete_rid : %s , tmprid1: %s [0m\n",delete_rid , tmprid1);
    
    return 0;
}
// BMH 20170927 END

